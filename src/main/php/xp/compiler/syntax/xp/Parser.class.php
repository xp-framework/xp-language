<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
#line 75 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    57,    57,    41, 
         41,    46,    46,    46,    46,    46,    46,    26,    26,    58, 
         58,    61,    59,    62,    59,    65,    59,    66,    59,    68, 
         59,    69,    59,    70,    59,    72,    59,    73,    59,    74, 
         59,    75,    59,    59,    59,    59,    77,    77,    79,    79, 
         78,    78,    80,    67,    67,    71,    71,    81,    81,    83, 
         82,    84,    82,    63,    63,    64,    85,    64,    76,    76, 
         86,    86,    90,    89,    91,    91,    87,    87,    92,    88, 
         55,    55,    93,    93,    60,    60,    94,    94,    94,    98, 
         98,    98,    98,   100,    31,   102,    31,    31,    31,    31, 
        104,    31,   105,    31,   106,    31,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,   112,    31,   101, 
        101,   103,   103,   113,   113,   114,   114,    36,   116,    36, 
         36,    36,    36,    36,    36,   115,   115,    97,    97,   117, 
        117,   119,   119,   118,   118,   107,   107,   107,   107,   107, 
        107,   107,   107,   107,   107,   107,   107,   108,   108,   108, 
        108,   108,   108,   108,   108,   109,   109,   109,   109,   109, 
        109,   109,   109,   109,   109,   109,   109,   110,   110,   110, 
        110,   110,   110,   111,   111,    99,    99,   120,   120,   122, 
        121,   121,   124,   121,   125,   121,   123,   123,    10,    10, 
         10,    32,    32,    32,    12,    12,    95,    96,   126,   126, 
        127,   127,    21,    21,    49,    49,   128,   128,   129,   129, 
        129,   129,   129,   129,   129,   129, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     1,     2,     0, 
          2,     1,     1,     1,     1,     1,     1,     0,     1,     1, 
          2,     0,     4,     0,     7,     0,    10,     0,     8,     0, 
          6,     0,     8,     0,     8,     0,     3,     0,     3,     0, 
          4,     0,     6,     7,     7,     2,     1,     3,     1,     3, 
          1,     3,     3,     1,     3,     0,     1,     1,     2,     0, 
          5,     0,     4,     1,     3,     0,     0,     3,     2,     1, 
          1,     2,     0,     9,     1,     3,     0,     1,     0,     5, 
          0,     1,     1,     3,     0,     1,     5,     4,     4,     1, 
          4,     1,     1,     0,     3,     0,     3,     4,     4,     2, 
          0,     4,     0,     5,     0,     6,     2,     3,     1,     1, 
          1,     1,     1,     5,     3,     3,     3,     0,     7,     2, 
          4,     0,     1,     1,     3,     1,     2,     1,     0,     4, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          3,     0,     1,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     2,     2,     2, 
          2,     2,     2,     2,     2,     0,     1,     1,     2,     0, 
          4,     2,     0,     6,     0,     5,     1,     1,     1,     1, 
          1,     1,     1,     1,     1,     4,     3,     4,     1,     3, 
          1,     3,     1,     3,     0,     1,     1,     2,     1,     1, 
          1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   289,     0,     0,   291,   290,     0,    15,     0,   309, 
        311,   310,   313,   315,   314,   316,   312,     1,     0,    68, 
          0,   307,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   308,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   219,     0,     0,   225,   221,   224,   222,   223, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   292,     0,   293,   294,     0,   299,    27,     0, 
          0,     0,    31,    35,     0,   228,     0,     0,     0,     0, 
          0,     0,   191,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   226,     0,   227,   199,   200,   201,   202,   203, 
          0,     0,   230,     0,     0,    79,    80,    83,    84,     0, 
         78,     0,     0,     0,     0,   296,    29,    35,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   197, 
          0,   195,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   214,     0,   193,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   274,   275,     0,   280,   288, 
        287,   190,   277,     0,     0,     0,   220,     0,     0,   302, 
          0,   297,   300,     0,   304,     0,     0,    25,     0,    34, 
         36,    37,     0,     0,     0,    42,     0,     0,     0,     0, 
          0,     0,     0,     0,   185,     0,   187,     0,   217,     0, 
          0,   216,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   207, 
          0,     0,   198,     0,   279,   285,     0,   174,     0,     0, 
        233,   231,    82,   298,    21,     0,     0,     0,     0,     0, 
          0,     0,    23,     0,    35,     0,   192,     0,     0,     0, 
          0,     0,   188,   189,   215,     0,     0,   183,   180,     0, 
          0,     0,     0,     0,     0,     0,     0,    99,     0,     0, 
        283,   112,     0,   130,   116,   120,   122,   118,   126,   128, 
        114,   124,     0,     0,     0,     0,   110,     0,    63,     0, 
          0,     0,     0,     0,     0,    35,    45,     0,    43,     0, 
          0,     0,     0,     0,     0,   208,     0,   194,     0,   281, 
          0,     0,     0,   132,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    38,   136,   111,     0,     0, 
         61,    59,   102,   103,   104,   105,   106,   107,     0,     0, 
          0,     0,     0,     0,     0,     0,   178,   179,   196,   211, 
          0,     0,   286,     0,     0,     0,     0,     0,   137,     0, 
          0,     0,     0,   154,     0,     0,   127,   129,     0,     0, 
          0,     0,   141,   218,     0,     0,    93,     0,     0,     0, 
          0,     0,    65,     0,     0,    48,     0,     0,    53,    33, 
          0,   177,   209,   181,   284,   113,     0,     0,     0,     0, 
        131,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    50,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    52,    55,     0,    49,    54,    47,     0, 
          0,   138,     0,     0,     0,   155,     0,     0,     0,     0, 
          0,     0,   142,     0,     0,     0,     0,    94,    96,    95, 
          0,     0,     0,     0,     0,   163,   169,   133,     0,   160, 
        161,     0,     0,   121,     0,   145,     0,     0,     0,     0, 
         97,   101,     0,    85,     0,    64,     0,     0,     0,    56, 
          0,     0,   159,   168,   162,   134,     0,     0,     0,   157, 
        115,   150,   152,     0,     0,   148,   135,     0,     0,    62, 
         60,     0,     0,     0,     0,   123,   119,     0,     0,     0, 
        125,   149,    87,    86,    66,   165,     0,     0,     0,   158, 
          0,     0,     0,     0,   170,   117,     0,   153,   166,     0, 
        151,     0,     0,   164, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   140,     4,     7,     8,    17,    53,    18, 
        249,   113,    61,    99,   121,   170,    63,   254,    62,   101, 
        123,   387,   250,   251,   252,   374,   255,   256,   331,   332, 
        375,   312,   432,   385,   478,   142,   467,   479,   510,   472, 
        537,   566,   471,   468,   420,   429,   513,    41,    30,    42, 
         58,    94,    95,    96,   143,   469,   470,   376,   377,   288, 
        403,   413,   455,   581,   407,   410,   497,   408,   409,   414, 
        584,   411,   412,   406,   446,   548,   448,   462,   449,   463, 
        585,   586,   599,   600,   598,   549,   573,   550,   551,   571, 
        607,   572,   144,   259,   115,   116,   145,   350,   232,   184, 
        267,   185,   191,   179,   274,   263,   146,   147,   148,   149, 
        150,   441,   192,   193,   151,   103,   152,   153,   322,   233, 
        234,   314,   235,   402,   360,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -274,
          0,     0,  -220,  -179,   503,  1226,  -220,     0,   117,   139, 
        121,     0,  -228,  -228,     0,     0,   147,     0,   138,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   372,     0, 
       1486,     0,     0,  -179,  -179,     0,   -27,   198,   -34,  -169, 
         80,     0,     0,     0,     0,     0,     0,     0,   -34,   -34, 
        -34,     0,   197,     0,    83,   242,     0,   298,   138,  1486, 
       -179,  -179,  -179,   254,     0,   290,   303,     0,  -179,  -179, 
        234,     0,     0,   307,    64,    90,    64,     0,     0,     0, 
          0,     0,     0,  -179,    31,     0,     0,     0,     0,     0, 
        352,    -2,     0,   378,   211,     0,   -45,  -179,   149,  -179, 
        368,   149,  4791,   453,   370,   370,  -210,     0,   -63,     0, 
        196,   452,     0,   424,     0,     0,    38,     0,     0,  -179, 
        400,   475,     0,     0,   414,     0,  4984,  4984,  4984,  4984, 
       4984,  4984,     0,  4984,   417,   489,     0,  5093,   428,   144, 
       3390,   -36,     0,   512,     0,     0,     0,     0,     0,     0, 
        468,   519,     0,  4984,   117,     0,     0,     0,     0,   508, 
          0,  -179,   -74,   477,   -45,     0,     0,     0,  -179,   869, 
        313,   136,   -98,   -98,   -93,   -98,   -98,   -98,   -74,     0, 
       4984,     0,  4984,   -36,   321,   452,     0,   -54,  1011,   -76, 
        533,   535,     0,    62,     0,  4984,  4984,  4984,  4984,  4984, 
       4984,  4984,  4984,  4984,  4984,  4984,  4984,  4984,  4984,  4984, 
       4984,  4819,  4828,  4640,  4984,  4727,  4984,  4984,  4984,  4984, 
       4984,  4984,  4984,  -179,  4984,     0,     0,   -74,     0,     0, 
          0,     0,     0,   -36,   -29,  4984,     0,   135,   540,     0, 
        236,     0,     0,  1189,     0,   469,   334,     0,   401,     0, 
          0,     0,     0,   457,   169,     0,   562,   424,   -36,   490, 
        491,  3390,  4984,  3390,     0,  4892,     0,   -36,     0,   321, 
         62,     0,   321,   132,  3429,  3457,  3457,  3457,  3457,  3457, 
       3457,  3457,  3457,  3457,  3457,  3457,  3390,   567,  3573,   281, 
        396,  4984,  3580,  4984,  3580,  4984,  4984,     2,     2,  4984, 
       4984,     2,     2,    48,    48,   128,   128,   128,   -93,     0, 
        -98,    24,     0,  4984,     0,     0,   586,     0,   578,   489, 
          0,     0,     0,     0,     0,   515,   380,   294,   389,   134, 
        525,   598,     0,   313,     0,  4984,     0,  4984,   -44,   611, 
        515,  3390,     0,     0,     0,   532,   618,     0,     0,   -36, 
       4984,  3457,  3457,     2,     2,     2,     2,     0,   569,  4984, 
          0,     0,   -18,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   623,   542,  2306,   515,     0,   609,     0,   638, 
        640,   101,   594,   625,   568,     0,     0,  4984,     0,  1625, 
        654,   572,   584,   -36,   592,     0,  4984,     0,  3488,     0, 
        681,  4984,  4984,     0,   385,  4984,   689,   694,   481,   698, 
        680,   688,   700,   710,   419,     0,     0,     0,   450,    71, 
          0,     0,     0,     0,     0,     0,     0,     0,   717,    71, 
       4984,   703,   504,  1535,  2374,   525,     0,     0,     0,     0, 
        -36,   724,     0,   725,   709,   515,   720,   267,     0,  2605, 
       4984,  4984,   515,     0,   422,   442,     0,     0,  4984,  4984, 
        723,   421,     0,     0,   726,   741,     0,   749,   747,     6, 
        297,   297,     0,   699,  3390,     0,    -3,   -82,     0,     0, 
        525,     0,     0,     0,     0,     0,   668,  4984,   385,   683, 
          0,   750,  2702,   685,   774,   767,   454,  2760,  2799,  4984, 
        419,   696,     0,   560,   505,    71,   492,   625,    71,   784, 
        747,   792,    71,     0,     0,   515,     0,     0,     0,    41, 
       3390,     0,   515,  4984,   481,     0,  4984,   498,  4984,   481, 
        716,  3390,     0,   515,   625,  -179,   -17,     0,     0,     0, 
        747,   505,   505,   799,   727,     0,     0,     0,    41,     0, 
          0,   729,   786,     0,  2827,     0,  2877,   479,    56,   734, 
          0,     0,  4984,     0,   515,     0,   -17,   -17,   505,     0, 
        808,   737,     0,     0,     0,     0,  4984,   803,   481,     0, 
          0,     0,     0,   738,    56,     0,     0,  2935,   744,     0, 
          0,   -17,  -179,   515,   825,     0,     0,   481,  4984,   812, 
          0,     0,     0,     0,     0,     0,  -108,   746,   481,     0, 
       3002,   515,  -179,   831,     0,     0,   515,     0,     0,   759, 
          0,   515,   763,     0, 
    );
    protected static $yyRindex= array(         1673,
          0,     0,  1348,     0,     0,   388,  2123,     0,   711,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        315,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -39,   107,     0,     0,   106,     0,   364, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   885,   -89,   768,   -89,     0,     0,     0, 
          0,     0,     0,     0,   -28,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   769,     0, 
          0,   769,   797,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   207,     0,     0,     0,     0,     0,     0, 
          0,   -11,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  1878,  1975,   943,   852,     0,     0, 
        518,  1580,     0,   306,     0,     0,     0,     0,     0,     0, 
          0,    84,     0,   853,   -32,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  -234, 
        770,  1040,  2044,  2072,  3264,  2141,  2180,  2209,     0,     0, 
          0,     0,     0,  1580,     0,  4939,  1639,    -8,     0,     0, 
          0,   -14,     0,   642,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   842,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  1740,     0,   772,     0,    -7,     0,     0, 
          0,     0,     0,  -234,     0,  1407,     0,     0,     0,     0, 
          0,     0,   485,     0,   777,     0,   814,     0,  1580,   816, 
        818,    29,   853,   317,     0,     0,     0,  1580,     0,     0, 
          0,     0,     0,     0,    67,    10,    20,    30,    98,   125, 
        262,   322,   459,   601,   610,   771,  1048,     0,   914,   845, 
       4542,     0,  4593,     0,  4630,     0,     0,  1143,  4064,     0, 
          0,  4092,  4118,  3996,  4024,  3875,  3902,  3970,  3332,     0, 
       2277,  1483,     0,   817,     0,     0,  1185,     0,     0,     0, 
          0,     0,     0,     0,     0,   787,     0,    77,     0,     0, 
        190,     0,     0,     0,     0,   853,     0,   788,     0,     0, 
        787,  1050,     0,     0,     0,     0,  1340,     0,     0,  1580, 
          0,   857,   954,  4134,  4160,  4203,  4297,     0,     0,   853, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   -21,     0,     0,     0,     0, 
        791,     0,     0,   860,     0,     0,     0,     0,     0,   -90, 
          0,     0,     0,  1580,     0,     0,   853,     0,  4393,     0, 
          0,   853,   861,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   880, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  -234,     0,  1441,     0,     0,     0,     0, 
       1580,     0,     0,     0,     0,   787,   436,     0,     0,     0, 
        865,     0,   787,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   890,     0, 
        892,   892,     0,     0,   108,     0,     0,     0,     0,     0, 
        190,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   570,     0,     0,     0,     0, 
          0,     0,     0,     0,     4,     0,     0,   154,     0,     0, 
        894,     0,   880,     0,     0,   787,     0,     0,     0,     0, 
        460,     0,   787,   865,     0,     0,     0,     0,     0,     0, 
          0,   501,     0,   787,   154,     0,     0,     0,     0,     0, 
        895,     4,     4,     0,     0,     0,     0,     0,   225,     0, 
          0,     0,     0,     0,     0,     0,     0,   358,   815,     0, 
          0,     0,     0,     0,   787,     0,     0,     0,     4,     0, 
          0,     0,     0,     0,     0,     0,   853,     0,     0,     0, 
          0,     0,     0,     0,   824,     0,     0,     0,     0,     0, 
          0,     0,     0,   787,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   -15,     0,     0,     0,     0,   -15,     0,     0,     0, 
          0,   787,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   930,   331,   656,    82, 
        935,   -60,     0,   874,   840,  -147,     0,     0,     0,     0, 
       -116,  -411,     0,     0,     0,  1215,     0,   619,     0,     0, 
         76,  1241,  -314,     0,     0,   -30,  -407,   474,   482,     0, 
       -307,  -146,     0,   443,     0,     0,     0,     0,   897,   900, 
          0,   347,     0,   854,  -149,    -1,   733,     0,   270,  -174, 
          0,     0,  -161,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   473,   463, 
          0,   381,     0,     0,     0,     0,     0,   416,   418,     0, 
          0,     0,     0,     0,   795,   804,   652,     0,   -87,     0, 
        273,     0,   798,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   722,     0,     0,     0,   758,     0,   765, 
          0,     0,     0,     0,     0,     0,   832,     0,   969, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   167,   239,    97,    16,    52,   218,   231, 
        316,   218,   218,   126,   164,   613,   112,   111,    50,    13, 
        244,   405,   474,   104,   482,   305,   213,   225,     1,    47, 
         48,    12,   225,    26,    39,    57,   232,   119,   222,   122, 
         93,   564,   517,   220,   218,   112,   219,   303,   221,   158, 
        206,   305,   245,   206,   229,   515,    74,    74,    74,   122, 
        236,   318,   100,   236,    81,    82,    92,   206,   206,   519, 
        237,    15,   234,   237,    93,    93,    34,   236,   236,    74, 
          9,   165,   295,     5,   222,   232,   358,   237,   237,   220, 
         55,   105,    74,    74,   221,    74,   265,   305,   538,   166, 
         92,    92,   206,   109,   404,   565,    10,   205,   122,   108, 
        205,   303,   236,   340,   164,    74,    10,   232,   257,   516, 
         54,   234,   237,    59,   205,   205,   100,   225,    34,   159, 
         65,    54,    54,   188,   206,    16,    17,   427,   238,   359, 
         69,   238,   425,   423,   236,   424,    17,   426,    58,    71, 
         17,    58,   112,   234,   237,   238,   238,   240,    74,   205, 
         74,   112,    34,   310,    74,   239,    58,    17,   239,   305, 
         56,   337,    60,   225,    74,   182,   229,   477,   141,    36, 
        343,    34,   239,   239,    35,     9,   391,   390,   392,    74, 
        238,   205,    39,   540,    57,   305,   160,    57,    71,    17, 
         58,    40,   173,   174,   175,   176,   177,   178,   229,   180, 
        401,    10,   334,   189,     9,   319,   320,   239,   224,    74, 
        561,    26,   238,    74,   164,    12,   428,   335,   445,   141, 
         12,   614,   228,    32,   567,   568,    91,   228,   434,   563, 
         10,   305,   213,    51,    74,   303,    57,   442,    32,   239, 
        301,   110,   444,   225,   109,    68,   262,   167,   264,   167, 
        100,   592,   398,   269,   167,    15,    74,   167,   301,   167, 
         15,   275,   276,   277,   278,   279,   280,   281,   282,   283, 
        284,   285,   286,   287,   289,   290,   291,   293,   295,   298, 
        299,   302,   303,   304,   305,   306,   307,   308,   309,    70, 
        311,   492,   240,   226,   227,   240,   439,   490,   226,   227, 
        489,   287,    78,   224,    32,   167,   317,   222,   211,   240, 
        240,     9,   220,   218,    83,   219,   164,   221,   324,    16, 
          9,   295,   228,   379,    16,   507,    17,    71,   141,    34, 
        214,   342,   216,    37,    38,   508,   172,    10,    79,   167, 
        167,   109,   109,   483,   240,   195,    10,   108,   108,   224, 
        235,    80,   242,   554,   172,   242,    97,   352,   558,   353, 
         16,   354,   355,    98,   553,   356,   357,    17,   228,   242, 
        242,    17,    49,   230,   546,   547,   240,   112,   465,   287, 
        156,   347,   156,   381,   319,   320,    17,   156,   172,   100, 
        156,   272,   156,   226,   227,   306,   225,   107,    17,   235, 
        466,   141,   106,   141,   242,    74,    17,   597,   108,   562, 
        590,   591,   223,   206,   206,    74,   399,   595,   582,   583, 
        172,   348,   222,   236,   236,   141,   610,   220,   218,   224, 
        219,   235,   221,   237,   237,   605,   242,   616,   156,   226, 
        227,   156,   157,   382,   305,   214,   182,   216,   228,   120, 
         83,   502,    34,   435,   501,   383,    74,    74,   223,   511, 
        511,   349,   141,   384,   181,   122,   139,   141,   287,   139, 
        205,   450,   156,   156,   167,   167,   167,   167,   167,   167, 
        124,   112,   154,    85,    86,    87,    88,    89,    90,   241, 
        140,    74,   241,   140,    74,   162,   475,   541,    74,   163, 
        167,   238,   238,   129,   164,   139,   241,   241,   169,    10, 
        138,   225,   168,   127,    46,   128,   141,   493,    44,   226, 
        227,    74,   606,    91,   498,   499,   171,   167,   239,   239, 
         83,   143,   344,    44,   143,   346,   183,   129,   223,   139, 
        194,   241,   619,   195,   138,   236,     9,   127,   173,   128, 
        237,   173,   238,   521,   167,   167,   167,   167,   105,   242, 
        167,    83,   253,   270,   306,   532,   173,   266,   271,    84, 
        323,   333,    10,   241,   167,   167,   167,   167,    74,   167, 
        167,   326,   224,   327,   167,   167,   167,   167,   167,   141, 
        306,   336,   555,   453,   557,    83,   130,    44,    74,    44, 
        173,   228,   338,   339,   306,   306,   306,   156,   156,   156, 
        156,   156,   156,   305,   351,   361,   167,   167,   509,   155, 
         86,    87,    88,    89,    90,   181,   466,   388,   588,   378, 
        130,   243,   173,   156,   243,   418,   306,   386,   380,   305, 
        244,   394,   141,   244,   167,    10,   396,   397,   243,   243, 
        328,   400,   415,   305,   305,   305,   416,   244,   244,   419, 
        156,    43,    44,    45,   611,   240,   240,   421,   454,   422, 
        217,   215,   226,   227,   430,   431,    10,   305,   305,   305, 
        433,   212,   213,   243,   436,   305,   437,   156,   156,   156, 
        156,   223,   244,   156,    64,    66,    67,   224,   438,   464, 
         86,    87,    88,    89,    90,    84,   440,   156,   156,   156, 
        156,   443,   156,   156,   447,   243,   228,   156,   451,   156, 
        156,   156,   329,   452,   244,   242,   242,   456,   457,   459, 
        172,    86,    87,    88,    89,    90,   458,    17,    17,   460, 
         17,    17,    17,    17,    17,    17,   473,    17,   461,   156, 
        156,   476,    12,   477,   484,   485,    10,   486,    17,    17, 
         17,    17,    17,    17,   172,    86,    87,    88,    89,    90, 
        488,   496,   495,   500,   503,    13,   504,   156,    14,   505, 
        506,   514,   520,   134,   454,   217,   215,   226,   227,   454, 
         10,    17,    15,    17,    17,   523,   212,   213,   524,   526, 
        528,   245,   175,   527,   245,   175,   223,   529,   534,   535, 
        137,   362,   363,   364,   542,   536,   133,   134,   245,   245, 
        175,   539,   543,    17,    17,    17,    17,   556,   559,   569, 
        365,   366,   367,   368,   577,   369,   370,   593,   454,   580, 
        371,   570,   372,   576,   137,   362,   363,   364,   587,   594, 
        133,   596,   601,   245,   175,   609,    16,   454,   604,   612, 
        615,   620,   241,   241,   365,   366,   367,   368,   454,   369, 
        370,   622,   131,   132,   371,   264,   372,   624,   264,   171, 
         30,    28,   212,   171,    41,   245,   175,   254,   212,   175, 
        254,    40,   264,   264,   292,   264,   293,   264,   294,   175, 
        373,   108,   171,    51,   254,   254,   131,   132,    57,   175, 
         91,   295,   295,   171,   295,   295,   295,   295,   295,   295, 
         92,   295,    88,   144,    90,    89,    33,   264,   264,   146, 
         29,   125,   295,   295,   373,   295,   295,   295,   147,   254, 
        102,   518,   389,   512,   262,   544,    73,   262,    72,    19, 
        313,   522,   161,   533,   574,   602,   575,    17,   264,   264, 
         17,   262,   262,   260,   262,   295,   262,   295,   295,   184, 
        184,   254,   261,   184,   184,   184,   184,   184,   184,   184, 
        393,   273,   345,   248,   255,   321,   243,   255,   315,    46, 
        184,   184,   184,   184,   184,   184,   262,   295,   295,   295, 
        295,   255,   255,     0,   243,   243,     0,     0,     0,     0, 
         17,    17,    17,   244,   244,     0,     0,     0,     0,     0, 
         17,     0,     0,   184,     0,   184,   184,   262,   262,     0, 
         17,    17,    17,     0,     0,     0,   255,   222,   211,     0, 
         17,   268,   220,   218,     0,   219,     0,   221,     0,     0, 
          0,     0,     0,     0,     0,     0,   184,   184,   184,     0, 
        214,   198,   216,   208,     0,     0,   218,   218,   255,     0, 
        218,   218,   218,   218,   218,     0,   218,     0,   176,     0, 
        210,   176,     0,   210,     0,     0,     0,   218,   218,    17, 
        218,   218,   218,     0,   210,   176,   176,   210,   210,     0, 
         17,    17,    17,    17,    17,    17,    17,    17,    17,     0, 
         17,    17,    17,     0,    17,    17,    17,    17,    17,    17, 
         17,    17,   218,   218,   209,     0,   225,     0,     0,     0, 
        176,   295,   210,     0,   295,     0,     0,     0,    20,    21, 
         22,   246,    24,    25,     0,    26,     0,     0,     0,     0, 
          0,     0,     0,   218,   218,   218,     0,     0,     0,     0, 
          0,    27,   176,     0,   210,     0,     0,     0,     0,     0, 
        248,     0,     0,   248,   245,   245,   248,     0,     0,     0, 
          0,     0,     0,     0,   295,   295,   295,     0,     0,   186, 
        248,   248,   247,   248,   295,   248,     0,     0,     0,     0, 
          0,     0,     0,     0,   295,   295,   295,     0,     0,     0, 
          0,   282,   282,     0,   295,   282,   282,   282,   282,   282, 
        282,   282,     0,     0,     0,   248,   248,     0,     0,     0, 
          0,     0,   282,   282,   282,   282,   282,   282,   264,   264, 
        264,   264,   264,     0,   184,     0,     0,     0,   264,   264, 
        264,   264,   264,   264,     0,     0,   248,   248,     0,     0, 
        254,   254,     0,   184,     0,   282,     0,   282,   282,    19, 
          0,     0,     0,     0,   295,   295,   295,   295,   295,   295, 
        295,   295,   295,     0,     0,   295,   295,     0,   295,   295, 
        295,   295,   295,   295,     0,   295,     0,     0,   282,   282, 
        282,     0,     0,   325,     0,     0,    19,   262,   262,   262, 
        262,   262,   224,     0,     0,     0,     0,   262,   262,   262, 
        262,   262,   262,     0,     0,     0,     0,   114,     0,     0, 
          0,   228,   184,   184,   184,   184,   184,   184,   184,   184, 
        184,   218,     0,   184,   184,     0,   184,   184,   184,   184, 
        184,   184,   184,   184,     0,     0,     0,   255,   255,     0, 
        218,     0,     0,     0,     0,     0,   182,   182,   190,    17, 
        182,   182,   182,   182,   182,   182,   182,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   182,   182,   182, 
        182,   182,   182,   241,     0,   114,     0,     0,     0,     0, 
        217,   215,   226,   227,   199,   200,   201,   202,   204,   258, 
          0,   212,   213,     0,   196,   197,   203,   206,   205,   207, 
        182,   223,   182,   182,   190,     0,     0,     0,     5,   218, 
        218,   218,   218,   218,   218,   218,   218,   218,     0,    17, 
        218,   218,     0,   218,   218,   218,   218,   218,   218,   218, 
        218,     0,     0,   182,   182,   182,     0,     0,    20,    21, 
         22,   246,    24,    25,     0,    26,     0,    32,    32,     0, 
          0,    32,    32,    32,    32,    32,    32,    32,     0,   330, 
          0,    27,     0,     0,     0,     0,   282,   313,    32,    32, 
         32,    32,    32,    32,     0,    20,    21,    22,    23,    24, 
         25,   190,    26,     0,     0,   282,     0,     0,     0,    98, 
         98,     0,   247,    98,    98,    98,    98,    98,    27,    98, 
          0,    32,     0,    32,    32,     0,     0,     0,     0,     0, 
         98,    98,    98,    98,    98,     0,   248,   248,   248,   248, 
        248,     0,     0,   248,   248,   395,   248,   248,   248,   248, 
        248,   248,     0,     0,    32,    32,    32,     0,     0,     0, 
          0,     0,     0,     0,     0,    98,    98,     0,     0,     0, 
          0,     0,     0,     0,   282,   282,   282,   282,   282,   282, 
        282,   282,   282,     0,     0,   282,   282,     0,   282,   282, 
        282,   282,   282,   282,   282,   282,    98,    98,    98,     0, 
          0,     0,     0,     0,     0,     0,   276,   276,     0,     0, 
        276,   276,   276,   276,   276,    19,   276,     5,     5,     5, 
          5,     5,     5,     0,     5,     0,     0,   276,   276,   276, 
        276,   276,   276,     0,     0,     0,     0,     5,     5,     5, 
          5,   182,     0,     0,     0,     0,     0,     0,     0,   480, 
        487,     0,     0,     0,     0,     0,   313,   494,     0,     0, 
        182,     0,   276,   276,     0,   184,   184,     0,     0,   184, 
        184,   184,   216,   184,   184,   184,   313,   313,   313,   313, 
        313,   313,   313,   313,     0,     0,     0,     0,   184,   184, 
        184,   184,     0,   276,   276,   276,     0,     0,     0,   313, 
          0,     0,     0,     0,     0,    19,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   184, 
        545,     0,   184,     0,     0,     0,     0,   552,   313,   182, 
        182,   182,   182,   182,   182,   182,   182,   182,   560,     0, 
        182,   182,    32,   182,   182,   182,   182,   182,   182,   182, 
        182,     0,   184,     2,   184,    20,    21,    22,    23,    24, 
         25,    32,    26,     0,     0,     0,   278,   278,     0,   589, 
        278,   278,   278,   278,   278,     0,   278,     0,    27,     0, 
          0,     0,     0,     0,    98,     0,     0,   278,   278,   278, 
        278,   278,   278,     0,     0,     0,     0,     0,   608,     0, 
          0,     0,    98,    98,    20,    21,    22,   246,    24,    25, 
          0,    26,    98,     0,     0,     0,   618,     0,     0,     0, 
          0,   621,   278,   278,     0,     0,   623,    27,     0,     0, 
         32,    32,    32,    32,    32,    32,    32,    32,    32,     0, 
          0,    32,    32,     0,    32,    32,    32,    32,    32,    32, 
         32,    32,     0,   278,   278,   278,     0,     0,   247,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    98,    98,    98,    98,    98,    98,    98,    98, 
         98,   276,     0,    98,    98,   186,    98,    98,    98,    98, 
         98,    98,     0,    98,    20,    21,    22,   246,    24,    25, 
        276,    26,     0,     0,   218,   218,     0,     0,     0,   218, 
        218,   218,   218,     0,   218,     0,     0,    27,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   218,   218,   218, 
        218,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        184,     0,     2,     2,     2,     2,     2,     2,   247,     2, 
          0,     0,     0,     0,     0,     0,     0,     0,   218,   184, 
        218,   218,     2,     2,     2,     0,     2,     0,     0,   276, 
        276,   276,   276,   276,   276,   276,   276,   276,     0,     0, 
        276,   276,     0,   276,   276,   276,   276,   276,   276,     0, 
        276,   218,     0,   218,     0,     0,     0,     0,     0,     0, 
          0,   225,   225,     0,     0,     0,   225,   225,   225,   225, 
        225,   225,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   225,   225,   225,   225,   184,   184, 
        184,   184,   184,   184,   184,   184,   184,     0,     0,   184, 
        184,   278,   184,   184,   184,   184,   184,   184,   184,   184, 
          0,     0,     0,     0,     0,   225,     0,   225,   225,     0, 
        278,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        270,   270,     0,     0,   270,   270,   270,   270,   270,     0, 
        270,     0,     0,     0,     0,     0,     0,     0,   225,     0, 
        225,   270,   270,   270,   270,   270,   270,     0,   271,   271, 
          0,     0,   271,   271,   271,   271,   271,     0,   271,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   271, 
        271,   271,   271,   271,   271,     0,   270,   270,     0,   278, 
        278,   278,   278,   278,   278,   278,   278,   278,     0,     0, 
        278,   278,     0,   278,   278,   278,   278,   278,   278,     0, 
        278,     0,     0,     0,   271,   271,     0,   270,   270,     0, 
          0,     0,     0,     0,     0,     0,     0,   269,   269,     0, 
          0,   269,   269,   269,   269,   269,     0,   269,     0,   218, 
          0,     0,     0,     0,     0,   271,   271,     0,   269,   269, 
        269,   269,   269,   269,     0,     0,     0,     0,   218,     0, 
          0,     0,     0,     6,     0,     0,   272,   272,     0,     0, 
        272,   272,   272,   272,   272,     0,   272,     0,     0,     0, 
          0,     0,     0,   269,   269,     0,     0,   272,   272,   272, 
        272,   272,   272,     0,     0,   273,   273,     0,     0,   273, 
        273,   273,   273,   273,     0,   273,     0,     0,     0,     0, 
          0,     0,     0,     0,   269,   269,   273,   273,   273,   273, 
        273,   273,   272,   272,     0,     0,     0,   218,   218,   218, 
        218,   218,   218,   218,   218,   218,   225,    17,   218,   218, 
          0,   218,   218,   218,   218,   218,   218,   218,   218,     0, 
          0,   273,   273,   272,   272,   225,     0,     0,     0,     0, 
          0,     0,     0,   261,   261,     0,     0,   261,   261,   261, 
        261,   261,     0,   261,     0,     0,     0,     0,     0,     0, 
          0,     0,   273,   273,   261,   261,   261,   261,   261,   261, 
          0,     0,   222,   211,     0,     0,     0,   220,   218,     0, 
        219,     0,   221,     0,     0,   270,     0,     0,     0,     0, 
          0,     0,     0,     0,   417,   214,   198,   216,   208,   261, 
        261,     0,     0,     0,   225,   225,   225,   225,   225,   225, 
        225,   225,   225,   271,     0,   225,   225,     0,   225,   225, 
        225,   225,   225,   225,   225,   225,     0,     0,     0,   210, 
        261,   261,     6,     6,     6,     6,     6,     6,     0,     6, 
        222,   211,     0,     0,   481,   220,   218,     0,   219,     0, 
        221,     0,     6,     6,     6,     6,     0,     0,     0,   209, 
          0,   225,     0,   214,   198,   216,   208,     0,     0,     0, 
          0,     0,     0,   270,   270,     0,     0,   270,   270,   270, 
        270,   270,   269,     0,   270,   270,     0,   270,   270,   270, 
        270,   270,   270,     0,   270,     0,     0,   210,     0,     0, 
          0,   271,   271,     0,     0,   271,   271,   271,   271,   271, 
          0,     0,   271,   271,     0,   271,   271,   271,   271,   271, 
        271,   272,   271,     0,     0,     0,     0,   209,     0,   225, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        273,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        269,   269,     0,     0,   269,   269,   269,   269,   269,     0, 
          0,   269,   269,     0,   269,   269,   269,   269,   269,   269, 
          0,   269,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   272, 
        272,     0,     0,   272,   272,   272,   272,   272,   261,     0, 
        272,   272,     0,   272,   272,   272,   272,   272,   272,     0, 
        272,     0,     0,     0,     0,     0,     0,     0,   273,   273, 
          0,     0,   273,   273,   273,   273,   273,   224,     0,   273, 
        273,     0,   273,   273,   273,   273,   273,   273,     0,   273, 
          0,     0,     0,     0,     0,     0,   228,     0,     0,     0, 
          0,   222,   211,     0,     0,     0,   220,   218,     0,   219, 
          0,   221,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   491,   214,   198,   216,   208,     0,     0, 
          0,     0,     0,     0,     0,     0,   261,   261,     0,     0, 
        261,   261,   261,   261,   261,   224,     0,   261,   261,     0, 
        261,   261,   261,   261,   261,   261,     0,   261,   210,     0, 
          0,     0,     0,     0,   228,   217,   215,   226,   227,   199, 
        200,   201,   202,   204,     0,     0,   212,   213,     0,   196, 
        197,   203,   206,   205,   207,     0,   223,     0,   209,     0, 
        225,     0,     0,     0,     0,     0,     0,     0,   222,   211, 
          0,     0,   525,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   214,   198,   216,   208,     0,     0,     0,     0,     0, 
          0,     0,     0,   217,   215,   226,   227,   199,   200,   201, 
        202,   204,     0,     0,   212,   213,     0,   196,   197,   203, 
        206,   205,   207,     0,   223,   210,   222,   211,     0,     0, 
        530,   220,   218,     0,   219,     0,   221,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   214, 
        198,   216,   208,     0,     0,   209,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,   222,   211,     0,     0,   531, 
        220,   218,     0,   219,     0,   221,     0,     0,     0,     0, 
          0,     0,     0,   210,     0,     0,     0,     0,   214,   198, 
        216,   208,     0,   222,   211,     0,     0,   578,   220,   218, 
          0,   219,     0,   221,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   209,     0,   225,   214,   198,   216,   208, 
          0,     0,   210,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   222,   211,     0,   224,   579,   220,   218, 
        210,   219,   209,   221,   225,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,   214,   198,   216,   208, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        209,     0,   225,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        210,   222,   211,     0,     0,     0,   220,   218,     0,   219, 
          0,   221,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   603,   214,   198,   216,   208,     0,     0, 
        209,     0,   225,     0,   217,   215,   226,   227,   199,   200, 
        201,   202,   204,   224,     0,   212,   213,     0,   196,   197, 
        203,   206,   205,   207,     0,   223,     0,     0,   210,     0, 
          0,     0,   228,     0,     0,     0,     0,     0,   222,   211, 
          0,     0,     0,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   209,   617, 
        225,   214,   198,   216,   208,     0,     0,     0,     0,     0, 
          0,   224,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        228,     0,     0,     0,     0,   210,     0,     0,     0,     0, 
          0,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
        224,     0,   212,   213,     0,   196,   197,   203,   206,   205, 
        207,     0,   223,     0,     0,   209,     0,   225,     0,   228, 
          0,     0,     0,     0,     0,     0,     0,     0,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   228,     0,   217, 
        215,   226,   227,   199,   200,   201,   202,   204,     0,     0, 
        212,   213,     0,   196,   197,   203,   206,   205,   207,     0, 
        223,     0,     0,     0,     0,     0,     0,     0,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   217,   215, 
        226,   227,   199,   200,   201,   202,   204,   228,     0,   212, 
        213,     0,   196,   197,   203,   206,   205,   207,     0,   223, 
          0,     0,     0,     0,     0,     0,   217,   215,   226,   227, 
        199,   200,   201,   202,   204,     0,     0,   212,   213,     0, 
        196,   197,   203,   206,   205,   207,   224,   223,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   217,   215,   226,   227, 
        199,   200,   201,   202,   204,     0,     0,   212,   213,     0, 
        196,   197,   203,   206,   205,   207,     0,   223,     0,     0, 
        268,   268,     0,     0,   268,   268,   268,   268,   268,     0, 
        268,     0,     0,   224,     0,     0,     0,     0,     0,     0, 
          0,   268,   268,   268,   268,   268,   268,     0,     0,     0, 
          0,     0,   228,     0,   217,   215,   226,   227,   199,   200, 
        201,   202,   204,     0,     0,   212,   213,     0,   196,   197, 
        203,   206,   205,   207,     0,   223,   268,   268,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   267,   267, 
          0,     0,   267,   267,   267,   267,   267,     0,   267,     0, 
          0,     0,     0,     0,     0,     0,     0,   268,   268,   267, 
        267,   267,   267,   267,   267,     0,     0,     0,     0,     0, 
          0,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
          0,     0,   212,   213,     0,   196,   197,   203,   206,   205, 
        207,     0,   223,     0,   267,   267,   222,   211,     0,     0, 
          0,   220,   218,     0,   219,     0,   221,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   214, 
        198,   216,   208,     0,     0,   267,   267,     0,     0,     0, 
          0,     0,     0,     0,     0,   222,   211,     0,     0,     0, 
        220,   218,     0,   219,     0,   221,     0,     0,     0,     0, 
          0,     0,     0,   210,     0,     0,     0,     0,   214,   198, 
        216,   208,     0,   222,   211,     0,     0,     0,   220,   218, 
          0,   219,     0,   221,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   209,     0,   225,   214,   198,   216,   208, 
          0,     0,   210,     0,   222,   211,     0,     0,     0,   220, 
        218,     0,   219,     0,   221,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   214,     0,   216, 
        210,     0,   209,     0,   225,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        209,   210,   225,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   222, 
        211,   209,     0,   225,   220,   218,   222,   219,     0,   221, 
          0,   220,   218,     0,   219,     0,   221,     0,     0,     0, 
          0,     0,   214,     0,   216,     0,     0,     0,     0,   214, 
          0,   216,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   268,   268,     0,   210,   268,   268,   268, 
        268,   268,     0,     0,   268,   268,     0,   268,   268,   268, 
        268,   268,   268,     0,   268,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   225,     0, 
          0,   224,     0,     0,     0,   225,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        228,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   267,   267,     0,     0,   267,   267,   267,   267,   267, 
        224,     0,   267,   267,     0,   267,   267,   267,   267,   267, 
        267,     0,   267,     0,     0,     0,     0,     0,     0,   228, 
          0,     0,     0,     0,     0,     0,     0,     0,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   228,     0,   217, 
        215,   226,   227,   199,   200,   201,   202,   204,     0,   224, 
        212,   213,     0,   196,   197,   203,   206,   205,   207,     0, 
        223,     0,     0,     0,     0,     0,     0,     0,   228,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   217,   215, 
        226,   227,   199,   200,   201,   202,   204,     0,     0,   212, 
        213,     0,     0,   197,   203,   206,   205,   207,     0,   223, 
          0,     0,     0,     0,     0,     0,   217,   215,   226,   227, 
        199,   200,   201,   202,   204,     0,     0,   212,   213,     0, 
          0,     0,   203,   206,   205,   207,     0,   223,     0,     0, 
          0,     0,     0,     0,   224,     0,     0,   217,   215,   226, 
        227,   224,     0,     0,     0,     0,     0,     0,   212,   213, 
          0,     0,     0,   228,     0,     0,     0,     0,   223,     0, 
        228,   258,   258,     0,     0,   258,   258,   258,   258,   258, 
          0,   258,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   258,   258,   258,   258,   258,   258,   259,   259, 
          0,     0,   259,   259,   259,   259,   259,     0,   259,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   259, 
        259,   259,   259,   259,   259,     0,     0,   258,   258,     0, 
          0,     0,   217,   215,   226,   227,     0,     0,     0,   217, 
        215,   226,   227,   212,   213,     0,     0,     0,     0,     0, 
          0,     0,     0,   223,   259,   259,     0,     0,   258,   258, 
        223,     0,     0,     0,     0,     0,   260,   260,     0,     0, 
        260,   260,   260,   260,   260,     0,   260,     0,     0,     0, 
          0,     0,     0,     0,     0,   259,   259,   260,   260,   260, 
        260,   260,   260,   256,     0,     0,   256,     0,   256,   256, 
        256,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   256,   256,   256,   256,   256,   256,     0, 
          0,   257,   260,   260,   257,     0,   257,   257,   257,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   257,   257,   257,   257,   257,   257,     0,   256,   256, 
          0,     0,     0,   260,   260,     0,     0,     0,     0,     0, 
          0,   250,     0,     0,   250,     0,     0,   250,     0,     0, 
          0,     0,     0,     0,     0,     0,   257,   257,     0,   256, 
        256,   250,   250,     0,   250,     0,   250,     0,     0,   249, 
          0,     0,   249,     0,     0,   249,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   257,   257,   249, 
        249,     0,   249,     0,   249,   251,   250,   250,   251,     0, 
          0,   251,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   266,     0,     0,   266,   251,   251,   266,   251,     0, 
        251,     0,     0,     0,   249,   249,     0,   250,   250,     0, 
          0,   266,   266,     0,   266,     0,   266,   247,     0,     0, 
        247,     0,     0,   247,     0,     0,     0,     0,     0,     0, 
        251,   251,     0,     0,     0,   249,   249,   247,   247,     0, 
        247,     0,   247,     0,     0,     0,   266,   266,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        265,   251,   251,   265,     0,     0,   265,     0,     0,     0, 
          0,     0,   247,   247,     0,     0,     0,   266,   266,     0, 
        265,   265,     0,   265,     0,   265,     0,     0,     0,     0, 
          0,     0,     0,     0,   258,   258,     0,     0,   258,   258, 
        258,   258,   258,   247,   247,   258,   258,     0,   258,   258, 
        258,   258,   258,   258,     0,   265,   265,     0,     0,     0, 
          0,   259,   259,     0,     0,   259,   259,   259,   259,   259, 
          0,     0,   259,   259,     0,   259,   259,   259,   259,   259, 
        259,     0,     0,     0,     0,     0,   265,   265,     0,     0, 
          0,     0,     0,     0,   246,     0,     0,   246,     0,     0, 
        246,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   246,   246,     0,   246,     0,   246, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   260, 
        260,     0,     0,   260,   260,   260,   260,   260,     0,     0, 
        260,   260,     0,   260,   260,   260,   260,   260,   260,   246, 
        246,     0,     0,     0,     0,   256,   256,     0,     0,   256, 
        256,   256,   256,   256,     0,     0,   256,   256,     0,   256, 
        256,   256,   256,   256,   256,     0,     0,     0,     0,     0, 
        246,   246,     0,   257,   257,     0,     0,   257,   257,   257, 
        257,   257,     0,   204,   257,   257,   204,   257,   257,   257, 
        257,   257,   257,     0,     0,     0,     0,     0,     0,     0, 
        204,   204,     0,   204,     0,   204,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   250,   250,   250, 
        250,   250,     0,     0,   250,   250,     0,   250,   250,   250, 
        250,   250,   250,     0,     0,   204,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   249,   249,   249,   249,   249, 
          0,     0,   249,   249,     0,   249,   249,   249,   249,   249, 
        249,     0,     0,     0,     0,     0,     0,   204,     0,     0, 
          0,   251,   251,   251,   251,   251,     0,     0,   251,   251, 
          0,   251,   251,   251,   251,   251,   251,   266,   266,   266, 
        266,   266,     0,     0,   266,   266,     0,   266,   266,   266, 
        266,   266,   266,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   247,   247,   247,   247,   247,     0,     0, 
        247,   247,     0,   247,   247,   247,   247,   247,   247,   263, 
          0,     0,   263,     0,     0,   263,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   263, 
        263,     0,   263,     0,   263,     0,   265,   265,   265,   265, 
        265,     0,     0,   265,   265,     0,   265,   265,   265,   265, 
        265,   265,     0,     0,     0,     0,     0,     0,     0,     0, 
        252,     0,     0,   252,   263,   263,   252,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        252,   252,     0,   252,     0,   252,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   263,   263,   253,     0,     0, 
        253,     0,   129,   253,   139,     0,     0,     0,     0,   138, 
          0,     0,   127,     0,   128,   252,   252,   253,   253,     0, 
        253,     0,   253,     0,     0,     0,     0,     0,     0,   296, 
        246,   246,   246,   246,   246,     0,     0,   246,   246,     0, 
        246,   246,   246,   246,   246,   246,   252,   252,     0,     0, 
          0,     0,   253,   253,     0,     0,     0,     0,     0,     0, 
         83,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   253,   253,     0,     0,     0,     0,   129, 
          0,   139,     0,     0,     0,   130,   138,     0,     0,   127, 
          0,   128,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   300,     0, 
          0,     0,     0,     0,     0,     0,   204,   204,   204,   204, 
        204,     0,     0,     0,     0,     0,   204,   204,   204,   204, 
        204,   204,     0,     0,     0,     0,     0,    83,     0,     0, 
          0,     0,     0,   129,     0,   139,     0,     0,     0,     0, 
        138,     0,     0,   127,     0,   128,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   126,     0, 
          0,   129,   130,   139,     0,     0,     0,     0,   138,     0, 
        129,   127,   139,   128,     0,     0,     0,   138,     0,     0, 
        127,     0,   128,     0,     0,     0,     0,     0,     0,   292, 
          0,    83,     0,     0,     0,     0,     0,     0,   294,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   172, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,    83, 
          0,     0,     0,     0,     0,     0,   130,     0,    83,     0, 
          0,     0,     0,     0,   129,    10,   139,     0,     0,     0, 
          0,   138,     0,     0,   127,     0,   128,     0,     0,     0, 
          0,     0,     0,     0,   130,   263,   263,   263,   263,   263, 
          0,     0,   134,   130,     0,   263,   263,   263,   263,   263, 
        263,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   219,     0,   219,     0,     0,     0,     0,   219,   137, 
          0,   219,    83,   219,     0,   133,   172,    86,    87,    88, 
         89,    90,     0,     0,     0,     0,   252,   252,   252,   252, 
        252,     0,     0,     0,     0,     0,   252,   252,   252,   252, 
        252,   252,    10,     0,   341,     0,   129,   130,   139,     0, 
          0,     0,     0,   138,     0,     0,   127,     0,   128,   219, 
          0,   219,     0,   253,   253,   253,   253,   253,     0,   134, 
        297,   131,   132,   253,   253,   253,   253,   253,   253,     0, 
        135,   136,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,     0,     0,     0,   219,     0,   137,     0,     0,     0, 
          0,     0,   133,     0,    83,     0,    10,     0,   172,    86, 
         87,    88,    89,    90,     0,     0,     0,   172,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   134,    10,     0,     0,     0,     0,   130, 
          0,     0,     0,    10,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   129,   301,   139,   131,   132, 
        137,   134,   138,     0,     0,   127,   133,   128,     0,     0, 
        134,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   172,    86,    87,    88,    89,    90,     0,   137,     0, 
          0,     0,     0,     0,   133,     0,     0,   137,     0,     0, 
          0,     0,     0,   133,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,   186,     0,     0,     0,     0,     0,     0, 
          0,     0,   131,   132,     0,     0,     0,     0,   219,   219, 
        219,   219,   219,   219,   134,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   130,     0, 
        131,   132,     0,     0,   219,     0,     0,     0,     0,   131, 
        132,   137,     0,     0,     0,     0,     0,   133,     0,     0, 
          0,     0,     0,   172,    86,    87,    88,    89,    90,     0, 
          0,   219,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    10, 
          0,     0,     0,     0,     0,     0,     0,     0,   219,     0, 
          0,     0,     0,     0,   219,     0,     0,     0,     0,     0, 
          0,     0,     0,   131,   132,     0,   134,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   137,     0,     0,     0,     0,     0,   133, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        219,   219,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   172,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,     0,     0,     0,   131,   132,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   134,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   187,     0,     0,     0,     0,     0,   133,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   131,   132, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   120,   154,    60,    46,    42,    41,    46, 
         40,    44,    41,    58,    91,   124,    91,    63,    46,    59, 
        168,    40,   430,    84,   436,   260,    41,   126,   303,    34, 
         35,   260,   126,   123,   125,    40,    44,    98,    37,   100, 
         71,    59,   125,    42,    43,    91,    45,    59,    47,   260, 
         41,   286,   169,    44,    91,    59,    61,    62,    63,   120, 
         41,   236,    59,    44,    69,    70,    71,    58,    59,   481, 
         41,   300,    44,    44,   105,   106,    46,    58,    59,    84, 
        260,    44,    91,   304,    37,    93,    63,    58,    59,    42, 
        260,    61,    97,    98,    47,   100,   184,   332,   506,    62, 
        105,   106,    93,   125,   123,   123,   286,    41,   169,   125, 
         44,   123,    93,   263,    91,   120,   286,   125,   179,   123, 
         39,    93,    93,    44,    58,    59,   123,   126,    46,   340, 
         49,    50,    51,   138,   125,   364,    60,    37,    41,   314, 
         58,    44,    42,    43,   125,    45,    40,    47,    41,    44, 
         44,    44,    91,   125,   125,    58,    59,   162,   163,    93, 
        165,    91,    46,   224,   169,    41,    59,    91,    44,   260, 
        340,   259,    93,   126,   179,    40,    93,   260,   103,    59, 
        268,    46,    58,    59,    46,   260,   336,   335,   338,   194, 
         93,   125,    46,   508,    41,   286,   260,    44,    93,    93, 
         93,    64,   127,   128,   129,   130,   131,   132,   125,   134, 
        360,   286,    44,   138,   260,   260,   261,    93,   312,   224, 
        535,   311,   125,   228,    91,   260,   126,    59,   403,   154, 
        260,   340,   331,    44,   542,   543,   300,   331,   386,   257, 
        286,   332,   257,    46,   249,   257,    93,   397,    59,   125, 
         44,    41,   402,   126,    44,    59,   181,    33,   183,    35, 
        257,   569,   350,   340,    40,   300,   271,    43,    62,    45, 
        300,   196,   197,   198,   199,   200,   201,   202,   203,   204, 
        205,   206,   207,   208,   209,   210,   211,   212,   213,   214, 
        215,   216,   217,   218,   219,   220,   221,   222,   223,    58, 
        225,   451,    41,   402,   403,    44,   394,    41,   402,   403, 
         44,   236,    59,   312,   125,    91,   235,    37,    38,    58, 
         59,   260,    42,    43,    91,    45,    91,    47,    93,   364, 
        260,   340,   331,    40,   364,   330,   260,    40,   263,    46, 
         60,   266,    62,    13,    14,   340,    41,   286,    59,   125, 
        126,   373,   374,   441,    93,   410,   286,   373,   374,   312, 
         44,    59,    41,   525,    59,    44,    60,   292,   530,   294, 
        410,   296,   297,   310,   524,   300,   301,   410,   331,    58, 
         59,   410,   410,   420,   344,   345,   125,    91,   419,   314, 
         33,   260,    35,   260,   260,   261,   320,    40,    93,   310, 
         43,   340,    45,   402,   403,    91,   126,   410,   332,    93, 
        340,   336,    61,   338,    93,   420,   340,   579,    41,   536, 
        567,   568,   421,   414,   415,   430,   351,   577,   373,   374, 
        125,   300,    37,   414,   415,   360,   598,    42,    43,   312, 
         45,   125,    47,   414,   415,   592,   125,   609,    91,   402, 
        403,   105,   106,   320,    91,    60,    40,    62,   331,   311, 
         91,    41,    46,   388,    44,   332,   471,   472,   421,   471, 
        472,   340,   397,   340,    58,   536,    41,   402,   403,    44, 
        414,   406,   125,   126,   260,   261,   262,   263,   264,   265, 
        123,    91,    40,   260,   261,   262,   263,   264,   265,    41, 
         41,   506,    44,    44,   509,   310,   431,   509,   513,    58, 
        286,   414,   415,    33,    91,    35,    58,    59,    44,   286, 
         40,   126,   123,    43,    40,    45,   451,   452,    44,   402, 
        403,   536,   593,   300,   459,   460,   123,   313,   414,   415, 
         91,    41,   270,    59,    44,   273,    58,    33,   421,    35, 
        123,    93,   613,   410,    40,    44,   260,    43,    41,    45, 
         93,    44,    44,   488,   340,   341,   342,   343,    61,    93, 
        346,    91,   260,    41,   260,   500,    59,   257,    44,   346, 
         41,   125,   286,   125,   360,   361,   362,   363,   593,   365, 
        366,   123,   312,   260,   370,   371,   372,   373,   374,   524, 
        286,    40,   527,   123,   529,    91,   126,   123,   613,   125, 
         93,   331,   123,   123,   300,   301,   302,   260,   261,   262, 
        263,   264,   265,   260,    58,    40,   402,   403,   332,   260, 
        261,   262,   263,   264,   265,    58,   340,    40,   563,   260, 
        126,    41,   125,   286,    44,   376,   332,   123,   260,   286, 
         41,    41,   577,    44,   430,   286,   125,    40,    58,    59, 
        260,    93,    40,   300,   301,   302,   125,    58,    59,    61, 
        313,   300,   301,   302,   599,   414,   415,    40,   409,    40, 
        400,   401,   402,   403,    91,    61,   286,   300,   301,   302, 
        123,   411,   412,    93,    41,   332,   125,   340,   341,   342, 
        343,   421,    93,   346,    49,    50,    51,   312,   125,   260, 
        261,   262,   263,   264,   265,   346,   125,   360,   361,   362, 
        363,    41,   365,   366,   340,   125,   331,   370,    40,   372, 
        373,   374,   332,    40,   125,   414,   415,    40,    59,    40, 
        260,   261,   262,   263,   264,   265,    59,    37,    38,    40, 
         40,    41,    42,    43,    44,    45,    40,    47,   340,   402, 
        403,    59,   260,   260,    41,    41,   286,    59,    58,    59, 
         60,    61,    62,    63,   260,   261,   262,   263,   264,   265, 
         61,   340,   361,    61,    59,   283,    46,   430,   286,    41, 
         44,    93,   125,   313,   525,   400,   401,   402,   403,   530, 
        286,    91,   300,    93,    94,   123,   411,   412,    59,   125, 
         44,    41,    41,    40,    44,    44,   421,   364,   123,   260, 
        340,   341,   342,   343,    41,   321,   346,   313,    58,    59, 
         59,   340,    41,   123,   124,   125,   126,   340,   123,    41, 
        360,   361,   362,   363,    59,   365,   366,    40,   579,   371, 
        370,   125,   372,   125,   340,   341,   342,   343,   125,   123, 
        346,    59,   125,    93,    93,    41,   364,   598,   125,    58, 
        125,    41,   414,   415,   360,   361,   362,   363,   609,   365, 
        366,   123,   402,   403,   370,    41,   372,   125,    44,    93, 
        123,   123,    41,    41,   125,   125,   125,    41,   257,    58, 
         44,   125,    58,    59,    91,    61,    91,    63,    91,    93, 
        430,   125,   125,   123,    58,    59,   402,   403,    59,    59, 
         41,    37,    38,    59,    40,    41,    42,    43,    44,    45, 
         41,    47,    41,   364,    41,    41,     7,    93,    94,   125, 
          6,   102,    58,    59,   430,    61,    62,    63,   125,    93, 
         77,   478,   334,   472,    41,   513,    60,    44,    59,    91, 
        228,   489,   109,   501,   549,   585,   549,   257,   124,   125, 
        260,    58,    59,   179,    61,    91,    63,    93,    94,    37, 
         38,   125,   179,    41,    42,    43,    44,    45,    46,    47, 
        339,   194,   271,   125,    41,   238,   165,    44,   234,    31, 
         58,    59,    60,    61,    62,    63,    93,   123,   124,   125, 
        126,    58,    59,    -1,   414,   415,    -1,    -1,    -1,    -1, 
        310,   311,   312,   414,   415,    -1,    -1,    -1,    -1,    -1, 
        320,    -1,    -1,    91,    -1,    93,    94,   124,   125,    -1, 
        330,   331,   332,    -1,    -1,    -1,    93,    37,    38,    -1, 
        340,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   126,    -1, 
         60,    61,    62,    63,    -1,    -1,    37,    38,   125,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    41,    -1, 
         41,    44,    -1,    44,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    94,    58,    59,    58,    59,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        410,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         91,   421,    93,    94,   124,    -1,   126,    -1,    -1,    -1, 
         93,   257,    93,    -1,   260,    -1,    -1,    -1,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,   126,    -1,    -1,    -1,    -1, 
         -1,   303,   125,    -1,   125,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,   414,   415,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   310,   311,   312,    -1,    -1,   257, 
         58,    59,   334,    61,   320,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   330,   331,   332,    -1,    -1,    -1, 
         -1,    37,    38,    -1,   340,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,   404,   405, 
        406,   407,   408,    -1,   312,    -1,    -1,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,   124,   125,    -1,    -1, 
        414,   415,    -1,   331,    -1,    91,    -1,    93,    94,    91, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,   124,   125, 
        126,    -1,    -1,   125,    -1,    -1,    91,   404,   405,   406, 
        407,   408,   312,    -1,    -1,    -1,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    97,    -1,    -1, 
         -1,   331,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,   414,   415,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    37,    38,   138,   340, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,   163,    -1,   165,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   179, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         91,   421,    93,    94,   194,    -1,    -1,    -1,    91,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   410, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,   124,   125,   126,    -1,    -1,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,   249, 
         -1,   303,    -1,    -1,    -1,    -1,   312,    91,    58,    59, 
         60,    61,    62,    63,    -1,   280,   281,   282,   283,   284, 
        285,   271,   287,    -1,    -1,   331,    -1,    -1,    -1,    37, 
         38,    -1,   334,    41,    42,    43,    44,    45,   303,    47, 
         -1,    91,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   341,   414,   415,   416,   417, 
        418,   419,    -1,    -1,   124,   125,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   124,   125,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    91,    47,   280,   281,   282, 
        283,   284,   285,    -1,   287,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,   300,   301,   302, 
        303,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125, 
        446,    -1,    -1,    -1,    -1,    -1,   260,   453,    -1,    -1, 
        331,    -1,    93,    94,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,   280,   281,   282,   283, 
        284,   285,   286,   287,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,   124,   125,   126,    -1,    -1,    -1,   303, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91, 
        516,    -1,    94,    -1,    -1,    -1,    -1,   523,   332,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   534,    -1, 
        411,   412,   312,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,   124,    91,   126,   280,   281,   282,   283,   284, 
        285,   331,   287,    -1,    -1,    -1,    37,    38,    -1,   565, 
         41,    42,    43,    44,    45,    -1,    47,    -1,   303,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,   594,    -1, 
         -1,    -1,   330,   331,   280,   281,   282,   283,   284,   285, 
         -1,   287,   340,    -1,    -1,    -1,   612,    -1,    -1,    -1, 
         -1,   617,    93,    94,    -1,    -1,   622,   303,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   124,   125,   126,    -1,    -1,   334,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,    -1,   411,   412,   257,   414,   415,   416,   417, 
        418,   419,    -1,   421,   280,   281,   282,   283,   284,   285, 
        331,   287,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,   303,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,   280,   281,   282,   283,   284,   285,   334,   287, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,   331, 
         93,    94,   300,   301,   302,    -1,   304,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   312,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,    93,    94,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        126,    58,    59,    60,    61,    62,    63,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    93,    94,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    93,    94,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,    93,    94,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    93,    94,   124,   125,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    93, 
         94,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    94, 
        124,   125,   280,   281,   282,   283,   284,   285,    -1,   287, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,   300,   301,   302,   303,    -1,    -1,    -1,   124, 
         -1,   126,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    94,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   312,   421,    -1,    -1,    -1,    -1,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    94,    -1, 
         -1,    -1,    -1,    -1,   331,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    94,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,    -1,   126,    60,    61,    62,    63, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,   312,    41,    42,    43, 
         94,    45,   124,    47,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    59,    60,    61,    62,    63,    -1,    -1, 
        124,    -1,   126,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    94,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    58, 
        126,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,   124,    -1,   126,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   312,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    93,    94,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,    -1,   126,    60,    61,    62,    63, 
         -1,    -1,    94,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62, 
         94,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,    94,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,   124,    -1,   126,    42,    43,    37,    45,    -1,    47, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    60,    -1,    62,    -1,    -1,    -1,    -1,    60, 
         -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    94,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         -1,   312,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   312, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,    -1,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
         -1,    -1,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,   400,   401,   402, 
        403,   312,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,   421,    -1, 
        331,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    93,    94,    -1, 
         -1,    -1,   400,   401,   402,   403,    -1,    -1,    -1,   400, 
        401,   402,   403,   411,   412,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   421,    93,    94,    -1,    -1,   124,   125, 
        421,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    58,    59,    60, 
         61,    62,    63,    38,    -1,    -1,    41,    -1,    43,    44, 
         45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    38,    93,    94,    41,    -1,    43,    44,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    93,    94, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,   124, 
        125,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    58, 
         59,    -1,    61,    -1,    63,    38,    93,    94,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    58,    59,    44,    61,    -1, 
         63,    -1,    -1,    -1,    93,    94,    -1,   124,   125,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,   124,   125,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,   124,   125,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,   124,   125,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,   124,   125,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    93,    94,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    93, 
         94,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    41,   411,   412,    44,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,    93,    94,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    38,    -1,    -1, 
         41,    -1,    33,    44,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    93,    94,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   125,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    33, 
         -1,    35,    -1,    -1,    -1,   126,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1, 
         -1,    33,   126,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         33,    43,    35,    45,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    61, 
         -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    91, 
         -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    33,   286,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,   404,   405,   406,   407,   408, 
         -1,    -1,   313,   126,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,   340, 
         -1,    43,    91,    45,    -1,   346,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,   286,    -1,   123,    -1,    33,   126,    35,    -1, 
         -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45,    91, 
         -1,    93,    -1,   404,   405,   406,   407,   408,    -1,   313, 
        401,   402,   403,   414,   415,   416,   417,   418,   419,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    91,    -1,   286,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,   286,    -1,    -1,    -1,    -1,   126, 
         -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,   400,    35,   402,   403, 
        340,   313,    40,    -1,    -1,    43,   346,    45,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   402,   403,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
        402,   403,    -1,    -1,   286,    -1,    -1,    -1,    -1,   402, 
        403,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', NULL, NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 196 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 196 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 207 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 208 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 212 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 215 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 218 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 221 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 234 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 239 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 246 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 255 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 255 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 264 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 264 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 275 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 276 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 317 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 320 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 320 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 330 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 337 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 344 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 350 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 351 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 372 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 383 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 383 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 394 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 394 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 419 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 419 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 432 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 433 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 442 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 445 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 456 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 461 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 466 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 473 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 474 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 484 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 493 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 499 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 500 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 501 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 99:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 100:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 101:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 108:  #line 552 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 110:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 111:  #line 558 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 112:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 113:  #line 562 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 114:  #line 565 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 115:  #line 565 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 117:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 118:  #line 580 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 119:  #line 580 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 121:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 122:  #line 589 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 123:  #line 589 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 124:  #line 593 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 125:  #line 593 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 126:  #line 597 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 128:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 130:  #line 599 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 131:  #line 599 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 132:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 133:  #line 602 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 135:  #line 610 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 137:  #line 617 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 138:  #line 618 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 139:  #line 622 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 140:  #line 625 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 141:  #line 632 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 142:  #line 633 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 143:  #line 637 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 144:  #line 643 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 145:  #line 644 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 148:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 149:  #line 654 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 150:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 151:  #line 658 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 152:  #line 662 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 153:  #line 662 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 154:  #line 668 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 155:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 156:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 157:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 158:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 160:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 161:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 162:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 163:  #line 689 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 164:  #line 689 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 165:  #line 703 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 166:  #line 704 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 167:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 169:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 170:  #line 713 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 171:  #line 721 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 173:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 174:  #line 727 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 175:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 177:  #line 736 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 178:  #line 742 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 755 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 181:  #line 758 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 182:  #line 761 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 183:  #line 764 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 184:  #line 770 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 185:  #line 770 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 186:  #line 776 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 187:  #line 776 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 188:  #line 779 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 189:  #line 787 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 190:  #line 790 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 191:  #line 796 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 192:  #line 796 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 193:  #line 805 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 194:  #line 805 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 195:  #line 815 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 196:  #line 815 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 197:  #line 824 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 198:  #line 827 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 199:  #line 830 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 200:  #line 833 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 201:  #line 836 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 202:  #line 839 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 203:  #line 842 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 204:  #line 846 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 205:  #line 852 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 206:  #line 858 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 207:  #line 864 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 208:  #line 869 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 209:  #line 869 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 210:  #line 879 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array(new ReturnNode($yyVals[0+$yyTop]));
    } break;

    case 211:  #line 882 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= (array)$yyVals[-1+$yyTop];
    } break;

    case 212:  #line 888 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 214:  #line 893 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 215:  #line 894 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 216:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 217:  #line 899 "src/main/jay/grammars/xp.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 219:  #line 909 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 220:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 221:  #line 910 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 222:  #line 911 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 223:  #line 912 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 224:  #line 913 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 225:  #line 914 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 918 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 227:  #line 921 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 228:  #line 927 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 230:  #line 932 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 231:  #line 933 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 232:  #line 937 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 234:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 235:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 236:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 237:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 238:  #line 949 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 239:  #line 950 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 240:  #line 951 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 954 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 955 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 956 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 247:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 248:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 252:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 255:  #line 969 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 256:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 260:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 982 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 266:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 267:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 271:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 997 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 275:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 276:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 278:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 279:  #line 1009 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 281:  #line 1013 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 282:  #line 1016 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 284:  #line 1019 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 285:  #line 1022 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, $yyVals[-1+$yyTop])); } break;

    case 286:  #line 1022 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 287:  #line 1028 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 288:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 295:  #line 1047 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 296:  #line 1048 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 297:  #line 1052 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 298:  #line 1056 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 299:  #line 1060 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 300:  #line 1061 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 302:  #line 1066 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 303:  #line 1070 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 304:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 305:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 306:  #line 1078 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 307:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 308:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 309:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 310:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 311:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 312:  #line 1090 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 313:  #line 1091 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 314:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 315:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 316:  #line 1094 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 2927 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
