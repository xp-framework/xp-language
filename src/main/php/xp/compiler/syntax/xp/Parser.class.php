<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
#line 76 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,   112,    31,    99,    99,   103,   103,   113,   113,   114, 
        114,    36,   116,    36,    36,    36,    36,    36,    36,   115, 
        115,    97,    97,   117,   117,   119,   119,   118,   118,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   108,   108,   108,   108,   108,   108,   108,   108,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   110,   110,   110,   110,   110,   110,   111,   111,   101, 
        101,   120,   120,   122,   121,   121,   124,   121,   125,   121, 
        123,   123,    10,    10,    10,    32,    32,    32,    12,    12, 
         95,    96,   126,   126,   127,   127,    21,    21,    49,    49, 
        128,   128,   129,   129,   129,   129,   129,   129,   129,   129, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     3,     1,     1,     1,     1,     1,     5,     3,     3, 
          3,     0,     7,     2,     4,     0,     1,     1,     3,     1, 
          3,     1,     0,     4,     1,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     3,     0,     1,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     2,     0,     6,     0,     4, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     4, 
          3,     4,     1,     3,     1,     3,     1,     3,     0,     1, 
          1,     2,     1,     1,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   293,     0,     0,   295,   294,     0,    15,     0,   313, 
        315,   314,   317,   319,   318,   320,   316,     1,     0,    68, 
          0,   311,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   312,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   223,     0,     0,   229,   225,   228,   226,   227, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   296,     0,   297,   298,     0,   303,    27,     0, 
          0,     0,    31,    35,     0,     0,   232,     0,     0,     0, 
          0,     0,     0,   192,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   230,     0,   231,   203,   204,   205,   206, 
        207,     0,     0,   234,     0,     0,    79,    80,    83,    84, 
          0,    78,     0,     0,     0,     0,   300,    29,    35,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   198,     0,   196,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   218,     0,   194,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   278,   279, 
          0,   284,   292,   291,   289,   191,   281,     0,     0,     0, 
        224,     0,     0,   306,     0,   301,   304,     0,   308,     0, 
          0,    25,     0,    34,    36,    37,     0,     0,     0,    42, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        186,   188,     0,   100,     0,     0,     0,   220,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   211,     0,   202,     0,     0, 
        283,     0,   175,     0,     0,   237,   235,    82,   302,    21, 
          0,     0,     0,     0,     0,     0,     0,    23,     0,    35, 
          0,     0,   193,     0,     0,     0,     0,     0,   189,     0, 
        221,   190,   219,     0,     0,   184,   181,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   287,   113,     0, 
        131,   117,   121,   123,   119,   127,   129,   115,   125,     0, 
          0,     0,     0,   111,     0,    63,     0,     0,     0,     0, 
          0,     0,    35,    45,     0,    43,     0,     0,     0,     0, 
          0,     0,     0,   212,     0,   195,     0,   285,   290,     0, 
          0,   133,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    38,   137,   112,     0,     0,    61,    59, 
        103,   104,   105,   106,   107,   108,     0,     0,     0,     0, 
          0,     0,     0,   179,   180,   197,   215,     0,     0,     0, 
          0,     0,     0,     0,   138,     0,     0,     0,     0,   155, 
          0,     0,   128,   130,     0,     0,     0,     0,   142,   222, 
          0,     0,    93,     0,     0,     0,     0,     0,    65,     0, 
         48,     0,     0,    53,    33,     0,   178,   213,   182,   288, 
        114,     0,     0,     0,     0,   132,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    50,     0,    98, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    52, 
         55,     0,    49,    54,    47,     0,     0,   139,     0,     0, 
          0,   156,     0,     0,     0,     0,     0,     0,   143,     0, 
          0,     0,     0,    94,    96,    95,     0,     0,     0,     0, 
          0,   164,   170,   134,     0,   161,   162,     0,     0,   122, 
          0,   146,     0,     0,     0,     0,    97,   102,     0,    85, 
          0,    64,     0,     0,     0,    56,     0,     0,   160,   169, 
        163,   135,     0,     0,     0,   158,   116,   151,   153,     0, 
          0,   149,   136,     0,     0,    62,    60,     0,     0,     0, 
          0,   124,   120,     0,     0,     0,   126,   150,    87,    86, 
         66,   166,     0,     0,     0,   159,     0,     0,     0,     0, 
        171,   118,     0,   154,   167,     0,   152,     0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   141,     4,     7,     8,    17,    53,    18, 
        253,   113,    61,    99,   121,   171,    63,   258,    62,   101, 
        123,   394,   254,   255,   256,   381,   259,   260,   336,   337, 
        382,   192,   351,   392,   483,   143,   473,   484,   516,   478, 
        543,   572,   477,   474,   428,   437,   519,    41,    30,    42, 
         58,    94,    95,    96,   144,   475,   476,   383,   384,   294, 
        411,   421,   461,   587,   415,   418,   502,   416,   417,   422, 
        590,   419,   420,   414,   452,   554,   454,   468,   455,   469, 
        591,   592,   605,   606,   604,   555,   579,   556,   557,   577, 
        613,   578,   145,   264,   115,   116,   146,   358,   271,   186, 
        236,   187,   194,   181,   280,   268,   147,   148,   149,   150, 
        151,   448,   195,   196,   152,   103,   153,   154,   327,   237, 
        238,   319,   239,   410,   320,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -235,
          0,     0,  -217,    82,   224,   923,  -217,     0,    80,    94, 
         98,     0,  -209,  -209,     0,     0,   101,     0,   118,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   271,     0, 
        993,     0,     0,    82,    82,     0,   -24,   166,   -28,   182, 
         30,     0,     0,     0,     0,     0,     0,     0,   -28,   -28, 
        -28,     0,   157,     0,   110,   129,     0,   204,   118,   993, 
         82,    82,    82,   199,     0,   215,   254,     0,    82,    82, 
        567,     0,     0,   269,   113,   137,   113,     0,     0,     0, 
          0,     0,     0,    82,   153,     0,     0,     0,     0,     0, 
        279,    47,     0,   420,   370,     0,   334,    82,   154,    82, 
        353,   154,  5217,   443,   646,   646,  -215,     0,  -155,     0, 
        210,   427,     0,   441,     0,     0,   191,     0,     0,    82, 
        417,   516,     0,     0,   442,  5507,     0,  5507,  5507,  5507, 
       5507,  5507,  5507,     0,  5507,   397,   529,     0,  5538,   466, 
        189,  3842,   -36,     0,   547,     0,     0,     0,     0,     0, 
          0,   508,   566,     0,  5507,    80,     0,     0,     0,     0, 
        555,     0,    82,    72,   530,   334,     0,     0,     0,    82, 
       1303,   369,   321,  2939,   -85,   -85,   -91,   -85,   -85,   -85, 
         72,     0,  5507,     0,  5507,   377,   -36,   427,     0,   -51, 
       2769,   128,   287,   594,   593,     0,   -21,     0,  5507,  5507, 
       5507,  5507,  5507,  5507,  5507,  5507,  5507,  5507,  5507,  5507, 
       5507,  5507,  5507,  5507,  5228,  5257,  5071,  5507,  5158,  5507, 
       5507,  5507,  5507,  5507,  5507,  5507,    82,  5507,     0,     0, 
         72,     0,     0,     0,     0,     0,     0,   -36,  -209,  5507, 
          0,   239,   599,     0,   263,     0,     0,  1331,     0,   524, 
        394,     0,   127,     0,     0,     0,     0,   549,    31,     0, 
       5507,   632,   441,   -36,   552,   556,  3842,  5507,  3842,  5406, 
          0,     0,   -36,     0,   617,   377,   -21,     0,   377,  -228, 
       4003,  4038,  4038,  4038,  4038,  4038,  4038,  4038,  4038,  4038, 
       4038,  4038,  3842,   622,    91,   310,   812,  5507,   183,  5507, 
        183,  5507,  5507,   141,   141,  5507,  5507,   141,   141,   205, 
        205,    -9,    -9,    -9,   -91,     0,   -85,     0,  5507,  5507, 
          0,   642,     0,   631,   529,     0,     0,     0,     0,     0, 
        557,   440,   424,   444,   -12,   578,   662,     0,   369,     0, 
         77,  5507,     0,  5507,    90,   665,   557,  3842,     0,  5507, 
          0,     0,     0,   582,   663,     0,     0,   -36,  5507,  4038, 
       4038,   141,   141,   141,   141,   615,   673,     0,     0,     4, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   675, 
        591,  2966,   557,     0,   656,     0,   679,   683,   409,   633, 
        617,   603,     0,     0,  5507,     0,   754,   686,   604,   605, 
        -36,   607,  3842,     0,  5507,     0,    77,     0,     0,  5507, 
       5507,     0,   388,  5507,   694,   695,   523,   696,   680,   682, 
        698,   702,   410,     0,     0,     0,   928,   104,     0,     0, 
          0,     0,     0,     0,     0,     0,   709,   104,   697,   493, 
       1370,  2993,   578,     0,     0,     0,     0,   -36,   713,   718, 
        704,   557,   700,   386,     0,  3158,  5507,  5507,   557,     0, 
        403,   429,     0,     0,  5507,  5507,   712,   425,     0,     0, 
        715,   371,     0,   735,   737,    70,    89,    89,     0,   689, 
          0,    38,  -102,     0,     0,   578,     0,     0,     0,     0, 
          0,   664,  5507,   388,   676,     0,   742,  3378,   677,   763, 
        760,   446,  3405,  3543,  5507,   410,   703,     0,   545,     0, 
        502,   104,   494,   617,   104,   765,   737,   784,   104,     0, 
          0,   557,     0,     0,     0,   160,  3842,     0,   557,  5507, 
        523,     0,  5507,   498,  5507,   523,   710,  3842,     0,   557, 
        617,    82,   -47,     0,     0,     0,   737,   502,   502,   798, 
        717,     0,     0,     0,   160,     0,     0,   723,   781,     0, 
       3570,     0,  3597,   479,   175,   726,     0,     0,  5507,     0, 
        557,     0,   -47,   -47,   502,     0,   816,   729,     0,     0, 
          0,     0,  5507,   799,   523,     0,     0,     0,     0,   736, 
        175,     0,     0,  3707,   743,     0,     0,   -47,    82,   557, 
        819,     0,     0,   523,  5507,   804,     0,     0,     0,     0, 
          0,     0,  -107,   746,   523,     0,  3805,   557,    82,   832, 
          0,     0,   557,     0,     0,   752,     0,   557,   755,     0, 
    );
    protected static $yyRindex= array(          845,
          0,     0,  1739,     0,     0,   277,  1918,     0,   753,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        -64,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -39,    59,     0,     0,   316,     0,   661, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   927,   -54,   758,   -54,     0,     0,     0, 
          0,     0,     0,     0,   -25,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   759,     0, 
          0,   759,   794,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   283,     0,     0,     0,     0,     0,     0, 
          0,   106,     0,     0,     0,  2513,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  2032,  1911,   985,   850,     0, 
          0,   956,  1703,     0,   468,     0,     0,     0,     0,     0, 
          0,     0,   -41,     0,   851,   -33,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -182,   769,  1138,   965,  2103,  2211,  2734,  2296,  2333,  2434, 
          0,     0,     0,     0,     0,     0,  1703,  5419,  1771,   -30, 
          0,  1582,     0,     0,   -23,     0,   639,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        843,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  1882,     0,  1444, 
          0,    18,     0,     0,     0,     0,     0,  -182,     0,   968, 
          0,     0,     0,     0,     0,     0,   457,     0,   777,     0, 
          0,   813,     0,  1703,   814,   821,    51,   851,    88,     0, 
          0,     0,  1703,     0,     9,     0,     0,     0,     0,     0, 
          5,   -16,    48,   131,   580,   584,  1093,  1186,  1224,  1435, 
       1443,  1563,  1711,     0,   280,   887,  4945,     0,  4961,     0, 
       4988,     0,     0,  3069,  4435,     0,     0,  4494,  4523,  4301, 
       4338,  4108,  4227,  4264,  2842,     0,  2542,     0,   822,   851, 
          0,  1374,     0,     0,     0,     0,     0,     0,     0,     0, 
        789,     0,    -6,     0,     0,    29,     0,     0,     0,     0, 
        699,   851,     0,   791,     0,     0,   789,  1404,     0,     0, 
          0,     0,     0,     0,  1472,     0,     0,  1703,     0,  1713, 
       1810,  4562,  4731,  4768,  4822,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -110,     0,     0,     0,     0,   807,     0,     0, 
        874,     0,     0,     0,     0,     0,   181,     0,     0,     0, 
       1703,     0,   105,     0,   851,     0,  4752,     0,     0,   851, 
        875,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   894,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -182,     0,  1316,     0,     0,     0,     0,  1703,     0,     0, 
          0,   789,   477,     0,     0,     0,   878,     0,   789,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    -7,     0,     0,   898,     0,   899,   899,     0,     0, 
          0,     0,     0,     0,     0,    29,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        577,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        192,     0,     0,    -7,     0,     0,   901,     0,   894,     0, 
          0,   789,     0,     0,     0,     0,   484,     0,   789,   878, 
          0,     0,     0,     0,     0,     0,     0,   485,     0,   789, 
         -7,     0,     0,     0,     0,     0,   902,   192,   192,     0, 
          0,     0,     0,     0,   290,     0,     0,     0,     0,     0, 
          0,     0,     0,   405,   824,     0,     0,     0,     0,     0, 
        789,     0,     0,     0,   192,     0,     0,     0,     0,     0, 
          0,     0,   851,     0,     0,     0,     0,     0,     0,     0, 
        826,     0,     0,     0,     0,     0,     0,     0,     0,   789, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -104,     0,     0, 
          0,     0,  -104,     0,     0,     0,     0,   789,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   937,   561,   568,    32, 
        946,   -60,     0,   877,   853,  -143,     0,     0,     0,     0, 
       -114,  -312,     0,     0,     0,  3080,     0,   618,     0,     0, 
         76,   294,  -372,     0,     0,   -58,  -399,   475,   488,     0, 
       -183,  -167,     0,   454,     0,     0,     0,     0,   915,   917, 
          0,   507,     0,   868,  -150,   -76,   367,     0,   140,  -211, 
          0,     0,   471,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   489,   472, 
          0,   391,     0,     0,     0,     0,     0,   436,   448,     0, 
          0,     0,     0,     0,   803,   815,   634,     0,   291,     0, 
        332,     0,   808,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   724,     0,     0,     0,   762,     0,   770, 
          0,     0,     0,     0,     0,     0,   867,     0,   986, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   235,   243,   168,    16,   222,    97,   234, 
        222,   570,    93,    52,   110,   222,   619,   217,   439,    13, 
        109,    50,   523,   104,   210,   248,   310,   210,   323,    47, 
         48,   355,   299,    57,   228,    57,    57,   119,   480,   122, 
        228,   210,   210,   413,   159,   209,    93,    93,   209,    57, 
         12,   233,    57,    17,   232,   249,    74,    74,    74,   122, 
        299,   236,   209,   209,    81,    82,    92,     1,    26,   112, 
         54,   356,    32,    59,   339,   571,   210,   309,   165,    74, 
         65,    54,    54,   233,    17,    57,     5,    32,   240,   340, 
         15,   240,    74,    74,   238,    74,   521,   209,    17,   510, 
         92,    92,    17,   309,   161,   240,   240,   366,   210,   122, 
        236,   357,   544,   225,   214,    74,   228,   346,   223,   221, 
        262,   222,    60,   224,   160,    34,   412,   225,   214,   209, 
        487,   239,   223,   221,   190,   222,   217,   224,   219,    35, 
        240,   546,   236,   238,    91,    58,    39,   127,    58,   309, 
        217,    17,   219,    32,    16,    34,    36,   482,   244,    74, 
        522,    74,   112,    58,   307,    74,   316,    69,   567,   367, 
        213,   241,   240,   525,   241,   238,    74,   225,   142,   112, 
        239,    40,   223,   221,   213,   222,    70,   224,   241,   241, 
        274,   398,    74,   399,   112,   310,   397,    58,    34,   451, 
        212,   174,   228,   175,   176,   177,   178,   179,   180,   569, 
        182,    51,   239,   105,   191,    68,   228,   112,   165,   225, 
        227,   310,    74,   241,   223,   221,    74,   222,   307,   224, 
        142,    12,   620,   217,   166,   310,   310,   310,     9,   231, 
        210,   225,   217,    71,   219,   231,   223,   388,    74,   441, 
        101,   224,   167,    17,   449,   241,    26,    78,   267,   450, 
        269,   209,   110,   110,    10,    57,   228,   310,   109,   109, 
        322,    15,    74,    79,   281,   282,   283,   284,   285,   286, 
        287,   288,   289,   290,   291,   292,   293,   295,   296,   297, 
        299,   301,   304,   305,   308,   309,   310,   311,   312,   313, 
        314,   315,   227,   317,   240,    39,   497,   389,   228,   299, 
        229,   230,    80,    17,   101,   293,   229,   230,   278,   390, 
        266,   231,   168,   266,   168,    17,   305,   391,    97,   168, 
        228,     9,   168,    17,   168,    16,   341,   266,   266,   106, 
        266,     9,   266,   142,   305,   348,   225,   214,     9,   324, 
        325,   223,   221,   165,   222,   329,   224,    10,   198,    71, 
        184,    58,   307,     9,   573,   574,    34,    10,   471,   217, 
         16,   219,   266,   360,    10,   361,    17,   362,   363,   559, 
        168,   364,   365,   233,    17,    49,   333,   241,   227,    10, 
        114,   598,   229,   230,   293,   142,   111,   210,   210,   513, 
        517,   517,   227,   266,   266,   596,   597,   231,    71,   514, 
        110,   226,    10,   109,   168,   168,   509,   142,   209,   142, 
        515,   231,    98,    74,   112,   403,   495,   568,   472,   494, 
        611,   350,   601,    74,   407,   228,   184,   157,   547,   157, 
        309,    55,    34,   472,   157,   435,   100,   157,   101,   157, 
        433,   431,   227,   432,   183,   434,   107,   245,   334,   114, 
        108,   240,   240,   386,   120,   507,   309,    10,   506,    34, 
        442,   231,    74,    74,   263,   124,   220,   218,   229,   230, 
        142,   122,   155,    12,   164,   142,   293,   215,   216,   456, 
        220,   218,   229,   230,   227,   157,    46,   226,   324,   325, 
         44,   215,   216,   552,   553,   193,    13,    74,   173,    14, 
         74,   226,   309,   231,    74,    44,   227,   140,   272,   163, 
        140,    56,   426,    15,   141,   144,   173,   141,   144,   157, 
        157,   165,   142,   498,   436,   231,   266,    74,   612,   169, 
        503,   504,   229,   230,   241,   241,   335,   588,   589,   168, 
        168,   168,   168,   168,   168,   130,   460,   140,   625,   170, 
        173,   226,   139,   193,   172,   128,   352,   129,   527,   354, 
         43,    44,    45,    37,    38,   168,   309,   309,   309,    44, 
        538,    44,   220,   218,   229,   230,   185,    16,   197,   130, 
        240,   140,   173,     9,    74,   343,   139,   318,   198,   128, 
        241,   129,   168,   226,   349,   142,   229,   230,   561,   242, 
        563,   157,   158,    83,    74,   105,    64,    66,    67,    10, 
        242,   227,   246,   242,   243,   226,   275,   243,   257,   168, 
        168,   168,   168,   270,   276,   168,   277,   242,   242,   328, 
        231,   243,   243,   193,   594,   459,   331,    83,   131,   168, 
        168,   168,   168,   332,   168,   168,   168,    83,   142,   168, 
        168,   168,   168,   168,   157,   157,   157,   157,   157,   157, 
        460,   342,   242,   338,   344,   460,   243,   350,   345,   359, 
        617,   368,   131,   266,   266,   266,   266,   266,   183,   406, 
        157,   168,   168,   266,   266,   266,   266,   266,   266,   385, 
        393,   395,   405,   387,   242,   401,   404,   408,   243,   220, 
        218,   229,   230,   409,   423,   424,   427,   157,   429,   168, 
        215,   216,   430,   438,   460,   440,   443,   453,   444,   445, 
        226,   447,   446,   457,   458,   462,    83,   465,   463,   201, 
        464,   466,   201,   460,   157,   157,   157,   157,   479,   467, 
        157,   309,   482,   489,   460,   481,   201,   201,   490,   201, 
        493,   201,   491,   500,   157,   157,   157,   157,   501,   157, 
        157,   157,   505,   508,   157,   511,   157,   157,   157,   488, 
        512,   520,   173,    86,    87,    88,    89,    90,   526,    17, 
         17,   201,    17,    17,    17,    17,    17,    17,   529,    17, 
        530,   532,   533,   534,   541,   548,   157,   157,    10,   535, 
         17,    17,    17,    17,    17,    17,   173,    86,    87,    88, 
         89,    90,   542,   201,   549,   540,    85,    86,    87,    88, 
         89,    90,   565,   545,   157,   135,   242,   562,   575,   583, 
        243,   576,    10,    17,    19,    17,    17,   582,   225,   586, 
        593,   600,    10,   223,   221,   599,   222,   602,   224,   615, 
        607,   618,   138,   369,   370,   371,    91,   610,   134,   135, 
        621,   217,   626,   219,   628,    17,    17,    17,    17,   630, 
         30,    28,   372,   373,   374,   375,   172,   376,   377,   126, 
        216,   172,   378,    41,   379,   216,   138,   369,   370,   371, 
        176,    40,   134,   296,   297,   156,    86,    87,    88,    89, 
         90,   298,    84,   109,   176,   172,   372,   373,   374,   375, 
        309,   376,   377,   126,   132,   133,   378,   268,   379,    51, 
        268,    10,    57,   176,    91,     2,   172,   228,    92,    88, 
        145,    90,    89,    33,   268,   268,   309,   268,   147,   268, 
        148,    29,   380,   102,   125,   201,   396,   524,   132,   133, 
        309,   309,   309,   299,   299,   518,   299,   299,   299,   299, 
        299,   299,   550,   299,    73,    72,   162,   539,   400,   268, 
        268,   608,   528,   265,   299,   299,   380,   299,   299,   299, 
        580,    84,   309,   242,   242,   266,   174,   243,   243,   174, 
        353,   560,   581,   326,   279,   200,   564,   321,   200,    17, 
        268,   268,    17,    19,   174,     0,    46,   299,    83,   299, 
        299,   187,   187,   200,   187,   187,   187,   187,   187,   187, 
        187,   187,   247,    20,    21,    22,   250,    24,    25,     0, 
         26,     0,   187,   187,   187,   187,   187,   187,   174,   299, 
        299,   299,   299,     0,     0,   603,    27,   200,   317,     0, 
          0,     0,    17,    17,    17,     0,     0,     0,     0,     0, 
          0,     0,    17,     0,   616,   187,     0,   187,   187,     0, 
        174,     0,    17,    17,    17,   622,     0,   251,     0,   200, 
          0,     0,    17,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   201,   201,   201,   201,   201,     0,   187,   187, 
        187,     0,   201,   201,   201,   201,   201,   201,     0,     0, 
          0,     0,     0,   227,     2,     2,     2,     2,     2,     2, 
          0,     2,     0,   244,     0,     0,   244,     0,     0,     0, 
          0,     0,   231,   268,     2,     2,     2,     0,     2,     0, 
        244,   244,    17,    17,    17,    17,    17,    17,    17,    17, 
         17,     0,    17,    17,    17,     0,    17,    17,    17,    17, 
         17,    17,     0,    17,   222,   222,     0,     0,   222,   222, 
        222,   222,   222,   299,   222,   244,   299,   470,    86,    87, 
         88,    89,    90,     0,     0,   222,   222,    17,   222,   222, 
         17,     0,    20,    21,    22,    23,    24,    25,     0,    26, 
          0,   220,   218,   229,   230,     0,     0,   244,     0,     0, 
          0,   200,   215,   216,     0,    27,   246,   317,    17,   246, 
        222,   222,   226,     0,     0,     0,   299,   299,   299,     0, 
          0,   185,     0,   246,   246,     0,   299,   317,   317,   317, 
        317,   317,   317,   317,   317,     0,   299,   299,   299,     0, 
          0,   222,   222,   222,   245,     0,   299,   245,     0,     0, 
        317,     0,    20,    21,    22,    23,    24,    25,   246,    26, 
          0,   245,   245,     0,     0,     0,     0,     0,     0,     0, 
        268,   268,   268,   268,   268,    27,   187,     0,     0,   317, 
        268,   268,   268,   268,   268,   268,     0,     0,     0,     0, 
        246,     0,     0,     0,     0,   187,   245,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   299,   299,   299,   299, 
        299,   299,   299,   299,   299,     0,     0,   299,   299,     0, 
        299,   299,   299,   299,   299,   299,     0,   299,   245,   244, 
          0,     0,    32,    32,     0,    32,    32,    32,    32,    32, 
         32,    32,    32,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    32,    32,    32,    32,    32,    32,     0, 
          0,     0,     0,     0,   187,   187,   187,   187,   187,   187, 
        187,   187,   187,    19,   222,   187,   187,     0,   187,   187, 
        187,   187,   187,   187,   187,   187,    32,     0,    32,    32, 
        286,   286,     0,     0,   286,   286,   286,   286,   286,   286, 
        286,    19,     0,     0,     0,     0,     0,   252,     0,     0, 
          0,   286,   286,   286,   286,   286,   286,     0,     0,    32, 
         32,    32,   246,     0,   214,     0,     0,   214,     0,   222, 
          0,     0,     0,     0,     0,   330,     0,     0,     0,     0, 
         19,   214,   214,     0,   286,     0,   286,   286,   222,     0, 
          0,     0,     0,     0,     0,   247,     0,    17,   247,     0, 
        245,     0,     0,   248,   176,     0,   248,   176,     0,     0, 
          0,     0,   247,   247,   485,     0,   214,   286,   286,   286, 
        248,   248,   176,     0,     0,     0,   244,   244,   183,   183, 
          0,     0,   183,   183,   183,   183,   183,   183,   183,     0, 
          0,     0,     0,     0,     0,     0,     0,   247,   214,   183, 
        183,   183,   183,   183,   183,   248,   176,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,     0,    17,   222,   222, 
          0,   222,   222,   222,   222,   222,   222,   222,   222,   247, 
          0,     0,   183,     0,   183,   183,     0,   248,   176,     0, 
          0,     0,    32,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    20,    21,    22,   250,    24,    25,     0,    26, 
          0,     0,     0,     0,     0,   183,   183,   183,     0,   246, 
        246,     0,     0,   249,     0,    27,   249,     0,     0,     0, 
         20,    21,    22,   250,    24,    25,     0,    26,    99,    99, 
        249,   249,    99,    99,    99,    99,    99,    32,    99,     0, 
        286,     0,     0,    27,     0,     0,   251,   245,   245,    99, 
         99,    99,    99,    99,     0,     0,    32,     0,     0,    20, 
         21,    22,   250,    24,    25,   249,    26,     0,     0,     0, 
        214,     0,     0,     0,   251,     0,     0,     0,     0,     0, 
          0,     0,    27,     0,    99,    99,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   286,     0,   249,     0,     0, 
          0,   247,     0,     0,     0,     0,     0,     0,     0,   248, 
          0,     0,     0,   251,   286,    99,    99,    99,     0,     0, 
          0,     0,     0,     0,     0,    32,    32,    32,    32,    32, 
         32,    32,    32,    32,     0,     0,    32,    32,   183,    32, 
         32,    32,    32,    32,    32,    32,    32,     0,     0,   280, 
        280,     0,     0,   280,   280,   280,   280,   280,     0,   280, 
          0,   177,     0,   258,   177,     0,   258,     0,     0,     0, 
        280,   280,   280,   280,   280,   280,     0,     0,   177,   177, 
        258,   258,     0,   286,   286,   286,   286,   286,   286,   286, 
        286,   286,     0,   183,   286,   286,     0,   286,   286,   286, 
        286,   286,   286,   286,   286,   280,   280,     0,     0,     0, 
          0,     0,   183,   177,     0,   258,     0,   187,   187,     0, 
        187,   187,   187,   187,   220,   187,   187,   187,     0,   249, 
          0,     0,     0,     0,     0,     0,   280,   280,   280,     5, 
        187,   187,   187,   187,     0,   177,     0,   258,    99,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   247,   247, 
        259,     0,     0,   259,     0,     0,   248,   248,     0,     0, 
          0,   187,     0,     0,   187,     0,     0,   259,   259,     0, 
          0,   183,   183,   183,   183,   183,   183,   183,   183,   183, 
          0,     0,   183,   183,     0,   183,   183,   183,   183,   183, 
        183,   183,   183,    99,   187,     0,   187,     0,     0,     0, 
          0,     0,   259,     0,     0,     0,     0,     0,     0,     0, 
          0,    99,    99,     0,     0,     0,     0,     0,   282,   282, 
          0,    99,   282,   282,   282,   282,   282,     0,   282,     0, 
          0,     0,     0,     0,   259,     0,     0,     0,     0,   282, 
        282,   282,   282,   282,   282,     0,     0,   229,   229,     0, 
        229,     0,   229,   229,   229,   229,   229,   229,     0,   280, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   258, 
        229,   229,   229,   229,   282,   282,   249,   249,     0,     0, 
          0,    99,    99,    99,    99,    99,    99,    99,    99,    99, 
          0,     0,    99,    99,     0,    99,    99,    99,    99,    99, 
         99,   229,    99,   229,   229,   282,   282,   282,     6,     0, 
          0,     0,     0,     0,   280,     0,     0,     0,     5,     5, 
          5,     5,     5,     5,     0,     5,     0,   185,     0,     0, 
          0,     0,     0,   280,   229,     0,   229,     0,     5,     5, 
          5,     5,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   259,     0,   222,   222, 
          0,     0,     0,   222,   222,   222,   222,     0,   222,     0, 
          0,     0,   187,     0,     0,     0,     0,     0,     0,     0, 
          0,   222,   222,   222,   222,     0,     0,     0,     0,     0, 
          0,   187,   280,   280,   280,   280,   280,   280,   280,   280, 
        280,     0,     0,   280,   280,     0,   280,   280,   280,   280, 
        280,   280,   222,   280,   222,   222,   258,   258,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   282,   274, 
        274,     0,     0,   274,   274,   274,   274,   274,     0,   274, 
          0,     0,     0,     0,     0,   222,     0,   222,     0,     0, 
        274,   274,   274,   274,   274,   274,     0,     0,     0,     0, 
        187,   187,   187,   187,   187,   187,   187,   187,   187,     0, 
          0,   187,   187,     0,   187,   187,   187,   187,   187,   187, 
        187,   187,     0,   282,     0,   274,   274,     6,     6,     6, 
          6,     6,     6,     0,     6,     0,     0,     0,     0,     0, 
          0,     0,   282,     0,     0,     0,     0,     6,     6,     6, 
          6,     0,   229,   259,   259,     0,   274,   274,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   229,     0,     0,     0,     0,     0,   275,   275,     0, 
          0,   275,   275,   275,   275,   275,     0,   275,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   275,   275, 
        275,   275,   275,   275,     0,     0,     0,     0,     0,     0, 
          0,   282,   282,   282,   282,   282,   282,   282,   282,   282, 
          0,     0,   282,   282,     0,   282,   282,   282,   282,   282, 
        282,     0,   282,   275,   275,     0,     0,     0,     0,     0, 
        229,   229,   229,   229,   229,   229,   229,   229,   229,     0, 
          0,   229,   229,     0,   229,   229,   229,   229,   229,   229, 
        229,   229,   273,   273,   275,   275,   273,   273,   273,   273, 
        273,     0,   273,   222,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   273,   273,   273,   273,   273,   273,   274, 
          0,     0,   222,     0,     0,     0,     0,     0,     0,   276, 
        276,     0,     0,   276,   276,   276,   276,   276,     0,   276, 
          0,     0,     0,     0,     0,     0,     0,     0,   273,   273, 
        276,   276,   276,   276,   276,   276,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   274,     0,     0,     0,     0,   273, 
        273,     0,     0,     0,     0,   276,   276,     0,     0,     0, 
          0,   222,   222,   222,   222,   222,   222,   222,   222,   222, 
          0,    17,   222,   222,     0,   222,   222,   222,   222,   222, 
        222,   222,   222,     0,     0,     0,   276,   276,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   275,     0,     0, 
        277,   277,     0,     0,   277,   277,   277,   277,   277,     0, 
        277,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   277,   277,   277,   277,   277,   277,     0,     0,     0, 
          0,     0,   274,   274,     0,     0,   274,   274,   274,   274, 
        274,     0,     0,   274,   274,     0,   274,   274,   274,   274, 
        274,   274,   275,   274,     0,     0,   277,   277,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   199, 
        199,     0,   273,   199,   199,     0,   199,   277,   277,   199, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        199,   199,   199,   199,   199,   199,     0,     0,   265,   265, 
          0,     0,   265,   265,   265,   265,   265,     0,   265,   276, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   265, 
        265,   265,   265,   265,   265,   199,   199,   273,     0,     0, 
        275,   275,     0,     0,   275,   275,   275,   275,   275,     0, 
          0,   275,   275,     0,   275,   275,   275,   275,   275,   275, 
          0,   275,     0,     0,   265,   265,   199,   199,     0,     0, 
          0,     0,     0,     0,   276,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   265,   265,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        277,     0,     0,     0,     0,   273,   273,     0,     0,   273, 
        273,   273,   273,   273,     0,     0,   273,   273,     0,   273, 
        273,   273,   273,   273,   273,     0,   273,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   276,   276,     0,     0,   276,   276,   276,   276, 
        276,     0,     0,   276,   276,   277,   276,   276,   276,   276, 
        276,   276,     0,   276,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   199, 
        272,   272,     0,     0,   272,   272,   272,   272,   272,     0, 
        272,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   272,   272,   272,   272,   272,   272,     0,   265,     0, 
          0,     0,     0,     0,     0,   225,   214,     0,     0,   273, 
        223,   221,     0,   222,     0,   224,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,     0,   272,   272,   217,   201, 
        219,   211,     0,   277,   277,     0,     0,   277,   277,   277, 
        277,   277,     0,   199,   277,   277,     0,   277,   277,   277, 
        277,   277,   277,   265,   277,     0,     0,   272,   272,     0, 
          0,     0,   213,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   271,   271, 
          0,     0,   271,   271,   271,   271,   271,     0,   271,     0, 
          0,     0,   212,     0,   228,     0,     0,     0,     0,   271, 
        271,   271,   271,   271,   271,     0,     0,     0,     0,     0, 
          0,     0,   199,   199,     0,     0,   199,   199,   199,   199, 
        199,     0,     0,   199,   199,     0,   199,   199,   199,   199, 
        199,   199,     0,   199,   271,   271,     0,     0,     0,     0, 
          0,   265,   265,     0,     0,   265,   265,   265,   265,   265, 
          0,     0,   265,   265,     0,   265,   265,   265,   265,   265, 
        265,     0,   265,     0,     0,   271,   271,     0,     0,     0, 
          0,     0,     0,     0,     0,   225,   214,     0,     0,     0, 
        223,   221,     0,   222,     0,   224,     0,     0,     0,     0, 
        272,     0,     0,     0,     0,     0,   261,     0,   217,   201, 
        219,   211,   225,   214,     0,     0,     0,   223,   221,     0, 
        222,     0,   224,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   425,   217,   201,   219,   211,   225, 
        214,     0,   213,   486,   223,   221,     0,   222,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   217,   201,   219,   211,     0,     0,     0,   213, 
          0,     0,   212,     0,   228,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        227,     0,     0,     0,     0,     0,   213,     0,     0,   212, 
          0,   228,     0,     0,     0,     0,     0,     0,   271,   231, 
          0,     0,     0,     0,     0,     0,   252,     0,     0,   252, 
          0,     0,   252,     0,     0,     0,   212,     0,   228,     0, 
          0,     0,     0,     0,     0,     0,   252,   252,     0,   252, 
          0,   252,     0,   272,   272,     0,     0,   272,   272,   272, 
        272,   272,     0,     0,   272,   272,     0,   272,   272,   272, 
        272,   272,   272,     0,   272,     0,     0,     0,     0,     0, 
          0,   252,   252,     0,     0,     0,     0,     0,   220,   218, 
        229,   230,   202,   203,   204,   205,   207,     0,     0,   215, 
        216,     0,   199,   200,   206,   209,   208,   210,     0,   226, 
          0,     0,   252,   252,   225,   214,     0,     0,     0,   223, 
        221,     0,   222,     0,   224,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   496,   217,   201,   219, 
        211,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   271,   271,     0,     0,   271,   271,   271,   271,   271, 
        227,   213,   271,   271,     0,   271,   271,   271,   271,   271, 
        271,     0,   271,     0,     0,     0,     0,     0,     0,   231, 
          0,     0,     0,     0,     0,     0,     0,   227,     0,     0, 
          0,   212,     0,   228,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   231,     0,     0,     0, 
          0,     0,     0,     0,   227,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   231,     0,   252,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   220,   218, 
        229,   230,   202,   203,   204,   205,   207,     0,     0,   215, 
        216,     0,   199,   200,   206,   209,   208,   210,     0,   226, 
          0,     0,     0,     0,     0,   220,   218,   229,   230,   202, 
        203,   204,   205,   207,     0,     0,   215,   216,     0,   199, 
        200,   206,   209,   208,   210,     0,   226,     0,     0,     0, 
          0,     0,   220,   218,   229,   230,   202,   203,   204,   205, 
        207,     0,     0,   215,   216,     0,   199,   200,   206,   209, 
        208,   210,     0,   226,   225,   214,     0,     0,   531,   223, 
        221,     0,   222,     0,   224,     0,   402,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   217,   201,   219, 
        211,   225,   214,     0,     0,   536,   223,   221,     0,   222, 
          0,   224,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   217,   201,   219,   211,     0,   227, 
          0,   213,   252,   252,   252,   252,   252,     0,     0,   252, 
        252,     0,   252,   252,   252,   252,   252,   252,   231,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   213,     0, 
          0,   212,     0,   228,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   212,     0, 
        228,   492,     0,     0,     0,     0,     0,     0,   499,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   220,   218,   229, 
        230,   202,   203,   204,   205,   207,     0,     0,   215,   216, 
          0,   199,   200,   206,   209,   208,   210,     0,   226,   225, 
        214,     0,     0,   537,   223,   221,     0,   222,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   551,   217,   201,   219,   211,   225,   214,   558,     0, 
        584,   223,   221,     0,   222,     0,   224,     0,     0,   566, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   217, 
        201,   219,   211,   225,   214,     0,   213,   585,   223,   221, 
          0,   222,     0,   224,     0,     0,     0,     0,     0,     0, 
        595,     0,     0,     0,     0,     0,   217,   201,   219,   211, 
          0,     0,     0,   213,     0,     0,   212,     0,   228,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   614, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   227, 
        213,     0,     0,   212,     0,   228,     0,   624,     0,     0, 
          0,     0,   627,     0,     0,     0,     0,   629,   231,     0, 
          0,     0,     0,     0,     0,     0,   227,     0,     0,     0, 
        212,     0,   228,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   231,     0,     0,     0,     0, 
          0,     0,     0,   225,   214,     0,     0,     0,   223,   221, 
          0,   222,     0,   224,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   609,   217,   201,   219,   211, 
          0,     0,     0,     0,     0,     0,     0,   220,   218,   229, 
        230,   202,   203,   204,   205,   207,     0,     0,   215,   216, 
          0,   199,   200,   206,   209,   208,   210,     0,   226,     0, 
        213,     0,     0,     0,   220,   218,   229,   230,   202,   203, 
        204,   205,   207,     0,     0,   215,   216,     0,   199,   200, 
        206,   209,   208,   210,     0,   226,     0,     0,     0,     0, 
        212,     0,   228,     0,     0,     0,     0,     0,     0,     0, 
          0,   225,   214,     0,     0,     0,   223,   221,     0,   222, 
          0,   224,     0,     0,   227,     0,     0,     0,     0,     0, 
          0,     0,   623,     0,   217,   201,   219,   211,     0,     0, 
          0,     0,     0,   231,     0,     0,     0,     0,   225,   214, 
          0,   227,     0,   223,   221,     0,   222,     0,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   213,     0, 
        231,   217,   201,   219,   211,     0,     0,     0,   227,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   231,   212,     0, 
        228,     0,     0,     0,     0,   213,     0,     0,     0,     0, 
          0,     0,   220,   218,   229,   230,   202,   203,   204,   205, 
        207,     0,     0,   215,   216,     0,   199,   200,   206,   209, 
        208,   210,     0,   226,     0,   212,     0,   228,     0,   220, 
        218,   229,   230,   202,   203,   204,   205,   207,     0,     0, 
        215,   216,     0,   199,   200,   206,   209,   208,   210,     0, 
        226,     0,     0,     0,     0,     0,   220,   218,   229,   230, 
        202,   203,   204,   205,   207,     0,     0,   215,   216,     0, 
        199,   200,   206,   209,   208,   210,     0,   226,   227,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   231,     0,   225, 
        214,     0,     0,     0,   223,   221,     0,   222,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   217,   201,   219,   211,     0,     0,     0,     0, 
          0,     0,     0,     0,   225,   214,     0,     0,     0,   223, 
        221,     0,   222,     0,   224,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   213,   217,   201,   219, 
        211,     0,     0,     0,     0,     0,   220,   218,   229,   230, 
        202,   203,   204,   205,   207,     0,   227,   215,   216,     0, 
        199,   200,   206,   209,   208,   210,   212,   226,   228,     0, 
          0,   213,     0,     0,     0,   231,     0,     0,     0,     0, 
          0,     0,     0,     0,   262,   262,     0,     0,   262,   262, 
        262,   262,   262,   227,   262,     0,     0,     0,     0,     0, 
          0,   212,     0,   228,     0,   262,   262,   262,   262,   262, 
        262,     0,   231,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        262,   262,     0,     0,   220,   218,   229,   230,   202,   203, 
        204,   205,   207,     0,     0,   215,   216,     0,   199,   200, 
        206,   209,   208,   210,     0,   226,     0,     0,     0,     0, 
          0,   262,   262,     0,     0,     0,     0,     0,     0,     0, 
          0,   220,   218,   229,   230,   202,   203,   204,   205,   207, 
          0,     0,   215,   216,     0,   199,   200,   206,   209,   208, 
        210,     0,   226,   263,   263,     0,     0,   263,   263,   263, 
        263,   263,     0,   263,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   263,   263,   263,   263,   263,   263, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        264,   264,     0,     0,   264,   264,   264,   264,   264,     0, 
        264,     0,     0,     0,   227,     0,     0,     0,     0,   263, 
        263,   264,   264,   264,   264,   264,   264,     0,     0,     0, 
          0,     0,     0,   231,     0,     0,     0,     0,   260,     0, 
          0,   260,     0,   260,   260,   260,     0,     0,     0,   227, 
        263,   263,     0,     0,     0,     0,   264,   264,   260,   260, 
        260,   260,   260,   260,   262,     0,     0,     0,   231,     0, 
          0,     0,     0,     0,     0,   261,     0,     0,   261,     0, 
        261,   261,   261,     0,     0,     0,     0,   264,   264,     0, 
          0,     0,     0,   260,   260,   261,   261,   261,   261,   261, 
        261,     0,   220,   218,   229,   230,   202,   203,   204,   205, 
        207,     0,     0,   215,   216,     0,     0,   200,   206,   209, 
        208,   210,     0,   226,   260,   260,     0,     0,     0,     0, 
        261,   261,     0,     0,     0,     0,     0,   220,   218,   229, 
        230,   202,   203,   204,   205,   207,     0,     0,   215,   216, 
          0,     0,     0,   206,   209,   208,   210,     0,   226,     0, 
          0,   261,   261,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   254,     0,     0,   254,     0,     0,   254,     0, 
          0,     0,     0,   263,     0,     0,     0,     0,     0,     0, 
          0,     0,   254,   254,     0,   254,     0,   254,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   262,   262,     0, 
          0,   262,   262,   262,   262,   262,     0,     0,   262,   262, 
        264,   262,   262,   262,   262,   262,   262,   254,   254,     0, 
          0,   253,     0,     0,   253,     0,     0,   253,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   253,   253,     0,   253,     0,   253,   260,   254,   254, 
        255,     0,     0,   255,     0,     0,   255,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        255,   255,     0,   255,     0,   255,   253,   253,     0,     0, 
          0,     0,     0,     0,   261,     0,     0,     0,     0,   270, 
          0,     0,   270,     0,     0,   270,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   255,   255,   253,   253,   270, 
        270,     0,   270,     0,   270,     0,   263,   263,     0,     0, 
        263,   263,   263,   263,   263,     0,     0,   263,   263,     0, 
        263,   263,   263,   263,   263,   263,   255,   255,     0,     0, 
          0,     0,     0,     0,   270,   270,     0,     0,     0,     0, 
          0,     0,     0,   264,   264,     0,     0,   264,   264,   264, 
        264,   264,     0,     0,   264,   264,     0,   264,   264,   264, 
        264,   264,   264,     0,     0,   270,   270,     0,     0,     0, 
          0,   254,     0,     0,     0,     0,     0,     0,     0,     0, 
        260,   260,     0,     0,   260,   260,   260,   260,   260,     0, 
          0,   260,   260,     0,   260,   260,   260,   260,   260,   260, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   261,   261,     0, 
          0,   261,   261,   261,   261,   261,     0,     0,   261,   261, 
        253,   261,   261,   261,   261,   261,   261,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   251,     0, 
          0,   251,     0,     0,   251,     0,     0,     0,     0,   255, 
          0,     0,     0,     0,     0,     0,     0,     0,   251,   251, 
          0,   251,   208,   251,     0,   208,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   269,     0,     0,   269,   208, 
        208,   269,   208,     0,   208,     0,     0,     0,   270,     0, 
          0,     0,     0,   251,   251,   269,   269,     0,   269,     0, 
        269,     0,     0,     0,     0,     0,     0,     0,   254,   254, 
        254,   254,   254,     0,   208,   254,   254,     0,   254,   254, 
        254,   254,   254,   254,   251,   251,     0,     0,     0,   250, 
        269,   269,   250,     0,     0,   250,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   208,     0,     0,   250, 
        250,     0,   250,     0,   250,     0,     0,     0,     0,     0, 
          0,   269,   269,     0,     0,     0,     0,   253,   253,   253, 
        253,   253,     0,     0,   253,   253,     0,   253,   253,   253, 
        253,   253,   253,     0,   250,   250,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   255,   255,   255,   255, 
        255,     0,     0,   255,   255,     0,   255,   255,   255,   255, 
        255,   255,     0,     0,     0,   250,   250,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   270,   270,   270,   270,   270, 
          0,     0,   270,   270,     0,   270,   270,   270,   270,   270, 
        270,     0,   267,     0,     0,   267,     0,   251,   267,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   256,     0, 
          0,   256,   267,   267,   256,   267,     0,   267,   208,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   256,   256, 
          0,   256,     0,   256,   269,   257,     0,     0,   257,     0, 
          0,   257,     0,     0,     0,     0,     0,   267,   267,     0, 
          0,     0,     0,     0,     0,   257,   257,     0,   257,     0, 
        257,     0,     0,   256,   256,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   267,   267, 
          0,     0,     0,     0,     0,     0,     0,     0,   250,     0, 
        257,   257,     0,     0,   256,   256,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   130,     0,   140,     0,     0,     0,     0, 
        139,   257,   257,   128,     0,   129,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        302,     0,     0,     0,   251,   251,   251,   251,   251,     0, 
          0,   251,   251,     0,   251,   251,   251,   251,   251,   251, 
          0,     0,     0,     0,     0,   208,   208,   208,   208,   208, 
          0,    83,     0,     0,     0,   208,   208,   208,   208,   208, 
        208,   269,   269,   269,   269,   269,     0,     0,   269,   269, 
          0,   269,   269,   269,   269,   269,   269,     0,     0,     0, 
        130,     0,   140,     0,     0,     0,   131,   139,     0,     0, 
        128,   267,   129,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   256,     0,   306, 
          0,     0,     0,     0,     0,   250,   250,   250,   250,   250, 
          0,     0,   250,   250,     0,   250,   250,   250,   250,   250, 
        250,     0,     0,     0,   257,     0,     0,     0,    83,   130, 
          0,   140,     0,     0,     0,     0,   139,     0,     0,   128, 
        130,   129,   140,     0,     0,     0,     0,   139,     0,     0, 
        128,     0,   129,     0,   127,     0,     0,     0,     0,     0, 
          0,     0,     0,   131,     0,     0,     0,     0,   298,   130, 
          0,   140,     0,     0,     0,     0,   139,     0,     0,   128, 
          0,   129,     0,     0,     0,     0,     0,    83,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   300,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        173,    86,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,     0,   131,     0,     0,     0,     0,    83,   267,   267, 
        267,   267,   267,   131,     0,     0,    10,     0,   267,   267, 
        267,   267,   267,   267,   256,   256,   256,   256,   256,     0, 
          0,     0,     0,     0,   256,   256,   256,   256,   256,   256, 
          0,     0,   131,   135,     0,     0,     0,     0,     0,     0, 
          0,   257,   257,   257,   257,   257,     0,     0,     0,     0, 
          0,   257,   257,   257,   257,   257,   257,     0,     0,     0, 
        138,     0,     0,     0,     0,     0,   134,   173,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   126,   130,     0, 
        140,     0,     0,    10,     0,   139,     0,     0,   128,     0, 
        129,   223,     0,   223,     0,     0,     0,     0,   223,     0, 
          0,   223,     0,   223,     0,     0,     0,     0,     0,     0, 
        135,   303,   132,   133,     0,     0,   136,   137,    87,    88, 
         89,    90,     0,     0,     0,     0,     0,   173,    86,    87, 
         88,    89,    90,     0,     0,     0,    83,   138,     0,     0, 
          0,     0,    10,   134,     0,     0,     0,     0,     0,   223, 
          0,   223,     0,    10,     0,     0,   173,    86,    87,    88, 
         89,    90,     0,     0,   126,     0,     0,     0,   347,   135, 
          0,   131,     0,     0,     0,     0,     0,     0,     0,   130, 
        135,   140,    10,     0,   223,     0,   139,     0,     0,   128, 
          0,   129,     0,     0,     0,     0,   138,   307,     0,   132, 
        133,     0,   134,     0,     0,     0,     0,   138,     0,   135, 
        130,     0,   140,   134,     0,     0,     0,   139,     0,     0, 
        128,     0,   129,   126,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   126,     0,   138,    83,     0,     0, 
          0,     0,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   132,   133, 
          0,     0,     0,   126,     0,     0,     0,     0,   188,   132, 
        133,     0,   131,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   132,   133, 
          0,     0,     0,   131,     0,   173,    86,    87,    88,    89, 
         90,     0,     0,     0,     0,     0,     0,     0,   223,   223, 
        223,   223,   223,   223,     0,     0,     0,     0,     0,     0, 
          0,    10,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   223,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   135,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   223,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   138,     0,     0,     0,     0, 
          0,   134,     0,     0,     0,     0,     0,     0,   223,     0, 
          0,     0,     0,     0,   223,     0,   173,    86,    87,    88, 
         89,    90,   126,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   223,     0,     0,     0,     0, 
          0,     0,    10,     0,     0,     0,     0,   173,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,   132,   133,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   135, 
        223,   223,     0,    10,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   138,     0,     0,     0, 
        135,     0,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   126,     0,     0,     0,   189,     0,     0, 
          0,     0,     0,   134,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   126,     0,     0,     0,   132,   133, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   132, 
        133, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,    40,   155,   120,    46,    41,    60,    46, 
         44,    59,    71,    42,   125,    41,   124,    41,   391,    59, 
        125,    46,   125,    84,    41,   169,    91,    44,   240,    34, 
         35,   260,    63,    41,   126,    40,    44,    98,   438,   100, 
        126,    58,    59,    40,   260,    41,   105,   106,    44,    41, 
        260,    93,    44,    60,    91,   170,    61,    62,    63,   120, 
         91,    44,    58,    59,    69,    70,    71,   303,   123,    91, 
         39,   300,    44,    44,    44,   123,    93,   260,    91,    84, 
         49,    50,    51,   125,    91,    93,   304,    59,    41,    59, 
        300,    44,    97,    98,    44,   100,    59,    93,    40,   472, 
        105,   106,    44,   286,   260,    58,    59,   319,   125,   170, 
         93,   340,   512,    37,    38,   120,   126,   268,    42,    43, 
        181,    45,    93,    47,   340,    46,   123,    37,    38,   125, 
        443,    44,    42,    43,   139,    45,    60,    47,    62,    46, 
         93,   514,   125,    93,   300,    41,    46,    58,    44,   332, 
         60,    93,    62,   125,   364,    46,    59,   260,   163,   164, 
        123,   166,    91,    59,    59,   170,   227,    58,   541,   320, 
         94,    41,   125,   486,    44,   125,   181,    37,   103,    91, 
         93,    64,    42,    43,    94,    45,    58,    47,    58,    59, 
         63,   342,   197,   344,    91,   260,   340,    93,    46,   411, 
        124,   126,   126,   128,   129,   130,   131,   132,   133,   257, 
        135,    46,   125,    61,   139,    59,   126,    91,    91,    37, 
        312,   286,   227,    93,    42,    43,   231,    45,   123,    47, 
        155,   260,   340,   257,    44,   300,   301,   302,   260,   331, 
        257,    37,    60,    40,    62,   331,    42,   260,   253,   393, 
         59,    47,    62,   260,   405,   125,   311,    59,   183,   410, 
        185,   257,   373,   374,   286,   257,   126,   332,   373,   374, 
        239,   300,   277,    59,   199,   200,   201,   202,   203,   204, 
        205,   206,   207,   208,   209,   210,   211,   212,   213,   214, 
        215,   216,   217,   218,   219,   220,   221,   222,   223,   224, 
        225,   226,   312,   228,   257,   125,   457,   320,   126,   340, 
        402,   403,    59,   320,   123,   240,   402,   403,   340,   332, 
         41,   331,    33,    44,    35,   332,    44,   340,    60,    40, 
        126,   260,    43,   340,    45,   364,   261,    58,    59,    61, 
         61,   260,    63,   268,    62,   270,    37,    38,   260,   260, 
        261,    42,    43,    91,    45,    93,    47,   286,   410,    44, 
         40,   257,   257,   260,   548,   549,    46,   286,   427,    60, 
        410,    62,    93,   298,   286,   300,   410,   302,   303,   530, 
         91,   306,   307,   420,   410,   410,   260,   257,   312,   286, 
         97,   575,   402,   403,   319,   320,    63,   414,   415,   330, 
        477,   478,   312,   124,   125,   573,   574,   331,    93,   340, 
         41,   421,   286,    44,   125,   126,    46,   342,   414,   344, 
        332,   331,   310,   428,    91,   350,    41,   542,   340,    44, 
        598,    61,   583,   438,   359,   126,    40,    33,   515,    35, 
        260,   260,    46,   340,    40,    37,   310,    43,   257,    45, 
         42,    43,   312,    45,    58,    47,   410,   164,   332,   166, 
         41,   414,   415,    40,   311,    41,   286,   286,    44,    46, 
        395,   331,   477,   478,   181,   123,   400,   401,   402,   403, 
        405,   542,    40,   260,    58,   410,   411,   411,   412,   414, 
        400,   401,   402,   403,   312,    91,    40,   421,   260,   261, 
         44,   411,   412,   344,   345,   139,   283,   512,    41,   286, 
        515,   421,   332,   331,   519,    59,   312,    41,   187,   310, 
         44,   340,   383,   300,    41,    41,    59,    44,    44,   125, 
        126,    91,   457,   458,   126,   331,   257,   542,   599,   123, 
        465,   466,   402,   403,   414,   415,   253,   373,   374,   260, 
        261,   262,   263,   264,   265,    33,   417,    35,   619,    44, 
         93,   421,    40,   197,   123,    43,   276,    45,   493,   279, 
        300,   301,   302,    13,    14,   286,   300,   301,   302,   123, 
        505,   125,   400,   401,   402,   403,    58,   364,   123,    33, 
         44,    35,   125,   260,   599,   264,    40,   231,   410,    43, 
         93,    45,   313,   421,   273,   530,   402,   403,   533,    44, 
        535,   105,   106,    91,   619,    61,    49,    50,    51,   286, 
         41,   312,    93,    44,    41,   421,   340,    44,   260,   340, 
        341,   342,   343,   257,    41,   346,    44,    58,    59,    41, 
        331,    58,    59,   277,   569,   123,   123,    91,   126,   360, 
        361,   362,   363,   260,   365,   366,   367,    91,   583,   370, 
        371,   372,   373,   374,   260,   261,   262,   263,   264,   265, 
        531,    40,    93,   125,   123,   536,    93,    61,   123,    58, 
        605,    40,   126,   404,   405,   406,   407,   408,    58,   358, 
        286,   402,   403,   414,   415,   416,   417,   418,   419,   260, 
        123,    40,    40,   260,   125,    41,   125,    93,   125,   400, 
        401,   402,   403,    41,    40,   125,    61,   313,    40,   430, 
        411,   412,    40,    91,   585,   123,    41,   340,   125,   125, 
        421,   125,   401,    40,    40,    40,    91,    40,    59,    41, 
         59,    40,    44,   604,   340,   341,   342,   343,    40,   340, 
        346,    91,   260,    41,   615,    59,    58,    59,    41,    61, 
         61,    63,    59,   361,   360,   361,   362,   363,   340,   365, 
        366,   367,    61,    59,   370,    41,   372,   373,   374,   448, 
         44,    93,   260,   261,   262,   263,   264,   265,   125,    37, 
         38,    93,    40,    41,    42,    43,    44,    45,   123,    47, 
         59,   125,    40,    44,   260,    41,   402,   403,   286,   364, 
         58,    59,    60,    61,    62,    63,   260,   261,   262,   263, 
        264,   265,   321,   125,    41,   123,   260,   261,   262,   263, 
        264,   265,   123,   340,   430,   313,   257,   340,    41,    59, 
        257,   125,   286,    91,    91,    93,    94,   125,    37,   371, 
        125,   123,   286,    42,    43,    40,    45,    59,    47,    41, 
        125,    58,   340,   341,   342,   343,   300,   125,   346,   313, 
        125,    60,    41,    62,   123,   123,   124,   125,   126,   125, 
        123,   123,   360,   361,   362,   363,    93,   365,   366,   367, 
         41,    41,   370,   125,   372,   257,   340,   341,   342,   343, 
         58,   125,   346,    91,    91,   260,   261,   262,   263,   264, 
        265,    91,   346,   125,    93,   125,   360,   361,   362,   363, 
        260,   365,   366,   367,   402,   403,   370,    41,   372,   123, 
         44,   286,    59,    59,    41,    91,    59,   126,    41,    41, 
        364,    41,    41,     7,    58,    59,   286,    61,   125,    63, 
        125,     6,   430,    77,   102,   257,   339,   483,   402,   403, 
        300,   301,   302,    37,    38,   478,    40,    41,    42,    43, 
         44,    45,   519,    47,    60,    59,   109,   506,   345,    93, 
         94,   591,   494,   181,    58,    59,   430,    61,    62,    63, 
        555,   346,   332,   414,   415,   181,    41,   414,   415,    44, 
        277,   531,   555,   242,   197,    41,   536,   238,    44,   257, 
        124,   125,   260,    91,    59,    -1,    31,    91,    91,    93, 
         94,    37,    38,    59,    40,    41,    42,    43,    44,    45, 
         46,    47,   166,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,    58,    59,    60,    61,    62,    63,    93,   123, 
        124,   125,   126,    -1,    -1,   585,   303,    93,    91,    -1, 
         -1,    -1,   310,   311,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   320,    -1,   604,    91,    -1,    93,    94,    -1, 
        125,    -1,   330,   331,   332,   615,    -1,   334,    -1,   125, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,   124,   125, 
        126,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,    -1,    -1,   312,   280,   281,   282,   283,   284,   285, 
         -1,   287,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,   331,   257,   300,   301,   302,    -1,   304,    -1, 
         58,    59,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   410,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,   257,    47,    93,   260,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,   280,   281,   282,   283,   284,   285,    -1,   287, 
         -1,   400,   401,   402,   403,    -1,    -1,   125,    -1,    -1, 
         -1,   257,   411,   412,    -1,   303,    41,   260,    91,    44, 
         93,    94,   421,    -1,    -1,    -1,   310,   311,   312,    -1, 
         -1,   257,    -1,    58,    59,    -1,   320,   280,   281,   282, 
        283,   284,   285,   286,   287,    -1,   330,   331,   332,    -1, 
         -1,   124,   125,   126,    41,    -1,   340,    44,    -1,    -1, 
        303,    -1,   280,   281,   282,   283,   284,   285,    93,   287, 
         -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,   303,   312,    -1,    -1,   332, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,   331,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,   125,   257, 
         -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    91,   257,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    91,    -1,    93,    94, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    91,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,   124, 
        125,   126,   257,    -1,    41,    -1,    -1,    44,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,    -1, 
         91,    58,    59,    -1,    91,    -1,    93,    94,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    -1,   340,    44,    -1, 
        257,    -1,    -1,    41,    41,    -1,    44,    44,    -1,    -1, 
         -1,    -1,    58,    59,   125,    -1,    93,   124,   125,   126, 
         58,    59,    59,    -1,    -1,    -1,   414,   415,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,   125,    58, 
         59,    60,    61,    62,    63,    93,    93,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   125, 
         -1,    -1,    91,    -1,    93,    94,    -1,   125,   125,    -1, 
         -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   280,   281,   282,   283,   284,   285,    -1,   287, 
         -1,    -1,    -1,    -1,    -1,   124,   125,   126,    -1,   414, 
        415,    -1,    -1,    41,    -1,   303,    44,    -1,    -1,    -1, 
        280,   281,   282,   283,   284,   285,    -1,   287,    37,    38, 
         58,    59,    41,    42,    43,    44,    45,   312,    47,    -1, 
        257,    -1,    -1,   303,    -1,    -1,   334,   414,   415,    58, 
         59,    60,    61,    62,    -1,    -1,   331,    -1,    -1,   280, 
        281,   282,   283,   284,   285,    93,   287,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,   334,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   303,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,   125,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,   334,   331,   124,   125,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   257,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    41,    -1,    41,    44,    -1,    44,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    58,    59, 
         58,    59,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,   312,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    93,    94,    -1,    -1,    -1, 
         -1,    -1,   331,    93,    -1,    93,    -1,    37,    38,    -1, 
         40,    41,    42,    43,    44,    45,    46,    47,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   126,    91, 
         60,    61,    62,    63,    -1,   125,    -1,   125,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,   415, 
         41,    -1,    -1,    44,    -1,    -1,   414,   415,    -1,    -1, 
         -1,    91,    -1,    -1,    94,    -1,    -1,    58,    59,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   312,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   330,   331,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,   340,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    37,    38,    -1, 
         40,    -1,    42,    43,    44,    45,    46,    47,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         60,    61,    62,    63,    93,    94,   414,   415,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    91,   421,    93,    94,   124,   125,   126,    91,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,   331,   124,    -1,   126,    -1,   300,   301, 
        302,   303,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    91,   421,    93,    94,   414,   415,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   312,    -1,    93,    94,   280,   281,   282, 
        283,   284,   285,    -1,   287,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,   300,   301,   302, 
        303,    -1,   312,   414,   415,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    37,    38,   124,   125,    41,    42,    43,    44, 
         45,    -1,    47,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,   257, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   312,   421,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,   257,    41,    42,    -1,    44,   124,   125,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    93,    94,   312,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    93,    94,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   312,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    93,    94,    60,    61, 
         62,    63,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,   331,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   312,   421,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    93,    94,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    37, 
         38,    -1,    94,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    94, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,   124, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   257,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,   124,   125,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
        312,    94,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,   347,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,   312, 
         -1,    94,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        126,   452,    -1,    -1,    -1,    -1,    -1,    -1,   459,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   522,    60,    61,    62,    63,    37,    38,   529,    -1, 
         41,    42,    43,    -1,    45,    -1,    47,    -1,    -1,   540, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    94,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
        571,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    94,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   600, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         94,    -1,    -1,   124,    -1,   126,    -1,   618,    -1,    -1, 
         -1,    -1,   623,    -1,    -1,    -1,    -1,   628,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         94,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    37,    38, 
         -1,   312,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1, 
        331,    60,    61,    62,    63,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,   124,    -1,   126,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   312,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
         -1,    94,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,   312,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,   126,    -1,    58,    59,    60,    61,    62, 
         63,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    -1,    43,    44,    45,    -1,    -1,    -1,   312, 
        124,   125,    -1,    -1,    -1,    -1,    93,    94,    58,    59, 
         60,    61,    62,    63,   257,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         43,    44,    45,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    60,    61,    62, 
         63,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,    -1,   415,   416,   417, 
        418,   419,    -1,   421,   124,   125,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,    -1,    -1,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        257,   414,   415,   416,   417,   418,   419,    93,    94,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,   257,   124,   125, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,   124,   125,    58, 
         59,    -1,    61,    -1,    63,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        257,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    41,    63,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    58, 
         59,    44,    61,    -1,    63,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    93,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   124,   125,    -1,    -1,    -1,    38, 
         93,    94,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    38,    -1,    -1,    41,    -1,   257,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    58,    59,    44,    61,    -1,    63,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,   257,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1, 
         40,   124,   125,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    91,    -1,    -1,    -1,   414,   415,   416,   417,   418, 
        419,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         33,    -1,    35,    -1,    -1,    -1,   126,    40,    -1,    -1, 
         43,   257,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    62, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,   257,    -1,    -1,    -1,    91,    33, 
         -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         33,    45,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    58,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    61,    33, 
         -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    91,   404,   405, 
        406,   407,   408,   126,    -1,    -1,   286,    -1,   414,   415, 
        416,   417,   418,   419,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    -1,   126,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
        340,    -1,    -1,    -1,    -1,    -1,   346,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,    33,    -1, 
         35,    -1,    -1,   286,    -1,    40,    -1,    -1,    43,    -1, 
         45,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,   401,   402,   403,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    91,   340,    -1,    -1, 
         -1,    -1,   286,   346,    -1,    -1,    -1,    -1,    -1,    91, 
         -1,    93,    -1,   286,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,   367,    -1,    -1,    -1,   123,   313, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33, 
        313,    35,   286,    -1,   126,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,   340,   400,    -1,   402, 
        403,    -1,   346,    -1,    -1,    -1,    -1,   340,    -1,   313, 
         33,    -1,    35,   346,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,   367,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,    -1,   340,    91,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,    91,   402, 
        403,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,   126,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,   260,   261,   262,   263, 
        264,   265,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,    -1, 
         -1,    -1,   286,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313, 
        402,   403,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
        313,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   367,    -1,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 188 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 200 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 200 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 211 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 212 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 216 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 219 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 222 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 225 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 238 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 243 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 244 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 250 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 250 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 259 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 259 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 268 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 268 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 279 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 284 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 289 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 294 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 299 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 304 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 305 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 310 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 311 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 316 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 321 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 321 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 324 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 324 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 334 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 341 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 348 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 354 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 359 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 364 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 369 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 370 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 376 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 376 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 387 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 387 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 398 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 398 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 423 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 423 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 436 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 441 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 442 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 446 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 453 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 460 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 465 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 470 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 477 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 482 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 483 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 488 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 494 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 497 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 503 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 504 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 509 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 510 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 515 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 520 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 525 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 526 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 537 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 538 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 567 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 567 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 575 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 575 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 598 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 604 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 607 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 612 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 615 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 622 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 623 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 627 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 630 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 637 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 638 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 642 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 667 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 667 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 678 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 689 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 690 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 694 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 694 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 718 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 718 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 736 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 741 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 752 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 760 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 763 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 766 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 769 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 775 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 775 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 778 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 778 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 784 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 792 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 795 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 801 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 801 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 810 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 810 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 820 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 820 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 829 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 832 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 835 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 838 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 841 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 203:  #line 844 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 850 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 856 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 208:  #line 860 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 209:  #line 866 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 210:  #line 872 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 211:  #line 878 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 213:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 214:  #line 893 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 215:  #line 894 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 216:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 219:  #line 904 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 220:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 221:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 222:  #line 913 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 223:  #line 919 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 224:  #line 919 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 921 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 922 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 923 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 928 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 231:  #line 931 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 232:  #line 937 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 234:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 235:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 236:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 238:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 239:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 251:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 252:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 259:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 260:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 270:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 271:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 276:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 279:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 282:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 284:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 285:  #line 1023 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1026 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 287:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 288:  #line 1029 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 289:  #line 1032 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 290:  #line 1032 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 291:  #line 1038 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 292:  #line 1039 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 299:  #line 1057 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 300:  #line 1058 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 301:  #line 1062 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 302:  #line 1066 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 303:  #line 1070 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 304:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 306:  #line 1076 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 307:  #line 1080 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 308:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 309:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 310:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 311:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 312:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 313:  #line 1097 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 314:  #line 1098 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 315:  #line 1099 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 316:  #line 1100 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 317:  #line 1101 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 318:  #line 1102 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 319:  #line 1103 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 320:  #line 1104 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3031 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
