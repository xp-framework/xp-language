<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
#line 75 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_ARROW= 257;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    57,    57,    41, 
         41,    46,    46,    46,    46,    46,    46,    26,    26,    58, 
         58,    61,    59,    62,    59,    65,    59,    66,    59,    68, 
         59,    69,    59,    70,    59,    72,    59,    73,    59,    74, 
         59,    75,    59,    59,    59,    59,    77,    77,    79,    79, 
         78,    78,    80,    67,    67,    71,    71,    81,    81,    83, 
         82,    84,    82,    63,    63,    64,    85,    64,    76,    76, 
         86,    86,    90,    89,    91,    91,    87,    87,    92,    88, 
         55,    55,    93,    93,    60,    60,    94,    94,    94,    98, 
         98,    98,    98,   100,    31,    31,   101,    31,   102,    31, 
        103,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,    31,    31,   111,    31,    31,   110,   110,   109,   109, 
        112,   112,   113,   113,    36,   115,    36,    36,    36,    36, 
         36,    36,   114,   114,    97,    97,   116,   116,   118,   118, 
        117,   117,   104,   104,   104,   104,   104,   104,   104,   104, 
        104,   104,   104,   104,   105,   105,   105,   105,   105,   105, 
        105,   105,   106,   106,   106,   106,   106,   106,   106,   106, 
        106,   106,   106,   106,   107,   107,   107,   107,   107,   107, 
        108,   108,    99,    99,   119,   119,   121,   120,   120,   123, 
        120,   124,   120,   122,   122,    10,    10,    10,    32,    32, 
         32,    12,    12,    95,    96,   125,   125,   126,   126,    21, 
         21,    49,    49,   127,   127,   128,   128,   128,   128,   128, 
        128,   128,   128, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     1,     2,     0, 
          2,     1,     1,     1,     1,     1,     1,     0,     1,     1, 
          2,     0,     4,     0,     7,     0,    10,     0,     8,     0, 
          6,     0,     8,     0,     8,     0,     3,     0,     3,     0, 
          4,     0,     6,     7,     7,     2,     1,     3,     1,     3, 
          1,     3,     3,     1,     3,     0,     1,     1,     2,     0, 
          5,     0,     4,     1,     3,     0,     0,     3,     2,     1, 
          1,     2,     0,     9,     1,     3,     0,     1,     0,     5, 
          0,     1,     1,     3,     0,     1,     5,     4,     4,     1, 
          4,     1,     1,     0,     3,     2,     0,     4,     0,     5, 
          0,     6,     2,     3,     1,     1,     1,     1,     1,     5, 
          3,     3,     3,     0,     8,     4,     1,     3,     0,     1, 
          1,     3,     1,     2,     1,     0,     4,     1,     1,     1, 
          1,     1,     1,     1,     1,     1,     1,     3,     0,     1, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     4,     4,     3,     3,     3,     3,     3,     3, 
          4,     4,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     4,     4,     3,     2,     2,     2,     2,     2,     2, 
          2,     2,     0,     1,     1,     2,     0,     4,     2,     0, 
          6,     0,     5,     1,     1,     1,     1,     1,     1,     1, 
          1,     1,     4,     3,     4,     1,     3,     1,     3,     1, 
          3,     0,     1,     1,     2,     1,     1,     1,     1,     1, 
          1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   286,     0,     0,   288,   287,     0,    15,     0,   306, 
        308,   307,   310,   312,   311,   313,   309,     1,     0,    68, 
          0,   304,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   305,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   216,     0,     0,   222,   218,   221,   219,   220, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   289,     0,   290,   291,     0,   296,    27,     0, 
          0,     0,    31,    35,     0,   225,     0,     0,     0,     0, 
          0,     0,   187,     0,     0,     0,   184,     0,     0,     0, 
          0,     0,   223,     0,   224,   195,   196,   197,   198,   199, 
          0,     0,   227,     0,     0,    79,    80,    83,    84,     0, 
         78,     0,     0,     0,     0,   293,    29,    35,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   193, 
          0,   191,     0,     0,     0,     0,   189,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   271,   272,     0, 
        277,   285,   284,   186,   274,     0,     0,     0,   217,     0, 
          0,   299,     0,   294,   297,     0,   301,     0,     0,    25, 
          0,    34,    36,    37,     0,     0,     0,    42,     0,     0, 
          0,     0,     0,     0,     0,     0,   185,     0,   213,     0, 
          0,     0,   211,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   203, 
          0,     0,   194,     0,   276,   282,     0,   174,     0,     0, 
        230,   228,    82,   295,    21,     0,     0,     0,     0,     0, 
          0,     0,    23,     0,    35,     0,   188,     0,     0,     0, 
        206,   214,     0,     0,     0,   183,   180,     0,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,     0,   280,   112, 
          0,   130,   116,   120,   122,   118,   126,   128,   114,   124, 
          0,     0,     0,     0,   110,     0,    63,     0,     0,     0, 
          0,     0,     0,    35,    45,     0,    43,     0,     0,     0, 
          0,     0,     0,     0,     0,   212,     0,   190,     0,   278, 
          0,     0,     0,   132,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    38,   136,   111,     0,     0, 
         61,    59,   102,   103,   104,   105,   106,   107,     0,     0, 
          0,     0,     0,     0,     0,     0,   178,   179,   192,     0, 
        204,     0,   283,     0,     0,     0,     0,     0,   137,     0, 
          0,     0,     0,   154,     0,     0,   127,   129,     0,     0, 
          0,     0,   141,   215,     0,     0,    93,     0,     0,     0, 
          0,     0,    65,     0,     0,    48,     0,     0,    53,    33, 
          0,   177,   208,     0,   181,   281,   113,     0,     0,     0, 
          0,   131,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    50,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    52,    55,     0,    49,    54,    47, 
        205,     0,     0,   138,     0,     0,     0,   155,     0,     0, 
          0,     0,     0,     0,   142,     0,     0,     0,     0,    94, 
         96,    95,     0,     0,     0,     0,     0,   163,   169,   133, 
          0,   160,   161,     0,     0,   121,     0,   145,     0,     0, 
          0,     0,    97,   101,     0,    85,     0,    64,     0,     0, 
          0,    56,     0,     0,   159,   168,   162,   134,     0,     0, 
          0,   157,   115,   150,   152,     0,     0,   148,   135,     0, 
          0,    62,    60,     0,     0,     0,     0,   123,   119,     0, 
          0,     0,   125,   149,    87,    86,    66,   165,     0,     0, 
          0,   158,     0,     0,     0,     0,   170,   117,     0,   153, 
        166,     0,   151,     0,     0,   164, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   140,     4,     7,     8,    17,    53,    18, 
        241,   113,    61,    99,   121,   170,    63,   246,    62,   101, 
        123,   375,   242,   243,   244,   362,   247,   248,   321,   322, 
        363,   302,   422,   373,   468,   142,   457,   469,   501,   462, 
        529,   558,   461,   458,   410,   419,   504,    41,    30,    42, 
         58,    94,    95,    96,   143,   459,   460,   364,   365,   278, 
        393,   403,   445,   573,   397,   400,   488,   398,   399,   404, 
        576,   401,   402,   396,   436,   540,   438,   452,   439,   453, 
        577,   578,   591,   592,   590,   541,   565,   542,   543,   563, 
        599,   564,   144,   251,   115,   116,   145,   338,   224,   184, 
        179,   264,   255,   146,   147,   148,   149,   150,   261,   385, 
        474,   262,   263,   151,   103,   152,   153,   312,   225,   226, 
        304,   227,   392,   348,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -255,
          0,     0,  -252,  -216,  -145,   448,  -252,     0,    15,    29, 
         -3,     0,  -188,  -188,     0,     0,   105,     0,   109,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   314,     0, 
        900,     0,     0,  -216,  -216,     0,   -38,   135,   -19,  -132, 
         60,     0,     0,     0,     0,     0,     0,     0,   -19,   -19, 
        -19,     0,   139,     0,   426,   147,     0,   187,   109,   900, 
       -216,  -216,  -216,   177,     0,   227,   247,     0,  -216,  -216, 
        717,     0,     0,   273,    53,    79,    53,     0,     0,     0, 
          0,     0,     0,  -216,   265,     0,     0,     0,     0,     0, 
        288,     7,     0,   329,   461,     0,    45,  -216,    82,  -216, 
        275,    82,  4570,   369,   750,   750,  -171,     0,  -103,     0, 
        103,   366,     0,   364,     0,     0,   284,     0,     0,  -216, 
        341,   442,     0,     0,   354,     0,  4844,  4844,  4844,  4844, 
       4844,  4844,     0,  4844,   361,   446,     0,  4844,   398,   122, 
       3070,   -36,     0,   502,     0,     0,     0,     0,     0,     0, 
        462,   517,     0,  4844,    15,     0,     0,     0,     0,   507, 
          0,  -216,   -77,   470,    45,     0,     0,     0,  -216,   597, 
        309,   433,  -101,  -101,   -15,  -101,  -101,  -101,   -77,     0, 
       4844,     0,  4844,   -36,  2027,   -64,     0,  4844,  4844,  4844, 
       4844,  4844,  4844,  4844,  4844,  4844,  4844,  4844,  4844,  4844, 
       4844,  4844,  4844,  4699,  4806,  4442,  4844,  4455,  4844,  4844, 
       4844,  4844,  4844,  4844,  4844,  -216,  4844,     0,     0,   -77, 
          0,     0,     0,     0,     0,   -36,   -27,  4844,     0,    59, 
        536,     0,   141,     0,     0,  1088,     0,   468,   326,     0, 
         76,     0,     0,     0,     0,   482,   281,     0,   553,   364, 
        -36,   485,   487,  3070,  4844,  3070,     0,   -36,     0,   -63, 
        356,   567,     0,  -161,  3259,  3312,  3312,  3312,  3312,  3312, 
       3312,  3312,  3312,  3312,  3312,  3312,  3070,   559,    80,   313, 
       3453,  4844,    87,  4844,    87,  4844,  4844,    40,    40,  4844, 
       4844,    40,    40,   -21,   -21,  -108,  -108,  -108,   -15,     0, 
       -101,    -1,     0,  4844,     0,     0,   579,     0,   564,   446, 
          0,     0,     0,     0,     0,   527,   363,   463,   367,   -17, 
        505,   593,     0,   309,     0,  4844,     0,  4844,    18,   595, 
          0,     0,  4599,   -64,   603,     0,     0,   -36,  4844,  3312, 
       3312,    40,    40,    40,    40,     0,   565,  4844,     0,     0, 
          3,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        605,   521,  2150,   527,     0,   604,     0,   624,   629,   409, 
        581,   609,   550,     0,     0,  4844,     0,   230,   637,   554, 
        560,   -36,   527,  3070,   561,     0,  4844,     0,    26,     0, 
        643,  4844,  4844,     0,   350,  4844,   653,   658,   483,   661, 
        646,   652,   662,   677,   378,     0,     0,     0,   813,   -58, 
          0,     0,     0,     0,     0,     0,     0,     0,   680,   -58, 
       4844,   664,   479,  1256,  2189,   505,     0,     0,     0,   596, 
          0,   697,     0,   699,   682,   527,   681,   486,     0,  2412, 
       4844,  4844,   527,     0,   397,   420,     0,     0,  4844,  4844, 
        701,   490,     0,     0,   704,   720,     0,   726,   724,   145, 
        -57,   -57,     0,   685,  3070,     0,    78,   -83,     0,     0, 
        505,     0,     0,   -36,     0,     0,     0,   660,  4844,   350, 
        671,     0,   736,  2448,   674,   764,   763,   445,  2574,  2601, 
       4844,   378,   687,     0,   551,   491,   -58,   475,   609,   -58, 
        773,   724,   775,   -58,     0,     0,   527,     0,     0,     0, 
          0,    96,  3070,     0,   527,  4844,   483,     0,  4844,   477, 
       4844,   483,   698,  3070,     0,   527,   609,  -216,    39,     0, 
          0,     0,   724,   491,   491,   779,   702,     0,     0,     0, 
         96,     0,     0,   703,   772,     0,  2628,     0,  2744,   451, 
        121,   709,     0,     0,  4844,     0,   527,     0,    39,    39, 
        491,     0,   799,   719,     0,     0,     0,     0,  4844,   788, 
        483,     0,     0,     0,     0,   725,   121,     0,     0,  2874, 
        727,     0,     0,    39,  -216,   527,   815,     0,     0,   483, 
       4844,   796,     0,     0,     0,     0,     0,     0,  -119,   732, 
        483,     0,  3016,   527,  -216,   818,     0,     0,   527,     0, 
          0,   737,     0,   527,   741,     0, 
    );
    protected static $yyRindex= array(         1126,
          0,     0,  1495,     0,     0,   340,  1799,     0,   712,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        134,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -24,   427,     0,     0,   124,     0,   760, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   739,  -104,   738,  -104,     0,     0,     0, 
          0,     0,     0,     0,   -34,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   748,     0, 
          0,   748,   781,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   360,     0,     0,     0,     0,     0,     0, 
          0,    41,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  1461,  1595,     0,     0,     0,     0, 
        478,  1299,     0,    38,     0,     0,     0,     0,     0,     0, 
          0,   106,     0,   831,   -32,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   137, 
        751,   865,  1727,  1764,  2836,  1854,  1893,  1930,     0,     0, 
          0,     0,     0,  1299,     0,   618,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   825, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1341,     0,   541,     0,    10, 
          0,     0,     0,     0,     0,   137,     0,  1553,     0,     0, 
          0,     0,     0,     0,   351,     0,   766,     0,   803,     0, 
       1299,   804,   805,    99,   831,   101,     0,  1299,     0,     0, 
          0,   641,     0,     0,   942,   -12,   404,   546,   668,   877, 
        975,  1134,  1294,  1432,  1469,  1605,   499,     0,  4401,  3757, 
       4241,     0,  4270,     0,  4359,     0,     0,  3736,  3773,     0, 
          0,  3832,  3858,  3645,  3699,  3140,  3523,  3560,  3043,     0, 
       1984,  1202,     0,   808,     0,     0,   904,     0,     0,     0, 
          0,     0,     0,     0,     0,   780,     0,   -40,     0,     0, 
         89,     0,     0,     0,     0,   831,     0,   786,     0,     0, 
          0,     0,     0,     0,  1043,     0,     0,  1299,     0,  1636, 
       1638,  3943,  3972,  4032,  4159,     0,     0,   831,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -86,     0,     0,     0,     0,   791,     0, 
          0,   856,     0,     0,     0,     0,     0,  -114,     0,     0, 
          0,  1299,   780,   792,     0,     0,   831,     0,  3113,     0, 
          0,   831,   857,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   878, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   137,     0,  1163,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   780,   497,     0,     0,     0, 
        861,     0,   780,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   881,     0, 
        891,   891,     0,     0,    51,     0,     0,     0,     0,     0, 
         89,     0,     0,  1299,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   569,     0,     0,     0, 
          0,     0,     0,     0,     0,    47,     0,     0,   149,     0, 
          0,   893,     0,   878,     0,     0,   780,     0,     0,     0, 
          0,     0,   503,     0,   780,   861,     0,     0,     0,     0, 
          0,     0,     0,   515,     0,   780,   149,     0,     0,     0, 
          0,     0,   896,    47,    47,     0,     0,     0,     0,     0, 
        289,     0,     0,     0,     0,     0,     0,     0,     0,   334, 
        814,     0,     0,     0,     0,     0,   780,     0,     0,     0, 
         47,     0,     0,     0,     0,     0,     0,     0,   831,     0, 
          0,     0,     0,     0,     0,     0,   819,     0,     0,     0, 
          0,     0,     0,     0,     0,   780,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -84,     0,     0,     0,     0,   -84,     0, 
          0,     0,     0,   780,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   931,   552,   632,   315, 
        934,   -60,     0,   866,   850,   -90,     0,     0,     0,     0, 
       -116,  -112,     0,     0,     0,  1973,     0,   630,     0,     0, 
         57,   524,  -200,     0,     0,   -56,  -383,   500,   493,     0, 
       -226,  -242,     0,   449,     0,     0,     0,     0,   911,   914, 
          0,   474,     0,   867,  -148,   -30,   754,     0,    66,  -183, 
          0,     0,    67,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   495,   492, 
          0,   408,     0,     0,     0,     0,     0,   447,   452,     0, 
          0,     0,     0,     0,   826,   827,   663,     0,  -167,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   670,     0,     0,     0,   757,     0,   768,     0, 
          0,     0,     0,     0,     0,   842,     0,   977, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   167,   605,   231,   215,    50,   215,   223, 
         39,   215,   306,   112,    93,   214,   257,   217,    26,    17, 
        212,    16,    52,   104,   217,   213,   112,   164,   202,    47, 
         48,   202,   112,   112,    13,    57,   464,   119,   109,   122, 
        108,   508,   395,     9,   308,   202,   202,     1,    93,    93, 
         17,     5,   237,   229,   221,    36,    74,    74,    74,   122, 
         34,   346,   214,   203,    81,    82,    92,   212,   210,    10, 
        211,    12,   213,   164,    35,   126,   214,   236,   172,    74, 
        202,   212,   210,   327,   211,   206,   213,   208,   158,   164, 
        331,    58,    74,    74,    58,    74,   172,   556,   335,   300, 
         92,    92,   229,    59,   217,   100,   330,   111,   122,    58, 
        217,    15,   202,   530,    12,    74,   214,   203,   249,   202, 
        347,   212,   210,   214,   211,   394,   213,    55,   212,   210, 
        172,   211,    32,   213,   229,   112,   506,    13,   336,   206, 
         14,   208,   231,    58,   232,   302,   206,    32,   208,   201, 
         39,   217,    60,    10,    15,   300,   160,   232,    74,   141, 
         74,   557,   172,   300,    74,   217,   112,    71,   159,   100, 
        388,   302,    40,   202,    74,    16,   467,   379,   337,   380, 
         51,    74,     9,   173,   174,   175,   176,   177,   178,    57, 
        180,   231,    57,   232,   185,     9,    91,    68,   226,   391, 
        507,     9,     9,   216,    70,   217,    26,    56,    10,   435, 
        141,    74,   217,    32,   429,    74,    71,   302,    16,    17, 
        606,    10,   220,   231,   303,   232,    71,    10,    10,   220, 
        226,   164,    12,   314,   378,    78,    74,   254,   432,   256, 
         12,    57,   369,   434,   265,   266,   267,   268,   269,   270, 
        271,   272,   273,   274,   275,   276,   277,   279,   280,   281, 
        283,   285,   288,   289,   292,   293,   294,   295,   296,   297, 
        298,   299,    15,   301,   500,   259,   332,   309,   310,    17, 
         15,   456,   456,   424,   277,    79,   109,   109,   108,   108, 
        216,    17,   483,   218,   219,   555,   216,   300,   532,    17, 
        218,   219,   370,   100,     9,    80,   511,   559,   560,   220, 
         34,   141,   215,   472,   371,   220,   582,   583,   309,   310, 
         19,   167,   372,   167,   324,   105,   553,   165,   167,    74, 
         10,   167,    97,   167,   584,   318,    16,   216,   340,   325, 
        341,   597,   342,   343,    16,   166,   344,   345,   106,   214, 
        203,   216,   455,    54,   212,   210,   220,   211,   510,   213, 
        277,    10,    98,    65,    54,    54,   156,   545,   156,   108, 
        220,    49,   206,   156,   208,    17,   156,    17,   156,   167, 
        218,   219,   141,   222,   141,    16,   218,   219,   100,   384, 
         46,   216,   120,   303,    44,   389,   302,   124,   216,   215, 
        182,   202,   202,   298,   141,    74,    34,   319,   154,    44, 
        220,   554,   162,   167,   167,    74,   107,   220,   181,   303, 
        587,   298,   302,   163,   156,   209,   207,   218,   219,   408, 
        502,   502,   425,   303,   303,   303,   204,   205,   217,   538, 
        539,   218,   219,   141,   233,   417,   215,   233,   141,   277, 
        415,   413,   440,   414,   164,   416,    74,    74,   156,   156, 
        215,   233,   233,   168,   444,   303,    17,   122,   302,   533, 
         17,    34,   182,    44,   498,    44,   171,   465,    34,   209, 
        207,   218,   219,    69,   499,   169,   209,   207,   218,   219, 
        204,   205,    74,   574,   575,    74,   233,   141,   484,    74, 
        215,   110,   367,   183,   109,   489,   490,   215,    34,    20, 
         21,    22,   238,    24,    25,   129,    26,   139,   173,    17, 
        186,   173,   138,    74,   598,   127,   481,   128,   233,   480, 
        493,   187,    27,   492,   418,   513,   173,   139,    19,   176, 
        139,   307,   176,   140,   611,   228,   140,   524,   167,   167, 
        167,   167,   167,   167,   229,   143,   176,   176,   143,   129, 
        230,   139,   234,   239,    37,    38,   138,   105,   245,   127, 
        173,   128,   141,    83,   167,   547,   313,   549,   156,   157, 
         74,   175,   444,   546,   175,   317,   234,   444,   550,   234, 
        316,   176,   326,   156,   156,   156,   156,   156,   156,   175, 
         74,   167,   173,   234,   234,   443,   323,   328,   130,   329, 
        334,   580,   333,    43,    44,    45,   339,    83,   349,   156, 
        114,   181,   366,   176,   216,   141,   368,   374,   167,   167, 
        167,   167,   376,   175,   167,   382,   444,   589,   234,   302, 
        302,   302,   387,   220,   405,   406,   156,   603,   167,   167, 
        167,   167,   130,   167,   167,   444,   602,   390,   167,   167, 
        167,   167,   167,   411,   409,   175,   444,   608,   412,   421, 
        234,   420,   423,   156,   156,   156,   156,   426,   427,   156, 
         64,    66,    67,   433,   428,   431,   233,    19,   114,   437, 
        167,   167,   441,   156,   156,   156,   156,   442,   156,   156, 
        446,   449,   250,   156,   447,   156,   156,   156,   235,   260, 
        448,   235,   209,   207,   218,   219,   450,   451,   167,   463, 
        473,   240,   466,   204,   205,   235,   235,    20,    21,    22, 
         23,    24,    25,   215,    26,   156,   156,   475,   467,   476, 
        477,   479,   172,    86,    87,    88,    89,    90,    17,    17, 
         27,    17,    17,    17,    17,    17,    17,   486,    17,   487, 
        235,   491,   494,   156,   320,   495,   496,   497,    10,    17, 
         17,    17,    17,    17,    17,   292,   292,   505,   292,   292, 
        292,   292,   292,   292,   512,   292,   172,    86,    87,    88, 
         89,    90,   235,   515,   516,   134,   292,   292,   518,   292, 
        292,   292,    17,   519,    17,    17,   520,    83,   521,   526, 
        527,   528,    10,   534,   531,   535,   548,   233,   233,   561, 
        551,   572,   137,   350,   351,   352,   562,   568,   133,   292, 
        569,   292,   292,   579,    17,    17,    17,    17,   585,   134, 
         83,   586,   353,   354,   355,   356,   588,   357,   358,   593, 
        302,   596,   359,   604,   360,   601,   607,   260,   612,   614, 
         30,   292,   292,   292,   292,   616,   137,   350,   351,   352, 
         28,   171,   133,   171,   209,    41,    20,    21,    22,   238, 
         24,    25,   175,    26,   131,   132,   353,   354,   355,   356, 
         40,   357,   358,   289,   290,   291,   359,   210,   360,    27, 
        175,   215,   215,    83,   108,   215,   215,   215,   215,   215, 
        171,   215,   361,    51,    57,   175,   207,   236,    91,   171, 
        236,    92,   215,   215,   215,   215,   215,   215,   131,   132, 
        239,    88,   144,    90,   236,   236,    89,    33,   146,    29, 
        279,   279,   102,   147,   279,   279,   279,   279,   279,   279, 
        279,   125,   536,   377,   503,   215,   361,   215,   215,   234, 
        234,   279,   279,   279,   279,   279,   279,   509,    17,   236, 
         73,    17,    72,   303,   514,   161,    85,    86,    87,    88, 
         89,    90,   201,   525,   594,   201,   311,   566,   215,   215, 
        215,   381,   567,   305,   279,   292,   279,   279,   292,   201, 
        201,   236,    10,   386,   252,   253,   235,    46,     0,   155, 
         86,    87,    88,    89,    90,   237,    91,     0,   237,   302, 
          0,    17,    17,    17,     0,     0,     0,   279,   279,   279, 
          0,    17,   237,   237,   201,    10,     0,     0,     0,     0, 
          0,    17,    17,    17,     0,   302,     0,     0,   292,   292, 
        292,    17,     0,     0,     0,     0,     0,     0,   292,   302, 
        302,   302,    84,     0,     0,     0,   201,   237,   292,   292, 
        292,     0,   454,    86,    87,    88,    89,    90,   292,   182, 
        182,   235,   235,   182,   182,   182,   182,   182,   182,   182, 
          0,   302,     0,     0,     0,    84,     0,     0,     0,   237, 
        182,   182,   182,   182,   182,   182,     0,     0,     0,     0, 
          0,    17,    17,    17,    17,    17,    17,    17,    17,    17, 
          0,    17,    17,    17,     0,    17,    17,    17,    17,    17, 
         17,     0,    17,   182,     0,   182,   182,     0,   292,   292, 
        292,   292,   292,   292,   292,   292,   292,     0,     0,   292, 
        292,     0,   292,   292,   292,   292,   292,   292,     0,   292, 
          0,     0,     0,     0,     0,     0,   182,   182,   182,     0, 
          0,     0,     0,     0,   239,     0,   215,   239,    19,    20, 
         21,    22,    23,    24,    25,     0,    26,     0,     0,     0, 
          0,   239,   239,     0,     0,   215,     0,     0,     0,    32, 
         32,     0,    27,    32,    32,    32,    32,    32,    32,    32, 
          0,     0,   315,     0,     0,   279,     2,     0,     0,     0, 
         32,    32,    32,    32,    32,    32,   239,     0,     0,     0, 
          0,     0,     0,     0,   279,     0,     0,     0,    98,    98, 
          0,     0,    98,    98,    98,    98,    98,     0,    98,     0, 
          0,     0,     0,    32,     0,    32,    32,     0,   239,    98, 
         98,    98,    98,    98,   215,   215,   215,   215,   215,   215, 
        215,   215,   215,     0,    17,   215,   215,     0,   215,   215, 
        215,   215,   215,   215,   215,   215,    32,    32,    32,     0, 
        236,   236,     0,     0,    98,    98,     0,     0,     0,     0, 
          0,     0,     0,   279,   279,   279,   279,   279,   279,   279, 
        279,   279,     0,     0,   279,   279,     0,   279,   279,   279, 
        279,   279,   279,   279,   279,    98,    98,    98,     0,     0, 
          0,     0,     0,     0,   238,   273,   273,   238,     0,   273, 
        273,   273,   273,   273,     0,   273,    19,     0,     0,     0, 
          0,   238,   238,     0,   182,   201,   273,   273,   273,   273, 
        273,   273,     0,     0,     0,     0,     0,    20,    21,    22, 
        238,    24,    25,   182,    26,     0,     0,   275,   275,     0, 
        470,   275,   275,   275,   275,   275,   238,   275,   237,   237, 
         27,   273,   273,     0,     0,     0,     0,     0,   275,   275, 
        275,   275,   275,   275,     0,     2,     2,     2,     2,     2, 
          2,     0,     2,     0,     0,     0,     0,     0,   238,     0, 
          0,   239,   273,   273,   273,     2,     2,     2,     0,     2, 
          0,     0,     0,   275,   275,     0,     0,     0,     0,     0, 
          0,     0,   182,   182,   182,   182,   182,   182,   182,   182, 
        182,     0,     0,   182,   182,     0,   182,   182,   182,   182, 
        182,   182,   182,   182,   275,   275,   275,     0,     0,     0, 
          0,     0,   240,     0,    32,   240,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   240, 
        240,     0,     0,    32,     0,     0,     0,   215,   215,     0, 
          0,     0,   215,   215,   215,   215,     0,   215,     0,   241, 
          0,     0,   241,    98,     0,     0,     0,     0,     0,     0, 
        215,   215,   215,   215,   240,     0,   241,   241,     0,     0, 
          0,    98,    98,     0,     0,    20,    21,    22,   238,    24, 
         25,    98,    26,     0,     0,     0,     0,   239,   239,     0, 
          0,   215,     0,   215,   215,     0,   240,     0,    27,     0, 
          0,   241,    32,    32,    32,    32,    32,    32,    32,    32, 
         32,     0,     0,    32,    32,     0,    32,    32,    32,    32, 
         32,    32,    32,    32,   215,     5,   215,     0,     0,   239, 
          0,     0,     0,   241,     0,     0,     0,     0,     0,     0, 
          0,    98,    98,    98,    98,    98,    98,    98,    98,    98, 
        273,     0,    98,    98,     0,    98,    98,    98,    98,    98, 
         98,     0,    98,     0,     0,     0,     0,     0,     0,   273, 
          0,   222,   222,     0,     0,     0,   222,   222,   222,   222, 
        222,   222,     0,   310,     0,   242,     0,     0,   242,     0, 
          0,     0,   275,     0,   222,   222,   222,   222,     0,     0, 
          0,     0,   242,   242,     0,     0,     0,     0,     0,     0, 
          0,   275,     0,     0,     0,     0,   251,     0,   252,   251, 
          0,   252,     0,     0,     0,   222,     0,   222,   222,     0, 
          0,     0,     0,   251,   251,   252,   252,   242,   273,   273, 
        273,   273,   273,   273,   273,   273,   273,   238,   238,   273, 
        273,     0,   273,   273,   273,   273,   273,   273,   222,   273, 
        222,     0,     0,     0,     0,     0,     0,     0,   251,   242, 
        252,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        275,   275,   275,   275,   275,   275,   275,   275,   275,     0, 
          0,   275,   275,     0,   275,   275,   275,   275,   275,   275, 
        251,   275,   252,   267,   267,     0,     0,   267,   267,   267, 
        267,   267,   215,   267,     5,     5,     5,     5,     5,     5, 
          0,     5,     0,     0,   267,   267,   267,   267,   267,   267, 
          0,   215,     0,     0,     5,     5,     5,     5,     0,     0, 
        268,   268,     0,     0,   268,   268,   268,   268,   268,     0, 
        268,     0,   310,     0,     0,     0,     0,     0,     0,   267, 
        267,   268,   268,   268,   268,   268,   268,     0,     0,     0, 
          0,     0,   310,   310,   310,   310,   310,   310,   310,   310, 
          0,     0,     0,     0,     0,   240,   240,     0,     0,     0, 
        267,   267,     0,     0,     0,   310,   268,   268,     0,     0, 
        215,   215,   215,   215,   215,   215,   215,   215,   215,     0, 
         17,   215,   215,     0,   215,   215,   215,   215,   215,   215, 
        215,   215,   241,   241,   310,     0,     0,   268,   268,     6, 
        266,   266,     0,     0,   266,   266,   266,   266,   266,     0, 
        266,     0,     0,     0,     0,     0,   222,     0,     0,     0, 
          0,   266,   266,   266,   266,   266,   266,     0,     0,     0, 
          0,     0,     0,     0,     0,   222,     0,     0,     0,   269, 
        269,     0,     0,   269,   269,   269,   269,   269,     0,   269, 
          0,     0,     0,     0,     0,     0,   266,   266,     0,     0, 
        269,   269,   269,   269,   269,   269,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   270,   270,     0,     0, 
        270,   270,   270,   270,   270,     0,   270,   266,   266,     0, 
          0,     0,     0,     0,     0,   269,   269,   270,   270,   270, 
        270,   270,   270,     0,   222,   222,   222,   222,   222,   222, 
        222,   222,   222,     0,     0,   222,   222,     0,   222,   222, 
        222,   222,   222,   222,   222,   222,   269,   269,   242,   242, 
        258,   258,   270,   270,   258,   258,   258,   258,   258,     0, 
        258,     0,     0,     0,     0,     0,     0,     0,   267,     0, 
          0,   258,   258,   258,   258,   258,   258,     0,     0,   251, 
        251,   252,   252,   270,   270,     0,     0,     0,     0,     0, 
          0,     0,     0,   214,   203,     0,     0,   258,   212,   210, 
          0,   211,     0,   213,     0,   268,   258,   258,     6,     6, 
          6,     6,     6,     6,     0,     6,   206,   190,   208,   200, 
          0,     0,     0,     0,     0,     0,     0,     0,     6,     6, 
          6,     6,     0,     0,     0,     0,     0,   258,   258,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        202,     0,     0,     0,     0,     0,   267,   267,     0,     0, 
        267,   267,   267,   267,   267,     0,     0,   267,   267,     0, 
        267,   267,   267,   267,   267,   267,     0,   267,     0,     0, 
        201,     0,   217,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   268,   268,   266,     0,   268,   268,   268, 
        268,   268,     0,     0,   268,   268,     0,   268,   268,   268, 
        268,   268,   268,     0,   268,     0,   214,   203,     0,     0, 
          0,   212,   210,     0,   211,     0,   213,     0,     0,     0, 
          0,     0,     0,     0,   269,     0,     0,     0,   407,   206, 
        190,   208,   200,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   214,   203,     0,     0,   471, 
        212,   210,     0,   211,     0,   213,     0,     0,     0,     0, 
          0,   270,     0,   202,     0,     0,     0,     0,   206,   190, 
        208,   200,     0,   266,   266,     0,     0,   266,   266,   266, 
        266,   266,     0,     0,   266,   266,     0,   266,   266,   266, 
        266,   266,   266,   201,   266,   217,     0,     0,     0,     0, 
          0,     0,   202,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   269,   269,     0,   258,   269,   269,   269,   269, 
        269,     0,     0,   269,   269,     0,   269,   269,   269,   269, 
        269,   269,   201,   269,   217,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   270, 
        270,     0,     0,   270,   270,   270,   270,   270,   216,     0, 
        270,   270,     0,   270,   270,   270,   270,   270,   270,     0, 
        270,     0,     0,     0,     0,   430,     0,   220,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   258,   258,     0,     0,   258,   258,   258, 
        258,   258,     0,     0,   258,   258,     0,   258,   258,   258, 
        258,   258,   258,     0,   258,     0,     0,     0,   478,     0, 
          0,     0,     0,     0,     0,   485,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   209,   207,   218,   219, 
        191,   192,   193,   194,   196,     0,     0,   204,   205,     0, 
        188,   189,   195,   198,   197,   199,     0,   215,   214,   203, 
          0,     0,     0,   212,   210,     0,   211,     0,   213,     0, 
          0,   216,     0,     0,     0,     0,     0,     0,     0,     0, 
        482,   206,   190,   208,   200,     0,     0,     0,     0,   537, 
        220,     0,     0,     0,   214,   203,     0,   544,   517,   212, 
        210,     0,   211,     0,   213,     0,     0,     0,   552,     0, 
        216,     0,     0,     0,     0,   202,     0,   206,   190,   208, 
        200,     0,     0,     0,     0,     0,     0,     0,     0,   220, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   581, 
          0,     0,     0,     0,     0,   201,     0,   217,     0,     0, 
          0,   202,     0,     0,     0,     0,     0,     0,     0,   209, 
        207,   218,   219,   191,   192,   193,   194,   196,   600,     0, 
        204,   205,     0,   188,   189,   195,   198,   197,   199,     0, 
        215,   201,     0,   217,     0,     0,   610,     0,     0,     0, 
          0,   613,     0,     0,     0,     0,   615,     0,   209,   207, 
        218,   219,   191,   192,   193,   194,   196,     0,     0,   204, 
        205,     0,   188,   189,   195,   198,   197,   199,     0,   215, 
        214,   203,     0,     0,   522,   212,   210,     0,   211,     0, 
        213,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   206,   190,   208,   200,   214,   203,     0, 
          0,   523,   212,   210,     0,   211,     0,   213,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        206,   190,   208,   200,   214,   203,     0,   202,   570,   212, 
        210,     0,   211,     0,   213,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   206,   190,   208, 
        200,     0,     0,     0,   202,     0,     0,   201,     0,   217, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   202,     0,   216,   201,     0,   217,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   220,     0,     0,     0,     0,     0,     0,     0, 
          0,   201,     0,   217,     0,     0,     0,     0,     0,   216, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   220,     0, 
        214,   203,     0,     0,   571,   212,   210,     0,   211,     0, 
        213,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   206,   190,   208,   200,     0,     0,     0, 
          0,   209,   207,   218,   219,   191,   192,   193,   194,   196, 
          0,     0,   204,   205,     0,   188,   189,   195,   198,   197, 
        199,     0,   215,     0,     0,     0,     0,   202,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   209,   207,   218, 
        219,   191,   192,   193,   194,   196,     0,     0,   204,   205, 
          0,   188,   189,   195,   198,   197,   199,   201,   215,   217, 
          0,     0,   265,   265,     0,     0,   265,   265,   265,   265, 
        265,     0,   265,     0,     0,   216,     0,     0,     0,     0, 
          0,     0,     0,   265,   265,   265,   265,   265,   265,     0, 
          0,     0,     0,     0,   220,     0,     0,     0,     0,     0, 
        214,   203,   216,     0,     0,   212,   210,     0,   211,     0, 
        213,     0,     0,     0,     0,     0,     0,     0,   265,   265, 
          0,   220,   595,   206,   190,   208,   200,     0,     0,   216, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   220,   265, 
        265,     0,     0,     0,     0,     0,     0,   202,     0,     0, 
          0,     0,     0,   209,   207,   218,   219,   191,   192,   193, 
        194,   196,     0,     0,   204,   205,     0,   188,   189,   195, 
        198,   197,   199,     0,   215,     0,     0,   201,     0,   217, 
        209,   207,   218,   219,   191,   192,   193,   194,   196,     0, 
          0,   204,   205,     0,   188,   189,   195,   198,   197,   199, 
          0,   215,     0,     0,     0,     0,     0,   209,   207,   218, 
        219,   191,   192,   193,   194,   196,     0,     0,   204,   205, 
          0,   188,   189,   195,   198,   197,   199,     0,   215,     0, 
          0,     0,   214,   203,     0,   216,     0,   212,   210,     0, 
        211,     0,   213,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   609,   220,   206,   190,   208,   200,   264, 
        264,     0,     0,   264,   264,   264,   264,   264,     0,   264, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        264,   264,   264,   264,   264,   264,   214,   203,     0,   202, 
          0,   212,   210,     0,   211,     0,   213,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   206, 
        190,   208,   200,     0,     0,   264,   264,     0,     0,   201, 
          0,   217,     0,   209,   207,   218,   219,   191,   192,   193, 
        194,   196,     0,   200,   204,   205,   200,   188,   189,   195, 
        198,   197,   199,   202,   215,     0,   264,   264,     0,     0, 
        200,   200,     0,   200,     0,   200,   255,   255,     0,     0, 
        255,   255,   255,   255,   255,   216,   255,     0,     0,     0, 
          0,     0,     0,   201,     0,   217,     0,   255,   255,   255, 
        255,   255,   255,     0,   220,   200,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   255,   255,     0,   265,   265,   200,     0,   265, 
        265,   265,   265,   265,     0,     0,   265,   265,     0,   265, 
        265,   265,   265,   265,   265,     0,   265,     0,     0,     0, 
          0,     0,     0,   255,   255,     0,     0,     0,     0,     0, 
          0,     0,     0,   209,   207,   218,   219,   191,   192,   193, 
        194,   196,     0,     0,   204,   205,     0,   188,   189,   195, 
        198,   197,   199,     0,   215,   214,   203,     0,     0,     0, 
        212,   210,     0,   211,     0,   213,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   206,   190, 
        208,   200,     0,     0,     0,     0,     0,   216,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   220,     0,   214,   203, 
          0,     0,   202,   212,   210,     0,   211,     0,   213,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   206,   190,   208,   200,     0,     0,     0,     0,     0, 
          0,   216,   201,     0,   217,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        220,     0,     0,     0,     0,   202,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   209,   207,   218,   219,   191, 
        192,   193,   194,   196,     0,     0,   204,   205,     0,   188, 
        189,   195,   198,   197,   199,   201,   215,   217,     0,     0, 
          0,     0,   264,   264,     0,     0,   264,   264,   264,   264, 
        264,     0,     0,   264,   264,     0,   264,   264,   264,   264, 
        264,   264,     0,   264,     0,     0,     0,     0,     0,   209, 
        207,   218,   219,   191,   192,   193,   194,   196,     0,     0, 
        204,   205,     0,   188,   189,   195,   198,   197,   199,   214, 
        215,     0,     0,     0,   212,   210,     0,   211,     0,   213, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   206,     0,   208,     0,   200,   200,   200,   200, 
        200,     0,     0,     0,     0,     0,   200,   200,   200,   200, 
        200,   200,     0,     0,     0,     0,     0,     0,     0,   255, 
        255,     0,     0,   255,   255,   255,   255,   255,     0,     0, 
        255,   255,     0,   255,   255,   255,   255,   255,   255,   256, 
        256,     0,     0,   256,   256,   256,   256,   256,     0,   256, 
        216,     0,     0,     0,     0,     0,     0,     0,   217,     0, 
        256,   256,   256,   256,   256,   256,     0,     0,     0,   220, 
          0,     0,     0,     0,     0,     0,   257,   257,     0,     0, 
        257,   257,   257,   257,   257,     0,   257,     0,     0,     0, 
          0,     0,     0,     0,     0,   256,   256,   257,   257,   257, 
        257,   257,   257,   216,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   220,     0,     0,     0,   256,   256,     0,     0, 
          0,     0,   257,   257,     0,     0,     0,     0,   209,   207, 
        218,   219,   191,   192,   193,   194,   196,     0,     0,   204, 
        205,     0,     0,   189,   195,   198,   197,   199,     0,   215, 
          0,     0,   253,   257,   257,   253,     0,   253,   253,   253, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   253,   253,   253,   253,   253,   253,     0,     0, 
          0,   209,   207,   218,   219,   191,   192,   193,   194,   196, 
          0,     0,   204,   205,     0,     0,     0,   195,   198,   197, 
        199,     0,   215,     0,     0,     0,   254,   253,   253,   254, 
          0,   254,   254,   254,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   254,   254,   254,   254, 
        254,   254,     0,     0,   216,     0,     0,     0,   253,   253, 
          0,     0,     0,   245,     0,     0,   245,     0,     0,   245, 
          0,     0,     0,   220,     0,     0,     0,     0,     0,     0, 
          0,   254,   254,   245,   245,     0,   245,   261,   245,     0, 
        261,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        247,     0,     0,   247,   261,   261,   247,   261,     0,   261, 
          0,     0,   254,   254,     0,     0,     0,     0,   245,   245, 
        247,   247,     0,   247,     0,   247,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   261, 
        261,     0,   209,   207,   218,   219,     0,     0,     0,   245, 
        245,     0,     0,   204,   205,   247,   247,     0,     0,   246, 
          0,     0,   246,   215,     0,   246,     0,     0,     0,     0, 
        261,   261,     0,     0,     0,     0,     0,     0,     0,   246, 
        246,     0,   246,     0,   246,   248,   247,   247,   248,     0, 
          0,   248,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   248,   248,     0,   248,     0, 
        248,     0,   256,   256,   246,   246,   256,   256,   256,   256, 
        256,     0,     0,   256,   256,     0,   256,   256,   256,   256, 
        256,   256,     0,     0,     0,     0,     0,     0,     0,     0, 
        248,   248,     0,     0,     0,   246,   246,     0,     0,   257, 
        257,     0,     0,   257,   257,   257,   257,   257,     0,     0, 
        257,   257,     0,   257,   257,   257,   257,   257,   257,     0, 
        263,   248,   248,   263,     0,     0,   263,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        263,   263,     0,   263,     0,   263,     0,     0,     0,   244, 
          0,     0,   244,     0,     0,   244,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   244, 
        244,     0,   244,     0,   244,   263,   263,     0,     0,     0, 
          0,     0,     0,     0,   253,   253,     0,     0,   253,   253, 
        253,   253,   253,     0,     0,   253,   253,     0,   253,   253, 
        253,   253,   253,   253,   244,   244,   263,   263,     0,   262, 
          0,     0,   262,     0,     0,   262,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   262, 
        262,     0,   262,     0,   262,   244,   244,     0,   254,   254, 
          0,     0,   254,   254,   254,   254,   254,     0,     0,   254, 
        254,     0,   254,   254,   254,   254,   254,   254,     0,     0, 
          0,     0,     0,     0,   262,   262,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   245, 
        245,   245,   245,   245,     0,     0,   245,   245,     0,   245, 
        245,   245,   245,   245,   245,   262,   262,     0,     0,     0, 
        261,   261,   261,   261,   261,     0,     0,     0,     0,     0, 
        261,   261,   261,   261,   261,   261,   247,   247,   247,   247, 
        247,     0,     0,   247,   247,     0,   247,   247,   247,   247, 
        247,   247,     0,     0,     0,     0,   243,     0,     0,   243, 
          0,     0,   243,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   243,   243,     0,   243, 
          0,   243,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   246,   246,   246,   246,   246, 
          0,     0,   246,   246,     0,   246,   246,   246,   246,   246, 
        246,   243,   243,     0,     0,     0,     0,     0,     0,     0, 
          0,   248,   248,   248,   248,   248,     0,     0,   248,   248, 
          0,   248,   248,   248,   248,   248,   248,     0,   260,     0, 
          0,   260,   243,   243,   260,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   260,   260, 
          0,   260,     0,   260,     0,     0,     0,   249,     0,     0, 
        249,     0,     0,   249,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   249,   249,     0, 
        249,     0,   249,   260,   260,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   263,   263,   263,   263, 
        263,     0,     0,   263,   263,     0,   263,   263,   263,   263, 
        263,   263,   249,   249,   260,   260,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   244,   244,   244,   244,   244, 
          0,     0,   244,   244,     0,   244,   244,   244,   244,   244, 
        244,     0,     0,   249,   249,     0,   250,     0,     0,   250, 
          0,     0,   250,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   250,   250,     0,   250, 
          0,   250,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   262,   262,   262,   262,   262, 
          0,   259,   262,   262,   259,   262,   262,   262,   262,   262, 
        262,   250,   250,     0,     0,     0,     0,     0,   259,   259, 
          0,   259,     0,   259,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   129,     0,   139,     0,     0,     0, 
          0,   138,   250,   250,   127,     0,   128,   129,     0,   139, 
          0,     0,     0,   259,   138,     0,     0,   127,     0,   128, 
          0,   286,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   290,     0,     0,     0, 
          0,     0,     0,     0,   259,   259,     0,     0,     0,     0, 
          0,     0,    83,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    83,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   243,   243,   243,   243,   243,   130,     0,   243, 
        243,     0,   243,   243,   243,   243,   243,   243,     0,     0, 
        130,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   129,     0,   139,     0,     0,     0,     0,   138, 
          0,     0,   127,     0,   128,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   126,     0,     0, 
          0,   129,     0,   139,     0,     0,     0,     0,   138,     0, 
          0,   127,     0,   128,   260,   260,   260,   260,   260,     0, 
          0,     0,     0,     0,   260,   260,   260,   260,   260,   260, 
         83,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   249,   249,   249,   249,   249,     0,     0, 
          0,     0,     0,   249,   249,   249,   249,   249,   249,    83, 
          0,     0,     0,     0,     0,   130,     0,     0,     0,     0, 
          0,   172,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,     0,     0,     0,   172,    86,    87,    88,    89,    90, 
          0,   383,     0,     0,   130,     0,     0,    10,     0,     0, 
          0,   129,     0,   139,     0,     0,     0,     0,   138,     0, 
         10,   127,     0,   128,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,     0,     0,     0,     0,   282, 
          0,     0,   250,   250,   250,   250,   250,   134,     0,     0, 
          0,     0,   250,   250,   250,   250,   250,   250,     0,     0, 
          0,   137,     0,     0,     0,     0,     0,   133,     0,    83, 
          0,     0,     0,     0,   137,     0,     0,     0,     0,     0, 
        133,     0,     0,     0,   259,   259,   259,   259,   259,     0, 
          0,     0,     0,     0,   259,   259,   259,   259,   259,   259, 
          0,     0,     0,     0,   130,     0,     0,     0,     0,   135, 
        136,    87,    88,    89,    90,     0,     0,     0,   129,     0, 
        139,     0,   287,   131,   132,   138,     0,     0,   127,     0, 
        128,     0,     0,     0,   291,    10,   131,   132,   172,    86, 
         87,    88,    89,    90,     0,     0,   284,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   129,     0,   139,     0, 
          0,     0,   134,   138,    10,     0,   127,     0,   128,     0, 
          0,     0,     0,     0,     0,     0,    83,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   137, 
          0,   134,     0,     0,     0,   133,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   130,     0,     0,    83,     0,     0,     0,   137,     0, 
          0,     0,     0,     0,   133,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   172,    86, 
         87,    88,    89,    90,     0,     0,     0,     0,     0,   130, 
          0,   131,   132,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    10,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        131,   132,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   134,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   137,     0, 
          0,     0,     0,     0,   133,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   172,    86,    87,    88,    89, 
         90,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    10,     0,     0,     0,     0,     0,     0,     0,     0, 
        131,   132,     0,   172,    86,    87,    88,    89,    90,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   134,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    10, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   137,     0,     0,     0,     0, 
          0,   133,     0,     0,     0,     0,   134,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   137,     0,     0,     0,     0,     0,   133, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   131,   132,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   131,   132, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   120,   124,   154,    41,    46,    41,    46, 
        125,    44,    40,    91,    71,    37,   184,   126,   123,    60, 
         42,    46,    42,    84,   126,    47,    91,    91,    41,    34, 
         35,    44,    91,    91,    59,    40,   420,    98,   125,   100, 
        125,   125,    40,   260,   228,    58,    59,   303,   105,   106, 
         91,   304,   169,    44,    91,    59,    61,    62,    63,   120, 
         46,    63,    37,    38,    69,    70,    71,    42,    43,   286, 
         45,   260,    47,    91,    46,    58,    37,   168,    41,    84, 
         93,    42,    43,   251,    45,    60,    47,    62,   260,    91, 
        258,    41,    97,    98,    44,   100,    59,    59,   260,    59, 
        105,   106,    93,    44,   126,    59,   255,    63,   169,    59, 
        126,   300,   125,   497,   260,   120,    37,    38,   179,    94, 
        304,    42,    43,    37,    45,   123,    47,   260,    42,    43, 
         93,    45,    44,    47,   125,    91,    59,   283,   300,    60, 
        286,    62,    44,    93,    44,   260,    60,    59,    62,   124, 
         46,   126,    93,   286,   300,   216,   260,   162,   163,   103, 
        165,   123,   125,   123,   169,   126,    91,    44,   340,   123, 
        338,   286,    64,    94,   179,   364,   260,   326,   340,   328, 
         46,   186,   260,   127,   128,   129,   130,   131,   132,    41, 
        134,    93,    44,    93,   138,   260,   300,    59,    93,   348, 
        123,   260,   260,   312,    58,   126,   311,   340,   286,   393, 
        154,   216,   126,   125,   382,   220,    93,   332,   364,   260, 
        340,   286,   331,   125,    91,   125,    40,   286,   286,   331, 
        125,    91,   260,    93,   325,    59,   241,   181,   387,   183, 
        260,    93,   260,   392,   188,   189,   190,   191,   192,   193, 
        194,   195,   196,   197,   198,   199,   200,   201,   202,   203, 
        204,   205,   206,   207,   208,   209,   210,   211,   212,   213, 
        214,   215,   300,   217,   332,   340,   340,   260,   261,   320, 
        300,   340,   340,   374,   228,    59,   373,   374,   373,   374, 
        312,   332,   441,   402,   403,   257,   312,   257,   499,   340, 
        402,   403,   320,   257,   260,    59,   474,   534,   535,   331, 
         46,   255,   421,   426,   332,   331,   559,   560,   260,   261, 
         91,    33,   340,    35,    44,    61,   527,    44,    40,   334, 
        286,    43,    60,    45,   561,   260,   364,   312,   282,    59, 
        284,   584,   286,   287,   364,    62,   290,   291,    61,    37, 
         38,   312,   409,    39,    42,    43,   331,    45,   471,    47, 
        304,   286,   310,    49,    50,    51,    33,   516,    35,    41, 
        331,   410,    60,    40,    62,   410,    43,   410,    45,    91, 
        402,   403,   326,   420,   328,   410,   402,   403,   310,   333, 
         40,   312,   311,   260,    44,   339,   260,   123,   312,   421, 
         40,   414,   415,    44,   348,   410,    46,   332,    40,    59, 
        331,   528,   310,   125,   126,   420,   410,   331,    58,   286, 
        569,    62,   286,    58,    91,   400,   401,   402,   403,   364, 
        461,   462,   376,   300,   301,   302,   411,   412,   126,   344, 
        345,   402,   403,   387,    41,    37,   421,    44,   392,   393, 
         42,    43,   396,    45,    91,    47,   461,   462,   125,   126, 
        421,    58,    59,   123,   399,   332,    40,   528,   332,   500, 
         44,    46,    40,   123,   330,   125,   123,   421,    46,   400, 
        401,   402,   403,    58,   340,    44,   400,   401,   402,   403, 
        411,   412,   497,   373,   374,   500,    93,   441,   442,   504, 
        421,    41,    40,    58,    44,   449,   450,   421,    46,   280, 
        281,   282,   283,   284,   285,    33,   287,    35,    41,    93, 
        123,    44,    40,   528,   585,    43,    41,    45,   125,    44, 
         41,   410,   303,    44,   126,   479,    59,    41,    91,    41, 
         44,   227,    44,    41,   605,    44,    44,   491,   260,   261, 
        262,   263,   264,   265,    93,    41,    58,    59,    44,    33, 
         44,    35,    93,   334,    13,    14,    40,    61,   260,    43, 
         93,    45,   516,    91,   286,   519,    41,   521,   105,   106, 
        585,    41,   517,   517,    44,   260,    41,   522,   522,    44, 
        123,    93,    40,   260,   261,   262,   263,   264,   265,    59, 
        605,   313,   125,    58,    59,   123,   125,   123,   126,   123, 
         44,   555,   257,   300,   301,   302,    58,    91,    40,   286, 
         97,    58,   260,   125,   312,   569,   260,   123,   340,   341, 
        342,   343,    40,    93,   346,    41,   571,   571,    93,   300, 
        301,   302,    40,   331,    40,   125,   313,   591,   360,   361, 
        362,   363,   126,   365,   366,   590,   590,    93,   370,   371, 
        372,   373,   374,    40,    61,   125,   601,   601,    40,    61, 
        125,    91,   123,   340,   341,   342,   343,    41,   125,   346, 
         49,    50,    51,    41,   125,   125,   163,    91,   165,   340, 
        402,   403,    40,   360,   361,   362,   363,    40,   365,   366, 
         40,    40,   179,   370,    59,   372,   373,   374,    41,   186, 
         59,    44,   400,   401,   402,   403,    40,   340,   430,    40, 
        125,   125,    59,   411,   412,    58,    59,   280,   281,   282, 
        283,   284,   285,   421,   287,   402,   403,    41,   260,    41, 
         59,    61,   260,   261,   262,   263,   264,   265,    37,    38, 
        303,    40,    41,    42,    43,    44,    45,   361,    47,   340, 
         93,    61,    59,   430,   241,    46,    41,    44,   286,    58, 
         59,    60,    61,    62,    63,    37,    38,    93,    40,    41, 
         42,    43,    44,    45,   125,    47,   260,   261,   262,   263, 
        264,   265,   125,   123,    59,   313,    58,    59,   125,    61, 
         62,    63,    91,    40,    93,    94,    44,    91,   364,   123, 
        260,   321,   286,    41,   340,    41,   340,   414,   415,    41, 
        123,   371,   340,   341,   342,   343,   125,   125,   346,    91, 
         59,    93,    94,   125,   123,   124,   125,   126,    40,   313, 
         91,   123,   360,   361,   362,   363,    59,   365,   366,   125, 
         91,   125,   370,    58,   372,    41,   125,   334,    41,   123, 
        123,   123,   124,   125,   126,   125,   340,   341,   342,   343, 
        123,    41,   346,    93,   257,   125,   280,   281,   282,   283, 
        284,   285,    58,   287,   402,   403,   360,   361,   362,   363, 
        125,   365,   366,    91,    91,    91,   370,   257,   372,   303, 
         93,    37,    38,    91,   125,    41,    42,    43,    44,    45, 
        125,    47,   430,   123,    59,    59,   125,    41,    41,    59, 
         44,    41,    58,    59,    60,    61,    62,    63,   402,   403, 
        334,    41,   364,    41,    58,    59,    41,     7,   125,     6, 
         37,    38,    77,   125,    41,    42,    43,    44,    45,    46, 
         47,   102,   504,   324,   462,    91,   430,    93,    94,   414, 
        415,    58,    59,    60,    61,    62,    63,   468,   257,    93, 
         60,   260,    59,   220,   480,   109,   260,   261,   262,   263, 
        264,   265,    41,   492,   577,    44,   230,   541,   124,   125, 
        126,   329,   541,   226,    91,   257,    93,    94,   260,    58, 
         59,   125,   286,   334,   179,   179,   165,    31,    -1,   260, 
        261,   262,   263,   264,   265,    41,   300,    -1,    44,   260, 
         -1,   310,   311,   312,    -1,    -1,    -1,   124,   125,   126, 
         -1,   320,    58,    59,    93,   286,    -1,    -1,    -1,    -1, 
         -1,   330,   331,   332,    -1,   286,    -1,    -1,   310,   311, 
        312,   340,    -1,    -1,    -1,    -1,    -1,    -1,   320,   300, 
        301,   302,   346,    -1,    -1,    -1,   125,    93,   330,   331, 
        332,    -1,   260,   261,   262,   263,   264,   265,   340,    37, 
         38,   414,   415,    41,    42,    43,    44,    45,    46,    47, 
         -1,   332,    -1,    -1,    -1,   346,    -1,    -1,    -1,   125, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    91,    -1,    93,    94,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   126,    -1, 
         -1,    -1,    -1,    -1,    41,    -1,   312,    44,    91,   280, 
        281,   282,   283,   284,   285,    -1,   287,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    -1,   331,    -1,    -1,    -1,    37, 
         38,    -1,   303,    41,    42,    43,    44,    45,    46,    47, 
         -1,    -1,   125,    -1,    -1,   312,    91,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    91,    -1,    93,    94,    -1,   125,    58, 
         59,    60,    61,    62,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,   410,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   124,   125,   126,    -1, 
        414,   415,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   124,   125,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    41,    37,    38,    44,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    91,    -1,    -1,    -1, 
         -1,    58,    59,    -1,   312,   414,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   280,   281,   282, 
        283,   284,   285,   331,   287,    -1,    -1,    37,    38,    -1, 
        125,    41,    42,    43,    44,    45,    93,    47,   414,   415, 
        303,    93,    94,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,   280,   281,   282,   283,   284, 
        285,    -1,   287,    -1,    -1,    -1,    -1,    -1,   125,    -1, 
         -1,   334,   124,   125,   126,   300,   301,   302,    -1,   304, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   124,   125,   126,    -1,    -1,    -1, 
         -1,    -1,    41,    -1,   312,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,   331,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    44,    45,    -1,    47,    -1,    41, 
         -1,    -1,    44,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    93,    -1,    58,    59,    -1,    -1, 
         -1,   330,   331,    -1,    -1,   280,   281,   282,   283,   284, 
        285,   340,   287,    -1,    -1,    -1,    -1,   414,   415,    -1, 
         -1,    91,    -1,    93,    94,    -1,   125,    -1,   303,    -1, 
         -1,    93,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   124,    91,   126,    -1,    -1,   334, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    44,    45, 
         46,    47,    -1,    91,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,   312,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    41,    -1,    41,    44, 
         -1,    44,    -1,    -1,    -1,    91,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    58,    59,    58,    59,    93,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   414,   415,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   124,   421, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,   125, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        125,   421,   125,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,   312,    47,   280,   281,   282,   283,   284,   285, 
         -1,   287,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,   331,    -1,    -1,   300,   301,   302,   303,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,   280,   281,   282,   283,   284,   285,   286,   287, 
         -1,    -1,    -1,    -1,    -1,   414,   415,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,   303,    93,    94,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        410,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   414,   415,   332,    -1,    -1,   124,   125,    91, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    58,    59,    60, 
         61,    62,    63,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   124,   125,   414,   415, 
         37,    38,    93,    94,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,   414, 
        415,   414,   415,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,   312,    93,    94,   280,   281, 
        282,   283,   284,   285,    -1,   287,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   300,   301, 
        302,   303,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   312,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    94,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   124,   421,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,   312,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   421,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,   383,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,   436,    -1, 
         -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,   507, 
        331,    -1,    -1,    -1,    37,    38,    -1,   515,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,   526,    -1, 
        312,    -1,    -1,    -1,    -1,    94,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   557, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   586,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   124,    -1,   126,    -1,    -1,   604,    -1,    -1,    -1, 
         -1,   609,    -1,    -1,    -1,    -1,   614,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    94,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,    -1,   312,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   124,   421,   126, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         37,    38,   312,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,   331,    59,    60,    61,    62,    63,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,   124,    -1,   126, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    37,    38,    -1,   312,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,   331,    60,    61,    62,    63,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    37,    38,    -1,    94, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,    -1,    93,    94,    -1,    -1,   124, 
         -1,   126,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    41,   411,   412,    44,   414,   415,   416, 
        417,   418,   419,    94,   421,    -1,   124,   125,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,   312,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,    -1,   126,    -1,    58,    59,    60, 
         61,    62,    63,    -1,   331,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,   400,   401,   125,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37,    38, 
         -1,    -1,    94,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   421,   126,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    37, 
        421,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    -1,    62,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    58,    59,    60, 
         61,    62,    63,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,    -1,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    38,   124,   125,    41,    -1,    43,    44,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,    -1,    -1,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    38,    93,    94,    41, 
         -1,    43,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,   312,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    58,    59,    -1,    61,    41,    63,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,    58,    59,    44,    61,    -1,    63, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    93,    94, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,   400,   401,   402,   403,    -1,    -1,    -1,   124, 
        125,    -1,    -1,   411,   412,    93,    94,    -1,    -1,    38, 
         -1,    -1,    41,   421,    -1,    44,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    38,   124,   125,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,   400,   401,    93,    94,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,   124,   125,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         38,   124,   125,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    93,    94,   124,   125,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,   124,   125,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   125,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,    -1, 
        414,   415,   416,   417,   418,   419,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    38,    -1, 
         -1,    41,   124,   125,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    93,    94,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,   124,   125,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    41,   411,   412,    44,   414,   415,   416,   417,   418, 
        419,    93,    94,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1, 
         -1,    40,   124,   125,    43,    -1,    45,    33,    -1,    35, 
         -1,    -1,    -1,    93,    40,    -1,    -1,    43,    -1,    45, 
         -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,   126,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1, 
         -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
         91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,    -1,   414,   415,   416,   417,   418,   419,    91, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,   123,    -1,    -1,   126,    -1,    -1,   286,    -1,    -1, 
         -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
        286,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    61, 
         -1,    -1,   404,   405,   406,   407,   408,   313,    -1,    -1, 
         -1,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    91, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    33,    -1, 
         35,    -1,   401,   402,   403,    40,    -1,    -1,    43,    -1, 
         45,    -1,    -1,    -1,   400,   286,   402,   403,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    61,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    35,    -1, 
         -1,    -1,   313,    40,   286,    -1,    43,    -1,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,   313,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,    -1,    91,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', NULL, NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 196 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 196 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 207 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 208 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 212 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 215 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 218 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 221 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 234 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 239 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 246 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 255 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 255 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 264 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 264 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 275 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 276 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 317 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 320 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 320 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 330 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 337 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 344 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 350 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 351 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 372 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 383 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 383 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 394 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 394 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 419 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 419 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 432 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 433 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 442 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 445 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 456 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 461 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 466 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 473 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 474 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 484 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 493 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 499 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 500 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 501 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 99:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 100:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 101:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 108:  #line 552 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 110:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 111:  #line 558 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 112:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 113:  #line 562 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 114:  #line 565 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 115:  #line 565 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 117:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 118:  #line 580 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 119:  #line 580 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 121:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 122:  #line 589 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 123:  #line 589 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 124:  #line 593 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 125:  #line 593 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 126:  #line 597 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 128:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 130:  #line 599 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 131:  #line 599 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 132:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 133:  #line 602 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 135:  #line 610 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 137:  #line 617 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 138:  #line 618 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 139:  #line 622 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 140:  #line 625 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 141:  #line 632 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 142:  #line 633 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 143:  #line 637 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 144:  #line 643 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 145:  #line 644 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 148:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 149:  #line 654 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 150:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 151:  #line 658 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 152:  #line 662 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 153:  #line 662 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 154:  #line 668 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 155:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 156:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 157:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 158:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 160:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 161:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 162:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 163:  #line 689 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 164:  #line 689 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 165:  #line 703 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 166:  #line 704 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 167:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 169:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 170:  #line 713 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 171:  #line 721 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 173:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 174:  #line 727 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 175:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 177:  #line 736 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 178:  #line 742 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 755 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 181:  #line 758 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 182:  #line 761 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 183:  #line 764 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 184:  #line 770 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 185:  #line 770 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 186:  #line 776 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 187:  #line 782 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 188:  #line 782 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 189:  #line 791 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 190:  #line 791 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 191:  #line 801 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 192:  #line 801 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 193:  #line 810 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 194:  #line 813 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 195:  #line 816 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 196:  #line 819 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 197:  #line 822 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 198:  #line 825 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 199:  #line 828 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 200:  #line 832 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 201:  #line 838 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 202:  #line 844 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 203:  #line 850 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 204:  #line 855 "src/main/jay/grammars/xp.jay"
    { $yyVals[-5+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-3+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 205:  #line 855 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-7+$yyTop];
      }
    } break;

    case 206:  #line 861 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 207:  #line 872 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array(new ReturnNode($yyVals[0+$yyTop]));
    } break;

    case 208:  #line 875 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= (array)$yyVals[-1+$yyTop];
    } break;

    case 209:  #line 881 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 211:  #line 886 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 212:  #line 887 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 213:  #line 891 "src/main/jay/grammars/xp.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 214:  #line 892 "src/main/jay/grammars/xp.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 215:  #line 896 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 216:  #line 902 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 217:  #line 902 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 219:  #line 904 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 220:  #line 905 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 221:  #line 906 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 222:  #line 907 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 223:  #line 911 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 224:  #line 914 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 227:  #line 925 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 228:  #line 926 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 229:  #line 930 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 231:  #line 935 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 232:  #line 936 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 233:  #line 940 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 234:  #line 941 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 235:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 236:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 237:  #line 944 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 238:  #line 945 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 239:  #line 946 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 240:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 949 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 950 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 244:  #line 951 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 245:  #line 955 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 956 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 252:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 253:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 969 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 260:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 263:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 264:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 982 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 271:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 272:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 273:  #line 996 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 275:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 276:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 278:  #line 1006 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 279:  #line 1009 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 280:  #line 1012 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 281:  #line 1012 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 282:  #line 1015 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, $yyVals[-1+$yyTop])); } break;

    case 283:  #line 1015 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 284:  #line 1021 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 285:  #line 1022 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 292:  #line 1040 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 293:  #line 1041 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 294:  #line 1045 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 295:  #line 1049 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 296:  #line 1053 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 297:  #line 1054 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 299:  #line 1059 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 300:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 301:  #line 1064 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 302:  #line 1070 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 303:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 304:  #line 1075 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 305:  #line 1076 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 306:  #line 1080 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 307:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 308:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 309:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 310:  #line 1084 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 311:  #line 1085 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 312:  #line 1086 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 313:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 2860 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
