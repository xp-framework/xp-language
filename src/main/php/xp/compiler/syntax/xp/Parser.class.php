<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
#line 76 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,   112,    31,    99,    99,   103,   103,   113,   113,   114, 
        114,    36,   116,    36,    36,    36,    36,    36,    36,   115, 
        115,    97,    97,   117,   117,   119,   119,   118,   118,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   108,   108,   108,   108,   108,   108,   108,   108,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   110,   110,   110,   110,   110,   110,   111,   111,   101, 
        101,   120,   120,   122,   121,   121,   124,   121,   125,   121, 
        123,   123,    10,    10,    10,    32,    32,    32,    32,    12, 
         12,    95,    96,   127,   127,   128,   128,   129,   129,   129, 
        126,   126,    21,    21,    49,    49,   130,   130,   131,   131, 
        131,   131,   131,   131,   131,   131, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     3,     1,     1,     1,     1,     1,     5,     3,     3, 
          3,     0,     7,     2,     4,     0,     1,     1,     3,     1, 
          3,     1,     0,     4,     1,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     3,     0,     1,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     2,     0,     6,     0,     4, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          4,     3,     4,     1,     3,     1,     3,     0,     1,     3, 
          5,     5,     1,     3,     0,     1,     1,     2,     1,     1, 
          1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   293,     0,     0,   295,   294,     0,    15,     0,   319, 
        321,   320,   323,   325,   324,   326,   322,     1,     0,    68, 
          0,   317,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   318,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   223,     0,     0,   229,   225,   228,   226,   227, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,     0,   296,     0,   297,   298,   299,     0,   304, 
         27,     0,     0,     0,    31,    35,     0,     0,   232,     0, 
          0,     0,     0,     0,     0,   192,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   230,     0,   231,   203,   204, 
        205,   206,   207,     0,     0,   234,     0,     0,    79,    80, 
         83,    84,     0,    78,     0,     0,     0,     0,     0,     0, 
          0,   301,    29,    35,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   198,     0,   196,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   218,     0,   194,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   278,   279,     0,   284,   292,   291, 
        289,   191,   281,     0,     0,     0,   224,     0,     0,   307, 
          0,     0,     0,     0,   302,   305,     0,   314,     0,     0, 
         25,     0,    34,    36,    37,     0,     0,     0,    42,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   186, 
        188,     0,     0,   100,     0,     0,     0,   220,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   211,     0,   202,     0,     0, 
        283,     0,   175,     0,     0,   237,   235,    82,   303,     0, 
          0,     0,    21,     0,     0,     0,     0,     0,     0,     0, 
         23,     0,    35,     0,     0,   193,     0,     0,     0,     0, 
          0,   189,     0,   221,   190,   219,     0,     0,   184,   181, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        287,   311,   312,   113,     0,   131,   117,   121,   123,   119, 
        127,   129,   115,   125,     0,     0,     0,     0,   111,     0, 
         63,     0,     0,     0,     0,     0,     0,    35,    45,     0, 
         43,     0,     0,     0,     0,     0,     0,     0,   212,     0, 
        195,     0,   285,   290,     0,     0,   133,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    38,   137, 
        112,     0,     0,    61,    59,   103,   104,   105,   106,   107, 
        108,     0,     0,     0,     0,     0,     0,     0,   179,   180, 
        197,   215,     0,     0,     0,     0,     0,     0,     0,   138, 
          0,     0,     0,     0,   155,     0,     0,   128,   130,     0, 
          0,     0,     0,   142,   222,     0,     0,    93,     0,     0, 
          0,     0,     0,    65,     0,    48,     0,     0,    53,    33, 
          0,   178,   213,   182,   288,   114,     0,     0,     0,     0, 
        132,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    50,     0,    98,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    52,    55,     0,    49,    54,    47, 
          0,     0,   139,     0,     0,     0,   156,     0,     0,     0, 
          0,     0,     0,   143,     0,     0,     0,     0,    94,    96, 
         95,     0,     0,     0,     0,     0,   164,   170,   134,     0, 
        161,   162,     0,     0,   122,     0,   146,     0,     0,     0, 
          0,    97,   102,     0,    85,     0,    64,     0,     0,     0, 
         56,     0,     0,   160,   169,   163,   135,     0,     0,     0, 
        158,   116,   151,   153,     0,     0,   149,   136,     0,     0, 
         62,    60,     0,     0,     0,     0,   124,   120,     0,     0, 
          0,   126,   150,    87,    86,    66,   166,     0,     0,     0, 
        159,     0,     0,     0,     0,   171,   118,     0,   154,   167, 
          0,   152,     0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   143,     4,     7,     8,    17,    53,    18, 
        262,   114,    61,    99,   123,   176,    63,   267,    62,   101, 
        125,   409,   263,   264,   265,   396,   268,   269,   349,   350, 
        397,   198,   364,   407,   498,   145,   488,   499,   531,   493, 
        558,   587,   492,   489,   443,   452,   534,    41,    30,    42, 
         58,    94,    95,    96,   146,   490,   491,   398,   399,   304, 
        426,   436,   476,   602,   430,   433,   517,   431,   432,   437, 
        605,   434,   435,   429,   467,   569,   469,   483,   470,   484, 
        606,   607,   620,   621,   619,   570,   594,   571,   572,   592, 
        628,   593,   147,   273,   116,   117,   148,   371,   280,   191, 
        242,   192,   200,   186,   290,   277,   149,   150,   151,   152, 
        153,   463,   201,   202,   154,   103,   155,   156,   337,   243, 
        244,   329,   245,   425,   330,   118,   119,   120,   169,    31, 
         32, 
    );
    protected static $yySindex = array(         -283,
          0,     0,  -231,  -146,   375,  1112,  -231,     0,    36,    41, 
         86,     0,  -169,  -169,     0,     0,   124,     0,   110,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   277,     0, 
       1036,     0,     0,  -146,  -146,     0,   -30,   166,   -24,    85, 
        177,     0,     0,     0,     0,     0,     0,     0,   -24,   -24, 
        -24,     0,   172,     0,   186,   216,     0,   246,   110,  1036, 
       -146,  -146,  -146,   273,     0,   307,   324,     0,  -146,  -146, 
        320,     0,     0,   347,   168,   182,   168,     0,     0,     0, 
          0,     0,     0,  -146,   433,     0,     0,     0,     0,     0, 
        407,   103,     0,   490,    54,     0,   419,  -146,   211,  -146, 
        437,   211,  5183,   496,   878,   878,  -192,     0,  -161,     0, 
        232,   507,   527,     0,   495,     0,     0,     0,   292,     0, 
          0,  -146,   465,   551,     0,     0,   474,  5586,     0,  5586, 
       5586,  5586,  5586,  5586,  5586,     0,  5586,   481,   541,     0, 
       5597,   477,   197,  3834,   -35,     0,   567,     0,     0,     0, 
          0,     0,     0,   520,   575,     0,  5586,    36,     0,     0, 
          0,     0,   560,     0,  -146,   -17,   365,   495,   -22,   539, 
        419,     0,     0,     0,  -146,  1461,   374,   414,  2849,    17, 
         17,   -51,    17,    17,    17,   -17,     0,  5586,     0,  5586, 
        384,   -35,   507,     0,  5282,   -45,  2946,    96,   302,   618, 
        608,     0,    64,     0,  5586,  5586,  5586,  5586,  5586,  5586, 
       5586,  5586,  5586,  5586,  5586,  5586,  5586,  5586,  5586,  5586, 
       5393,  5433,  5022,  5586,  5151,  5586,  5586,  5586,  5586,  5586, 
       5586,  5586,  -146,  5586,     0,     0,   -17,     0,     0,     0, 
          0,     0,     0,   -35,  -169,  5586,     0,  -207,   635,     0, 
        333,   -17,   -17,   -17,     0,     0,  1702,     0,   554,   418, 
          0,    -7,     0,     0,     0,     0,   555,   317,     0,  5586, 
        644,   495,   -35,   566,   568,  3834,  5586,  3834,  5465,     0, 
          0,    96,   -35,     0,   629,   384,    64,     0,   384,   158, 
       3869,  3966,  3966,  3966,  3966,  3966,  3966,  3966,  3966,  3966, 
       3966,  3966,  3834,   642,   296,   104,  1517,  5586,    63,  5586, 
         63,  5586,  5586,   138,   138,  5586,  5586,   138,   138,   116, 
        116,   149,   149,   149,   -51,     0,    17,     0,  5586,  5586, 
          0,   661,     0,   646,   541,     0,     0,     0,     0,   -14, 
        495,    44,     0,   692,   450,   416,   452,   112,   593,   682, 
          0,   374,     0,    74,  5586,     0,  5586,    -9,   685,   692, 
       3834,     0,  5586,     0,     0,     0,   605,   691,     0,     0, 
        -35,  5586,  3966,  3966,   138,   138,   138,   138,   641,   697, 
          0,     0,     0,     0,    10,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   700,   616,  3004,   692,     0,   695, 
          0,   706,   712,   980,   652,   629,   630,     0,     0,  5586, 
          0,   816,   716,   639,   640,   -35,   647,  3834,     0,  5586, 
          0,    74,     0,     0,  5586,  5586,     0,   436,  5586,   737, 
        739,   569,   744,   726,   727,   748,   749,   451,     0,     0, 
          0,   583,    87,     0,     0,     0,     0,     0,     0,     0, 
          0,   752,    87,   734,   537,  2406,  3121,   593,     0,     0, 
          0,     0,   -35,   757,   759,   742,   692,   741,   390,     0, 
       3242,  5586,  5586,   692,     0,   442,   464,     0,     0,  5586, 
       5586,   745,   429,     0,     0,   753,   435,     0,   766,   770, 
         37,    -5,    -5,     0,   722,     0,    33,   -54,     0,     0, 
        593,     0,     0,     0,     0,     0,   694,  5586,   436,   693, 
          0,   758,  3277,   696,   780,   781,   472,  3393,  3420,  5586, 
        451,   714,     0,   579,     0,   519,    87,   512,   629,    87, 
        812,   770,   813,    87,     0,     0,   692,     0,     0,     0, 
         43,  3834,     0,   692,  5586,   569,     0,  5586,   516,  5586, 
        569,   735,  3834,     0,   692,   629,  -146,    73,     0,     0, 
          0,   770,   519,   519,   818,   750,     0,     0,     0,    43, 
          0,     0,   755,   801,     0,  3538,     0,  3573,   502,   127, 
        765,     0,     0,  5586,     0,   692,     0,    73,    73,   519, 
          0,   834,   754,     0,     0,     0,     0,  5586,   840,   569, 
          0,     0,     0,     0,   775,   127,     0,     0,  3693,   776, 
          0,     0,    73,  -146,   692,   861,     0,     0,   569,  5586, 
        845,     0,     0,     0,     0,     0,     0,  -114,   779,   569, 
          0,  3721,   692,  -146,   864,     0,     0,   692,     0,     0, 
        794,     0,   692,   795,     0, 
    );
    protected static $yyRindex= array(         1162,
          0,     0,  1344,     0,     0,   337,  1599,     0,   825,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        315,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -40,   427,     0,     0,   276,     0,   549, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   948,   -86,   798,   -86,     0,     0,     0, 
          0,     0,     0,     0,   -28,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   800,     0, 
          0,   800,   831,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -16,     0,   353,     0,     0,     0,     0,     0, 
          0,     0,     0,   278,     0,     0,     0,  2706,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  2187,  2073,  1067, 
        865,     0,     0,   674,  1772,     0,     4,     0,     0,     0, 
          0,     0,     0,     0,   -42,     0,   884,   -32,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   -10,     0,     0, 
          0,     0,     0,     0,     0,    -1,   803,  1125,  1130,  2225, 
       2263,  2795,  2300,  2371,  2408,     0,     0,     0,     0,     0, 
          0,  1772,  5557,  1800,    11,   -19,     0,  1664,     0,     0, 
        -20,     0,   669,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   875,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  1965,     0,   903,     0,    35,     0,     0, 
          0,     0,     0,     0,     0,     0,    -1,     0,   611,     0, 
          0,     0,     0,     0,     0,   443,     0,   815,     0,     0, 
        846,     0,  1772,   847,   851,    59,   884,    76,     0,     0, 
          0,   -18,  1772,     0,    20,     0,     0,     0,     0,     0, 
        670,   -12,   305,   665,   701,   703,   764,   783,   923,   943, 
        956,  1204,   135,     0,  2669,  1635,  4888,     0,  4936,     0, 
       4977,     0,     0,  2975,  4354,     0,     0,  4428,  4466,  4255, 
       4297,  4025,  4132,  4170,  2822,     0,  2523,     0,   853,   884, 
          0,  1366,     0,     0,     0,     0,     0,     0,     0,     0, 
         -3,     0,     0,   836,     0,    97,     0,     0,   413,     0, 
          0,     0,     0,  2892,   884,     0,   838,     0,     0,   836, 
        820,     0,     0,     0,     0,     0,     0,  1547,     0,     0, 
       1772,     0,  1456,  1458,  4554,  4681,  4763,  4851,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -111,     0,     0, 
          0,     0,   842,     0,     0,   900,     0,     0,     0,     0, 
          0,    82,     0,     0,     0,  1772,     0,   164,     0,   884, 
          0,  4735,     0,     0,   884,   907,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   927,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    -1,     0,  1249,     0,     0, 
          0,     0,  1772,     0,     0,     0,   836,   470,     0,     0, 
          0,   911,     0,   836,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   340,     0,     0,   932, 
          0,   933,   933,     0,     0,     0,     0,     0,     0,     0, 
        413,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   612,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   300,     0,     0,   340,     0, 
          0,   934,     0,   927,     0,     0,   836,     0,     0,     0, 
          0,   488,     0,   836,   911,     0,     0,     0,     0,     0, 
          0,     0,   517,     0,   836,   340,     0,     0,     0,     0, 
          0,   936,   300,   300,     0,     0,     0,     0,     0,   283, 
          0,     0,     0,     0,     0,     0,     0,     0,   408,   854, 
          0,     0,     0,     0,     0,   836,     0,     0,     0,   300, 
          0,     0,     0,     0,     0,     0,     0,   884,     0,     0, 
          0,     0,     0,     0,     0,   855,     0,     0,     0,     0, 
          0,     0,     0,     0,   836,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -108,     0,     0,     0,     0,  -108,     0,     0, 
          0,     0,   836,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   976,   536,   613,    39, 
        988,   -60,     0,   921,   901,  -126,     0,     0,     0,     0, 
       -115,  -304,     0,     0,     0,    50,     0,   656,     0,     0, 
         83,  1739,  -337,     0,     0,   -63,  -383,   506,   525,     0, 
          8,  -379,     0,   478,     0,     0,     0,     0,   953,   960, 
          0,   487,     0,   915,  -153,    -2,   -65,     0,   904,  -139, 
          0,     0,   136,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   511,   505, 
          0,   423,     0,     0,     0,     0,     0,   460,   461,     0, 
          0,     0,     0,     0,   857,   858,   679,     0,   287,     0, 
        -27,     0,   843,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   760,     0,     0,     0,   797,     0,   806, 
          0,     0,     0,     0,     0,     0,     0,   880,     0,     0, 
       1025, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   249,   241,    16,   173,    93,   222,   634, 
        240,   222,   222,   110,    97,    50,   109,    52,    13,     1, 
        217,   253,   113,   104,   300,   309,   382,   308,   210,    47, 
         48,   210,   113,   309,   113,    57,    26,   121,   315,   124, 
        310,    93,    93,   300,   173,   210,   210,   257,   129,   428, 
        233,   216,   334,   335,   308,   238,    74,    74,    74,   258, 
         57,   124,   173,    57,    81,    82,    92,   161,   454,   495, 
        538,   300,     5,   112,   234,   199,   170,    54,   236,    74, 
        210,    34,   233,   112,   383,   112,    35,    65,    54,    54, 
         12,   536,    74,    74,   110,    74,   173,   109,   163,   231, 
         92,    92,   238,   113,   229,   227,   333,   228,    74,   230, 
        231,   220,   210,     9,   124,   229,   227,    74,   228,   239, 
        230,   315,   223,   359,   225,   271,   113,   236,   173,   199, 
         15,   585,   427,   223,   170,   225,   196,   199,    91,    10, 
        231,   220,   234,   559,    36,   229,   227,   162,   228,   525, 
        230,   238,   231,   502,   112,   537,    17,   229,   284,   236, 
        250,    74,   230,   223,   281,   225,    74,   219,   239,    39, 
         74,   328,   326,    40,   231,   177,   380,   112,   177,   229, 
        227,    74,   228,   238,   230,   144,   170,    17,   234,   379, 
        196,   561,   177,   177,    16,   586,   540,   218,    74,   234, 
        239,   413,   170,   414,    58,   497,    39,    58,   611,   612, 
        179,    51,   180,   181,   182,   183,   184,   185,   582,   187, 
         59,   199,    58,   197,    26,   635,   412,   177,    74,   234, 
         68,    34,    74,   626,   254,    12,   217,   300,   309,   144, 
        308,   234,     9,    69,   210,   356,   309,    74,    74,    74, 
        334,   335,   346,   310,     9,   362,    58,    74,   315,   177, 
        233,   110,   110,   234,   109,   109,   464,   308,    10,    60, 
        276,   465,   278,    70,   234,    15,    57,   197,    10,   237, 
         10,   456,    74,   332,   315,    71,   466,   291,   292,   293, 
        294,   295,   296,   297,   298,   299,   300,   301,   302,   303, 
        305,   306,   307,   309,   311,   314,   315,   318,   319,   320, 
        321,   322,   323,   324,   325,   168,   327,   168,   512,    71, 
        300,    99,   168,     9,   347,   168,   530,   168,   303,   584, 
        315,    78,   231,   220,   487,   171,   313,   229,   227,    16, 
        228,   315,   230,   421,    55,   240,     9,   237,   240,    10, 
        235,   236,   354,   172,   316,   223,    17,   225,   101,   144, 
        352,   361,   240,   240,   204,    79,   528,   315,    71,    16, 
         10,   403,    10,   168,   233,   353,   529,    17,   486,    49, 
         57,    17,    80,    57,   239,   233,   567,   568,   461,   219, 
        373,   574,   374,   237,   375,   376,   306,   240,   377,   378, 
        313,   210,   210,   288,   237,   316,    97,   168,   168,   417, 
         83,   303,   144,   315,   306,   233,    17,   368,   235,   236, 
         58,   234,   101,   170,    56,   339,   487,   233,    17,   240, 
        510,   404,    57,   509,   237,   503,    17,   144,    74,   144, 
        157,   583,   157,   405,   616,   418,   237,   157,    74,   233, 
        157,   406,   157,   189,   422,   401,    32,   369,   113,    34, 
        233,    34,   226,   224,   235,   236,    17,   106,   237,   522, 
         17,    32,   521,   226,   224,   235,   236,    98,    34,   237, 
        524,   111,    46,   232,   221,   222,    44,    74,    74,   532, 
        532,   100,   457,   105,   232,   363,   124,   370,   157,   603, 
        604,    44,   144,   226,   224,   235,   236,   144,   303,   112, 
        140,   471,   107,   140,   221,   222,   507,   235,   236,    17, 
        189,   122,    74,   514,   232,    74,    34,   562,   141,    74, 
        108,   141,   157,   157,   313,   157,   232,    32,   188,   235, 
        236,   165,   168,   168,   168,   168,   168,   168,    37,    38, 
        235,   236,    74,   627,   144,   513,   101,   144,   232,   126, 
        144,   240,   518,   519,   166,    44,   113,    44,   168,   232, 
        588,   589,   365,   640,   316,   367,    43,    44,    45,    85, 
         86,    87,    88,    89,    90,   170,   566,   174,   315,   167, 
        542,   159,   160,   573,   175,   168,   177,   613,   190,   203, 
        316,   132,   553,   142,   581,    10,   204,   233,   141,    74, 
        246,   130,   247,   131,   316,   316,   316,   112,   248,    91, 
        105,   252,   168,   168,   168,   168,   237,   144,   168,    74, 
        576,   255,   578,   266,    12,   610,   315,   315,   315,   315, 
        279,   285,   168,   168,   168,   168,   316,   168,   168,   168, 
        323,   287,   168,   168,   168,   168,   168,    13,   286,    83, 
         14,    64,    66,    67,   629,    84,   609,   157,   157,   157, 
        157,   157,   157,    83,    15,   338,   344,   345,     9,   351, 
        144,   575,   639,   355,   168,   168,   579,   642,   357,   363, 
        358,   474,   644,   157,   133,   226,   224,   235,   236,   372, 
        381,   323,   632,   188,    10,   241,   221,   222,   241,   400, 
        209,   402,   168,   209,   174,   408,   232,   174,   240,   240, 
        157,   410,   241,   241,   132,   416,   142,   209,   209,   419, 
        420,   141,   174,   423,   130,   618,   131,   424,    16,   438, 
        439,   242,   453,   243,   242,   444,   243,   157,   157,   157, 
        157,   445,   455,   157,   631,   442,   458,   241,   242,   242, 
        243,   243,   209,   459,   460,   637,   174,   157,   157,   157, 
        157,   462,   157,   157,   157,   468,   472,   157,   473,   157, 
        157,   157,    83,   477,   478,   479,     9,   480,   481,   241, 
        482,   494,   496,   242,   209,   243,   497,   504,   174,   505, 
        506,   508,   515,   516,   244,   520,   526,   244,   315,   157, 
        157,   523,    10,   527,   535,   544,   545,   133,   541,   548, 
        547,   244,   244,   246,   549,   242,   246,   243,   178,    86, 
         87,    88,    89,    90,   315,   550,   555,   157,   556,   557, 
        246,   246,   485,    86,    87,    88,    89,    90,   315,   315, 
        315,   560,   563,   564,    10,   577,   244,   580,   590,   598, 
        214,    17,    17,   214,    17,    17,    17,    17,    17,    17, 
        323,    17,   601,   614,   591,   246,   615,   214,   214,   597, 
        315,   137,    17,    17,    17,    17,    17,    17,   244,   608, 
        323,   323,   323,   323,   323,   323,   323,   323,   617,   622, 
        625,   630,   633,   636,   641,   216,    19,   246,   140,   384, 
        385,   386,   214,   323,   136,    17,   643,    17,    17,   645, 
         30,   241,    28,   172,   172,   216,   209,    41,   387,   388, 
        389,   390,   176,   391,   392,   128,   296,   297,   393,    40, 
        394,   298,   323,   176,   214,   176,   176,    17,    17,    17, 
         17,   178,    86,    87,    88,    89,    90,   242,    57,   243, 
        109,   176,   172,   245,    51,   176,   245,    91,    83,   172, 
        134,   135,    92,    88,    90,   145,    89,    10,   147,   148, 
        245,   245,    33,   247,   300,   300,   247,   300,   300,   300, 
        300,   300,   300,    29,   300,   176,   248,   102,   395,   248, 
        247,   247,   127,   539,   137,   300,   300,   411,   300,   300, 
        300,   565,    73,   248,   248,   245,   450,   533,    72,   543, 
        244,   448,   446,   164,   447,   554,   449,   176,   623,   595, 
        596,   140,   384,   385,   386,   247,   415,   136,   300,   246, 
        300,   300,   274,   275,   336,   289,   366,   245,   248,   331, 
        256,   387,   388,   389,   390,    46,   391,   392,   128,     0, 
          0,   393,     0,   394,     0,     0,     0,   247,     0,     0, 
        300,   300,   300,   300,     0,     0,   214,     0,   241,   241, 
        248,    17,     0,   209,    17,     0,     0,     0,     0,     0, 
          0,     0,     0,   134,   135,    20,    21,    22,   259,    24, 
         25,     0,    26,   187,   187,   451,   187,   187,   187,   187, 
        187,   187,   187,   187,   242,   242,   243,   243,    27,     0, 
          0,   395,     0,     0,   187,   187,   187,   187,   187,   187, 
          0,     0,     0,     0,    17,    17,    17,   158,    86,    87, 
         88,    89,    90,     0,    17,     0,     0,     0,     0,   260, 
          0,     0,     0,     0,    17,    17,    17,   187,     0,   187, 
        187,   222,   222,    10,    17,   222,   222,   222,    17,   222, 
        200,   222,     0,   200,     0,     0,     0,   244,   244,   245, 
          0,     0,   222,   222,    17,   222,   222,    17,   200,     0, 
        187,   187,   187,     0,     0,     0,   246,   246,     0,   247, 
          0,     0,    19,     0,   300,     0,     0,   300,     0,     0, 
          0,     0,   248,     0,     0,    17,     0,   222,   222,     0, 
          0,     0,   200,    84,    17,    17,    17,    17,    17,    17, 
         17,    17,    17,     0,    17,    17,    17,     0,    17,    17, 
         17,    17,    17,    17,   249,    17,     0,   249,   222,   222, 
        222,     0,     2,     0,   200,     0,     0,   300,   300,   300, 
          0,   249,   249,     0,     0,     0,     0,   300,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   300,   300,   300, 
          0,     0,     0,     0,     0,    32,    32,   300,    32,    32, 
         32,    32,    32,    32,    32,    32,   249,     0,     0,     0, 
          0,   441,     0,     0,     0,     0,    32,    32,    32,    32, 
         32,    32,     0,     0,     0,    20,    21,    22,    23,    24, 
         25,     0,    26,   185,     0,     0,     0,     0,   249,     0, 
          0,     0,     0,     0,     0,   475,   245,   245,    27,    32, 
          0,    32,    32,     0,     0,     0,     0,   300,   300,   300, 
        300,   300,   300,   300,   300,   300,   247,   247,   300,   300, 
          0,   300,   300,   300,   300,   300,   300,     0,   300,   248, 
        248,     0,    32,    32,    32,     0,     0,     0,   187,     0, 
          0,    17,     0,     0,     0,     0,   200,     0,     0,     0, 
          0,    20,    21,    22,    23,    24,    25,   187,    26,     0, 
          0,     0,   286,   286,     0,     0,   286,   286,   286,   286, 
        286,   286,   286,     0,    27,     0,     0,     0,     0,     0, 
          0,     0,     0,   286,   286,   286,   286,   286,   286,     0, 
          0,     0,     0,     0,     5,     0,   222,     0,     0,     0, 
          0,     2,     2,     2,     2,     2,     2,     0,     2,   475, 
          0,     0,     0,     0,   475,   222,   286,     0,   286,   286, 
        249,     2,     2,     2,    17,     2,   187,   187,   187,   187, 
        187,   187,   187,   187,   187,     0,     0,   187,   187,     0, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,   286, 
        286,   286,     0,     0,     0,     0,   258,     0,   259,   258, 
          0,   259,     0,   475,     0,    32,     0,     0,     0,     0, 
          0,     0,     0,   258,   258,   259,   259,     0,     0,     0, 
          0,     0,   475,     0,   222,   222,   222,   222,   222,   222, 
        222,   222,   222,   475,    17,   222,   222,     0,   222,   222, 
        222,   222,   222,   222,   222,   222,     0,     0,   258,     0, 
        259,    19,     0,   231,     0,     0,     0,     0,   229,   227, 
         32,   228,     0,   230,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   223,     0,   225,    32, 
        258,     0,   259,   183,   183,   261,     0,   183,   183,   183, 
        183,   183,   183,   183,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   183,   183,   183,   183,   183,   183, 
          0,     0,     0,     0,     0,     0,     0,   249,   249,     0, 
          0,     0,   286,     5,     5,     5,     5,     5,     5,     0, 
          5,     0,     0,     0,     0,     0,     0,   183,     0,   183, 
        183,     0,   234,     5,     5,     5,     5,     0,    32,    32, 
         32,    32,    32,    32,    32,    32,    32,     0,     0,    32, 
         32,     0,    32,    32,    32,    32,    32,    32,    32,    32, 
        183,   183,   183,     0,     0,   268,     0,   286,   268,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     6, 
          0,     0,   268,   268,     0,   268,   286,   268,     0,     0, 
         99,    99,     0,     0,    99,    99,    99,    99,    99,     0, 
         99,     0,   258,     0,   259,     0,     0,     0,     0,     0, 
          0,    99,    99,    99,    99,    99,     0,   268,   268,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         20,    21,    22,   259,    24,    25,     0,    26,     0,     0, 
          0,     0,     0,     0,     0,     0,    99,    99,   268,   268, 
          0,     0,     0,    27,     0,   286,   286,   286,   286,   286, 
        286,   286,   286,   286,     0,     0,   286,   286,     0,   286, 
        286,   286,   286,   286,   286,   286,   286,    99,    99,    99, 
          0,     0,    19,     0,   260,     0,     0,     0,     0,     0, 
          0,     0,     0,   183,     0,     0,     0,     0,   280,   280, 
          0,     0,   280,   280,   280,   280,   280,     0,   280,     0, 
          0,     0,     0,     0,     0,     0,   343,     0,   233,   280, 
        280,   280,   280,   280,   280,   115,   187,   187,     0,   187, 
        187,   187,   187,   220,   187,   187,   187,   237,     0,     0, 
          0,   168,     0,     0,     0,     0,     0,     0,   183,   187, 
        187,   187,   187,     0,   280,   280,     0,     0,     0,   258, 
        258,   259,   259,     0,     0,     0,     0,   183,     6,     6, 
          6,     6,     6,     6,     0,     6,     0,     0,     0,     0, 
        187,   268,     0,   187,     0,   280,   280,   280,     6,     6, 
          6,     6,     0,     0,   251,     0,     0,     0,     0,   115, 
          0,     0,     0,     0,     0,     0,   226,   224,   235,   236, 
         99,     0,     0,   187,   272,   187,     0,   221,   222,     0, 
          0,     0,     0,   282,     0,     0,     0,   232,     0,     0, 
          0,     0,     0,     0,     0,     0,   183,   183,   183,   183, 
        183,   183,   183,   183,   183,     0,     0,   183,   183,     0, 
        183,   183,   183,   183,   183,   183,   183,   183,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,     0,     0,     0, 
          0,    20,    21,    22,   259,    24,    25,     0,    26,     0, 
        340,   341,   342,    99,    99,     0,     0,     0,     0,     0, 
        348,   282,   282,    99,    27,   282,   282,   282,   282,   282, 
          0,   282,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   282,   282,   282,   282,   282,   282,   280,     0, 
          0,     0,     0,     0,     0,   260,     0,     0,   268,   268, 
        268,   268,   268,     0,     0,     0,     0,     0,   268,   268, 
        268,   268,   268,   268,     0,     0,   185,   282,   282,     0, 
          0,     0,     0,    99,    99,    99,    99,    99,    99,    99, 
         99,    99,     0,     0,    99,    99,     0,    99,    99,    99, 
         99,    99,    99,   280,    99,     0,     0,     0,   282,   282, 
        282,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   280,     0,     0,     0,     0,     0,     0,   229, 
        229,   187,   229,     0,   229,   229,   229,   229,   229,   229, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        187,     0,   229,   229,   229,   229,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   229,     0,   229,   229,     0,     0,     0, 
          0,   280,   280,   280,   280,   280,   280,   280,   280,   280, 
          0,     0,   280,   280,     0,   280,   280,   280,   280,   280, 
        280,     0,   280,     0,     0,     0,   229,     0,   229,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,     0, 
        187,   187,     0,   187,   187,   187,   187,   187,   187,   187, 
        187,   282,     0,   222,   222,     0,     0,     0,   222,   222, 
        222,   222,     0,   222,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   222,   222,   222,   222, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   274,   274,     0,     0,   274,   274,   274,   274,   274, 
          0,   274,     0,     0,     0,     0,   282,   222,     0,   222, 
        222,     0,   274,   274,   274,   274,   274,   274,     0,     0, 
          0,     0,     0,     0,     0,   282,     0,     0,     0,   275, 
        275,     0,     0,   275,   275,   275,   275,   275,     0,   275, 
        222,     0,   222,     0,     0,     0,     0,   274,   274,     0, 
        275,   275,   275,   275,   275,   275,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   273,   273,     0,     0, 
        273,   273,   273,   273,   273,     0,   273,     0,   274,   274, 
          0,     0,     0,     0,     0,   275,   275,   273,   273,   273, 
        273,   273,   273,     0,   282,   282,   282,   282,   282,   282, 
        282,   282,   282,     0,     0,   282,   282,     0,   282,   282, 
        282,   282,   282,   282,   229,   282,   275,   275,     0,     0, 
          0,     0,   273,   273,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   229,     0,     0,     0,   276,   276,     0, 
          0,   276,   276,   276,   276,   276,     0,   276,     0,     0, 
          0,     0,     0,   273,   273,     0,     0,     0,   276,   276, 
        276,   276,   276,   276,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   277,   277,     0,     0,   277,   277, 
        277,   277,   277,     0,   277,     0,     0,     0,     0,     0, 
          0,     0,     0,   276,   276,   277,   277,   277,   277,   277, 
        277,     0,   229,   229,   229,   229,   229,   229,   229,   229, 
        229,   274,     0,   229,   229,     0,   229,   229,   229,   229, 
        229,   229,   229,   229,   276,   276,    19,     0,   222,     0, 
        277,   277,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   222,     0,   275, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        500,   277,   277,     0,     0,     0,   274,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   273,     0,     0,   265, 
        265,     0,     0,   265,   265,   265,   265,   265,     0,   265, 
          0,     0,     0,     0,   275,     0,     0,     0,     0,     0, 
        265,   265,   265,   265,   265,   265,   222,   222,   222,   222, 
        222,   222,   222,   222,   222,     0,    17,   222,   222,     0, 
        222,   222,   222,   222,   222,   222,   222,   222,     0,     0, 
          0,   273,     0,     0,     0,   265,   265,     0,     0,     0, 
          0,     0,     0,     0,   274,   274,     0,   276,   274,   274, 
        274,   274,   274,     0,     0,   274,   274,     0,   274,   274, 
        274,   274,   274,   274,     0,   274,   265,   265,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   275,   275,   277,     0,   275,   275,   275,   275, 
        275,     0,     0,   275,   275,     0,   275,   275,   275,   275, 
        275,   275,   276,   275,     0,    20,    21,    22,   259,    24, 
         25,     0,    26,     0,     0,     0,     0,     0,     0,   273, 
        273,     0,     0,   273,   273,   273,   273,   273,    27,   266, 
        273,   273,   266,   273,   273,   273,   273,   273,   273,   277, 
        273,     0,     0,     0,     0,     0,   266,   266,     0,   266, 
          0,   266,     0,     0,     0,     0,     0,     0,     0,   260, 
          0,     0,   199,   199,     0,     0,   199,   199,     0,   199, 
          0,     0,   199,     0,     0,     0,     0,     0,     0,     0, 
          0,   266,     0,   199,   199,   199,   199,   199,   199,     0, 
        276,   276,     0,     0,   276,   276,   276,   276,   276,   265, 
          0,   276,   276,     0,   276,   276,   276,   276,   276,   276, 
          0,   276,   266,   266,     0,     0,     0,     0,   199,   199, 
          0,     0,     0,     0,     0,     0,     0,   277,   277,     0, 
          0,   277,   277,   277,   277,   277,     0,     0,   277,   277, 
          0,   277,   277,   277,   277,   277,   277,     0,   277,   199, 
        199,   272,   272,     0,   265,   272,   272,   272,   272,   272, 
          0,   272,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   272,   272,   272,   272,   272,   272,   271,   271, 
          0,     0,   271,   271,   271,   271,   271,     0,   271,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   271, 
        271,   271,   271,   271,   271,   231,   220,   272,   272,     0, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   270,     0,   223,   207, 
        225,   217,     0,     0,   271,   271,     0,     0,   272,   272, 
          0,     0,   265,   265,     0,   266,   265,   265,   265,   265, 
        265,     0,   201,   265,   265,   201,   265,   265,   265,   265, 
        265,   265,   219,   265,     0,   271,   271,     0,     0,   201, 
        201,     0,   201,     0,   201,     0,     0,     0,     0,     0, 
          0,     0,   199,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   218,     0,   234,     0,     0,     0,     0,     0, 
          0,     0,   231,   220,   201,     0,   283,   229,   227,     0, 
        228,     0,   230,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   223,   207,   225,   217,     0, 
          0,     0,   252,     0,     0,   252,   201,   199,   252,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   252,   252,     0,   252,   199,   252,     0,   219, 
        231,   220,     0,     0,     0,   229,   227,     0,   228,     0, 
        230,   272,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   440,   223,   207,   225,   217,   252,   252,   218, 
          0,   234,   266,   266,   266,   266,   266,     0,   271,     0, 
          0,     0,   266,   266,   266,   266,   266,   266,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   219,   252,   252, 
          0,     0,     0,     0,     0,   199,   199,     0,     0,   199, 
        199,   199,   199,   199,     0,     0,   199,   199,     0,   199, 
        199,   199,   199,   199,   199,     0,   199,   218,     0,   234, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   201,     0, 
          0,     0,     0,     0,     0,     0,     0,   231,   220,     0, 
        233,   501,   229,   227,     0,   228,     0,   230,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   237, 
        223,   207,   225,   217,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   272,   272,     0,     0,   272,   272, 
        272,   272,   272,     0,     0,   272,   272,     0,   272,   272, 
        272,   272,   272,   272,   219,   272,     0,     0,     0,     0, 
          0,   271,   271,     0,     0,   271,   271,   271,   271,   271, 
          0,   252,   271,   271,     0,   271,   271,   271,   271,   271, 
        271,     0,   271,     0,   218,     0,   234,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,   233,     0,   221, 
        222,     0,   205,   206,   212,   215,   214,   216,     0,   232, 
          0,     0,     0,     0,     0,     0,   237,     0,   231,   220, 
          0,     0,     0,   229,   227,     0,   228,     0,   230,     0, 
          0,     0,     0,     0,     0,   201,   201,   201,   201,   201, 
        511,   223,   207,   225,   217,   201,   201,   201,   201,   201, 
        201,     0,     0,   231,   220,   233,     0,   546,   229,   227, 
          0,   228,     0,   230,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   237,   219,   223,   207,   225,   217, 
          0,     0,     0,     0,     0,   226,   224,   235,   236,   208, 
        209,   210,   211,   213,     0,     0,   221,   222,     0,   205, 
        206,   212,   215,   214,   216,   218,   232,   234,     0,     0, 
        219,     0,     0,     0,     0,     0,     0,     0,   252,   252, 
        252,   252,   252,     0,     0,   252,   252,     0,   252,   252, 
        252,   252,   252,   252,     0,     0,     0,     0,     0,     0, 
        218,     0,   234,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,     0,     0,   221,   222,     0,   205,   206,   212, 
        215,   214,   216,     0,   232,     0,     0,     0,     0,   231, 
        220,     0,   233,   551,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   237,   223,   207,   225,   217,   231,   220,     0,     0, 
        552,   229,   227,     0,   228,     0,   230,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   223, 
        207,   225,   217,     0,     0,     0,   219,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   219,     0,     0,   218,     0,   234,     0, 
        226,   224,   235,   236,   208,   209,   210,   211,   213,     0, 
          0,   221,   222,     0,   205,   206,   212,   215,   214,   216, 
          0,   232,     0,   218,     0,   234,     0,     0,     0,     0, 
          0,     0,     0,   233,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   237,     0,   231,   220,     0,     0,   599,   229, 
        227,     0,   228,     0,   230,     0,     0,     0,   233,     0, 
          0,     0,     0,     0,     0,     0,     0,   223,   207,   225, 
        217,     0,     0,     0,     0,     0,     0,   237,     0,   231, 
        220,     0,     0,   600,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   219,   223,   207,   225,   217,     0,     0,     0,     0, 
          0,   226,   224,   235,   236,   208,   209,   210,   211,   213, 
          0,     0,   221,   222,     0,   205,   206,   212,   215,   214, 
        216,   218,   232,   234,     0,     0,   219,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   226,   224,   235,   236, 
        208,   209,   210,   211,   213,     0,     0,   221,   222,     0, 
        205,   206,   212,   215,   214,   216,   218,   232,   234,     0, 
          0,     0,     0,     0,   233,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   237,     0,     0,     0,     0,     0,   231, 
        220,   233,     0,     0,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        237,   624,   223,   207,   225,   217,     0,   231,   220,     0, 
          0,     0,   229,   227,     0,   228,     0,   230,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   638,     0, 
        223,   207,   225,   217,     0,     0,   219,     0,     0,     0, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,     0,   232,   219,     0,   218,     0,   234,   226, 
        224,   235,   236,   208,   209,   210,   211,   213,     0,     0, 
        221,   222,     0,   205,   206,   212,   215,   214,   216,     0, 
        232,     0,     0,     0,   218,     0,   234,     0,     0,   233, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   237,     0, 
        231,   220,     0,     0,     0,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,   233,     0,     0,     0,     0,     0, 
          0,     0,     0,   223,   207,   225,   217,     0,     0,     0, 
          0,     0,     0,   237,     0,   231,   220,     0,     0,     0, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   219,   223,   207, 
        225,   217,     0,     0,     0,     0,     0,   226,   224,   235, 
        236,   208,   209,   210,   211,   213,     0,     0,   221,   222, 
          0,   205,   206,   212,   215,   214,   216,   218,   232,   234, 
          0,     0,   219,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,   218,   232,   234,     0,     0,     0,     0,     0, 
          0,     0,   231,   220,   233,     0,     0,   229,   227,     0, 
        228,     0,   230,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   237,     0,   223,   207,   225,   217,     0, 
          0,     0,   233,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   237,     0,     0,     0,     0,     0,     0,     0,   219, 
          0,   262,   262,     0,     0,   262,   262,   262,   262,   262, 
          0,   262,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   262,   262,   262,   262,   262,   262,     0,   218, 
          0,   234,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,     0,   232,     0,     0,     0,   262,   262,     0, 
        226,   224,   235,   236,   208,   209,   210,   211,   213,     0, 
          0,   221,   222,     0,   205,   206,   212,   215,   214,   216, 
          0,   232,     0,     0,     0,   233,     0,     0,   262,   262, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   237,     0,     0,     0,   263,   263, 
          0,     0,   263,   263,   263,   263,   263,     0,   263,     0, 
        233,     0,     0,     0,     0,     0,     0,     0,     0,   263, 
        263,   263,   263,   263,   263,     0,     0,     0,     0,   237, 
          0,     0,     0,     0,     0,     0,   264,   264,     0,     0, 
        264,   264,   264,   264,   264,     0,   264,     0,     0,     0, 
          0,     0,     0,     0,   263,   263,     0,   264,   264,   264, 
        264,   264,   264,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,     0,     0,   221,   222,     0,   205,   206,   212, 
        215,   214,   216,     0,   232,   263,   263,     0,     0,     0, 
          0,     0,   264,   264,     0,     0,     0,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,   233,     0,   221, 
        222,   262,     0,   206,   212,   215,   214,   216,     0,   232, 
          0,     0,   260,   264,   264,   260,   237,   260,   260,   260, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   260,   260,   260,   260,   260,   260,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   261,     0,     0,   261,     0,   261, 
        261,   261,     0,     0,     0,     0,     0,   260,   260,     0, 
          0,     0,     0,     0,   261,   261,   261,   261,   261,   261, 
          0,     0,     0,     0,     0,   226,   224,   235,   236,   208, 
        209,   210,   211,   213,     0,     0,   221,   222,   260,   260, 
          0,   212,   215,   214,   216,     0,   232,     0,   263,   261, 
        261,   254,     0,     0,   254,     0,     0,   254,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   254,   254,     0,   254,     0,   254,     0,     0,     0, 
        261,   261,     0,     0,   262,   262,   264,     0,   262,   262, 
        262,   262,   262,     0,     0,   262,   262,     0,   262,   262, 
        262,   262,   262,   262,     0,     0,   254,   254,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   253,     0,     0,   253,     0, 
          0,   253,     0,     0,     0,     0,     0,   254,   254,     0, 
          0,     0,     0,     0,     0,   253,   253,     0,   253,     0, 
        253,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   255,     0,     0,   255,     0,     0,   255, 
          0,   260,     0,     0,     0,     0,     0,     0,     0,     0, 
        253,   253,     0,   255,   255,     0,   255,     0,   255,     0, 
          0,   263,   263,     0,     0,   263,   263,   263,   263,   263, 
          0,     0,   263,   263,     0,   263,   263,   263,   263,   263, 
        263,   253,   253,   261,     0,     0,     0,     0,   255,   255, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   264, 
        264,     0,     0,   264,   264,   264,   264,   264,     0,     0, 
        264,   264,     0,   264,   264,   264,   264,   264,   264,   255, 
        255,   270,     0,     0,   270,     0,     0,   270,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        254,   270,   270,     0,   270,     0,   270,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   270,   270,     0,     0, 
          0,     0,     0,     0,   260,   260,     0,     0,   260,   260, 
        260,   260,   260,     0,     0,   260,   260,     0,   260,   260, 
        260,   260,   260,   260,     0,     0,     0,   270,   270,     0, 
          0,     0,     0,     0,   253,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   261,   261,     0,     0, 
        261,   261,   261,   261,   261,     0,     0,   261,   261,     0, 
        261,   261,   261,   261,   261,   261,     0,     0,   251,     0, 
          0,   251,   255,     0,   251,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   251,   251, 
          0,   251,     0,   251,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   254,   254,   254, 
        254,   254,     0,     0,   254,   254,     0,   254,   254,   254, 
        254,   254,   254,   251,   251,   208,     0,     0,   208,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   208,   208,     0,   208,     0,   208,     0,     0, 
        269,     0,     0,   269,   251,   251,   269,     0,     0,     0, 
        270,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        269,   269,     0,   269,     0,   269,     0,   208,     0,     0, 
          0,   253,   253,   253,   253,   253,     0,     0,   253,   253, 
          0,   253,   253,   253,   253,   253,   253,     0,     0,     0, 
          0,     0,     0,     0,     0,   269,   269,     0,     0,   208, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   255, 
        255,   255,   255,   255,     0,     0,   255,   255,     0,   255, 
        255,   255,   255,   255,   255,     0,   269,   269,   250,     0, 
          0,   250,     0,     0,   250,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   250,   250, 
          0,   250,     0,   250,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   267,     0,     0,   267,     0, 
          0,   267,     0,     0,     0,     0,     0,   251,     0,     0, 
          0,     0,     0,   250,   250,   267,   267,     0,   267,     0, 
        267,     0,     0,     0,     0,     0,     0,   270,   270,   270, 
        270,   270,     0,     0,   270,   270,     0,   270,   270,   270, 
        270,   270,   270,   256,   250,   250,   256,     0,     0,   256, 
        267,   267,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   208,     0,   256,   256,     0,   256,     0,   256,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   267,   267,     0,   257,     0,     0,   257,     0,   269, 
        257,     0,     0,     0,     0,     0,     0,     0,   256,   256, 
          0,     0,     0,     0,   257,   257,     0,   257,     0,   257, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   132,     0,   142,     0,     0,   256, 
        256,   141,     0,     0,   130,     0,   131,     0,     0,   257, 
        257,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   312,     0,     0,   251,   251,   251,   251,   251,     0, 
          0,   251,   251,     0,   251,   251,   251,   251,   251,   251, 
        257,   257,     0,     0,     0,     0,     0,   250,     0,     0, 
          0,     0,    83,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   208,   208, 
        208,   208,   208,     0,   267,     0,     0,   133,   208,   208, 
        208,   208,   208,   208,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   269,   269,   269,   269, 
        269,     0,     0,   269,   269,     0,   269,   269,   269,   269, 
        269,   269,     0,   132,     0,   142,     0,     0,     0,     0, 
        141,     0,   256,   130,     0,   131,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   316,     0,     0,   132,     0,   142,     0,     0, 
          0,     0,   141,     0,     0,   130,     0,   131,     0,     0, 
          0,     0,     0,   257,     0,     0,     0,     0,     0,     0, 
        129,    83,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   250,   250,   250,   250,   250,     0, 
          0,   250,   250,     0,   250,   250,   250,   250,   250,   250, 
          0,     0,     0,    83,     0,     0,   133,     0,     0,     0, 
          0,   178,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,   267,   267,   267,   267,   267,     0,     0,     0,     0, 
          0,   267,   267,   267,   267,   267,   267,    10,   133,     0, 
          0,     0,     0,     0,   132,     0,   142,     0,     0,     0, 
          0,   195,     0,     0,   130,     0,   131,     0,     0,     0, 
          0,     0,     0,     0,   137,     0,     0,     0,     0,   256, 
        256,   256,   256,   256,   167,     0,     0,     0,     0,   256, 
        256,   256,   256,   256,   256,     0,     0,     0,     0,     0, 
          0,   140,     0,     0,     0,     0,     0,   136,     0,     0, 
          0,     0,   193,     0,     0,     0,     0,     0,     0,     0, 
        257,   257,   257,   257,   257,     0,     0,     0,   128,     0, 
        257,   257,   257,   257,   257,   257,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   133,     0,     0, 
        178,    86,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,     0,   313,   134,   135,   132,     0,   142,     0,     0, 
          0,     0,   141,     0,     0,   130,    10,   131,     0,     0, 
          0,     0,   138,   139,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,   308,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   137,     0,   132,     0,   142,    10,     0, 
          0,     0,   141,     0,     0,   130,     0,   131,     0,     0, 
          0,     0,     0,    83,     0,     0,     0,     0,     0,     0, 
        140,     0,     0,   310,     0,   137,   136,   132,     0,   142, 
          0,     0,     0,     0,   141,     0,     0,   130,     0,   131, 
          0,     0,     0,     0,     0,     0,     0,   128,   133,     0, 
          0,     0,   140,    83,     0,     0,     0,     0,   136,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   178,    86,    87,    88,    89,    90,     0,     0,   128, 
        317,     0,   134,   135,     0,    83,     0,     0,   133,     0, 
          0,     0,     0,     0,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,   135,     0,   360,     0,   223, 
        133,   223,     0,     0,   137,     0,   223,     0,     0,   223, 
          0,   223,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   132,     0, 
        142,   194,     0,     0,     0,   141,     0,   136,   130,   132, 
        131,   142,     0,     0,     0,     0,   195,     0,     0,   130, 
          0,   131,     0,     0,     0,     0,     0,   223,   128,   223, 
          0,     0,   178,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    83,     0,    10,     0, 
          0,     0,   223,   134,   135,     0,     0,   193,     0,     0, 
          0,     0,   178,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,     0,   137,     0,     0,     0,     0, 
          0,   133,     0,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,   133,     0,   178,    86,    87,    88,    89,    90, 
          0,     0,   140,     0,     0,     0,     0,     0,   136,     0, 
          0,     0,     0,     0,     0,   137,     0,     0,     0,     0, 
         10,     0,     0,     0,     0,     0,     0,     0,     0,   128, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   140,     0,     0,     0,     0,   137,   136,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,   135,     0,     0,     0,   128, 
          0,     0,     0,     0,   140,     0,     0,     0,     0,     0, 
        136,     0,     0,     0,     0,     0,   223,   223,   223,   223, 
        223,   223,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   128,     0,     0,   134,   135,     0,     0,     0,     0, 
          0,     0,   223,     0,     0,   178,    86,    87,    88,    89, 
         90,     0,     0,     0,     0,     0,   178,    86,    87,    88, 
         89,    90,     0,     0,     0,     0,   134,   135,     0,   223, 
          0,    10,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    10,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   223,     0,   137,     0, 
          0,     0,   223,     0,     0,     0,     0,     0,     0,   137, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   223,     0,   140,     0,     0,     0,     0, 
          0,   136,     0,     0,     0,     0,   194,     0,     0,     0, 
          0,     0,   136,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   128,     0,     0,     0,     0,     0,   223,   223, 
          0,     0,     0,   128,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   134,   135,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   134,   135, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   157,    40,    46,   122,    71,    41,   124, 
         46,    44,    41,   125,    60,    46,   125,    42,    59,   303, 
         41,    44,    40,    84,    44,    44,    41,    44,    41,    34, 
         35,    44,    40,    44,    40,    40,   123,    98,    40,   100, 
         44,   105,   106,    63,    41,    58,    59,   174,    58,    40, 
         93,    41,   260,   261,    44,    91,    61,    62,    63,   175, 
         41,   122,    59,    44,    69,    70,    71,   260,   406,   453, 
        125,    91,   304,    91,   126,   141,    91,    39,    44,    84, 
         93,    46,   125,    91,    41,    91,    46,    49,    50,    51, 
        260,    59,    97,    98,    41,   100,    93,    44,   260,    37, 
        105,   106,    44,    40,    42,    43,   246,    45,   113,    47, 
         37,    38,   125,   260,   175,    42,    43,   122,    45,    44, 
         47,    40,    60,   277,    62,   186,    40,    93,   125,   195, 
        300,    59,   123,    60,    91,    62,   141,   203,   300,   286, 
         37,    38,   126,   527,    59,    42,    43,   340,    45,   487, 
         47,    93,    37,   458,    91,   123,    60,    42,    63,   125, 
        165,   166,    47,    60,   192,    62,   171,    94,    93,    46, 
        175,   237,   233,    64,    37,    41,   330,    91,    44,    42, 
         43,   186,    45,   125,    47,   103,    91,    91,   126,   329, 
        195,   529,    58,    59,   364,   123,   501,   124,   203,   126, 
        125,   355,    91,   357,    41,   260,   125,    44,   588,   589, 
        128,    46,   130,   131,   132,   133,   134,   135,   556,   137, 
         44,   287,    59,   141,   311,   340,   353,    93,   233,   126, 
         59,    46,   237,   613,   257,   260,   257,   257,   257,   157, 
        257,   126,   260,    58,   257,   273,   257,   252,   253,   254, 
        260,   261,   260,   257,   260,   283,    93,   262,   260,   125, 
        312,   373,   374,   126,   373,   374,   420,   257,   286,    93, 
        188,   425,   190,    58,   126,   300,   257,   195,   286,   331, 
        286,   408,   287,   245,   286,    40,   426,   205,   206,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   229,   230,   231,   232,    33,   234,    35,   472,    44, 
        340,   340,    40,   260,   332,    43,   332,    45,   246,   257, 
        332,    59,    37,    38,   340,    44,    59,    42,    43,   364, 
         45,   260,    47,   371,   260,    41,   260,   331,    44,   286, 
        402,   403,   270,    62,    40,    60,   260,    62,    59,   277, 
         44,   279,    58,    59,   410,    59,   330,   286,    93,   410, 
        286,   260,   286,    91,   312,    59,   340,   410,   442,   410, 
         41,   410,    59,    44,   420,   312,   344,   345,   416,    94, 
        308,   545,   310,   331,   312,   313,    44,    93,   316,   317, 
        123,   414,   415,   340,   331,    91,    60,   125,   126,   360, 
         91,   329,   330,   332,    62,   312,   320,   260,   402,   403, 
        257,   126,   123,    91,   340,    93,   340,   312,   332,   125, 
         41,   320,    93,    44,   331,   463,   340,   355,   443,   357, 
         33,   557,    35,   332,   598,   363,   331,    40,   453,   312, 
         43,   340,    45,    40,   372,    40,    44,   300,    40,    46, 
        312,    46,   400,   401,   402,   403,    40,    61,   331,    41, 
         44,    59,    44,   400,   401,   402,   403,   310,    46,   331, 
         46,    63,    40,   421,   411,   412,    44,   492,   493,   492, 
        493,   310,   410,    61,   421,    61,   557,   340,    91,   373, 
        374,    59,   420,   400,   401,   402,   403,   425,   426,    91, 
         41,   429,   410,    44,   411,   412,   467,   402,   403,    93, 
         40,   311,   527,   474,   421,   530,    46,   530,    41,   534, 
         41,    44,   125,   126,   257,    40,   421,   125,    58,   402, 
        403,   310,   260,   261,   262,   263,   264,   265,    13,    14, 
        402,   403,   557,   614,   472,   473,   257,    41,   421,   123, 
         44,   257,   480,   481,    58,   123,    40,   125,   286,   421, 
        563,   564,   286,   634,   260,   289,   300,   301,   302,   260, 
        261,   262,   263,   264,   265,    91,   537,   123,    40,    63, 
        508,   105,   106,   544,    44,   313,   123,   590,    58,   123, 
        286,    33,   520,    35,   555,   286,   410,   312,    40,   614, 
         44,    43,    93,    45,   300,   301,   302,    91,    44,   300, 
         61,   257,   340,   341,   342,   343,   331,   545,   346,   634, 
        548,    93,   550,   260,   260,   586,   300,   301,   302,    91, 
        257,   340,   360,   361,   362,   363,   332,   365,   366,   367, 
         40,    44,   370,   371,   372,   373,   374,   283,    41,    91, 
        286,    49,    50,    51,   615,   346,   584,   260,   261,   262, 
        263,   264,   265,    91,   300,    41,   123,   260,   260,   125, 
        598,   546,   633,    40,   402,   403,   551,   638,   123,    61, 
        123,   123,   643,   286,   126,   400,   401,   402,   403,    58, 
         40,    91,   620,    58,   286,    41,   411,   412,    44,   260, 
         41,   260,   430,    44,    41,   123,   421,    44,   414,   415, 
        313,    40,    58,    59,    33,    41,    35,    58,    59,   125, 
         40,    40,    59,    93,    43,   600,    45,    41,   364,    40, 
        125,    41,    91,    41,    44,    40,    44,   340,   341,   342, 
        343,    40,   123,   346,   619,    61,    41,    93,    58,    59, 
         58,    59,    93,   125,   125,   630,    93,   360,   361,   362, 
        363,   125,   365,   366,   367,   340,    40,   370,    40,   372, 
        373,   374,    91,    40,    59,    59,   260,    40,    40,   125, 
        340,    40,    59,    93,   125,    93,   260,    41,   125,    41, 
         59,    61,   361,   340,    41,    61,    41,    44,   260,   402, 
        403,    59,   286,    44,    93,   123,    59,   126,   125,    40, 
        125,    58,    59,    41,    44,   125,    44,   125,   260,   261, 
        262,   263,   264,   265,   286,   364,   123,   430,   260,   321, 
         58,    59,   260,   261,   262,   263,   264,   265,   300,   301, 
        302,   340,    41,    41,   286,   340,    93,   123,    41,    59, 
         41,    37,    38,    44,    40,    41,    42,    43,    44,    45, 
        260,    47,   371,    40,   125,    93,   123,    58,    59,   125, 
        332,   313,    58,    59,    60,    61,    62,    63,   125,   125, 
        280,   281,   282,   283,   284,   285,   286,   287,    59,   125, 
        125,    41,    58,   125,    41,    41,    91,   125,   340,   341, 
        342,   343,    93,   303,   346,    91,   123,    93,    94,   125, 
        123,   257,   123,    93,    41,   257,   257,   125,   360,   361, 
        362,   363,    58,   365,   366,   367,    91,    91,   370,   125, 
        372,    91,   332,    41,   125,    93,    44,   123,   124,   125, 
        126,   260,   261,   262,   263,   264,   265,   257,    59,   257, 
        125,    59,   125,    41,   123,    59,    44,    41,    91,    59, 
        402,   403,    41,    41,    41,   364,    41,   286,   125,   125, 
         58,    59,     7,    41,    37,    38,    44,    40,    41,    42, 
         43,    44,    45,     6,    47,    93,    41,    77,   430,    44, 
         58,    59,   102,   498,   313,    58,    59,   352,    61,    62, 
         63,   534,    60,    58,    59,    93,    37,   493,    59,   509, 
        257,    42,    43,   109,    45,   521,    47,   125,   606,   570, 
        570,   340,   341,   342,   343,    93,   358,   346,    91,   257, 
         93,    94,   186,   186,   248,   203,   287,   125,    93,   244, 
        171,   360,   361,   362,   363,    31,   365,   366,   367,    -1, 
         -1,   370,    -1,   372,    -1,    -1,    -1,   125,    -1,    -1, 
        123,   124,   125,   126,    -1,    -1,   257,    -1,   414,   415, 
        125,   257,    -1,   414,   260,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,   280,   281,   282,   283,   284, 
        285,    -1,   287,    37,    38,   126,    40,    41,    42,    43, 
         44,    45,    46,    47,   414,   415,   414,   415,   303,    -1, 
         -1,   430,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,   310,   311,   312,   260,   261,   262, 
        263,   264,   265,    -1,   320,    -1,    -1,    -1,    -1,   334, 
         -1,    -1,    -1,    -1,   330,   331,   332,    91,    -1,    93, 
         94,    37,    38,   286,   340,    41,    42,    43,    44,    45, 
         41,    47,    -1,    44,    -1,    -1,    -1,   414,   415,   257, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    59,    -1, 
        124,   125,   126,    -1,    -1,    -1,   414,   415,    -1,   257, 
         -1,    -1,    91,    -1,   257,    -1,    -1,   260,    -1,    -1, 
         -1,    -1,   257,    -1,    -1,    91,    -1,    93,    94,    -1, 
         -1,    -1,    93,   346,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,   410,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    41,   421,    -1,    44,   124,   125, 
        126,    -1,    91,    -1,   125,    -1,    -1,   310,   311,   312, 
         -1,    58,    59,    -1,    -1,    -1,    -1,   320,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   330,   331,   332, 
         -1,    -1,    -1,    -1,    -1,    37,    38,   340,    40,    41, 
         42,    43,    44,    45,    46,    47,    93,    -1,    -1,    -1, 
         -1,   398,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,   280,   281,   282,   283,   284, 
        285,    -1,   287,   257,    -1,    -1,    -1,    -1,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,   432,   414,   415,   303,    91, 
         -1,    93,    94,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   414,   415,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,   414, 
        415,    -1,   124,   125,   126,    -1,    -1,    -1,   312,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,   331,   287,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    46,    47,    -1,   303,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    91,    -1,   312,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,   546, 
         -1,    -1,    -1,    -1,   551,   331,    91,    -1,    93,    94, 
        257,   300,   301,   302,   340,   304,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   124, 
        125,   126,    -1,    -1,    -1,    -1,    41,    -1,    41,    44, 
         -1,    44,    -1,   600,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    58,    59,    -1,    -1,    -1, 
         -1,    -1,   619,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   630,   410,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    93,    -1, 
         93,    91,    -1,    37,    -1,    -1,    -1,    -1,    42,    43, 
        312,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62,   331, 
        125,    -1,   125,    37,    38,   125,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,   415,    -1, 
         -1,    -1,   257,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    93, 
         94,    -1,   126,   300,   301,   302,   303,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,   125,   126,    -1,    -1,    41,    -1,   312,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91, 
         -1,    -1,    58,    59,    -1,    61,   331,    63,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,   257,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        280,   281,   282,   283,   284,   285,    -1,   287,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,   124,   125, 
         -1,    -1,    -1,   303,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,   124,   125,   126, 
         -1,    -1,    91,    -1,   334,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,   312,    58, 
         59,    60,    61,    62,    63,    97,    37,    38,    -1,    40, 
         41,    42,    43,    44,    45,    46,    47,   331,    -1,    -1, 
         -1,   113,    -1,    -1,    -1,    -1,    -1,    -1,   312,    60, 
         61,    62,    63,    -1,    93,    94,    -1,    -1,    -1,   414, 
        415,   414,   415,    -1,    -1,    -1,    -1,   331,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    -1,    -1,    -1, 
         91,   257,    -1,    94,    -1,   124,   125,   126,   300,   301, 
        302,   303,    -1,    -1,   166,    -1,    -1,    -1,    -1,   171, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        257,    -1,    -1,   124,   186,   126,    -1,   411,   412,    -1, 
         -1,    -1,    -1,   195,    -1,    -1,    -1,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,    -1, 
        252,   253,   254,   330,   331,    -1,    -1,    -1,    -1,    -1, 
        262,    37,    38,   340,   303,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,   334,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,   257,    93,    94,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   312,   421,    -1,    -1,    -1,   124,   125, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,   312,    40,    -1,    42,    43,    44,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,    -1,    93,    94,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,   124,    -1,   126,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,   257,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,   312,    91,    -1,    93, 
         94,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    58,    59,    60, 
         61,    62,    63,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   312,   421,   124,   125,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    60,    61,    62, 
         63,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   257,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   124,   125,    91,    -1,   312,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        125,   124,   125,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,   257,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   257,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   312,   421,    -1,   280,   281,   282,   283,   284, 
        285,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,   303,    41, 
        411,   412,    44,   414,   415,   416,   417,   418,   419,   312, 
        421,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   334, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    -1,    44, 
         -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    58,    59,    60,    61,    62,    63,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,   257, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,   124,   125,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,   124, 
        125,    37,    38,    -1,   312,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    37,    38,    93,    94,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60,    61, 
         62,    63,    -1,    -1,    93,    94,    -1,    -1,   124,   125, 
         -1,    -1,   400,   401,    -1,   257,   404,   405,   406,   407, 
        408,    -1,    41,   411,   412,    44,   414,   415,   416,   417, 
        418,   419,    94,   421,    -1,   124,   125,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    93,    -1,    41,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,    38,    -1,    -1,    41,   125,   312,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,   331,    63,    -1,    94, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    59,    60,    61,    62,    63,    93,    94,   124, 
         -1,   126,   404,   405,   406,   407,   408,    -1,   257,    -1, 
         -1,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,   124,   125, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
        312,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    94,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,   257,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,   124,    -1,   126,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         59,    60,    61,    62,    63,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    37,    38,   312,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    94,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   421,   126,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,    -1,   126,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    37, 
         38,    -1,   312,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    60,    61,    62,    63,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,   124,    -1,   126,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   124,   421,   126,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    37, 
         38,   312,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    59,    60,    61,    62,    63,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1, 
         60,    61,    62,    63,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    94,    -1,   124,    -1,   126,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   124,   421,   126, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   421,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,   312,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,   124, 
         -1,   126,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    93,    94,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,   312,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    58,    59,    60, 
         61,    62,    63,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,   257,    -1,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    38,   124,   125,    41,   331,    43,    44,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   124,   125, 
         -1,   416,   417,   418,   419,    -1,   421,    -1,   257,    93, 
         94,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
        124,   125,    -1,    -1,   400,   401,   257,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   124,   125,   257,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   124, 
        125,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    38,    -1, 
         -1,    41,   257,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    93,    94,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         38,    -1,    -1,    41,   124,   125,    44,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    93,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   124,   125,    38,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    38,   124,   125,    41,    -1,    -1,    44, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    38,    -1,    -1,    41,    -1,   257, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1,   124, 
        125,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        124,   125,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,   257,    -1,    -1,   126,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1, 
         40,    -1,   257,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    62,    -1,    -1,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    -1,    -1,    91,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,   286,   126,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    63,    -1,    -1,    -1,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,   367,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,   401,   402,   403,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,   286,    45,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,    -1,    33,    -1,    35,   286,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1, 
        340,    -1,    -1,    61,    -1,   313,   346,    33,    -1,    35, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,   126,    -1, 
         -1,    -1,   340,    91,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,   367, 
        400,    -1,   402,   403,    -1,    91,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,   123,    -1,    33, 
        126,    35,    -1,    -1,   313,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         35,   340,    -1,    -1,    -1,    40,    -1,   346,    43,    33, 
         45,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    91,   367,    93, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,   286,    -1, 
         -1,    -1,   126,   402,   403,    -1,    -1,    91,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,   126,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
        286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,   313,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,   286,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,   402,   403,    -1,   313, 
         -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,   313,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,   313, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   367,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 188 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 200 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 200 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 211 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 212 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 216 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 219 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 222 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 225 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 238 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 243 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 244 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 250 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 250 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 259 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 259 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 268 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 268 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 279 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 284 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 289 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 294 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 299 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 304 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 305 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 310 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 311 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 316 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 321 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 321 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 324 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 324 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 334 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 341 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 348 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 354 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 359 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 364 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 369 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 370 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 376 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 376 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 387 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 387 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 398 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 398 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 423 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 423 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 436 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 441 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 442 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 446 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 453 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 460 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 465 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 470 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 477 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 482 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 483 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 488 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 494 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 497 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 503 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 504 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 509 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 510 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 515 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 520 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 525 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 526 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 537 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 538 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 567 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 567 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 575 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 575 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 598 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 604 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 607 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 612 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 615 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 622 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 623 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 627 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 630 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 637 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 638 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 642 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 667 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 667 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 678 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 689 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 690 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 694 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 694 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 718 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 718 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 736 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 741 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 752 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 760 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 763 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 766 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 769 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 775 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 775 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 778 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 778 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 784 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 792 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 795 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 801 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 801 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 810 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 810 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 820 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 820 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 829 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 832 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 835 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 838 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 841 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 203:  #line 844 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 850 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 856 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 208:  #line 860 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 209:  #line 866 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 210:  #line 872 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 211:  #line 878 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 213:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 214:  #line 893 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 215:  #line 894 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 216:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 219:  #line 904 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 220:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 221:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 222:  #line 913 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 223:  #line 919 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 224:  #line 919 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 921 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 922 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 923 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 928 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 231:  #line 931 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 232:  #line 937 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 234:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 235:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 236:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 238:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 239:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 251:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 252:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 259:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 260:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 270:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 271:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 276:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 279:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 282:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 284:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 285:  #line 1023 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1026 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 287:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 288:  #line 1029 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 289:  #line 1032 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 290:  #line 1032 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 291:  #line 1038 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 292:  #line 1039 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 300:  #line 1058 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 301:  #line 1059 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 302:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 303:  #line 1067 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 304:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 305:  #line 1072 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 307:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 308:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 309:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 310:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 311:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), null); } break;

    case 312:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), $yyVals[-3+$yyTop]); } break;

    case 313:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 314:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 315:  #line 1099 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 316:  #line 1100 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 317:  #line 1104 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 318:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 319:  #line 1109 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 320:  #line 1110 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 321:  #line 1111 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 322:  #line 1112 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 323:  #line 1113 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 324:  #line 1114 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 325:  #line 1115 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 326:  #line 1116 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3066 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
