<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\YieldFromNode;
#line 77 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_YIELD_FROM= 368;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,    31,   112,    31,    99,    99,   103,   103,   113,   113, 
        114,   114,    36,   116,    36,    36,    36,    36,    36,    36, 
        115,   115,    97,    97,   117,   117,   119,   119,   118,   118, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   107,   108,   108,   108,   108,   108,   108,   108,   108, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   109,   110,   110,   110,   110,   110,   110,   111,   111, 
        101,   101,   120,   120,   122,   121,   121,   124,   121,   125, 
        121,   123,   123,    10,    10,    10,    32,    32,    32,    12, 
         12,    95,    96,   126,   126,   127,   127,    21,    21,    49, 
         49,   128,   128,   129,   129,   129,   129,   129,   129,   129, 
        129, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     2,     3,     1,     1,     1,     1,     1,     5,     3, 
          3,     3,     0,     7,     2,     4,     0,     1,     1,     3, 
          1,     3,     1,     0,     4,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     1,     3,     0,     1,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          4,     4,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     2,     2,     2,     2,     2,     2,     2,     2, 
          0,     1,     1,     2,     0,     4,     2,     0,     6,     0, 
          4,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          4,     3,     4,     1,     3,     1,     3,     1,     3,     0, 
          1,     1,     2,     1,     1,     1,     1,     1,     1,     1, 
          1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   294,     0,     0,   296,   295,     0,    15,     0,   314, 
        316,   315,   318,   320,   319,   321,   317,     1,     0,    68, 
          0,   312,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   313,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   224,     0,     0,   230,   226,   229,   227,   228, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   297,     0,   298,   299,     0,   304,    27,     0, 
          0,     0,    31,    35,     0,     0,     0,   233,     0,     0, 
          0,     0,     0,     0,   192,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   231,     0,   232,   204,   205,   206, 
        207,   208,     0,     0,   235,     0,     0,    79,    80,    83, 
         84,     0,    78,     0,     0,     0,     0,   301,    29,    35, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   198,     0,   196,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   219,     0,   194, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        279,   280,     0,   285,   293,   292,   290,   191,   282,     0, 
          0,     0,   225,     0,     0,   307,     0,   302,   305,     0, 
        309,     0,     0,    25,     0,    34,    36,    37,     0,     0, 
          0,    42,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   186,   188,     0,   100,     0,     0,     0,   221, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   212,     0,   203, 
          0,     0,   284,     0,   175,     0,     0,   238,   236,    82, 
        303,    21,     0,     0,     0,     0,     0,     0,     0,    23, 
          0,    35,     0,     0,   193,     0,     0,     0,     0,     0, 
        189,     0,   222,   190,   220,     0,     0,   184,   181,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   288, 
        113,     0,   131,   117,   121,   123,   119,   127,   129,   115, 
        125,     0,     0,     0,     0,   111,     0,    63,     0,     0, 
          0,     0,     0,     0,    35,    45,     0,    43,     0,     0, 
          0,     0,     0,     0,     0,   213,     0,   195,     0,   286, 
        291,     0,     0,   133,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    38,   137,   112,     0,     0, 
         61,    59,   103,   104,   105,   106,   107,   108,     0,     0, 
          0,     0,     0,     0,     0,   179,   180,   197,   216,     0, 
          0,     0,     0,     0,     0,     0,   138,     0,     0,     0, 
          0,   155,     0,     0,   128,   130,     0,     0,     0,     0, 
        142,   223,     0,     0,    93,     0,     0,     0,     0,     0, 
         65,     0,    48,     0,     0,    53,    33,     0,   178,   214, 
        182,   289,   114,     0,     0,     0,     0,   132,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    50, 
          0,    98,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    52,    55,     0,    49,    54,    47,     0,     0,   139, 
          0,     0,     0,   156,     0,     0,     0,     0,     0,     0, 
        143,     0,     0,     0,     0,    94,    96,    95,     0,     0, 
          0,     0,     0,   164,   170,   134,     0,   161,   162,     0, 
          0,   122,     0,   146,     0,     0,     0,     0,    97,   102, 
          0,    85,     0,    64,     0,     0,     0,    56,     0,     0, 
        160,   169,   163,   135,     0,     0,     0,   158,   116,   151, 
        153,     0,     0,   149,   136,     0,     0,    62,    60,     0, 
          0,     0,     0,   124,   120,     0,     0,     0,   126,   150, 
         87,    86,    66,   166,     0,     0,     0,   159,     0,     0, 
          0,     0,   171,   118,     0,   154,   167,     0,   152,     0, 
          0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   142,     4,     7,     8,    17,    53,    18, 
        255,   113,    61,    99,   121,   172,    63,   260,    62,   101, 
        123,   396,   256,   257,   258,   383,   261,   262,   338,   339, 
        384,   194,   353,   394,   485,   144,   475,   486,   518,   480, 
        545,   574,   479,   476,   430,   439,   521,    41,    30,    42, 
         58,    94,    95,    96,   145,   477,   478,   385,   386,   296, 
        413,   423,   463,   589,   417,   420,   504,   418,   419,   424, 
        592,   421,   422,   416,   454,   556,   456,   470,   457,   471, 
        593,   594,   607,   608,   606,   557,   581,   558,   559,   579, 
        615,   580,   146,   266,   115,   116,   147,   360,   273,   188, 
        238,   189,   196,   183,   282,   270,   148,   149,   150,   151, 
        152,   450,   197,   198,   153,   103,   154,   155,   329,   239, 
        240,   321,   241,   412,   322,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -289,
          0,     0,  -283,  -152,  -106,   478,  -283,     0,    59,    75, 
         76,     0,  -163,  -163,     0,     0,    96,     0,    63,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   305,     0, 
        610,     0,     0,  -152,  -152,     0,   -41,   100,   -27,  -207, 
         -1,     0,     0,     0,     0,     0,     0,     0,   -27,   -27, 
        -27,     0,   139,     0,   185,   147,     0,   181,    63,   610, 
       -152,  -152,  -152,   167,     0,   198,   212,     0,  -152,  -152, 
        268,     0,     0,   219,    24,    33,    24,     0,     0,     0, 
          0,     0,     0,  -152,   124,     0,     0,     0,     0,     0, 
        300,   -96,     0,   365,   396,     0,   -19,  -152,   105,  -152, 
        319,   105,  5261,   428,   598,   598,  -212,     0,  -157,     0, 
        188,   450,     0,   425,     0,     0,    68,     0,     0,  -152, 
        403,   490,     0,     0,   416,  5535,  5535,     0,  5535,  5535, 
       5535,  5535,  5535,  5535,     0,  5535,   293,   514,     0,  5565, 
        453,   184,  3707,   -30,     0,   552,     0,     0,     0,     0, 
          0,     0,   517,   572,     0,  5535,    59,     0,     0,     0, 
          0,   558,     0,  -152,   136,   531,   -19,     0,     0,     0, 
       -152,   551,   370,   451,  2815,  3707,   -87,   -87,   -53,   -87, 
        -87,   -87,   136,     0,  5535,     0,  5535,   394,   -30,   450, 
          0,   -54,  2853,    28,   313,   618,   625,     0,   -23,     0, 
       5535,  5535,  5535,  5535,  5535,  5535,  5535,  5535,  5535,  5535, 
       5535,  5535,  5535,  5535,  5535,  5535,  5290,  5330,  5097,  5535, 
       5169,  5535,  5535,  5535,  5535,  5535,  5535,  5535,  -152,  5535, 
          0,     0,   136,     0,     0,     0,     0,     0,     0,   -30, 
       -163,  5535,     0,   -86,   636,     0,   493,     0,     0,   703, 
          0,   560,   418,     0,    81,     0,     0,     0,     0,   559, 
        304,     0,  5535,   646,   425,   -30,   564,   565,  3707,  5535, 
       3707,  5299,     0,     0,   -30,     0,   630,   394,   -23,     0, 
        394,   225,  3838,  3875,  3875,  3875,  3875,  3875,  3875,  3875, 
       3875,  3875,  3875,  3875,  3707,   635,  1214,   333,  2759,  5535, 
        102,  5535,   102,  5535,  5535,   146,   146,  5535,  5535,   146, 
        146,   150,   150,   -76,   -76,   -76,   -53,     0,   -87,     0, 
       5535,  5535,     0,   655,     0,   645,   514,     0,     0,     0, 
          0,     0,   540,   448,   524,   455,   -78,   593,   678,     0, 
        370,     0,   976,  5535,     0,  5535,   -13,   679,   540,  3707, 
          0,  5535,     0,     0,     0,   594,   681,     0,     0,   -30, 
       5535,  3875,  3875,   146,   146,   146,   146,   629,   683,     0, 
          0,    34,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   686,   602,  2983,   540,     0,   667,     0,   689,   690, 
        315,   647,   630,   614,     0,     0,  5535,     0,   836,   698, 
        615,   621,   -30,   622,  3707,     0,  5535,     0,   976,     0, 
          0,  5535,  5535,     0,   408,  5535,   709,   715,   295,   717, 
        684,   705,   727,   728,   434,     0,     0,     0,   555,   -20, 
          0,     0,     0,     0,     0,     0,     0,     0,   739,   -20, 
        737,   527,  1398,  3023,   593,     0,     0,     0,     0,   -30, 
        756,   758,   755,   540,   760,   422,     0,  3149,  5535,  5535, 
        540,     0,   461,   483,     0,     0,  5535,  5535,   763,   438, 
          0,     0,   766,   377,     0,   788,   793,  -230,   129,   129, 
          0,   750,     0,    17,   -56,     0,     0,   593,     0,     0, 
          0,     0,     0,   721,  5535,   408,   724,     0,   789,  3246, 
        725,   809,   807,   488,  3281,  3408,  5535,   434,   732,     0, 
        596,     0,   536,   -20,   525,   630,   -20,   823,   793,   825, 
        -20,     0,     0,   540,     0,     0,     0,   277,  3707,     0, 
        540,  5535,   295,     0,  5535,   528,  5535,   295,   744,  3707, 
          0,   540,   630,  -152,   -39,     0,     0,     0,   793,   536, 
        536,   828,   745,     0,     0,     0,   277,     0,     0,   751, 
        816,     0,  3445,     0,  3542,   506,   253,   753,     0,     0, 
       5535,     0,   540,     0,   -39,   -39,   536,     0,   847,   765, 
          0,     0,     0,     0,  5535,   830,   295,     0,     0,     0, 
          0,   771,   253,     0,     0,  3579,   773,     0,     0,   -39, 
       -152,   540,   858,     0,     0,   295,  5535,   846,     0,     0, 
          0,     0,     0,     0,  -105,   784,   295,     0,  3680,   540, 
       -152,   873,     0,     0,   540,     0,     0,   794,     0,   540, 
        799,     0, 
    );
    protected static $yyRindex= array(         1769,
          0,     0,  1806,     0,     0,   332,  2084,     0,   748,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        186,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -37,   380,     0,     0,    38,     0,   192, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   878,  -100,   803,  -100,     0,     0,     0, 
          0,     0,     0,     0,   -29,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   806,     0, 
          0,   806,   839,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   194,     0,     0,     0,     0,     0,     0, 
          0,   309,     0,     0,     0,  2598,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  2001,  1903,   916,   892, 
          0,     0,   952,  1605,     0,   486,     0,     0,     0,     0, 
          0,     0,     0,   -10,     0,   893,   -33,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   214,   810,  1052,   109,   390,  2038,  2123,  2687,  2166, 
       2300,  2423,     0,     0,     0,     0,     0,     0,  1605,  5417, 
       1735,   -28,     0,  1477,     0,     0,     8,     0,   692,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   880,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  1862, 
          0,  1032,     0,   -18,     0,     0,     0,     0,     0,   214, 
          0,  1648,     0,     0,     0,     0,     0,     0,   569,     0, 
        822,     0,     0,   859,     0,  1605,   861,   864,    78,   893, 
        413,     0,     0,     0,  1605,     0,    85,     0,     0,     0, 
          0,     0,   673,   -12,    97,   107,   786,   887,  1138,  1352, 
       1449,  1499,  1563,  1645,   907,     0,  1008,    -7,  4822,     0, 
       4838,     0,  4862,     0,     0,  4264,  4395,     0,     0,  4432, 
       4560,  4136,  4174,  3965,  4009,  4099,  2724,     0,  2557,     0, 
        875,   893,     0,  1307,     0,     0,     0,     0,     0,     0, 
          0,     0,   848,     0,     4,     0,     0,   412,     0,     0, 
          0,     0,  4764,   893,     0,   866,     0,     0,   848,   923, 
          0,     0,     0,     0,     0,     0,  1437,     0,     0,  1605, 
          0,  1700,  1743,  4597,  4654,  4670,  4694,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   -92,     0,     0,     0,     0,   869, 
          0,     0,   930,     0,     0,     0,     0,     0,  -108,     0, 
          0,     0,  1605,     0,    65,     0,   893,     0,  4990,     0, 
          0,   893,   935,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   954, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   214,     0,  1179,     0,     0,     0,     0,  1605, 
          0,     0,     0,   848,   503,     0,     0,     0,   938,     0, 
        848,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   426,     0,     0,   957,     0,   958,   958, 
          0,     0,     0,     0,     0,     0,     0,   412,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   651,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   366,     0,     0,   426,     0,     0,   979,     0, 
        954,     0,     0,   848,     0,     0,     0,     0,   533,     0, 
        848,   938,     0,     0,     0,     0,     0,     0,     0,   554, 
          0,   848,   426,     0,     0,     0,     0,     0,   981,   366, 
        366,     0,     0,     0,     0,     0,   339,     0,     0,     0, 
          0,     0,     0,     0,     0,   410,   899,     0,     0,     0, 
          0,     0,   848,     0,     0,     0,   366,     0,     0,     0, 
          0,     0,     0,     0,   893,     0,     0,     0,     0,     0, 
          0,     0,   900,     0,     0,     0,     0,     0,     0,     0, 
          0,   848,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   -55, 
          0,     0,     0,     0,   -55,     0,     0,     0,     0,   848, 
          0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,  1010,   626,   599,    39, 
       1020,   -60,     0,   950,   926,  -143,     0,     0,     0,     0, 
       -116,  -368,     0,     0,     0,  2065,     0,   688,     0,     0, 
         83,   164,    46,     0,     0,   -64,  -355,   545,   553,     0, 
       -452,    12,     0,   510,     0,     0,     0,     0,   974,   980, 
          0,   538,     0,   937,  -138,   112,   -26,     0,  -357,  -217, 
          0,     0,   -24,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   539,   542, 
          0,   454,     0,     0,     0,     0,     0,   487,   494,     0, 
          0,     0,     0,     0,   870,   871,   708,     0,   173,     0, 
         57,     0,   857,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   778,     0,     0,     0,   817,     0,   824, 
          0,     0,     0,     0,     0,     0,   895,     0,  1034, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   169,    50,    97,    93,   223,    16,   237, 
        223,   223,   166,     1,    52,   236,    39,   245,   621,   572, 
          5,    13,    26,   104,   325,   237,   250,   428,   211,    47, 
         48,   211,   110,   269,   300,    57,   269,   119,   230,   122, 
         93,    93,    59,   111,   128,   211,   211,   160,   218,   230, 
        269,   269,    55,   269,   251,   269,    74,    74,    74,   122, 
        234,   462,   300,    17,    81,    82,    92,   112,   525,   109, 
        112,   112,   230,   415,   237,   523,   489,    54,    10,    74, 
        211,    71,   234,   573,   482,   269,   269,    65,    54,    54, 
        276,    60,    74,    74,    17,    74,    12,   575,   576,   515, 
         92,    92,   162,   368,    34,    58,   237,     9,    58,   516, 
        122,   167,   211,   195,   234,    74,   269,   269,   166,   527, 
         35,   239,   264,    58,   600,    57,    40,   161,    57,   168, 
         71,   348,    56,    10,    36,   192,    15,   241,   227,   524, 
        241,    39,    91,   225,   223,    51,   224,   242,   226,   200, 
        242,   310,   200,    12,   241,   241,   414,    58,   546,   246, 
         74,   219,    74,   221,   242,   242,    74,   200,   318,    34, 
        239,   112,   195,   326,   327,   462,    13,   310,    74,    14, 
        462,   390,   227,   369,   105,   143,   227,   225,   223,   241, 
        224,   225,   226,    15,    74,   453,   226,    68,   399,   242, 
         16,   200,   239,   484,    70,   400,   320,   401,   175,   176, 
         26,   177,   178,   179,   180,   181,   182,   571,   184,   112, 
         71,   241,   193,   310,    74,    78,   112,   230,    74,   462, 
         34,   242,    12,   200,   622,   229,     9,   306,   143,     9, 
          9,   391,    69,   233,   211,   274,   326,   327,   462,   269, 
         74,   443,   195,   392,   233,   306,    79,    16,   229,   462, 
        114,   393,    10,    17,   218,    10,    10,   269,   451,   271, 
         80,   230,    15,   452,    74,   230,   311,   233,    97,   324, 
        110,   110,   310,   283,   284,   285,   286,   287,   288,   289, 
        290,   291,   292,   293,   294,   295,   297,   298,   299,   301, 
        303,   306,   307,   310,   311,   312,   313,   314,   315,   316, 
        317,   300,   319,   107,   231,   232,   280,   109,   109,   474, 
        499,    58,   345,    17,   295,   231,   232,   131,   247,   141, 
        114,   351,   186,    98,   140,    17,    16,   129,    34,   130, 
        335,    57,   100,    17,   228,   343,   265,   341,   231,   232, 
        185,   437,   143,   241,   350,   200,   435,   433,    83,   434, 
        106,   436,   342,   242,   473,   200,    10,   308,    49,   227, 
        216,   168,    16,   168,   225,   223,    17,   224,   168,   226, 
         17,   168,   362,   168,   363,    83,   364,   365,     9,   235, 
        366,   367,   219,   561,   221,     9,   269,   269,   269,   269, 
        269,   211,   211,   295,   143,   108,   269,   269,   269,   269, 
        269,   269,   336,   229,    10,   120,   408,   461,   337,    17, 
        132,    10,   511,    17,   101,    74,   143,   570,   143,   168, 
        202,   308,   233,   202,   405,    74,   110,   352,   441,   109, 
        438,   124,   157,   409,   157,   311,   603,   202,   202,   157, 
        354,   310,   157,   356,   157,    32,   240,   229,   230,   448, 
        517,   229,   497,   168,   168,   496,    57,   156,   474,    57, 
         32,   311,    17,   310,    74,    74,   233,   310,   509,   444, 
        233,   508,   202,   122,   357,   311,   311,   311,   101,   143, 
        186,   310,   310,   310,   143,   295,    34,   164,   458,   310, 
        157,   222,   220,   231,   232,   240,   490,   165,   562,    74, 
        241,   241,    74,   566,   202,   166,    74,   311,    57,   512, 
        242,   242,   228,   310,   358,   170,   173,    85,    86,    87, 
         88,    89,    90,   171,   157,   157,    32,   240,   173,    74, 
        614,   143,   500,   140,   173,   310,   140,   231,   232,   505, 
        506,   231,   232,    10,   174,    86,    87,    88,    89,    90, 
        627,   548,   605,   388,   359,   308,   228,    91,    19,    34, 
        228,   187,   131,   141,   141,   199,   141,   529,   173,   140, 
         10,   618,   129,   166,   130,   331,   598,   599,   569,   540, 
        519,   519,   624,   200,   144,   242,    74,   144,   168,   168, 
        168,   168,   168,   168,    43,    44,    45,   136,    46,   243, 
        173,   613,    44,    84,   143,   244,    74,   563,   105,   565, 
        554,   555,   101,   248,   168,   590,   591,    44,   549,   259, 
         83,   310,   310,   310,   139,   371,   372,   373,    37,    38, 
        135,    19,   158,   159,   229,    83,   202,    64,    66,    67, 
        272,   168,   277,   596,   374,   375,   376,   377,   278,   378, 
        379,   126,   127,   233,   380,   132,   381,   143,   279,   157, 
        157,   157,   157,   157,   157,   254,   330,   334,   168,   168, 
        168,   168,   333,   340,   168,   344,   346,   347,    83,   619, 
        352,    44,   361,    44,   370,   157,   133,   134,   168,   168, 
        168,   168,   185,   168,   168,   168,   168,   387,   168,   168, 
        168,   168,   168,   210,   389,   395,   210,   397,   406,   403, 
        407,   410,   157,   411,   382,   425,   426,   429,   431,   432, 
        210,   210,   222,   220,   231,   232,   442,   440,   445,   446, 
        168,   168,   465,   217,   218,   447,   449,   455,   459,   157, 
        157,   157,   157,   228,   460,   157,   464,    20,    21,    22, 
         23,    24,    25,   466,    26,   210,   467,   468,   168,   157, 
        157,   157,   157,   469,   157,   157,   157,   157,   481,   157, 
         27,   157,   157,   157,    17,    17,   484,    17,    17,    17, 
         17,    17,    17,    19,    17,   483,   491,   210,   492,   174, 
         86,    87,    88,    89,    90,    17,    17,    17,    17,    17, 
         17,   157,   157,   493,   472,    86,    87,    88,    89,    90, 
        495,   502,   503,   507,   510,    10,   243,   332,   513,   243, 
         20,    21,    22,   252,    24,    25,   514,    26,    17,   157, 
         17,    17,   522,   243,   243,   528,   531,   532,   535,   534, 
        536,   537,   136,    27,   542,   543,   544,   157,    86,    87, 
         88,    89,    90,   550,   547,   551,   567,   564,   577,   578, 
         17,    17,    17,    17,   585,   584,   588,   595,   243,   139, 
        371,   372,   373,    10,   253,   135,   601,   602,   604,    20, 
         21,    22,    23,    24,    25,   609,    26,   612,   617,   374, 
        375,   376,   377,   620,   378,   379,   126,   127,   623,   380, 
        243,   381,    27,   628,   300,   300,   630,   300,   300,   300, 
        300,   300,   300,   632,   300,    30,    19,   244,    28,   210, 
        244,   172,   217,   172,    41,   300,   300,   176,   300,   300, 
        300,   133,   134,    84,   244,   244,    40,   177,   217,   297, 
        177,   298,   187,   187,   299,   187,   187,   187,   187,   187, 
        187,   187,   187,   215,   177,   177,   215,   176,   300,   382, 
        300,   300,   109,   187,   187,   187,   187,   187,   187,   244, 
        215,   215,    20,    21,    22,   252,    24,    25,    57,    26, 
        172,    51,   174,   176,    91,   174,   172,    92,    88,   177, 
        300,   300,   300,   300,    17,    27,   187,    17,   187,   187, 
        174,   244,   227,   216,   145,   215,    33,   225,   223,    90, 
        224,    89,   226,   147,   148,    29,   102,   125,   398,   526, 
        552,   177,   520,    73,   530,   219,   253,   221,    72,   187, 
        187,   187,   243,   582,   174,   163,   610,   215,   267,   541, 
        583,   267,   267,   268,   402,   281,   355,    17,    17,    17, 
        328,   249,     0,   323,    46,   267,   267,    17,   267,   215, 
        267,     0,   176,     0,     0,   176,   174,    17,    17,    17, 
          0,     0,     0,     0,     0,     0,   210,    17,   223,   223, 
        176,     0,   223,   223,   223,   223,   223,     0,   223,   214, 
        267,   230,     0,     0,     0,     0,     0,     0,     0,   223, 
        223,    17,   223,   223,    17,    20,    21,    22,   252,    24, 
         25,     0,    26,     0,   176,     0,     0,     0,     0,     0, 
          0,   267,   267,     0,   300,     0,     0,   300,    27,     0, 
          0,     0,    17,   244,   223,   223,     0,    17,    17,    17, 
         17,    17,    17,    17,    17,    17,   176,    17,    17,    17, 
          0,    17,    17,    17,    17,    17,    17,     0,    17,   253, 
          0,     0,   185,     0,     0,   223,   223,   223,   245,   215, 
          0,   245,     0,     0,     0,     0,     0,   300,   300,   300, 
          0,     0,     0,     0,     0,   245,   245,   300,     0,   243, 
        243,     0,     0,     0,     0,     0,     0,   300,   300,   300, 
          0,     0,     0,     0,     0,    32,    32,   300,    32,    32, 
         32,    32,    32,    32,    32,    32,     0,   187,     0,     0, 
        245,     0,     0,     0,     0,     0,    32,    32,    32,    32, 
         32,    32,     0,     0,     0,     0,   187,     0,     0,     0, 
        227,   216,     0,     0,     0,   225,   223,     0,   224,     0, 
        226,     0,   245,     0,   267,     0,     0,     0,     0,    32, 
          0,    32,    32,   219,     0,   221,     0,   300,   300,   300, 
        300,   300,   300,   300,   300,   300,     0,   229,   300,   300, 
          0,   300,   300,   300,   300,   300,   300,     0,   300,     0, 
        244,   244,    32,    32,    32,     0,   233,   215,   223,     0, 
          0,     0,     0,     0,     0,   187,   187,   187,   187,   187, 
        187,   187,   187,   187,     0,     0,   187,   187,     0,   187, 
        187,   187,   187,   187,   187,   187,   187,     0,     0,   230, 
          0,     0,     0,   287,   287,     0,     0,   287,   287,   287, 
        287,   287,   287,   287,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   223,   287,   287,   287,   287,   287,   287, 
          0,     0,     0,     0,     0,   222,   220,   231,   232,     0, 
          0,     0,   223,     0,     0,     0,   217,   218,     0,     0, 
          0,    17,   247,     0,   245,   247,   228,   287,     0,   287, 
        287,     0,     0,     0,     0,     0,     0,     0,     0,   247, 
        247,   267,   267,   267,   267,   267,     0,     0,     0,     0, 
          0,   267,   267,   267,   267,   267,   267,     0,     0,     0, 
        287,   287,   287,     0,     0,    32,     0,     0,     0,     0, 
          0,     0,     0,     0,   247,     0,     0,     0,     0,     0, 
          0,   223,   223,   223,   223,   223,   223,   223,   223,   223, 
          0,    17,   223,   223,     0,   223,   223,   223,   223,   223, 
        223,   223,   223,   183,   183,     0,   247,   183,   183,   183, 
        183,   183,   183,   183,     0,     0,     0,     0,    19,   246, 
         32,     0,   246,     0,   183,   183,   183,   183,   183,   183, 
          0,     0,     0,     0,     0,     0,   246,   246,     0,    32, 
          0,     0,     0,    99,    99,     0,     0,    99,    99,    99, 
         99,    99,   487,    99,     0,   229,     0,   183,     0,   183, 
        183,     0,     0,     0,    99,    99,    99,    99,    99,   248, 
          0,   246,   248,     0,   233,     0,     0,     0,     0,     0, 
          0,   245,   245,     0,     0,     0,   248,   248,     0,     0, 
        183,   183,   183,   287,     0,     0,     0,     0,     0,    99, 
         99,     0,     0,   246,     0,     0,     0,     0,    32,    32, 
         32,    32,    32,    32,    32,    32,    32,     0,     0,    32, 
         32,   248,    32,    32,    32,    32,    32,    32,    32,    32, 
         99,    99,    99,   249,     0,     0,   249,     0,   247,     0, 
          0,     0,     0,   222,   220,   231,   232,     0,   287,     0, 
        249,   249,     0,   248,   217,   218,     0,     0,     0,     0, 
          0,     0,     0,     0,   228,     0,     0,   287,     0,     0, 
          0,   281,   281,     0,     0,   281,   281,   281,   281,   281, 
          0,   281,     0,     0,     0,   249,     0,     0,     0,     0, 
          0,     0,   281,   281,   281,   281,   281,   281,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    20,    21,    22, 
        252,    24,    25,     0,    26,   250,     0,   249,   250,     0, 
          0,     0,     0,   183,     0,     0,     0,   281,   281,     0, 
         27,     0,   250,   250,     0,   246,   287,   287,   287,   287, 
        287,   287,   287,   287,   287,     0,     0,   287,   287,     0, 
        287,   287,   287,   287,   287,   287,   287,   287,   281,   281, 
        281,   253,     0,    99,     0,     0,     0,   250,   318,     0, 
        259,     0,     0,   259,     0,     0,     0,     0,   183,     0, 
          0,     0,     0,     0,     0,   248,     0,   259,   259,     0, 
          0,     0,     0,     0,     0,   247,   247,   183,     0,   250, 
          0,   187,   187,     0,   187,   187,   187,   187,   221,   187, 
        187,   187,     0,   260,     0,     0,   260,     0,    99,     0, 
          0,     0,   259,     0,   187,   187,   187,   187,     0,     0, 
        260,   260,     0,     0,     0,     0,    99,    99,     0,     0, 
          0,     0,     0,     0,     0,     0,    99,     0,     0,   249, 
          0,     0,     0,     0,   259,   187,     0,     0,   187,     0, 
          0,     0,     0,     0,     0,   260,   183,   183,   183,   183, 
        183,   183,   183,   183,   183,     0,     0,   183,   183,     0, 
        183,   183,   183,   183,   183,   183,   183,   183,   187,     2, 
        187,   281,   246,   246,     0,     0,     0,   260,     0,     0, 
          0,     0,     0,     0,     0,     0,    99,    99,    99,    99, 
         99,    99,    99,    99,    99,     0,     0,    99,    99,     0, 
         99,    99,    99,    99,    99,    99,     5,    99,   283,   283, 
          0,   250,   283,   283,   283,   283,   283,   318,   283,     0, 
          0,     0,   248,   248,     0,     0,   281,     0,     0,   283, 
        283,   283,   283,   283,   283,     0,     0,   318,   318,   318, 
        318,   318,   318,   318,   318,   281,     0,     0,     0,   230, 
        230,     0,   230,     0,   230,   230,   230,   230,   230,   230, 
        318,     0,     0,     0,   283,   283,   259,     0,     0,     0, 
          0,     0,   230,   230,   230,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   249,   249,     0,   318, 
          0,     0,     0,     0,     0,   283,   283,   283,     0,     0, 
          0,   185,     0,   230,     0,   230,   230,     0,     0,   260, 
          0,     0,     0,     0,   281,   281,   281,   281,   281,   281, 
        281,   281,   281,     0,     0,   281,   281,     0,   281,   281, 
        281,   281,   281,   281,     0,   281,   230,     0,   230,     0, 
          0,     0,     0,     0,     0,     0,     0,   223,   223,     0, 
          0,     0,   223,   223,   223,   223,   187,   223,     2,     2, 
          2,     2,     2,     2,     0,     2,     0,     0,   250,   250, 
        223,   223,   223,   223,     0,   187,     0,     0,     2,     2, 
          2,     0,     2,     0,   275,   275,     0,     0,   275,   275, 
        275,   275,   275,     0,   275,     5,     5,     5,     5,     5, 
          5,   223,     5,   223,   223,   275,   275,   275,   275,   275, 
        275,     0,     0,     0,     0,     5,     5,     5,     5,     0, 
          0,     0,     0,   259,   259,     0,     0,     0,   283,     0, 
          0,     0,     0,     0,   223,     0,   223,     0,     0,     0, 
        275,   275,     0,     0,   187,   187,   187,   187,   187,   187, 
        187,   187,   187,     0,     0,   187,   187,     0,   187,   187, 
        187,   187,   187,   187,   187,   187,   260,   260,     0,   276, 
        276,   275,   275,   276,   276,   276,   276,   276,     0,   276, 
          0,     0,     0,   283,     6,     0,     0,     0,     0,     0, 
        276,   276,   276,   276,   276,   276,     0,     0,     0,     0, 
          0,     0,   283,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   274,   274,     0,     0,   274,   274,   274,   274, 
        274,     0,   274,     0,   230,   276,   276,     0,     0,     0, 
          0,     0,     0,   274,   274,   274,   274,   274,   274,     0, 
          0,     0,     0,   230,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   276,   276,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   274,   274, 
          0,   283,   283,   283,   283,   283,   283,   283,   283,   283, 
          0,     0,   283,   283,     0,   283,   283,   283,   283,   283, 
        283,     0,   283,     0,     0,     0,     0,     0,     0,   274, 
        274,     0,     0,     0,   275,     0,     0,     0,     0,     0, 
          0,     0,   230,   230,   230,   230,   230,   230,   230,   230, 
        230,     0,   223,   230,   230,     0,   230,   230,   230,   230, 
        230,   230,   230,   230,     0,     0,     0,     0,     0,     0, 
          0,   223,     0,     0,     0,     0,   277,   277,     0,     0, 
        277,   277,   277,   277,   277,     0,   277,     0,     0,   275, 
          0,     0,     0,     0,     0,     0,     0,   277,   277,   277, 
        277,   277,   277,     6,     6,     6,     6,     6,     6,     0, 
          6,     0,     0,     0,     0,     0,     0,     0,     0,   276, 
          0,     0,     0,     6,     6,     6,     6,     0,     0,     0, 
          0,     0,   277,   277,     0,     0,     0,     0,     0,     0, 
        223,   223,   223,   223,   223,   223,   223,   223,   223,     0, 
         17,   223,   223,   404,   223,   223,   223,   223,   223,   223, 
        223,   223,   274,   277,   277,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   276,     0,     0,   275,   275,     0, 
          0,   275,   275,   275,   275,   275,     0,     0,   275,   275, 
          0,   275,   275,   275,   275,   275,   275,     0,   275,   278, 
        278,     0,     0,   278,   278,   278,   278,   278,     0,   278, 
          0,     0,     0,     0,     0,     0,     0,   274,     0,     0, 
        278,   278,   278,   278,   278,   278,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   278,   278,     0,   494,     0, 
          0,     0,   276,   276,     0,   501,   276,   276,   276,   276, 
        276,     0,     0,   276,   276,     0,   276,   276,   276,   276, 
        276,   276,     0,   276,     0,     0,   278,   278,     0,     0, 
          0,     0,     0,     0,     0,     0,   277,     0,     0,     0, 
          0,     0,     0,     0,     0,   274,   274,     0,     0,   274, 
        274,   274,   274,   274,     0,     0,   274,   274,     0,   274, 
        274,   274,   274,   274,   274,     0,   274,     0,   553,     0, 
          0,     0,     0,   266,   266,   560,     0,   266,   266,   266, 
        266,   266,     0,   266,     0,     0,   568,     0,     0,     0, 
          0,   277,     0,     0,   266,   266,   266,   266,   266,   266, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,   199,     0,   597,   199,   199, 
          0,   199,     0,     0,   199,     0,     0,     0,     0,   266, 
        266,     0,     0,     0,     0,   199,   199,   199,   199,   199, 
        199,     0,     0,     0,     0,     0,   616,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   278, 
        266,   266,     0,     0,   626,     0,     0,     0,     0,   629, 
        199,   199,     0,     0,   631,     0,     0,     0,     0,   277, 
        277,     0,     0,   277,   277,   277,   277,   277,     0,     0, 
        277,   277,     0,   277,   277,   277,   277,   277,   277,     0, 
        277,   199,   199,   273,   273,     0,     0,   273,   273,   273, 
        273,   273,     0,   273,   278,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   273,   273,   273,   273,   273,   273, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        272,   272,     0,     0,   272,   272,   272,   272,   272,     0, 
        272,     0,     0,     0,     0,     0,     0,     0,     0,   273, 
        273,   272,   272,   272,   272,   272,   272,     0,     0,     0, 
          0,     0,     0,     0,     0,   227,     0,     0,     0,     0, 
        225,   223,     0,   224,     0,   226,     0,     0,     0,     0, 
        273,   273,     0,   266,     0,     0,   272,   272,   219,     0, 
        221,     0,   278,   278,     0,     0,   278,   278,   278,   278, 
        278,     0,     0,   278,   278,     0,   278,   278,   278,   278, 
        278,   278,     0,   278,     0,     0,     0,   272,   272,     0, 
          0,   227,   216,     0,   199,     0,   225,   223,     0,   224, 
          0,   226,     0,     0,     0,     0,     0,     0,   266,     0, 
          0,     0,   263,     0,   219,   203,   221,   213,     0,     0, 
          0,     0,     0,     0,   230,     0,     0,     0,     0,   227, 
        216,     0,     0,   275,   225,   223,     0,   224,     0,   226, 
          0,     0,     0,     0,     0,     0,     0,     0,   215,   199, 
          0,     0,   219,   203,   221,   213,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   199,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   214,     0, 
        230,     0,     0,   273,     0,     0,   215,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   266,   266,     0,     0, 
        266,   266,   266,   266,   266,     0,     0,   266,   266,     0, 
        266,   266,   266,   266,   266,   266,   214,   266,   230,     0, 
        272,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   199,   199,     0, 
          0,   199,   199,   199,   199,   199,     0,     0,   199,   199, 
          0,   199,   199,   199,   199,   199,   199,     0,   199,   227, 
        216,     0,     0,     0,   225,   223,     0,   224,     0,   226, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   427,   219,   203,   221,   213,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   227, 
        216,     0,     0,   488,   225,   223,     0,   224,     0,   226, 
        229,     0,     0,     0,     0,     0,   215,     0,     0,     0, 
          0,     0,   219,   203,   221,   213,   273,   273,     0,   233, 
        273,   273,   273,   273,   273,     0,     0,   273,   273,     0, 
        273,   273,   273,   273,   273,   273,   214,   273,   230,     0, 
          0,     0,     0,     0,     0,     0,   215,     0,     0,     0, 
          0,     0,     0,   272,   272,     0,   229,   272,   272,   272, 
        272,   272,     0,     0,   272,   272,     0,   272,   272,   272, 
        272,   272,   272,     0,   272,   233,   214,     0,   230,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   222,   220, 
        231,   232,     0,     0,   229,     0,     0,     0,     0,   217, 
        218,     0,     0,     0,     0,     0,     0,     0,     0,   228, 
          0,     0,     0,   233,     0,   227,   216,     0,     0,     0, 
        225,   223,     0,   224,     0,   226,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   498,   219,   203, 
        221,   213,     0,     0,   222,   220,   231,   232,   204,   205, 
        206,   207,   209,     0,     0,   217,   218,     0,   201,   202, 
        208,   211,   210,   212,     0,   228,     0,     0,     0,     0, 
          0,     0,   215,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   222,   220,   231,   232,   204,   205,   206,   207, 
        209,     0,     0,   217,   218,     0,   201,   202,   208,   211, 
        210,   212,   214,   228,   230,     0,     0,     0,     0,     0, 
          0,     0,   227,   216,     0,     0,   533,   225,   223,     0, 
        224,     0,   226,     0,   229,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   219,   203,   221,   213,     0, 
          0,     0,     0,   233,     0,     0,     0,   227,   216,     0, 
          0,   538,   225,   223,     0,   224,     0,   226,     0,     0, 
          0,     0,     0,     0,   229,     0,     0,     0,     0,   215, 
        219,   203,   221,   213,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   233,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   214, 
          0,   230,     0,     0,   215,     0,     0,     0,     0,     0, 
          0,     0,   222,   220,   231,   232,   204,   205,   206,   207, 
        209,     0,     0,   217,   218,     0,   201,   202,   208,   211, 
        210,   212,     0,   228,   214,     0,   230,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   222,   220,   231,   232,   204,   205,   206,   207, 
        209,     0,     0,   217,   218,     0,   201,   202,   208,   211, 
        210,   212,     0,   228,   227,   216,     0,     0,   539,   225, 
        223,     0,   224,     0,   226,     0,     0,     0,     0,     0, 
        229,     0,     0,     0,     0,     0,     0,   219,   203,   221, 
        213,     0,     0,     0,     0,     0,     0,     0,     0,   233, 
          0,   227,   216,     0,     0,   586,   225,   223,     0,   224, 
          0,   226,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   215,     0,     0,   219,   203,   221,   213,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   214,     0,   230,     0,     0,     0,     0,   215,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   222,   220, 
        231,   232,   204,   205,   206,   207,   209,   229,     0,   217, 
        218,     0,   201,   202,   208,   211,   210,   212,   214,   228, 
        230,     0,     0,     0,     0,     0,   233,     0,   227,   216, 
          0,     0,   587,   225,   223,     0,   224,     0,   226,     0, 
          0,     0,   229,     0,     0,     0,     0,     0,     0,     0, 
          0,   219,   203,   221,   213,     0,     0,     0,     0,     0, 
          0,   233,     0,     0,     0,   227,   216,     0,     0,     0, 
        225,   223,     0,   224,     0,   226,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   215,     0,   611,   219,   203, 
        221,   213,     0,     0,     0,   222,   220,   231,   232,   204, 
        205,   206,   207,   209,     0,     0,   217,   218,     0,   201, 
        202,   208,   211,   210,   212,   214,   228,   230,     0,     0, 
          0,     0,   215,     0,     0,     0,     0,     0,     0,     0, 
        222,   220,   231,   232,   204,   205,   206,   207,   209,     0, 
          0,   217,   218,     0,   201,   202,   208,   211,   210,   212, 
          0,   228,   214,     0,   230,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   227,   216,     0,   229, 
          0,   225,   223,     0,   224,     0,   226,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   625,   233,   219, 
        203,   221,   213,   227,   216,     0,     0,     0,   225,   223, 
          0,   224,     0,   226,     0,     0,   229,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   219,   203,   221,   213, 
          0,     0,     0,   215,     0,   233,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        215,     0,     0,   214,     0,   230,     0,   222,   220,   231, 
        232,   204,   205,   206,   207,   209,     0,     0,   217,   218, 
          0,   201,   202,   208,   211,   210,   212,     0,   228,     0, 
        214,     0,   230,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   222,   220,   231,   232,   204,   205, 
        206,   207,   209,   229,     0,   217,   218,     0,   201,   202, 
        208,   211,   210,   212,     0,   228,     0,     0,     0,     0, 
          0,     0,   233,     0,   227,   216,     0,     0,     0,   225, 
        223,     0,   224,     0,   226,     0,     0,     0,     0,     0, 
        229,     0,     0,     0,     0,     0,     0,   219,   203,   221, 
        213,     0,     0,     0,     0,     0,     0,     0,     0,   233, 
          0,   227,   216,     0,     0,     0,   225,   223,     0,   224, 
          0,   226,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   215,     0,     0,   219,   203,   221,   213,     0,     0, 
          0,   222,   220,   231,   232,   204,   205,   206,   207,   209, 
          0,     0,   217,   218,     0,   201,   202,   208,   211,   210, 
        212,   214,   228,   230,     0,     0,     0,     0,   215,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   222,   220, 
        231,   232,   204,   205,   206,   207,   209,     0,     0,   217, 
        218,   229,   201,   202,   208,   211,   210,   212,   214,   228, 
        230,   263,   263,     0,     0,   263,   263,   263,   263,   263, 
        233,   263,     0,     0,     0,     0,     0,     0,   229,     0, 
          0,     0,   263,   263,   263,   263,   263,   263,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   233,     0,     0, 
          0,     0,     0,     0,     0,   264,   264,     0,     0,   264, 
        264,   264,   264,   264,     0,   264,     0,   263,   263,     0, 
          0,     0,     0,     0,     0,     0,   264,   264,   264,   264, 
        264,   264,     0,     0,     0,     0,     0,     0,     0,   222, 
        220,   231,   232,   204,   205,   206,   207,   209,   263,   263, 
        217,   218,     0,   201,   202,   208,   211,   210,   212,     0, 
        228,   264,   264,     0,     0,     0,   222,   220,   231,   232, 
        204,   205,   206,   207,   209,     0,     0,   217,   218,     0, 
        201,   202,   208,   211,   210,   212,     0,   228,     0,     0, 
          0,     0,   264,   264,     0,   265,   265,     0,     0,   265, 
        265,   265,   265,   265,     0,   265,     0,     0,     0,   229, 
          0,     0,     0,     0,     0,     0,   265,   265,   265,   265, 
        265,   265,     0,     0,     0,     0,     0,     0,   233,     0, 
          0,     0,     0,   261,     0,     0,   261,     0,   261,   261, 
        261,     0,     0,     0,     0,     0,   229,     0,     0,     0, 
          0,   265,   265,   261,   261,   261,   261,   261,   261,     0, 
          0,     0,     0,     0,     0,   233,     0,     0,     0,     0, 
          0,   262,     0,     0,   262,     0,   262,   262,   262,     0, 
          0,   263,   265,   265,     0,     0,     0,     0,   261,   261, 
          0,   262,   262,   262,   262,   262,   262,   222,   220,   231, 
        232,   204,   205,   206,   207,   209,     0,     0,   217,   218, 
          0,     0,   202,   208,   211,   210,   212,     0,   228,   261, 
        261,     0,     0,     0,     0,   264,   262,   262,     0,     0, 
          0,     0,     0,     0,   222,   220,   231,   232,   204,   205, 
        206,   207,   209,     0,     0,   217,   218,     0,     0,     0, 
        208,   211,   210,   212,     0,   228,     0,   262,   262,     0, 
          0,   253,     0,     0,   253,     0,     0,   253,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   253,   253,     0,   253,     0,   253,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   265,   253,   253,     0,     0, 
          0,     0,     0,     0,   263,   263,     0,     0,   263,   263, 
        263,   263,   263,     0,     0,   263,   263,     0,   263,   263, 
        263,   263,   263,   263,     0,     0,     0,   253,   253,     0, 
          0,     0,   261,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   264,   264, 
          0,     0,   264,   264,   264,   264,   264,     0,     0,   264, 
        264,     0,   264,   264,   264,   264,   264,   264,     0,     0, 
        262,     0,   255,     0,     0,   255,     0,     0,   255,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   255,   255,     0,   255,     0,   255,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   254, 
          0,     0,   254,     0,     0,   254,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   255,   255,   254, 
        254,     0,   254,     0,   254,     0,     0,     0,   265,   265, 
          0,     0,   265,   265,   265,   265,   265,     0,     0,   265, 
        265,     0,   265,   265,   265,   265,   265,   265,   255,   255, 
        253,     0,     0,     0,   254,   254,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   261,   261,     0,     0,   261, 
        261,   261,   261,   261,     0,     0,   261,   261,     0,   261, 
        261,   261,   261,   261,   261,   254,   254,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   262,   262,     0,     0,   262,   262,   262, 
        262,   262,     0,     0,   262,   262,     0,   262,   262,   262, 
        262,   262,   262,     0,     0,     0,     0,   256,     0,     0, 
        256,     0,     0,   256,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   256,   256,     0, 
        256,     0,   256,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   271,     0,     0,   271,     0,     0, 
        271,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   255,   256,   256,   271,   271,     0,   271,     0,   271, 
          0,     0,     0,     0,     0,     0,     0,   253,   253,   253, 
        253,   253,     0,     0,   253,   253,     0,   253,   253,   253, 
        253,   253,   253,   256,   256,     0,     0,     0,   254,   271, 
        271,   252,     0,     0,   252,     0,     0,   252,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   270,     0,     0, 
        270,   252,   252,   270,   252,     0,   252,     0,     0,     0, 
        271,   271,     0,     0,     0,     0,     0,   270,   270,     0, 
        270,   251,   270,     0,   251,     0,     0,   251,     0,     0, 
          0,     0,     0,     0,     0,     0,   252,   252,     0,     0, 
          0,   251,   251,     0,   251,     0,   251,     0,     0,     0, 
          0,     0,   270,   270,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   252,   252,     0, 
          0,     0,     0,     0,     0,     0,   251,   251,     0,     0, 
          0,     0,     0,   270,   270,     0,     0,     0,   255,   255, 
        255,   255,   255,     0,   201,   255,   255,   201,   255,   255, 
        255,   255,   255,   255,     0,     0,   256,   251,   251,     0, 
          0,   201,   201,     0,   201,     0,   201,     0,     0,     0, 
          0,     0,     0,     0,     0,   254,   254,   254,   254,   254, 
          0,     0,   254,   254,     0,   254,   254,   254,   254,   254, 
        254,     0,     0,   271,     0,     0,   201,     0,     0,   268, 
          0,     0,   268,     0,     0,   268,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   257,     0,     0,   257,   268, 
        268,   257,   268,     0,   268,     0,     0,     0,   201,     0, 
          0,     0,     0,     0,     0,   257,   257,     0,   257,   258, 
        257,     0,   258,     0,     0,   258,     0,     0,     0,     0, 
        252,     0,     0,     0,   268,   268,     0,     0,     0,   258, 
        258,     0,   258,     0,   258,     0,   270,     0,     0,     0, 
        257,   257,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   268,   268,     0,     0,     0, 
        251,     0,     0,     0,   258,   258,     0,     0,     0,     0, 
          0,   257,   257,   256,   256,   256,   256,   256,     0,     0, 
        256,   256,     0,   256,   256,   256,   256,   256,   256,     0, 
          0,     0,     0,     0,     0,   258,   258,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        271,   271,   271,   271,   271,     0,     0,   271,   271,     0, 
        271,   271,   271,   271,   271,   271,     0,     0,     0,     0, 
        201,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        209,     0,     0,   209,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   209,   209,     0, 
        209,     0,   209,     0,     0,     0,     0,   252,   252,   252, 
        252,   252,     0,     0,   252,   252,     0,   252,   252,   252, 
        252,   252,   252,   270,   270,   270,   270,   270,   268,     0, 
        270,   270,   209,   270,   270,   270,   270,   270,   270,     0, 
          0,     0,     0,     0,   257,     0,     0,   251,   251,   251, 
        251,   251,     0,     0,   251,   251,     0,   251,   251,   251, 
        251,   251,   251,     0,   209,     0,     0,     0,   258,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   131, 
          0,   141,     0,     0,     0,     0,   140,     0,     0,   129, 
          0,   130,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   304,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   201,   201,   201, 
        201,   201,     0,     0,     0,     0,     0,   201,   201,   201, 
        201,   201,   201,     0,     0,     0,     0,    83,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   131,     0,   141,     0,     0,     0,     0,   140,     0, 
          0,   129,     0,   130,     0,     0,     0,     0,     0,     0, 
          0,     0,   132,     0,     0,   268,   268,   268,   268,   268, 
        308,     0,     0,     0,     0,   268,   268,   268,   268,   268, 
        268,   257,   257,   257,   257,   257,   209,     0,     0,     0, 
          0,   257,   257,   257,   257,   257,   257,     0,     0,    83, 
          0,     0,     0,     0,     0,   258,   258,   258,   258,   258, 
          0,     0,     0,     0,     0,   258,   258,   258,   258,   258, 
        258,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   131,   132,   141,     0,     0,     0,     0, 
        140,     0,     0,   129,     0,   130,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   128,     0, 
          0,     0,   131,     0,   141,     0,     0,     0,     0,   140, 
          0,   131,   129,   141,   130,     0,     0,     0,   140,     0, 
          0,   129,     0,   130,     0,     0,     0,     0,     0,     0, 
        300,    83,     0,     0,     0,     0,   174,    86,    87,    88, 
         89,    90,   131,     0,   141,     0,     0,     0,     0,   140, 
          0,     0,   129,     0,   130,     0,     0,     0,     0,     0, 
         83,     0,    10,     0,     0,     0,   132,     0,     0,    83, 
        302,     0,     0,   209,   209,   209,   209,   209,     0,     0, 
          0,     0,     0,   209,   209,   209,   209,   209,   209,   136, 
          0,     0,     0,     0,     0,   132,     0,     0,     0,     0, 
         83,   349,     0,     0,   132,     0,     0,     0,   174,    86, 
         87,    88,    89,    90,     0,     0,   139,     0,     0,     0, 
          0,     0,   135,     0,     0,     0,     0,     0,     0,   224, 
          0,   224,     0,     0,    10,   132,   224,     0,     0,   224, 
          0,   224,     0,   126,   127,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   136,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   305,   133,   134, 
          0,     0,     0,     0,     0,     0,     0,   224,   139,   224, 
          0,     0,     0,     0,   135,     0,     0,     0,     0,     0, 
        137,   138,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   126,   127,     0,     0,     0, 
          0,     0,   224,     0,     0,     0,    10,     0,     0,   174, 
         86,    87,    88,    89,    90,     0,     0,     0,   174,    86, 
         87,    88,    89,    90,     0,     0,     0,   131,   309,   141, 
        133,   134,     0,   136,   140,    10,     0,   129,     0,   130, 
          0,     0,     0,     0,    10,     0,     0,     0,     0,   174, 
         86,    87,    88,    89,    90,     0,     0,   131,     0,   141, 
        139,     0,   136,     0,   140,     0,   135,   129,     0,   130, 
          0,   136,     0,     0,     0,    10,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    83,     0,   126,   127,   139, 
          0,     0,     0,     0,     0,   135,     0,     0,   139,     0, 
          0,     0,   136,     0,   135,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   190,   126,   127,     0,     0, 
        132,     0,   133,   134,     0,   126,   127,     0,     0,   139, 
          0,     0,     0,     0,     0,   135,   224,   224,   224,   224, 
        224,   224,     0,     0,     0,     0,     0,     0,     0,     0, 
        132,   133,   134,     0,     0,     0,   126,   127,     0,     0, 
        133,   134,   224,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   224, 
          0,   133,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   224,     0,     0,     0, 
          0,     0,   224,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   224,   224,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   174,    86,    87,    88,    89,    90, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   224,   224, 
         10,     0,     0,     0,   174,    86,    87,    88,    89,    90, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   136,     0,     0, 
         10,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   139,     0,     0,   136,     0,     0, 
        135,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   126,   127,     0,   191,     0,     0,     0,     0,     0, 
        135,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   126,   127,     0,     0,     0,   133,   134,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   133,   134, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   120,    46,    60,    71,    41,    46,    40, 
         44,    41,    91,   303,    42,    46,   125,   156,   124,    59, 
        304,    59,   123,    84,   242,    44,   170,   385,    41,    34, 
         35,    44,   125,    41,    63,    40,    44,    98,   126,   100, 
        105,   106,    44,    63,    58,    58,    59,   260,    41,   126, 
         58,    59,   260,    61,   171,    63,    61,    62,    63,   120, 
         91,   419,    91,    60,    69,    70,    71,    91,   125,   125, 
         91,    91,   126,    40,    93,    59,   445,    39,   286,    84, 
         93,    44,    93,   123,   440,    93,    94,    49,    50,    51, 
         63,    93,    97,    98,    91,   100,   260,   550,   551,   330, 
        105,   106,   260,   321,    46,    41,   125,   260,    44,   340, 
        171,    44,   125,   140,   125,   120,   124,   125,    91,   488, 
         46,    44,   183,    59,   577,    41,    64,   340,    44,    62, 
         93,   270,   340,   286,    59,   140,   300,    41,    37,   123, 
         44,    46,   300,    42,    43,    46,    45,    41,    47,    41, 
         44,   260,    44,   260,    58,    59,   123,    93,   514,   164, 
        165,    60,   167,    62,    58,    59,   171,    59,   229,    46, 
         93,    91,   199,   260,   261,   533,   283,   286,   183,   286, 
        538,   260,    37,   322,    61,   103,    37,    42,    43,    93, 
         45,    42,    47,   300,   199,   413,    47,    59,   342,    93, 
        364,    93,   125,   260,    58,   344,   233,   346,   126,   127, 
        311,   129,   130,   131,   132,   133,   134,   257,   136,    91, 
         40,   125,   140,   332,   229,    59,    91,   126,   233,   587, 
         46,   125,   260,   125,   340,   312,   260,    44,   156,   260, 
        260,   320,    58,   331,   257,   189,   260,   261,   606,   257, 
        255,   395,   279,   332,   331,    62,    59,   364,   312,   617, 
         97,   340,   286,   260,   257,   286,   286,   185,   407,   187, 
         59,   126,   300,   412,   279,   126,    91,   331,    60,   241, 
        373,   374,    91,   201,   202,   203,   204,   205,   206,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   340,   230,   410,   402,   403,   340,   373,   374,   340, 
        459,   257,   266,   320,   242,   402,   403,    33,   165,    35, 
        167,   275,    40,   310,    40,   332,   364,    43,    46,    45, 
        260,   257,   310,   340,   421,   263,   183,    44,   402,   403, 
         58,    37,   270,   257,   272,   410,    42,    43,    91,    45, 
         61,    47,    59,   257,   429,   257,   286,    59,   410,    37, 
         38,    33,   410,    35,    42,    43,   410,    45,    40,    47, 
        410,    43,   300,    45,   302,    91,   304,   305,   260,   420, 
        308,   309,    60,   532,    62,   260,   404,   405,   406,   407, 
        408,   414,   415,   321,   322,    41,   414,   415,   416,   417, 
        418,   419,   332,   312,   286,   311,   360,   123,   255,    40, 
        126,   286,    46,    44,    59,   430,   344,   544,   346,    91, 
         41,   123,   331,    44,   352,   440,    41,    61,   393,    44, 
        126,   123,    33,   361,    35,   260,   585,    58,    59,    40, 
        278,   260,    43,   281,    45,    44,    44,   312,   126,   403, 
        332,   312,    41,   125,   126,    44,    41,    40,   340,    44, 
         59,   286,    93,   260,   479,   480,   331,   286,    41,   397, 
        331,    44,    93,   544,   260,   300,   301,   302,   123,   407, 
         40,   300,   301,   302,   412,   413,    46,   310,   416,   286, 
         91,   400,   401,   402,   403,    93,   450,    58,   533,   514, 
        414,   415,   517,   538,   125,    91,   521,   332,    93,   474, 
        414,   415,   421,   332,   300,   123,    41,   260,   261,   262, 
        263,   264,   265,    44,   125,   126,   125,   125,   123,   544, 
        601,   459,   460,    41,    59,   332,    44,   402,   403,   467, 
        468,   402,   403,   286,   260,   261,   262,   263,   264,   265, 
        621,   516,   587,    40,   340,   257,   421,   300,    91,    46, 
        421,    58,    33,    41,    35,   123,    44,   495,    93,    40, 
        286,   606,    43,    91,    45,    93,   575,   576,   543,   507, 
        479,   480,   617,   410,    41,    44,   601,    44,   260,   261, 
        262,   263,   264,   265,   300,   301,   302,   313,    40,    93, 
        125,   600,    44,   346,   532,    44,   621,   535,    61,   537, 
        344,   345,   257,    93,   286,   373,   374,    59,   517,   260, 
         91,   300,   301,   302,   340,   341,   342,   343,    13,    14, 
        346,    91,   105,   106,   312,    91,   257,    49,    50,    51, 
        257,   313,   340,   571,   360,   361,   362,   363,    41,   365, 
        366,   367,   368,   331,   370,   126,   372,   585,    44,   260, 
        261,   262,   263,   264,   265,   125,    41,   260,   340,   341, 
        342,   343,   123,   125,   346,    40,   123,   123,    91,   607, 
         61,   123,    58,   125,    40,   286,   402,   403,   360,   361, 
        362,   363,    58,   365,   366,   367,   368,   260,   370,   371, 
        372,   373,   374,    41,   260,   123,    44,    40,   125,    41, 
         40,    93,   313,    41,   430,    40,   125,    61,    40,    40, 
         58,    59,   400,   401,   402,   403,   123,    91,    41,   125, 
        402,   403,    59,   411,   412,   125,   125,   340,    40,   340, 
        341,   342,   343,   421,    40,   346,    40,   280,   281,   282, 
        283,   284,   285,    59,   287,    93,    40,    40,   430,   360, 
        361,   362,   363,   340,   365,   366,   367,   368,    40,   370, 
        303,   372,   373,   374,    37,    38,   260,    40,    41,    42, 
         43,    44,    45,    91,    47,    59,    41,   125,    41,   260, 
        261,   262,   263,   264,   265,    58,    59,    60,    61,    62, 
         63,   402,   403,    59,   260,   261,   262,   263,   264,   265, 
         61,   361,   340,    61,    59,   286,    41,   125,    41,    44, 
        280,   281,   282,   283,   284,   285,    44,   287,    91,   430, 
         93,    94,    93,    58,    59,   125,   123,    59,    40,   125, 
         44,   364,   313,   303,   123,   260,   321,   260,   261,   262, 
        263,   264,   265,    41,   340,    41,   123,   340,    41,   125, 
        123,   124,   125,   126,    59,   125,   371,   125,    93,   340, 
        341,   342,   343,   286,   334,   346,    40,   123,    59,   280, 
        281,   282,   283,   284,   285,   125,   287,   125,    41,   360, 
        361,   362,   363,    58,   365,   366,   367,   368,   125,   370, 
        125,   372,   303,    41,    37,    38,   123,    40,    41,    42, 
         43,    44,    45,   125,    47,   123,    91,    41,   123,   257, 
         44,    93,    41,    41,   125,    58,    59,    58,    61,    62, 
         63,   402,   403,   346,    58,    59,   125,    41,   257,    91, 
         44,    91,    37,    38,    91,    40,    41,    42,    43,    44, 
         45,    46,    47,    41,    58,    59,    44,    93,    91,   430, 
         93,    94,   125,    58,    59,    60,    61,    62,    63,    93, 
         58,    59,   280,   281,   282,   283,   284,   285,    59,   287, 
        125,   123,    41,    59,    41,    44,    59,    41,    41,    93, 
        123,   124,   125,   126,   257,   303,    91,   260,    93,    94, 
         59,   125,    37,    38,   364,    93,     7,    42,    43,    41, 
         45,    41,    47,   125,   125,     6,    77,   102,   341,   485, 
        521,   125,   480,    60,   496,    60,   334,    62,    59,   124, 
        125,   126,   257,   557,    93,   109,   593,   125,    41,   508, 
        557,    44,   183,   183,   347,   199,   279,   310,   311,   312, 
        244,   167,    -1,   240,    31,    58,    59,   320,    61,    94, 
         63,    -1,    41,    -1,    -1,    44,   125,   330,   331,   332, 
         -1,    -1,    -1,    -1,    -1,    -1,   414,   340,    37,    38, 
         59,    -1,    41,    42,    43,    44,    45,    -1,    47,   124, 
         93,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,   280,   281,   282,   283,   284, 
        285,    -1,   287,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,   257,    -1,    -1,   260,   303,    -1, 
         -1,    -1,    91,   257,    93,    94,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   125,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,   334, 
         -1,    -1,   257,    -1,    -1,   124,   125,   126,    41,   257, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,   310,   311,   312, 
         -1,    -1,    -1,    -1,    -1,    58,    59,   320,    -1,   414, 
        415,    -1,    -1,    -1,    -1,    -1,    -1,   330,   331,   332, 
         -1,    -1,    -1,    -1,    -1,    37,    38,   340,    40,    41, 
         42,    43,    44,    45,    46,    47,    -1,   312,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,   125,    -1,   257,    -1,    -1,    -1,    -1,    91, 
         -1,    93,    94,    60,    -1,    62,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,   312,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
        414,   415,   124,   125,   126,    -1,   331,    94,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,   126, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,   411,   412,    -1,    -1, 
         -1,   340,    41,    -1,   257,    44,   421,    91,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
        124,   125,   126,    -1,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    37,    38,    -1,   125,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    91,    41, 
        312,    -1,    44,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,   331, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,   125,    47,    -1,   312,    -1,    91,    -1,    93, 
         94,    -1,    -1,    -1,    58,    59,    60,    61,    62,    41, 
         -1,    93,    44,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,   414,   415,    -1,    -1,    -1,    58,    59,    -1,    -1, 
        124,   125,   126,   257,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,   125,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    93,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,   125,   126,    41,    -1,    -1,    44,    -1,   257,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,    -1,   312,    -1, 
         58,    59,    -1,   125,   411,   412,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   421,    -1,    -1,   331,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,   281,   282, 
        283,   284,   285,    -1,   287,    41,    -1,   125,    44,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    93,    94,    -1, 
        303,    -1,    58,    59,    -1,   257,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   124,   125, 
        126,   334,    -1,   257,    -1,    -1,    -1,    93,    91,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,   414,   415,   331,    -1,   125, 
         -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45, 
         46,    47,    -1,    41,    -1,    -1,    44,    -1,   312,    -1, 
         -1,    -1,    93,    -1,    60,    61,    62,    63,    -1,    -1, 
         58,    59,    -1,    -1,    -1,    -1,   330,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,   125,    91,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   124,    91, 
        126,   257,   414,   415,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    91,   421,    37,    38, 
         -1,   257,    41,    42,    43,    44,    45,   260,    47,    -1, 
         -1,    -1,   414,   415,    -1,    -1,   312,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,   280,   281,   282, 
        283,   284,   285,   286,   287,   331,    -1,    -1,    -1,    37, 
         38,    -1,    40,    -1,    42,    43,    44,    45,    46,    47, 
        303,    -1,    -1,    -1,    93,    94,   257,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   414,   415,    -1,   332, 
         -1,    -1,    -1,    -1,    -1,   124,   125,   126,    -1,    -1, 
         -1,   257,    -1,    91,    -1,    93,    94,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    44,    45,   312,    47,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    -1,   414,   415, 
         60,    61,    62,    63,    -1,   331,    -1,    -1,   300,   301, 
        302,    -1,   304,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,   280,   281,   282,   283,   284, 
        285,    91,   287,    93,    94,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,   300,   301,   302,   303,    -1, 
         -1,    -1,    -1,   414,   415,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   414,   415,    -1,    37, 
         38,   124,   125,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,   312,    91,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    -1,   312,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,   300,   301,   302,   303,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        410,   411,   412,   349,   414,   415,   416,   417,   418,   419, 
        420,   421,   257,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,   454,    -1, 
         -1,    -1,   400,   401,    -1,   461,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   524,    -1, 
         -1,    -1,    -1,    37,    38,   531,    -1,    41,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,   542,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,   573,    41,    42, 
         -1,    44,    -1,    -1,    47,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
        124,   125,    -1,    -1,   620,    -1,    -1,    -1,    -1,   625, 
         93,    94,    -1,    -1,   630,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   124,   125,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    -1,    47,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    -1,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
        124,   125,    -1,   257,    -1,    -1,    93,    94,    60,    -1, 
         62,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    37,    38,    -1,   257,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    58,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,   312, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        126,    -1,    -1,   257,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
        312,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,   400,   401,    -1,   331, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,   312,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,   331,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,    -1,    -1,   312,    -1,    -1,    -1,    -1,   411, 
        412,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   421, 
         -1,    -1,    -1,   331,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    60,    61, 
         62,    63,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   421,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    -1,    47,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    94, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,   126,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   124,   421, 
        126,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   421,   126,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,   312, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,   331,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    94,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,   124,    -1,   126,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   124,   421,   126,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   312,   414,   415,   416,   417,   418,   419,   124,   421, 
        126,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
        331,    47,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   124,   125, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    93,    94,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    43,    44, 
         45,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    93,    94,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    43,    44,    45,    -1, 
         -1,   257,   124,   125,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    58,    59,    60,    61,    62,    63,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,    -1,   415,   416,   417,   418,   419,    -1,   421,   124, 
        125,    -1,    -1,    -1,    -1,   257,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,    -1,    -1, 
        416,   417,   418,   419,    -1,   421,    -1,   124,   125,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
        257,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   124,   125, 
        257,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    93,    94,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   124,   125,    -1,    -1,    -1,   257,    93, 
         94,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    58,    59,    44,    61,    -1,    63,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    38,    63,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    41,   411,   412,    44,   414,   415, 
        416,   417,   418,   419,    -1,    -1,   257,   124,   125,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,   257,    -1,    -1,    93,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    58, 
         59,    44,    61,    -1,    63,    -1,    -1,    -1,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    38, 
         63,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,   257,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,   124,   125,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   404,   405,   406,   407,   408,   257,    -1, 
        411,   412,    93,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   125,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33, 
         -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    91,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,   404,   405,   406,   407,   408, 
         62,    -1,    -1,    -1,    -1,   414,   415,   416,   417,   418, 
        419,   404,   405,   406,   407,   408,   257,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    91, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,   126,    35,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1, 
         -1,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    33,    43,    35,    45,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         61,    91,    -1,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    33,    -1,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         91,    -1,   286,    -1,    -1,    -1,   126,    -1,    -1,    91, 
         61,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,    -1,   414,   415,   416,   417,   418,   419,   313, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         91,   123,    -1,    -1,   126,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    33, 
         -1,    35,    -1,    -1,   286,   126,    40,    -1,    -1,    43, 
         -1,    45,    -1,   367,   368,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   401,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,   340,    93, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,   286,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    33,   400,    35, 
        402,   403,    -1,   313,    40,   286,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    33,    -1,    35, 
        340,    -1,   313,    -1,    40,    -1,   346,    43,    -1,    45, 
         -1,   313,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,   367,   368,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,   340,    -1, 
         -1,    -1,   313,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,   367,   368,    -1,    -1, 
        126,    -1,   402,   403,    -1,   367,   368,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,   402,   403,    -1,    -1,    -1,   367,   368,    -1,    -1, 
        402,   403,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   367,   368,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
        286,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1, 
        286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,   313,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,   368,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,   368,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', 'T_YIELD_FROM', NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 
      'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 190 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 202 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 202 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 213 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 214 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 218 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 221 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 224 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 227 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 245 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 252 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 252 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 261 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 261 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 270 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 270 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 282 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 287 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 292 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 297 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 314 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 318 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 319 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 323 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 323 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 326 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 326 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 336 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 343 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 350 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 357 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 362 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 367 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 371 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 378 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 378 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 389 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 389 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 400 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 400 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 425 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 425 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 439 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 443 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 444 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 448 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 451 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 455 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 462 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 467 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 472 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 480 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 484 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 485 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 496 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 499 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 513 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 518 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 529 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 530 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 534 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 535 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 539 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 540 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 559 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 564 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 565 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 569 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 569 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 572 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 572 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 577 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 577 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 587 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 587 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 592 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 592 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 596 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 596 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 600 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 600 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 605 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 606 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 606 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 609 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 609 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 614 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 617 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 624 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 625 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 629 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 632 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 639 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 640 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 644 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 650 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 651 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 655 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 660 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 661 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 665 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 665 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 669 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 676 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 686 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 687 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 691 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 692 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 696 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 696 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 710 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 711 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 715 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 720 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 720 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 728 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 733 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 734 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 738 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 743 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 749 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 754 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 762 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 765 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 768 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 771 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 777 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 777 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 780 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 780 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 786 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 794 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 797 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 803 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 803 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 812 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 812 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 822 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 822 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 831 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 834 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 837 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 840 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 843 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldFromNode($yyVals[0+$yyTop]));
    } break;

    case 203:  #line 846 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 204:  #line 849 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 852 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 855 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 858 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 208:  #line 861 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 209:  #line 865 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 210:  #line 871 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 211:  #line 877 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 213:  #line 888 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 214:  #line 888 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 215:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 216:  #line 899 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 217:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 219:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 220:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 221:  #line 913 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 222:  #line 914 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 223:  #line 918 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 224:  #line 924 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 225:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 226:  #line 925 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 926 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 927 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 928 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 929 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 231:  #line 933 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 232:  #line 936 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 233:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 235:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 236:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 237:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 239:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 241:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 969 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 252:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 253:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 982 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 260:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 261:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 995 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 996 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 997 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 271:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 272:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1004 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 1005 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 276:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 279:  #line 1012 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 281:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 283:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 284:  #line 1024 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 285:  #line 1028 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 286:  #line 1028 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 287:  #line 1031 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 288:  #line 1034 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 289:  #line 1034 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 290:  #line 1037 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 291:  #line 1037 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 292:  #line 1043 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 293:  #line 1044 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 300:  #line 1062 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 301:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 302:  #line 1067 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 303:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 304:  #line 1075 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 305:  #line 1076 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 307:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 308:  #line 1085 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 309:  #line 1086 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 310:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 311:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 312:  #line 1097 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 313:  #line 1098 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 314:  #line 1102 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 315:  #line 1103 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 316:  #line 1104 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 317:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 318:  #line 1106 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 319:  #line 1107 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 320:  #line 1108 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 321:  #line 1109 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3047 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
