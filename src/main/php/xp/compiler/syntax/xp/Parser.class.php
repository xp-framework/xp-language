<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
#line 76 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= [-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,   112,    31,    99,    99,   103,   103,   113,   113,   114, 
        114,    36,   116,    36,    36,    36,    36,    36,    36,   115, 
        115,    97,    97,   117,   117,   119,   119,   118,   118,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   108,   108,   108,   108,   108,   108,   108,   108,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   110,   110,   110,   110,   110,   110,   111,   111,   101, 
        101,   120,   120,   122,   121,   121,   124,   121,   125,   121, 
        123,   123,    10,    10,    10,    32,    32,    32,    32,    12, 
         12,    95,    96,   127,   127,   128,   128,   129,   129,   129, 
        129,   126,   126,    21,    21,    49,    49,   130,   130,   131, 
        131,   131,   131,   131,   131,   131,   131, 
    ];
    protected static $yyLen= [2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     3,     1,     1,     1,     1,     1,     5,     3,     3, 
          3,     0,     7,     2,     4,     0,     1,     1,     3,     1, 
          3,     1,     0,     4,     1,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     3,     0,     1,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     2,     0,     6,     0,     4, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          4,     3,     4,     1,     3,     1,     3,     2,     1,     3, 
          5,     5,     5,     1,     3,     0,     1,     1,     2,     1, 
          1,     1,     1,     1,     1,     1,     1, 
    ];
    protected static $yyDefRed= [0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   293,     0,     0,   295,   294,     0,    15,     0,   320, 
        322,   321,   324,   326,   325,   327,   323,     1,     0,    68, 
          0,   318,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   319,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   223,     0,     0,   229,   225,   228,   226,   227, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,     0,   296,     0,   297,   298,   299,     0,   304, 
         27,     0,     0,     0,    31,    35,     0,     0,   232,     0, 
          0,     0,     0,     0,     0,   192,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   230,     0,   231,   203,   204, 
        205,   206,   207,     0,     0,   234,     0,     0,    79,    80, 
         83,    84,     0,    78,     0,     0,     0,     0,     0,     0, 
          0,     0,   301,    29,    35,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   198,     0,   196, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   218,     0,   194,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   278,   279,     0,   284,   292,   291, 
        289,   191,   281,     0,     0,     0,   224,     0,     0,   307, 
          0,     0,   308,     0,     0,     0,   302,   305,     0,   315, 
          0,     0,    25,     0,    34,    36,    37,     0,     0,     0, 
         42,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   186,   188,     0,   100,     0,     0,     0,   220,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   211,     0,   202,     0, 
          0,   283,     0,   175,     0,     0,   237,   235,    82,   303, 
          0,   310,     0,     0,    21,     0,     0,     0,     0,     0, 
          0,     0,    23,     0,    35,     0,     0,   193,     0,     0, 
          0,     0,     0,   189,     0,   221,   190,   219,     0,     0, 
        184,   181,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   287,   312,     0,   313,   113,     0,   131,   117, 
        121,   123,   119,   127,   129,   115,   125,     0,     0,     0, 
          0,   111,     0,    63,     0,     0,     0,     0,     0,     0, 
         35,    45,     0,    43,     0,     0,     0,     0,     0,     0, 
          0,   212,     0,   195,     0,   285,   290,     0,   311,     0, 
        133,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    38,   137,   112,     0,     0,    61,    59,   103, 
        104,   105,   106,   107,   108,     0,     0,     0,     0,     0, 
          0,     0,   179,   180,   197,   215,     0,     0,     0,     0, 
          0,     0,     0,   138,     0,     0,     0,     0,   155,     0, 
          0,   128,   130,     0,     0,     0,     0,   142,   222,     0, 
          0,    93,     0,     0,     0,     0,     0,    65,     0,    48, 
          0,     0,    53,    33,     0,   178,   213,   182,   288,   114, 
          0,     0,     0,     0,   132,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    50,     0,    98,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    52,    55, 
          0,    49,    54,    47,     0,     0,   139,     0,     0,     0, 
        156,     0,     0,     0,     0,     0,     0,   143,     0,     0, 
          0,     0,    94,    96,    95,     0,     0,     0,     0,     0, 
        164,   170,   134,     0,   161,   162,     0,     0,   122,     0, 
        146,     0,     0,     0,     0,    97,   102,     0,    85,     0, 
         64,     0,     0,     0,    56,     0,     0,   160,   169,   163, 
        135,     0,     0,     0,   158,   116,   151,   153,     0,     0, 
        149,   136,     0,     0,    62,    60,     0,     0,     0,     0, 
        124,   120,     0,     0,     0,   126,   150,    87,    86,    66, 
        166,     0,     0,     0,   159,     0,     0,     0,     0,   171, 
        118,     0,   154,   167,     0,   152,     0,     0,   165, 
    ];
    protected static $yyDgoto= [2,
          3,     6,    28,   143,     4,     7,     8,    17,    53,    18, 
        264,   114,    61,    99,   123,   177,    63,   269,    62,   101, 
        125,   412,   265,   266,   267,   399,   270,   271,   351,   352, 
        400,   198,   366,   410,   502,   145,   492,   503,   535,   497, 
        562,   591,   496,   493,   447,   456,   538,    41,    30,    42, 
         58,    94,    95,    96,   146,   494,   495,   401,   402,   305, 
        430,   440,   480,   606,   434,   437,   521,   435,   436,   441, 
        609,   438,   439,   433,   471,   573,   473,   487,   474,   488, 
        610,   611,   624,   625,   623,   574,   598,   575,   576,   596, 
        632,   597,   147,   275,   116,   117,   148,   373,   282,   192, 
        242,   193,   200,   187,   291,   279,   149,   150,   151,   152, 
        153,   467,   201,   202,   154,   103,   155,   156,   338,   243, 
        244,   330,   245,   428,   331,   118,   119,   120,   170,    31, 
         32, 
    ];
    protected static $yySindex = [         -282,
          0,     0,  -234,   -78,  -186,  1781,  -234,     0,    35,   144, 
        106,     0,  -185,  -185,     0,     0,   205,     0,   189,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   218,     0, 
        849,     0,     0,   -78,   -78,     0,   -35,   221,   -23,  -143, 
        151,     0,     0,     0,     0,     0,     0,     0,   -23,   -23, 
        -23,     0,   284,     0,   307,   266,     0,   318,   189,   849, 
        -78,   -78,   -78,   311,     0,   323,   361,     0,   -78,   -78, 
        812,     0,     0,   349,   126,   131,   126,     0,     0,     0, 
          0,     0,     0,   -78,   108,     0,     0,     0,     0,     0, 
        402,    55,     0,   426,   354,     0,   403,   -78,   158,   -78, 
        363,   158,  5272,   444,    -6,    -6,  -177,     0,    88,     0, 
        187,   441,   664,     0,   417,     0,     0,     0,   287,     0, 
          0,   -78,   387,   468,     0,     0,   410,  5623,     0,  5623, 
       5623,  5623,  5623,  5623,  5623,     0,  5623,   498,   479,     0, 
       5434,   430,   129,  3858,   -30,     0,   529,     0,     0,     0, 
          0,     0,     0,   500,   541,     0,  5623,    35,     0,     0, 
          0,     0,   535,     0,   -78,   463,   343,   381,   417,   346, 
        512,   403,     0,     0,     0,   -78,  1319,   362,   377,  2955, 
       -121,  -121,   -70,  -121,  -121,  -121,   463,     0,  5623,     0, 
       5623,   367,   -30,   441,     0,   -51,  2785,    -9,   289,   592, 
        600,     0,   382,     0,  5623,  5623,  5623,  5623,  5623,  5623, 
       5623,  5623,  5623,  5623,  5623,  5623,  5623,  5623,  5623,  5623, 
       5462,  5479,  5180,  5623,  5225,  5623,  5623,  5623,  5623,  5623, 
       5623,  5623,   -78,  5623,     0,     0,   463,     0,     0,     0, 
          0,     0,     0,   -30,  -185,  5623,     0,   350,   608,     0, 
        145,   463,     0,   135,   609,   463,     0,     0,  1347,     0, 
        538,   406,     0,   107,     0,     0,     0,     0,   568,   112, 
          0,  5623,   654,   417,   -30,   574,   575,  3858,  5623,  3858, 
       5589,     0,     0,   -30,     0,   642,   367,   382,     0,   367, 
       -112,  4019,  4054,  4054,  4054,  4054,  4054,  4054,  4054,  4054, 
       4054,  4054,  4054,  3858,   647,   309,   342,   828,  5623,   440, 
       5623,   440,  5623,  5623,     4,     4,  5623,  5623,     4,     4, 
        159,   159,   119,   119,   119,   -70,     0,  -121,     0,  5623, 
       5623,     0,   666,     0,   655,   479,     0,     0,     0,     0, 
        -12,     0,   463,    50,     0,   573,   456,   384,   458,   -57, 
        596,   684,     0,   362,     0,    26,  5623,     0,  5623,   -14, 
        687,   573,  3858,     0,  5623,     0,     0,     0,   610,   685, 
          0,     0,   -30,  5623,  4054,  4054,     4,     4,     4,     4, 
        643,   696,     0,     0,   171,     0,     0,   -11,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   698,   614,  2982, 
        573,     0,   680,     0,   706,   707,    97,   657,   642,   628, 
          0,     0,  5623,     0,  1395,   720,   639,   640,   -30,   645, 
       3858,     0,  5623,     0,    26,     0,     0,  5623,     0,  5623, 
          0,   427,  5623,   732,   733,   539,   734,   716,   725,   745, 
        751,   453,     0,     0,     0,   327,   400,     0,     0,     0, 
          0,     0,     0,     0,     0,   755,   400,   735,   536,  1386, 
       3009,   596,     0,     0,     0,     0,   -30,   756,   774,   758, 
        573,   759,   364,     0,  3174,  5623,  5623,   573,     0,   460, 
        486,     0,     0,  5623,  5623,   763,   375,     0,     0,   780, 
        139,     0,   803,   804,   -54,   243,   243,     0,   757,     0, 
        -33,   -93,     0,     0,   596,     0,     0,     0,     0,     0, 
        722,  5623,   427,   726,     0,   792,  3394,   728,   814,   811, 
        494,  3421,  3559,  5623,   453,   741,     0,   606,     0,   546, 
        400,   516,   642,   400,   827,   804,   831,   400,     0,     0, 
        573,     0,     0,     0,   275,  3858,     0,   573,  5623,   539, 
          0,  5623,   534,  5623,   539,   746,  3858,     0,   573,   642, 
        -78,   -36,     0,     0,     0,   804,   546,   546,   835,   753, 
          0,     0,     0,   275,     0,     0,   762,   824,     0,  3586, 
          0,  3613,   513,   265,   766,     0,     0,  5623,     0,   573, 
          0,   -36,   -36,   546,     0,   857,   775,     0,     0,     0, 
          0,  5623,   848,   539,     0,     0,     0,     0,   783,   265, 
          0,     0,  3723,   785,     0,     0,   -36,   -78,   573,   871, 
          0,     0,   539,  5623,   859,     0,     0,     0,     0,     0, 
          0,  -106,   793,   539,     0,  3821,   573,   -78,   879,     0, 
          0,   573,     0,     0,   798,     0,   573,   797,     0, 
    ];
    protected static $yyRindex= [         1755,
          0,     0,   924,     0,     0,   263,  1934,     0,   769,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        754,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -24,   109,     0,     0,   298,     0,   805, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   943,   -84,   800,   -84,     0,     0,     0, 
          0,     0,     0,     0,   -37,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   806,     0, 
          0,   806,   834,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   306,     0,     0,     0,     0,     0, 
          0,     0,     0,   -32,     0,     0,     0,  2529,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  2048,  1927,  1001, 
        890,     0,     0,   484,  1719,     0,   667,     0,     0,     0, 
          0,     0,     0,     0,   -41,     0,   891,   -29,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   689,     0, 
          0,     0,     0,     0,     0,     0,   249,   823,  1154,    62, 
       2119,  2227,  2750,  2312,  2349,  2450,     0,     0,     0,     0, 
          0,     0,  1719,  5609,  1787,   -13,     0,  1598,     0,     0, 
         -8,     0,   692,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   893,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  1898,     0,  1069,     0,    33,     0,     0, 
          0,     0,     0,   909,     0,     0,     0,     0,   249,     0, 
        861,     0,     0,     0,     0,     0,     0,   492,     0,   830, 
          0,     0,   846,     0,  1719,   865,   866,    45,   891,    67, 
          0,     0,     0,  1719,     0,   -16,     0,     0,     0,     0, 
          0,   764,    64,    66,   319,   511,   673,  1109,  1202,  1240, 
       1451,  1459,  1579,   991,     0,  4768,   903,  4961,     0,  4977, 
          0,  5004,     0,     0,  3085,  4451,     0,     0,  4510,  4539, 
       4317,  4354,  4124,  4243,  4280,  2858,     0,  2558,     0,   867, 
        891,     0,  1390,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   833,     0,   114,     0,     0, 
        220,     0,     0,     0,     0,  5020,   891,     0,   838,     0, 
          0,   833,  1727,     0,     0,     0,     0,     0,     0,  1488, 
          0,     0,  1719,     0,  1729,  1826,  4578,  4747,  4784,  4838, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -108,     0,     0,     0,     0,   836,     0,     0,   906,     0, 
          0,     0,     0,     0,   337,     0,     0,     0,  1719,     0, 
         87,     0,   891,     0,  5046,     0,     0,   891,     0,   908, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   927,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   249, 
          0,  1332,     0,     0,     0,     0,  1719,     0,     0,     0, 
        833,   414,     0,     0,     0,   911,     0,   833,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        178,     0,     0,   930,     0,   931,   931,     0,     0,     0, 
          0,     0,     0,     0,   220,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   613, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    13, 
          0,     0,   178,     0,     0,   932,     0,   927,     0,     0, 
        833,     0,     0,     0,     0,   454,     0,   833,   911,     0, 
          0,     0,     0,     0,     0,     0,   473,     0,   833,   178, 
          0,     0,     0,     0,     0,   933,    13,    13,     0,     0, 
          0,     0,     0,   285,     0,     0,     0,     0,     0,     0, 
          0,     0,   416,   853,     0,     0,     0,     0,     0,   833, 
          0,     0,     0,    13,     0,     0,     0,     0,     0,     0, 
          0,   891,     0,     0,     0,     0,     0,     0,     0,   854, 
          0,     0,     0,     0,     0,     0,     0,     0,   833,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  -105,     0,     0,     0, 
          0,  -105,     0,     0,     0,     0,   833,     0,     0, 
    ];
    protected static $yyGindex= [0,
          0,     0,     0,    -4,     0,     0,   975,   661,   633,   425, 
        983,   -60,     0,   914,   892,  -161,     0,     0,     0,     0, 
       -116,  -407,     0,     0,     0,    53,     0,   638,     0,     0, 
         83,   -21,  -356,     0,     0,   -63,  -412,   491,   501,     0, 
        -79,  -256,     0,   457,     0,     0,     0,     0,   939,   941, 
          0,   586,     0,   898,  -150,   -64,  -104,     0,   682,  -198, 
          0,     0,   146,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   495,   485, 
          0,   399,     0,     0,     0,     0,     0,   437,   438,     0, 
          0,     0,     0,     0,   826,   829,   658,     0,   312,     0, 
       -180,     0,   816,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   729,     0,     0,     0,   772,     0,   778, 
          0,     0,     0,     0,     0,     0,     0,   851,   856,     0, 
        994, 
    ];
    protected static $yyTable = [11,
         75,    76,    77,   222,   234,   174,   249,    93,    97,   241, 
         50,   222,   283,   259,   222,   240,   110,   638,    52,   109, 
          1,    16,   589,   104,    57,   540,   314,    57,   432,    47, 
         48,   542,   217,   171,    13,    57,   199,   121,    26,   124, 
        231,    93,    93,   129,   499,   229,   227,   334,   228,   300, 
        230,   233,   458,   285,   506,   234,    74,    74,    74,   260, 
        238,   124,   231,   220,    81,    82,    92,   229,   227,     5, 
        228,   101,   230,    12,    12,   115,   236,   300,   171,    74, 
         34,   171,   161,   233,    83,   223,   590,   225,   238,   541, 
        314,   169,    74,    74,   358,    74,    13,   544,   199,    14, 
         92,    92,   200,   364,   210,   200,   240,   210,    74,   240, 
        239,   431,   384,    15,    15,   124,    55,    74,   563,   219, 
        200,   210,   210,   240,   240,   236,   273,    58,   361,   234, 
         58,   381,   329,   454,   529,   101,   196,   238,   452,   450, 
        171,   451,    10,   453,   251,    58,   254,   370,    17,   218, 
        115,   234,    17,    34,   200,   354,   210,   236,   240,   239, 
        250,    74,   162,    74,    36,   274,   501,    74,   105,   238, 
        355,    74,   327,    17,   386,   342,   565,    16,    16,    58, 
        382,     9,    74,   199,   528,   144,   200,   371,   210,    35, 
        240,   239,   424,   415,    59,   231,    56,   112,    74,   365, 
        229,    17,   406,   586,    17,   230,   416,    10,   417,   237, 
        180,   429,   181,   182,   183,   184,   185,   186,    57,   188, 
        588,    57,   455,   197,   314,   171,    26,   372,    74,   113, 
        341,   470,    74,   639,   344,   171,    12,   340,   465,   144, 
         57,   233,   350,    60,   234,   335,   336,    74,   217,   460, 
         39,    74,    40,   158,    86,    87,    88,    89,    90,    74, 
        237,   171,   407,    32,   110,   110,    51,   109,   109,   101, 
         57,   278,   468,   280,   408,   532,    15,   469,    32,    10, 
        235,   236,   409,    74,   234,   533,   507,   292,   293,   294, 
        295,   296,   297,   298,   299,   300,   301,   302,   303,   304, 
        306,   307,   308,   310,   312,   315,   316,   319,   320,   321, 
        322,   323,   324,   325,   326,   233,   328,   168,   200,   168, 
        210,   385,   240,    70,   168,   516,   300,   168,   304,   168, 
        172,   235,   236,   112,   237,   615,   616,   233,    74,    84, 
         16,    71,    68,    58,    32,   231,   220,   163,   173,   306, 
        229,   227,    34,   228,   356,   230,   237,    71,   204,   241, 
        630,   144,   241,   363,    69,   113,   348,   306,   223,    78, 
        225,   316,    17,    17,    49,   168,   241,   241,   231,   220, 
         17,    79,   490,   229,   227,    16,   228,    91,   230,   239, 
         71,   375,    10,   376,   110,   377,   378,   109,   578,   379, 
        380,   223,   219,   225,   514,   235,   236,   513,    97,   168, 
        168,   241,   304,   144,   420,   526,   190,    83,   525,    80, 
        168,   253,    34,   404,   232,   226,   224,   235,   236,    34, 
        233,   536,   536,    17,   234,    98,   221,   222,   349,   144, 
        100,   144,    74,   241,   587,    17,   232,   421,   157,   237, 
        157,   620,    74,    17,   140,   157,   425,   140,   157,   316, 
        157,    39,   106,    54,   107,   111,   108,   234,   122,   566, 
        233,   112,   112,    65,    54,    54,   231,   210,   210,   240, 
        240,   229,   227,   157,   228,   126,   230,   592,   593,   237, 
        112,    74,    74,   112,   141,   461,   165,   141,   166,   223, 
        124,   225,     9,   113,   113,   144,   157,   171,   316,   175, 
        144,   176,   304,   144,   617,   475,   144,    43,    44,    45, 
        235,   236,   113,   511,   174,   113,    74,   174,    10,    74, 
        518,    46,   178,    74,   316,    44,   191,   190,   204,   232, 
        157,   157,   174,    34,   168,   168,   168,   168,   168,   168, 
         44,   242,   203,   112,   242,   189,    74,   631,   144,   517, 
        235,   236,   316,   316,   316,   234,   522,   523,   242,   242, 
        168,   132,   246,   142,   534,   241,   174,   644,   141,   232, 
        316,   130,   491,   131,   248,   113,   489,    86,    87,    88, 
         89,    90,   247,   570,   546,   105,   316,   168,   367,   252, 
        577,   369,   256,   242,   257,   132,   557,   142,   174,   335, 
        336,   585,   141,    74,    44,   130,    44,   131,   571,   572, 
        233,   268,   316,   281,   168,   168,   168,   168,   286,    83, 
        168,   144,   287,    74,   580,   242,   582,   607,   608,   237, 
          9,     9,   614,   288,   168,   168,   168,   168,   339,   168, 
        168,   168,   343,   233,   168,   168,   168,   168,   168,     9, 
        346,   478,     9,    83,   133,   347,    10,    10,   316,   333, 
        613,   633,   237,    37,    38,   157,   157,   157,   157,   157, 
        157,    64,    66,    67,   144,    10,   168,   168,    10,   643, 
        159,   160,   353,   357,   646,   579,   359,   360,   133,   648, 
        583,   157,   365,   168,   374,   383,   636,   173,   226,   224, 
        235,   236,   189,   243,   168,   403,   243,   405,   411,   221, 
        222,   289,     9,   413,   423,   173,   167,   419,   157,   232, 
        243,   243,   241,   241,   422,   426,   427,   442,   443,   491, 
        446,   226,   224,   235,   236,   448,   449,   457,    10,   622, 
        459,   233,   221,   222,   112,   157,   157,   157,   157,   173, 
        462,   157,   232,   463,   464,   243,   472,   242,   635,   466, 
        237,   476,   477,   481,   482,   157,   157,   157,   157,   641, 
        157,   157,   157,   483,   484,   157,   113,   157,   157,   157, 
        485,   173,   486,   500,   498,   501,   508,   243,   179,    86, 
         87,    88,    89,    90,   209,    17,    17,   209,    17,    17, 
         17,    17,    17,    17,   509,    17,   510,   157,   157,   512, 
        519,   209,   209,   524,    10,   520,    17,    17,    17,    17, 
         17,    17,   179,    86,    87,    88,    89,    90,   527,   226, 
        224,   235,   236,   530,   317,   157,   545,   531,   548,   539, 
        549,   137,   551,   552,   553,   564,   209,   554,    10,    17, 
        232,    17,    17,   559,   231,   560,   561,   567,   584,   229, 
        227,   568,   228,   581,   230,   594,   317,   595,   140,   387, 
        388,   389,   602,   605,   136,   137,   601,   223,   209,   225, 
        612,    17,    17,    17,    17,   316,   618,   619,   390,   391, 
        392,   393,    83,   394,   395,   128,   621,   626,   396,   629, 
        397,   634,   140,   387,   388,   389,   637,   640,   136,   645, 
        647,   649,    30,     9,   242,   242,   172,   316,    28,   243, 
        216,   172,   390,   391,   392,   393,   296,   394,   395,   128, 
        134,   135,   396,   268,   397,   309,   268,    41,   216,    10, 
        176,   324,   309,   234,    40,   297,   298,   109,    51,   176, 
        268,   268,   172,   268,    57,   268,   176,    91,   398,   172, 
         92,    88,    90,    89,   134,   135,   145,   147,   148,   300, 
        300,    33,   300,   300,   300,   300,   300,   300,    29,   300, 
        102,   414,   543,   127,   569,   268,   268,   537,    73,    72, 
        300,   300,   398,   300,   300,   300,   164,   547,   627,   558, 
        599,   600,   276,   317,     5,   277,   368,   418,   290,   337, 
        209,   332,   258,   255,    46,    17,   268,   268,    17,     0, 
          0,   177,     0,   300,   177,   300,   300,   187,   187,   317, 
        187,   187,   187,   187,   187,   187,   187,   187,   177,   177, 
          0,     0,     0,   317,   317,   317,     0,     0,   187,   187, 
        187,   187,   187,   187,   316,   300,   300,   300,   300,     0, 
          0,    85,    86,    87,    88,    89,    90,     0,    17,    17, 
         17,     0,   445,   177,     0,   317,   243,   243,    17,     0, 
        316,   187,     0,   187,   187,     0,     0,    10,    17,    17, 
         17,     0,     0,     0,   316,   316,   316,     0,    17,   176, 
          0,    91,   176,     0,     0,   177,     0,   479,     0,     0, 
        324,     0,     0,     0,   187,   187,   187,   176,    20,    21, 
         22,    23,    24,    25,     0,    26,   316,     0,     0,   233, 
        324,   324,   324,   324,   324,   324,   324,   324,     0,   244, 
          0,    27,   244,     0,     0,     0,     0,    84,   237,   268, 
          0,   176,     0,   324,     0,     0,   244,   244,    17,    17, 
         17,    17,    17,    17,    17,    17,    17,   209,    17,    17, 
         17,     0,    17,    17,    17,    17,    17,    17,     0,    17, 
        222,   222,   324,   176,   222,   222,   222,   222,   222,   300, 
        222,   244,   300,     5,     5,     5,     5,     5,     5,     0, 
          5,   222,   222,    17,   222,   222,    17,     0,     0,     0, 
          0,     0,     0,     5,     5,     5,     5,   226,   224,   235, 
        236,   479,     0,   244,     0,     0,   479,     0,   221,   222, 
          0,     0,   246,     0,    17,   246,   222,   222,   232,     0, 
          0,     0,   300,   300,   300,     0,     0,   185,     0,   246, 
        246,     0,   300,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   300,   300,   300,     0,     0,   222,   222,   222, 
        245,     0,   300,   245,     0,   479,     0,     0,     0,     0, 
          0,     0,     0,     0,   246,     0,     0,   245,   245,     0, 
          0,     0,     0,     0,   479,     0,   268,   268,   268,   268, 
        268,     0,   187,     0,     0,   479,   268,   268,   268,   268, 
        268,   268,     0,     0,     0,     0,   246,     0,     0,     0, 
          0,   187,   245,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   300,   300,   300,   300,   300,   300,   300,   300, 
        300,     0,     0,   300,   300,     0,   300,   300,   300,   300, 
        300,   300,     0,   300,   245,   244,     0,     0,    32,    32, 
          0,    32,    32,    32,    32,    32,    32,    32,    32,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    32, 
         32,    32,    32,    32,    32,     0,     0,     0,     0,     0, 
        187,   187,   187,   187,   187,   187,   187,   187,   187,    19, 
        222,   187,   187,     0,   187,   187,   187,   187,   187,   187, 
        187,   187,    32,     0,    32,    32,   286,   286,     0,     0, 
        286,   286,   286,   286,   286,   286,   286,    19,     0,     0, 
          0,     0,     0,   263,     0,     0,     0,   286,   286,   286, 
        286,   286,   286,     0,     0,    32,    32,    32,   246,     0, 
          0,     0,     0,     0,     0,   222,     0,     0,     0,     0, 
          0,   345,     0,     0,     0,     0,    19,     0,     0,     0, 
        286,     0,   286,   286,   222,    19,     0,     0,     0,     0, 
          0,   247,     0,    17,   247,     0,   245,     0,     0,   248, 
          0,     0,   248,     0,     0,     0,     0,     0,   247,   247, 
        504,     0,     0,   286,   286,   286,   248,   248,     0,     0, 
          0,     0,   244,   244,   183,   183,     0,     0,   183,   183, 
        183,   183,   183,   183,   183,     0,     0,     0,     0,     0, 
          0,     0,     0,   247,     0,   183,   183,   183,   183,   183, 
        183,   248,     0,   222,   222,   222,   222,   222,   222,   222, 
        222,   222,     0,    17,   222,   222,     0,   222,   222,   222, 
        222,   222,   222,   222,   222,   247,     0,     0,   183,     0, 
        183,   183,     0,   248,     0,     0,     0,     0,    32,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    20,    21, 
         22,   261,    24,    25,     0,    26,     0,     0,     0,     0, 
          0,   183,   183,   183,     0,   246,   246,     0,     0,   249, 
          0,    27,   249,     0,     0,     0,    20,    21,    22,   261, 
         24,    25,     0,    26,    99,    99,   249,   249,    99,    99, 
         99,    99,    99,    32,    99,     0,   286,     0,     0,    27, 
          0,     0,   262,   245,   245,    99,    99,    99,    99,    99, 
          0,     0,    32,     0,     0,    20,    21,    22,   261,    24, 
         25,   249,    26,     0,    20,    21,    22,   261,    24,    25, 
        262,    26,     0,     0,     0,     0,     0,     0,    27,     0, 
         99,    99,     0,     0,     0,     0,     0,    27,     0,     0, 
          0,   286,     0,   249,     0,     0,     0,   247,     0,     0, 
          0,     0,     0,     0,     0,   248,     0,     0,     0,   262, 
        286,    99,    99,    99,     0,     0,     0,     0,   262,     0, 
          0,    32,    32,    32,    32,    32,    32,    32,    32,    32, 
          0,     0,    32,    32,   183,    32,    32,    32,    32,    32, 
         32,    32,    32,     0,     0,   280,   280,     0,     0,   280, 
        280,   280,   280,   280,     0,   280,     0,   214,     0,   258, 
        214,     0,   258,     0,     0,     0,   280,   280,   280,   280, 
        280,   280,     0,     0,   214,   214,   258,   258,     0,   286, 
        286,   286,   286,   286,   286,   286,   286,   286,     0,   183, 
        286,   286,     0,   286,   286,   286,   286,   286,   286,   286, 
        286,   280,   280,     0,     0,     0,     0,     0,   183,   214, 
          0,   258,     0,   187,   187,     0,   187,   187,   187,   187, 
        220,   187,   187,   187,     0,   249,     0,     0,     0,     0, 
          0,     0,   280,   280,   280,     2,   187,   187,   187,   187, 
          0,   214,     0,   258,    99,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   247,   247,   259,     0,     0,   259, 
          0,    19,   248,   248,     0,     0,     0,   187,     0,     0, 
        187,     0,     0,   259,   259,     0,     0,   183,   183,   183, 
        183,   183,   183,   183,   183,   183,     0,     0,   183,   183, 
          0,   183,   183,   183,   183,   183,   183,   183,   183,    99, 
        187,     0,   187,     0,     0,     0,     0,     0,   259,     0, 
          0,     0,     0,     0,     0,     0,     0,    99,    99,     0, 
          0,     0,     0,     0,   282,   282,     0,    99,   282,   282, 
        282,   282,   282,     0,   282,     0,     0,     0,     0,     0, 
        259,     0,     0,     0,     0,   282,   282,   282,   282,   282, 
        282,     0,     0,   229,   229,     0,   229,     0,   229,   229, 
        229,   229,   229,   229,     0,   280,     0,     0,     0,     0, 
          0,     0,     0,   214,     0,   258,   229,   229,   229,   229, 
        282,   282,   249,   249,     0,     0,     0,    99,    99,    99, 
         99,    99,    99,    99,    99,    99,     0,     0,    99,    99, 
          0,    99,    99,    99,    99,    99,    99,   229,    99,   229, 
        229,   282,   282,   282,     6,     0,     0,     0,     0,     0, 
        280,     0,     0,     0,     2,     2,     2,     2,     2,     2, 
          0,     2,     0,   185,     0,     0,     0,     0,     0,   280, 
        229,     0,   229,     0,     2,     2,     2,     0,     2,     0, 
         20,    21,    22,    23,    24,    25,     0,    26,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   259,    27,   222,   222,     0,     0,     0,   222, 
        222,   222,   222,     0,   222,     0,     0,     0,   187,     0, 
          0,     0,     0,     0,     0,     0,     0,   222,   222,   222, 
        222,     0,     0,     0,     0,     0,     0,   187,   280,   280, 
        280,   280,   280,   280,   280,   280,   280,     0,     0,   280, 
        280,     0,   280,   280,   280,   280,   280,   280,   222,   280, 
        222,   222,   258,   258,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   282,   274,   274,     0,     0,   274, 
        274,   274,   274,   274,     0,   274,     0,     0,     0,     0, 
          0,   222,     0,   222,     0,     0,   274,   274,   274,   274, 
        274,   274,     0,     0,     0,     0,   187,   187,   187,   187, 
        187,   187,   187,   187,   187,     0,     0,   187,   187,     0, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,   282, 
          0,   274,   274,     6,     6,     6,     6,     6,     6,     0, 
          6,     0,     0,     0,     0,     0,     0,     0,   282,     0, 
          0,     0,     0,     6,     6,     6,     6,     0,   229,   259, 
        259,     0,   274,   274,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   229,     0,     0, 
          0,     0,     0,   275,   275,     0,     0,   275,   275,   275, 
        275,   275,     0,   275,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   275,   275,   275,   275,   275,   275, 
          0,     0,     0,     0,     0,     0,     0,   282,   282,   282, 
        282,   282,   282,   282,   282,   282,     0,     0,   282,   282, 
          0,   282,   282,   282,   282,   282,   282,     0,   282,   275, 
        275,     0,     0,     0,     0,     0,   229,   229,   229,   229, 
        229,   229,   229,   229,   229,     0,     0,   229,   229,     0, 
        229,   229,   229,   229,   229,   229,   229,   229,   273,   273, 
        275,   275,   273,   273,   273,   273,   273,     0,   273,   222, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   273, 
        273,   273,   273,   273,   273,   274,     0,     0,   222,     0, 
          0,     0,     0,     0,     0,   276,   276,     0,     0,   276, 
        276,   276,   276,   276,     0,   276,     0,     0,     0,     0, 
          0,     0,     0,     0,   273,   273,   276,   276,   276,   276, 
        276,   276,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        274,     0,     0,     0,     0,   273,   273,     0,     0,     0, 
          0,   276,   276,     0,     0,     0,     0,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,     0,    17,   222,   222, 
          0,   222,   222,   222,   222,   222,   222,   222,   222,     0, 
          0,     0,   276,   276,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   275,     0,     0,   277,   277,     0,     0, 
        277,   277,   277,   277,   277,     0,   277,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   277,   277,   277, 
        277,   277,   277,     0,     0,     0,     0,     0,   274,   274, 
          0,     0,   274,   274,   274,   274,   274,     0,     0,   274, 
        274,     0,   274,   274,   274,   274,   274,   274,   275,   274, 
          0,     0,   277,   277,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   199,   199,     0,   273,   199, 
        199,     0,   199,   277,   277,   199,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   199,   199,   199,   199, 
        199,   199,     0,     0,   265,   265,     0,     0,   265,   265, 
        265,   265,   265,     0,   265,   276,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   265,   265,   265,   265,   265, 
        265,   199,   199,   273,     0,     0,   275,   275,     0,     0, 
        275,   275,   275,   275,   275,     0,     0,   275,   275,     0, 
        275,   275,   275,   275,   275,   275,     0,   275,     0,     0, 
        265,   265,   199,   199,     0,     0,     0,     0,     0,     0, 
        276,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   265,   265,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   277,     0,     0,     0, 
          0,   273,   273,     0,     0,   273,   273,   273,   273,   273, 
          0,     0,   273,   273,     0,   273,   273,   273,   273,   273, 
        273,     0,   273,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   276,   276, 
          0,     0,   276,   276,   276,   276,   276,     0,     0,   276, 
        276,   277,   276,   276,   276,   276,   276,   276,     0,   276, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   199,   272,   272,     0,     0, 
        272,   272,   272,   272,   272,     0,   272,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   272,   272,   272, 
        272,   272,   272,     0,   265,     0,     0,     0,     0,     0, 
          0,   231,   220,     0,     0,   284,   229,   227,     0,   228, 
          0,   230,     0,     0,     0,     0,     0,     0,     0,     0, 
        199,     0,   272,   272,   223,   207,   225,   217,     0,   277, 
        277,     0,     0,   277,   277,   277,   277,   277,     0,   199, 
        277,   277,     0,   277,   277,   277,   277,   277,   277,   265, 
        277,     0,     0,   272,   272,     0,     0,     0,   219,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   271,   271,     0,     0,   271,   271, 
        271,   271,   271,     0,   271,     0,     0,     0,   218,     0, 
        234,     0,     0,     0,     0,   271,   271,   271,   271,   271, 
        271,     0,     0,     0,     0,     0,     0,     0,   199,   199, 
          0,     0,   199,   199,   199,   199,   199,     0,     0,   199, 
        199,     0,   199,   199,   199,   199,   199,   199,     0,   199, 
        271,   271,     0,     0,     0,     0,     0,   265,   265,     0, 
          0,   265,   265,   265,   265,   265,     0,     0,   265,   265, 
          0,   265,   265,   265,   265,   265,   265,     0,   265,     0, 
          0,   271,   271,     0,     0,     0,     0,     0,     0,     0, 
          0,   231,   220,     0,     0,     0,   229,   227,     0,   228, 
          0,   230,     0,     0,     0,     0,   272,     0,     0,     0, 
          0,     0,   272,     0,   223,   207,   225,   217,   231,   220, 
          0,     0,     0,   229,   227,     0,   228,     0,   230,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        444,   223,   207,   225,   217,   231,   220,     0,   219,   505, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   223,   207, 
        225,   217,     0,     0,     0,   219,     0,     0,   218,     0, 
        234,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   233,     0,     0,     0, 
          0,     0,   219,     0,     0,   218,     0,   234,     0,     0, 
          0,     0,     0,     0,   271,   237,     0,     0,     0,     0, 
          0,     0,   252,     0,     0,   252,     0,     0,   252,     0, 
          0,     0,   218,     0,   234,     0,     0,     0,     0,     0, 
          0,     0,   252,   252,     0,   252,     0,   252,     0,   272, 
        272,     0,     0,   272,   272,   272,   272,   272,     0,     0, 
        272,   272,     0,   272,   272,   272,   272,   272,   272,     0, 
        272,     0,     0,     0,     0,     0,     0,   252,   252,     0, 
          0,     0,     0,     0,   226,   224,   235,   236,   208,   209, 
        210,   211,   213,     0,     0,   221,   222,     0,   205,   206, 
        212,   215,   214,   216,     0,   232,     0,     0,   252,   252, 
        231,   220,     0,     0,     0,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   515,   223,   207,   225,   217,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   271,   271,     0, 
          0,   271,   271,   271,   271,   271,   233,   219,   271,   271, 
          0,   271,   271,   271,   271,   271,   271,     0,   271,     0, 
          0,     0,     0,     0,     0,   237,     0,     0,     0,     0, 
          0,     0,     0,   233,     0,     0,     0,   218,     0,   234, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   237,     0,     0,     0,     0,     0,     0,     0, 
        233,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   237, 
          0,   252,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   226,   224,   235,   236,   208,   209, 
        210,   211,   213,     0,     0,   221,   222,     0,   205,   206, 
        212,   215,   214,   216,     0,   232,     0,     0,     0,     0, 
          0,   226,   224,   235,   236,   208,   209,   210,   211,   213, 
          0,     0,   221,   222,     0,   205,   206,   212,   215,   214, 
        216,     0,   232,     0,     0,     0,     0,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,     0,     0,   221, 
        222,     0,   205,   206,   212,   215,   214,   216,     0,   232, 
        231,   220,     0,     0,   550,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   223,   207,   225,   217,   231,   220,     0, 
          0,   555,   229,   227,     0,   228,     0,   230,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        223,   207,   225,   217,     0,   233,     0,   219,   252,   252, 
        252,   252,   252,     0,     0,   252,   252,     0,   252,   252, 
        252,   252,   252,   252,   237,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   219,     0,     0,   218,     0,   234, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   218,     0,   234,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,     0,     0,   221,   222,     0,   205,   206,   212, 
        215,   214,   216,     0,   232,   231,   220,     0,     0,   556, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   223,   207, 
        225,   217,   231,   220,     0,     0,   603,   229,   227,     0, 
        228,     0,   230,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   223,   207,   225,   217,   231, 
        220,     0,   219,   604,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   223,   207,   225,   217,     0,     0,     0,   219, 
          0,     0,   218,     0,   234,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   233,   219,     0,     0,   218, 
          0,   234,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   237,     0,     0,     0,     0,     0, 
          0,     0,   233,     0,     0,     0,   218,     0,   234,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   237,     0,     0,     0,     0,     0,     0,     0,   231, 
        220,     0,     0,     0,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   628,   223,   207,   225,   217,     0,     0,     0,     0, 
          0,     0,     0,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,     0,     0,   221,   222,     0,   205,   206,   212, 
        215,   214,   216,     0,   232,     0,   219,     0,     0,     0, 
        226,   224,   235,   236,   208,   209,   210,   211,   213,     0, 
          0,   221,   222,     0,   205,   206,   212,   215,   214,   216, 
          0,   232,     0,     0,     0,     0,   218,     0,   234,     0, 
          0,     0,     0,     0,     0,     0,     0,   231,   220,     0, 
          0,     0,   229,   227,     0,   228,     0,   230,     0,     0, 
        233,     0,     0,     0,     0,     0,     0,     0,   642,     0, 
        223,   207,   225,   217,     0,     0,     0,     0,     0,   237, 
          0,     0,     0,     0,   231,   220,     0,   233,     0,   229, 
        227,     0,   228,     0,   230,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   219,     0,   237,   223,   207,   225, 
        217,     0,     0,     0,   233,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   237,   218,     0,   234,     0,     0,     0, 
          0,   219,     0,     0,     0,     0,     0,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,     0,     0,   221, 
        222,     0,   205,   206,   212,   215,   214,   216,     0,   232, 
          0,   218,     0,   234,     0,   226,   224,   235,   236,   208, 
        209,   210,   211,   213,     0,     0,   221,   222,     0,   205, 
        206,   212,   215,   214,   216,     0,   232,     0,     0,     0, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,     0,   232,   233,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   237,     0,   231,   220,     0,     0,     0, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   223,   207, 
        225,   217,     0,     0,     0,     0,     0,     0,     0,     0, 
        231,   220,     0,     0,     0,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   219,   223,   207,   225,   217,     0,     0,     0, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,   233,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,   218,   232,   234,     0,     0,   219,     0,     0, 
          0,   237,     0,     0,     0,     0,     0,     0,     0,     0, 
        262,   262,     0,     0,   262,   262,   262,   262,   262,   233, 
        262,     0,     0,     0,     0,     0,     0,   218,     0,   234, 
          0,   262,   262,   262,   262,   262,   262,     0,   237,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   262,   262,     0,     0, 
        226,   224,   235,   236,   208,   209,   210,   211,   213,     0, 
          0,   221,   222,     0,   205,   206,   212,   215,   214,   216, 
          0,   232,     0,     0,     0,     0,     0,   262,   262,     0, 
          0,     0,     0,     0,     0,     0,     0,   226,   224,   235, 
        236,   208,   209,   210,   211,   213,     0,     0,   221,   222, 
          0,   205,   206,   212,   215,   214,   216,     0,   232,   263, 
        263,     0,     0,   263,   263,   263,   263,   263,     0,   263, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        263,   263,   263,   263,   263,   263,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   264,   264,     0,     0, 
        264,   264,   264,   264,   264,     0,   264,     0,     0,     0, 
        233,     0,     0,     0,     0,   263,   263,   264,   264,   264, 
        264,   264,   264,     0,     0,     0,     0,     0,     0,   237, 
          0,     0,     0,     0,   260,     0,     0,   260,     0,   260, 
        260,   260,     0,     0,     0,   233,   263,   263,     0,     0, 
          0,     0,   264,   264,   260,   260,   260,   260,   260,   260, 
        262,     0,     0,     0,   237,     0,     0,     0,     0,     0, 
          0,   261,     0,     0,   261,     0,   261,   261,   261,     0, 
          0,     0,     0,   264,   264,     0,     0,     0,     0,   260, 
        260,   261,   261,   261,   261,   261,   261,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,     0,     0,   221, 
        222,     0,     0,   206,   212,   215,   214,   216,     0,   232, 
        260,   260,     0,     0,     0,     0,   261,   261,     0,     0, 
          0,     0,     0,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,     0,     0,   221,   222,     0,     0,     0,   212, 
        215,   214,   216,     0,   232,     0,     0,   261,   261,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   254,     0, 
          0,   254,     0,     0,   254,     0,     0,     0,     0,   263, 
          0,     0,     0,     0,     0,     0,     0,     0,   254,   254, 
          0,   254,     0,   254,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   262,   262,     0,     0,   262,   262,   262, 
        262,   262,     0,     0,   262,   262,   264,   262,   262,   262, 
        262,   262,   262,   254,   254,     0,     0,   253,     0,     0, 
        253,     0,     0,   253,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   253,   253,     0, 
        253,     0,   253,   260,   254,   254,   255,     0,     0,   255, 
          0,     0,   255,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   255,   255,     0,   255, 
          0,   255,   253,   253,     0,     0,     0,     0,     0,     0, 
        261,     0,     0,     0,     0,   270,     0,     0,   270,     0, 
          0,   270,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   255,   255,   253,   253,   270,   270,     0,   270,     0, 
        270,     0,   263,   263,     0,     0,   263,   263,   263,   263, 
        263,     0,     0,   263,   263,     0,   263,   263,   263,   263, 
        263,   263,   255,   255,     0,     0,     0,     0,     0,     0, 
        270,   270,     0,     0,     0,     0,     0,     0,     0,   264, 
        264,     0,     0,   264,   264,   264,   264,   264,     0,     0, 
        264,   264,     0,   264,   264,   264,   264,   264,   264,     0, 
          0,   270,   270,     0,     0,     0,     0,   254,     0,     0, 
          0,     0,     0,     0,     0,     0,   260,   260,     0,     0, 
        260,   260,   260,   260,   260,     0,     0,   260,   260,     0, 
        260,   260,   260,   260,   260,   260,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   261,   261,     0,     0,   261,   261,   261, 
        261,   261,     0,     0,   261,   261,   253,   261,   261,   261, 
        261,   261,   261,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   251,     0,     0,   251,     0,     0, 
        251,     0,     0,     0,     0,   255,     0,     0,     0,     0, 
          0,     0,     0,     0,   251,   251,     0,   251,   266,   251, 
          0,   266,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   269,     0,     0,   269,   266,   266,   269,   266,     0, 
        266,     0,     0,     0,   270,     0,     0,     0,     0,   251, 
        251,   269,   269,     0,   269,     0,   269,     0,     0,     0, 
          0,     0,     0,     0,   254,   254,   254,   254,   254,     0, 
        266,   254,   254,     0,   254,   254,   254,   254,   254,   254, 
        251,   251,     0,     0,     0,   250,   269,   269,   250,     0, 
          0,   250,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   266,   266,     0,     0,   250,   250,     0,   250,     0, 
        250,     0,     0,     0,     0,     0,     0,   269,   269,     0, 
          0,     0,     0,   253,   253,   253,   253,   253,     0,     0, 
        253,   253,     0,   253,   253,   253,   253,   253,   253,     0, 
        250,   250,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   255,   255,   255,   255,   255,     0,     0,   255, 
        255,     0,   255,   255,   255,   255,   255,   255,     0,     0, 
          0,   250,   250,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   270,   270,   270,   270,   270,     0,     0,   270,   270, 
          0,   270,   270,   270,   270,   270,   270,     0,   267,     0, 
          0,   267,     0,   251,   267,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   256,     0,     0,   256,   267,   267, 
        256,   267,     0,   267,   266,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   256,   256,     0,   256,     0,   256, 
        269,   257,     0,     0,   257,     0,     0,   257,     0,     0, 
          0,     0,     0,   267,   267,     0,     0,     0,     0,     0, 
        201,   257,   257,   201,   257,     0,   257,     0,     0,   256, 
        256,     0,     0,     0,     0,     0,     0,   201,   201,     0, 
        201,     0,   201,     0,   267,   267,   208,     0,     0,   208, 
          0,     0,     0,     0,   250,     0,   257,   257,     0,     0, 
        256,   256,     0,   208,   208,     0,   208,     0,   208,     0, 
          0,     0,   201,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   257,   257,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   208,     0, 
          0,     0,     0,     0,   201,     0,     0,     0,     0,     0, 
        251,   251,   251,   251,   251,     0,     0,   251,   251,     0, 
        251,   251,   251,   251,   251,   251,     0,     0,     0,     0, 
        208,   266,   266,   266,   266,   266,     0,     0,     0,     0, 
          0,   266,   266,   266,   266,   266,   266,   269,   269,   269, 
        269,   269,     0,     0,   269,   269,     0,   269,   269,   269, 
        269,   269,   269,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   132,     0,   142,     0,     0,   267,     0,   141, 
          0,     0,   130,     0,   131,     0,     0,     0,     0,     0, 
          0,     0,     0,   256,     0,     0,     0,     0,     0,   313, 
          0,   250,   250,   250,   250,   250,     0,     0,   250,   250, 
          0,   250,   250,   250,   250,   250,   250,   132,     0,   142, 
        257,     0,     0,     0,   141,     0,     0,   130,     0,   131, 
         83,     0,     0,     0,     0,     0,   201,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   317,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   208,     0,   132,   133,   142,     0,     0,     0, 
          0,   141,     0,     0,   130,    83,   131,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   129, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        133,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    83,     0,   267,   267,   267,   267,   267,     0, 
          0,     0,     0,     0,   267,   267,   267,   267,   267,   267, 
        256,   256,   256,   256,   256,     0,     0,     0,     0,     0, 
        256,   256,   256,   256,   256,   256,     0,   133,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   257,   257,   257, 
        257,   257,     0,     0,     0,     0,     0,   257,   257,   257, 
        257,   257,   257,   201,   201,   201,   201,   201,     0,     0, 
          0,     0,     0,   201,   201,   201,   201,   201,   201,   179, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,   208, 
        208,   208,   208,   208,     0,     0,     0,     0,     0,   208, 
        208,   208,   208,   208,   208,    10,   132,     0,   142,     0, 
          0,     0,     0,   141,     0,     0,   130,     0,   131,     0, 
          0,     0,     0,     0,   179,    86,    87,    88,    89,    90, 
          0,     0,   137,     0,   132,     0,   142,     0,     0,     0, 
          0,   141,     0,     0,   130,     0,   131,     0,     0,     0, 
         10,   132,     0,   142,     0,     0,     0,     0,   141,   140, 
          0,   130,   309,   131,   194,   136,     0,     0,     0,     0, 
          0,   138,   139,    87,    88,    89,    90,   137,     0,   311, 
          0,     0,     0,     0,     0,     0,   128,     0,     0,     0, 
          0,     0,    83,     0,     0,     0,   113,    10,     0,   133, 
          0,     0,     0,     0,   140,     0,     0,     0,     0,    83, 
        136,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        314,   134,   135,     0,   137,     0,     0,   133,     0,     0, 
          0,   128,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   133,     0,     0,     0,     0,     0, 
          0,   140,     0,     0,     0,     0,     0,   136,     0,     0, 
          0,   132,     0,   142,   318,     0,   134,   135,   141,     0, 
          0,   130,     0,   131,     0,     0,     0,     0,   128,     0, 
          0,   223,     0,   223,     0,     0,     0,     0,   223,     0, 
          0,   223,     0,   223,     0,   132,     0,   142,     0,     0, 
          0,     0,   141,     0,     0,   130,     0,   131,     0,     0, 
          0,     0,     0,   134,   135,     0,     0,     0,     0,    83, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   179,    86,    87,    88,    89,    90,   223, 
          0,   223,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   362,     0,    83,   133,     0,     0,     0,     0,    10, 
          0,   179,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,     0,     0,     0,   223,     0,     0,     0,   179,    86, 
         87,    88,    89,    90,     0,     0,   137,    10,   133,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    10,     0,     0,     0,     0,     0, 
          0,     0,     0,   195,   137,     0,     0,     0,     0,   136, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   137,     0,     0,     0,     0,     0,     0,     0,     0, 
        128,   140,     0,     0,     0,     0,     0,   136,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   140,     0, 
          0,     0,     0,     0,   136,     0,     0,     0,   128,     0, 
          0,     0,     0,     0,     0,   134,   135,     0,     0,     0, 
          0,     0,     0,     0,     0,   128,     0,     0,   179,    86, 
         87,    88,    89,    90,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   134,   135,     0,     0,     0,   223,   223, 
        223,   223,   223,   223,    10,     0,     0,     0,     0,     0, 
        134,   135,   179,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,   223,     0,     0,     0,     0,     0, 
          0,   137,     0,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   223,     0,     0,     0,     0,     0,     0,   140,     0, 
          0,     0,     0,     0,   136,   137,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   223,     0, 
          0,     0,     0,     0,   223,   128,     0,     0,     0,     0, 
          0,     0,   140,     0,     0,     0,     0,     0,   136,     0, 
          0,     0,     0,     0,     0,   223,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   128, 
        134,   135,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        223,   223,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,   135, 
    ];
    protected static $yyCheck = [4,
         61,    62,    63,    41,   126,   122,   157,    71,    60,    40, 
         46,    41,   193,   175,    44,    46,   125,   124,    42,   125, 
        303,    46,    59,    84,    41,    59,    59,    44,    40,    34, 
         35,   125,    41,    91,    59,    40,   141,    98,   123,   100, 
         37,   105,   106,    58,   457,    42,    43,   246,    45,    63, 
         47,    93,   409,    63,   462,   126,    61,    62,    63,   176, 
         91,   122,    37,    38,    69,    70,    71,    42,    43,   304, 
         45,    59,    47,   260,   260,    97,    44,    91,    91,    84, 
         46,    91,   260,   125,    91,    60,   123,    62,    44,   123, 
        123,   113,    97,    98,   275,   100,   283,   505,   203,   286, 
        105,   106,    41,   284,    41,    44,    41,    44,   113,    44, 
         44,   123,   125,   300,   300,   176,   260,   122,   531,    94, 
         59,    58,    59,    58,    59,    93,   187,    41,   279,   126, 
         44,   330,   237,    37,   491,   123,   141,    93,    42,    43, 
         91,    45,   286,    47,   166,    59,   168,   260,    40,   124, 
        172,   126,    44,    46,    93,    44,    93,   125,    93,    93, 
        165,   166,   340,   168,    59,   187,   260,   172,    61,   125, 
         59,   176,   233,    60,   125,    41,   533,   364,   364,    93, 
        331,   260,   187,   288,    46,   103,   125,   300,   125,    46, 
        125,   125,   373,   355,    44,    37,   340,    91,   203,    61, 
         42,    93,   260,   560,    91,    47,   357,   286,   359,   331, 
        128,    41,   130,   131,   132,   133,   134,   135,    41,   137, 
        257,    44,   126,   141,   257,    91,   311,   340,   233,   123, 
        252,   430,   237,   340,   256,    91,   260,    93,   419,   157, 
        257,   312,   264,    93,   126,   260,   261,   252,   257,   411, 
         46,   256,    64,   260,   261,   262,   263,   264,   265,   264, 
        331,    91,   320,    44,   373,   374,    46,   373,   374,   257, 
         93,   189,   423,   191,   332,   330,   300,   428,    59,   286, 
        402,   403,   340,   288,   126,   340,   467,   205,   206,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   229,   230,   231,   232,   312,   234,    33,   257,    35, 
        257,   343,   257,    58,    40,   476,   340,    43,   246,    45, 
         44,   402,   403,    91,   331,   592,   593,   312,   343,   346, 
        364,    44,    59,   257,   125,    37,    38,   260,    62,    44, 
         42,    43,    46,    45,   272,    47,   331,    40,   410,    41, 
        617,   279,    44,   281,    58,   123,   260,    62,    60,    59, 
         62,   123,   410,   260,   410,    91,    58,    59,    37,    38, 
        410,    59,   446,    42,    43,   410,    45,   300,    47,   420, 
         93,   309,   286,   311,    41,   313,   314,    44,   549,   317, 
        318,    60,    94,    62,    41,   402,   403,    44,    60,   125, 
        126,    93,   330,   331,   362,    41,    40,    91,    44,    59, 
         40,    41,    46,    40,   421,   400,   401,   402,   403,    46, 
        312,   496,   497,   320,   126,   310,   411,   412,   332,   357, 
        310,   359,   447,   125,   561,   332,   421,   365,    33,   331, 
         35,   602,   457,   340,    41,    40,   374,    44,    43,   123, 
         45,   125,    61,    39,   410,    63,    41,   126,   311,   534, 
        312,    91,    91,    49,    50,    51,    37,   414,   415,   414, 
        415,    42,    43,    40,    45,   123,    47,   567,   568,   331, 
         91,   496,   497,    91,    41,   413,   310,    44,    58,    60, 
        561,    62,   260,   123,   123,   423,    91,    91,   260,   123, 
        428,    44,   430,    41,   594,   433,    44,   300,   301,   302, 
        402,   403,   123,   471,    41,   123,   531,    44,   286,   534, 
        478,    40,   123,   538,   286,    44,    58,    40,   410,   421, 
        125,   126,    59,    46,   260,   261,   262,   263,   264,   265, 
         59,    41,   123,    91,    44,    58,   561,   618,   476,   477, 
        402,   403,   300,   301,   302,   126,   484,   485,    58,    59, 
        286,    33,    44,    35,   332,   257,    93,   638,    40,   421, 
        332,    43,   340,    45,    44,   123,   260,   261,   262,   263, 
        264,   265,    93,   541,   512,    61,   260,   313,   287,   257, 
        548,   290,   257,    93,    93,    33,   524,    35,   125,   260, 
        261,   559,    40,   618,   123,    43,   125,    45,   344,   345, 
        312,   260,   286,   257,   340,   341,   342,   343,   340,    91, 
        346,   549,    41,   638,   552,   125,   554,   373,   374,   331, 
        260,   260,   590,    44,   360,   361,   362,   363,    41,   365, 
        366,   367,    44,   312,   370,   371,   372,   373,   374,   260, 
        123,   123,   260,    91,   126,   260,   286,   286,   332,   245, 
        588,   619,   331,    13,    14,   260,   261,   262,   263,   264, 
        265,    49,    50,    51,   602,   286,   402,   403,   286,   637, 
        105,   106,   125,    40,   642,   550,   123,   123,   126,   647, 
        555,   286,    61,    40,    58,    40,   624,    41,   400,   401, 
        402,   403,    58,    41,   430,   260,    44,   260,   123,   411, 
        412,   340,   260,    40,    40,    59,    63,    41,   313,   421, 
         58,    59,   414,   415,   125,    93,    41,    40,   125,   340, 
         61,   400,   401,   402,   403,    40,    40,    91,   286,   604, 
        123,   312,   411,   412,    91,   340,   341,   342,   343,    93, 
         41,   346,   421,   125,   125,    93,   340,   257,   623,   125, 
        331,    40,    40,    40,    59,   360,   361,   362,   363,   634, 
        365,   366,   367,    59,    40,   370,   123,   372,   373,   374, 
         40,   125,   340,    59,    40,   260,    41,   125,   260,   261, 
        262,   263,   264,   265,    41,    37,    38,    44,    40,    41, 
         42,    43,    44,    45,    41,    47,    59,   402,   403,    61, 
        361,    58,    59,    61,   286,   340,    58,    59,    60,    61, 
         62,    63,   260,   261,   262,   263,   264,   265,    59,   400, 
        401,   402,   403,    41,    91,   430,   125,    44,   123,    93, 
         59,   313,   125,    40,    44,   340,    93,   364,   286,    91, 
        421,    93,    94,   123,    37,   260,   321,    41,   123,    42, 
         43,    41,    45,   340,    47,    41,   123,   125,   340,   341, 
        342,   343,    59,   371,   346,   313,   125,    60,   125,    62, 
        125,   123,   124,   125,   126,    91,    40,   123,   360,   361, 
        362,   363,    91,   365,   366,   367,    59,   125,   370,   125, 
        372,    41,   340,   341,   342,   343,    58,   125,   346,    41, 
        123,   125,   123,   260,   414,   415,    93,   123,   123,   257, 
         41,    41,   360,   361,   362,   363,    91,   365,   366,   367, 
        402,   403,   370,    41,   372,   257,    44,   125,   257,   286, 
         58,    91,    44,   126,   125,    91,    91,   125,   123,    93, 
         58,    59,   125,    61,    59,    63,    59,    41,   430,    59, 
         41,    41,    41,    41,   402,   403,   364,   125,   125,    37, 
         38,     7,    40,    41,    42,    43,    44,    45,     6,    47, 
         77,   354,   502,   102,   538,    93,    94,   497,    60,    59, 
         58,    59,   430,    61,    62,    63,   109,   513,   610,   525, 
        574,   574,   187,   260,    91,   187,   288,   360,   203,   248, 
        257,   244,   172,   168,    31,   257,   124,   125,   260,    -1, 
         -1,    41,    -1,    91,    44,    93,    94,    37,    38,   286, 
         40,    41,    42,    43,    44,    45,    46,    47,    58,    59, 
         -1,    -1,    -1,   300,   301,   302,    -1,    -1,    58,    59, 
         60,    61,    62,    63,   260,   123,   124,   125,   126,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,   310,   311, 
        312,    -1,   401,    93,    -1,   332,   414,   415,   320,    -1, 
        286,    91,    -1,    93,    94,    -1,    -1,   286,   330,   331, 
        332,    -1,    -1,    -1,   300,   301,   302,    -1,   340,    41, 
         -1,   300,    44,    -1,    -1,   125,    -1,   436,    -1,    -1, 
        260,    -1,    -1,    -1,   124,   125,   126,    59,   280,   281, 
        282,   283,   284,   285,    -1,   287,   332,    -1,    -1,   312, 
        280,   281,   282,   283,   284,   285,   286,   287,    -1,    41, 
         -1,   303,    44,    -1,    -1,    -1,    -1,   346,   331,   257, 
         -1,    93,    -1,   303,    -1,    -1,    58,    59,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   414,   410,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         37,    38,   332,   125,    41,    42,    43,    44,    45,   257, 
         47,    93,   260,   280,   281,   282,   283,   284,   285,    -1, 
        287,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   300,   301,   302,   303,   400,   401,   402, 
        403,   550,    -1,   125,    -1,    -1,   555,    -1,   411,   412, 
         -1,    -1,    41,    -1,    91,    44,    93,    94,   421,    -1, 
         -1,    -1,   310,   311,   312,    -1,    -1,   257,    -1,    58, 
         59,    -1,   320,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   330,   331,   332,    -1,    -1,   124,   125,   126, 
         41,    -1,   340,    44,    -1,   604,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,   623,    -1,   404,   405,   406,   407, 
        408,    -1,   312,    -1,    -1,   634,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,   331,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,   125,   257,    -1,    -1,    37,    38, 
         -1,    40,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    91, 
        257,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    91,    -1,    93,    94,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    46,    47,    91,    -1,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,   124,   125,   126,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1, 
         91,    -1,    93,    94,   331,    91,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,   340,    44,    -1,   257,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    58,    59, 
        125,    -1,    -1,   124,   125,   126,    58,    59,    -1,    -1, 
         -1,    -1,   414,   415,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    -1,    58,    59,    60,    61,    62, 
         63,    93,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,   410,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   125,    -1,    -1,    91,    -1, 
         93,    94,    -1,   125,    -1,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    -1,    -1,    -1, 
         -1,   124,   125,   126,    -1,   414,   415,    -1,    -1,    41, 
         -1,   303,    44,    -1,    -1,    -1,   280,   281,   282,   283, 
        284,   285,    -1,   287,    37,    38,    58,    59,    41,    42, 
         43,    44,    45,   312,    47,    -1,   257,    -1,    -1,   303, 
         -1,    -1,   334,   414,   415,    58,    59,    60,    61,    62, 
         -1,    -1,   331,    -1,    -1,   280,   281,   282,   283,   284, 
        285,    93,   287,    -1,   280,   281,   282,   283,   284,   285, 
        334,   287,    -1,    -1,    -1,    -1,    -1,    -1,   303,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   303,    -1,    -1, 
         -1,   312,    -1,   125,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,   334, 
        331,   124,   125,   126,    -1,    -1,    -1,    -1,   334,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   257,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    41,    -1,    41, 
         44,    -1,    44,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    58,    59,    58,    59,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   312, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,    94,    -1,    -1,    -1,    -1,    -1,   331,    93, 
         -1,    93,    -1,    37,    38,    -1,    40,    41,    42,    43, 
         44,    45,    46,    47,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,   126,    91,    60,    61,    62,    63, 
         -1,   125,    -1,   125,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   414,   415,    41,    -1,    -1,    44, 
         -1,    91,   414,   415,    -1,    -1,    -1,    91,    -1,    -1, 
         94,    -1,    -1,    58,    59,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   312, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   330,   331,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,   340,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    37,    38,    -1,    40,    -1,    42,    43, 
         44,    45,    46,    47,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,   257,    60,    61,    62,    63, 
         93,    94,   414,   415,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    91,   421,    93, 
         94,   124,   125,   126,    91,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,   280,   281,   282,   283,   284,   285, 
         -1,   287,    -1,   257,    -1,    -1,    -1,    -1,    -1,   331, 
        124,    -1,   126,    -1,   300,   301,   302,    -1,   304,    -1, 
        280,   281,   282,   283,   284,   285,    -1,   287,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,   303,    37,    38,    -1,    -1,    -1,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   331,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    91,   421, 
         93,    94,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,   126,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   312, 
         -1,    93,    94,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,   300,   301,   302,   303,    -1,   312,   414, 
        415,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    93, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    37,    38, 
        124,   125,    41,    42,    43,    44,    45,    -1,    47,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,   257,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   312,   421, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,   257,    41, 
         42,    -1,    44,   124,   125,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    93,    94,   312,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         93,    94,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   312,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    93,    94,    60,    61,    62,    63,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   331, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   312, 
        421,    -1,    -1,   124,   125,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    58,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         59,    60,    61,    62,    63,    37,    38,    -1,    94,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,   124,   125, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,   312,    94,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,   312,    -1,    94,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    37, 
         38,    -1,    94,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    94, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    94,    -1,    -1,   124, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    94,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    37,    38,    -1,   312,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,   331,    60,    61,    62, 
         63,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,   124,    -1,   126,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   421,   126,    -1,    -1,    94,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,   312, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126, 
         -1,    58,    59,    60,    61,    62,    63,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    93,    94,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    -1,    -1,    -1,   312,   124,   125,    -1,    -1, 
         -1,    -1,    93,    94,    58,    59,    60,    61,    62,    63, 
        257,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    43,    44,    45,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,    -1,   415,   416,   417,   418,   419,    -1,   421, 
        124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,    -1,    -1,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   257,   414,   415,   416, 
        417,   418,   419,    93,    94,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,   257,   124,   125,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,   124,   125,    58,    59,    -1,    61,    -1, 
         63,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   257,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    41,    63, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    58,    59,    44,    61,    -1, 
         63,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         93,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        124,   125,    -1,    -1,    -1,    38,    93,    94,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    38,    -1, 
         -1,    41,    -1,   257,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    58,    59, 
         44,    61,    -1,    63,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
        257,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         41,    58,    59,    44,    61,    -1,    63,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,   124,   125,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,   257,    -1,    93,    94,    -1,    -1, 
        124,   125,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
        125,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    33,    -1,    35,    -1,    -1,   257,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    60, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    33,    -1,    35, 
        257,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         91,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    -1,    33,   126,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    91,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416, 
        417,   418,   419,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,    -1,   414,   415,   416,   417,   418,   419,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,    -1,    -1,   414, 
        415,   416,   417,   418,   419,   286,    33,    -1,    35,    -1, 
         -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,   313,    -1,    33,    -1,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
        286,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,   340, 
         -1,    43,    61,    45,    91,   346,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,   313,    -1,    61, 
         -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,   123,   286,    -1,   126, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    91, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        401,   402,   403,    -1,   313,    -1,    -1,   126,    -1,    -1, 
         -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    33,    -1,    35,   400,    -1,   402,   403,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,   367,    -1, 
         -1,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    91, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    91, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   123,    -1,    91,   126,    -1,    -1,    -1,    -1,   286, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,   313,   286,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,   313,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,   367,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,   286,    -1,    -1,    -1,    -1,    -1, 
        402,   403,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,   367,    -1,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403, 
    ];
    protected static $yyFinal= 2;
    protected static $yyName= [    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    ];

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return [];

    for (
      $result= [], $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= [];
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 188 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 200 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 200 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 211 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 8:  #line 212 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 9:  #line 216 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(['name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop]]));
    } break;

    case 10:  #line 219 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(['name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop]]));
    } break;

    case 11:  #line 222 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(['name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop]]));
  } break;

    case 12:  #line 225 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', [$yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]]);
    $yyVal= $yyLex->create(new StaticImportNode(['name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop]]));
  } break;

    case 16:  #line 238 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 243 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 244 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 250 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 250 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 259 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 259 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 268 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 268 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 279 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 284 "src/main/jay/grammars/xp.jay"
    { $yyVal= []; } break;

    case 29:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 289 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 294 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 299 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= []; } break;

    case 36:  #line 304 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 305 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 310 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 311 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 316 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 43:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 44:  #line 321 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(['name' => $yyVals[0+$yyTop]])); } break;

    case 45:  #line 321 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 324 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(['name' => $yyVals[0+$yyTop]])); } break;

    case 47:  #line 324 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 334 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 341 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 348 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 354 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(['name' => $yyVals[0+$yyTop]])); } break;

    case 52:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(['parameter' => $yyVals[-1+$yyTop]])); } break;

    case 53:  #line 359 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 364 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[-1+$yyTop]=> NULL]; } break;

    case 56:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]]; } break;

    case 57:  #line 369 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 370 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 376 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 376 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 387 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 387 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], [new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))]);
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 398 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 398 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          ['__construct']
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 423 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 423 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 436 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop], $yyVals[-2+$yyTop]]; } break;

    case 68:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop], NULL]; } break;

    case 69:  #line 441 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 70:  #line 442 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 71:  #line 446 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= ['default' => $yyVals[-1+$yyTop]];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 453 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 460 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 465 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 470 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 477 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 482 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[-2+$yyTop] => $yyVals[0+$yyTop]]; } break;

    case 80:  #line 483 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[-2+$yyTop] => $yyVals[0+$yyTop]]; } break;

    case 82:  #line 488 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 494 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 497 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 503 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 504 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))]; } break;

    case 88:  #line 509 "src/main/jay/grammars/xp.jay"
    { $yyVal= [NULL, NULL]; } break;

    case 89:  #line 510 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']]; } break;

    case 90:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop], NULL]; } break;

    case 91:  #line 515 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 520 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 94:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 95:  #line 525 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(['name' => $yyVals[-1+$yyTop]], $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 526 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(['name' => $yyVals[0+$yyTop], 'vararg' => TRUE], $yyVals[-2+$yyTop]); } break;

    case 97:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['assign' => $yyVals[-1+$yyTop]]; $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE]; $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['type' => $yyVals[0+$yyTop], 'check' => TRUE]; } break;

    case 100:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['type' => $yyVals[-1+$yyTop], 'check' => FALSE]; } break;

    case 101:  #line 537 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 538 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 112:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 113:  #line 567 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 567 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 575 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 575 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 598 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 604 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 607 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 612 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : []));
    } break;

    case 136:  #line 615 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : []));
    } break;

    case 138:  #line 622 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 623 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 627 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= ['i' => [], 'v' => [new VariableNode($yyVals[0+$yyTop])]];
    } break;

    case 141:  #line 630 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= ['i' => [$yyLex->create(new AssignmentNode(['op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop]]))], 'v' => [$v]]; 
    } break;

    case 142:  #line 637 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 143:  #line 638 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 144:  #line 642 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(['op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]])); 
    } break;

    case 145:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['value' => $yyVals[0+$yyTop]]; } break;

    case 146:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]]; } break;

    case 147:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 150:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 151:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 667 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 667 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 156:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 678 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 161:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 162:  #line 689 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 690 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 694 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 694 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= [];
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 167:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 168:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 718 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 718 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 175:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 736 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 741 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 752 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 760 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 763 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 766 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 769 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 775 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= ['name' => $yyVals[0+$yyTop]]; } break;

    case 186:  #line 775 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode([$yyVals[-2+$yyTop]], $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 778 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 778 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 784 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 792 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 795 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 801 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 801 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 810 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 810 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 820 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 820 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 829 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 832 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 835 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 838 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 841 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], ['expression' => $yyVals[-2+$yyTop]]))); 
    } break;

    case 203:  #line 844 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 850 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 856 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 208:  #line 860 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 209:  #line 866 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 210:  #line 872 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 211:  #line 878 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 213:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', ['#{ ... }']);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 214:  #line 893 "src/main/jay/grammars/xp.jay"
    { $yyVal= [new ReturnNode($yyVals[0+$yyTop])]; } break;

    case 215:  #line 894 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 216:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= []; } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 219:  #line 904 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 220:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['name' => $yyVals[0+$yyTop]]; } break;

    case 221:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(['name' => $yyVals[-1+$yyTop]], $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 222:  #line 913 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 223:  #line 919 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 224:  #line 919 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 921 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 922 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 923 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 928 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(['values' => (array)$yyVals[0+$yyTop]]));
    } break;

    case 231:  #line 931 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(['elements' => (array)$yyVals[0+$yyTop]]));
    } break;

    case 232:  #line 937 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 234:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 235:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]) : $yyVals[-2+$yyTop]; } break;

    case 236:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 238:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= [new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]]; } break;

    case 239:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= [new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]]; } break;

    case 240:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 241:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 242:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 243:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 244:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 245:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 246:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 247:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 248:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 249:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 250:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]]; } break;

    case 251:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]]; } break;

    case 252:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 253:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 254:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 255:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 256:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 257:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 258:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'=']; } break;

    case 259:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'=']; } break;

    case 260:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 261:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 262:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 263:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 264:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 265:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 266:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 267:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 268:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 269:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]]; } break;

    case 270:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]]; } break;

    case 271:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 272:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 273:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 274:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 275:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 276:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 277:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]]; } break;

    case 278:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]]; } break;

    case 279:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= ['expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]]; } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 282:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop], $yyVals[0+$yyTop]]; } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= [$yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]]; } break;

    case 284:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 285:  #line 1023 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1026 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 287:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 288:  #line 1029 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 289:  #line 1032 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 290:  #line 1032 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 291:  #line 1038 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 292:  #line 1039 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 300:  #line 1058 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 301:  #line 1059 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 302:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 303:  #line 1067 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 304:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 305:  #line 1072 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], [$yyVals[0+$yyTop]]); } break;

    case 307:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 308:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= []; } break;

    case 309:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 310:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[-1+$yyTop]]; } break;

    case 311:  #line 1084 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-3+$yyTop], [$yyVals[-1+$yyTop]]); } break;

    case 312:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), null); } break;

    case 313:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), $yyVals[-3+$yyTop]); } break;

    case 314:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 315:  #line 1094 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge([$yyVals[-2+$yyTop]], $yyVals[0+$yyTop]); } break;

    case 316:  #line 1100 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 317:  #line 1101 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 318:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 319:  #line 1106 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 320:  #line 1110 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 321:  #line 1111 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 322:  #line 1112 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 323:  #line 1113 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 324:  #line 1114 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 325:  #line 1115 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 326:  #line 1116 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 327:  #line 1117 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3075 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
