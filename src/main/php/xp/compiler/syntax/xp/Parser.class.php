<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
#line 75 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,    99,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,   112,    31, 
        100,   100,   103,   103,   113,   113,   114,   114,    36,   116, 
         36,    36,    36,    36,    36,    36,   115,   115,    97,    97, 
        117,   117,   119,   119,   118,   118,   107,   107,   107,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   108,   108, 
        108,   108,   108,   108,   108,   108,   109,   109,   109,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   110,   110, 
        110,   110,   110,   110,   111,   111,   101,   101,   120,   120, 
        122,   121,   121,   124,   121,   125,   121,   126,   121,   123, 
        123,    10,    10,    10,    32,    32,    32,    12,    12,    95, 
         96,   127,   127,   128,   128,    21,    21,    49,    49,   129, 
        129,   130,   130,   130,   130,   130,   130,   130,   130, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     4,     0,     3,     4,     5, 
          2,     0,     4,     0,     5,     0,     6,     2,     3,     1, 
          1,     1,     1,     1,     5,     3,     3,     3,     0,     8, 
          1,     3,     0,     1,     1,     3,     2,     3,     1,     0, 
          4,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          1,     3,     0,     1,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     4,     4,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     2,     2, 
          2,     2,     2,     2,     2,     2,     0,     1,     1,     2, 
          0,     4,     2,     0,     6,     0,     5,     0,     4,     1, 
          1,     1,     1,     1,     1,     1,     1,     1,     4,     3, 
          4,     1,     3,     1,     3,     1,     3,     0,     1,     1, 
          2,     1,     1,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   292,     0,     0,   294,   293,     0,    15,     0,   312, 
        314,   313,   316,   318,   317,   319,   315,     1,     0,    68, 
          0,   310,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   311,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   220,     0,     0,   226,   222,   225,   223,   224, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   295,     0,   296,   297,     0,   302,    27,     0, 
          0,     0,    31,    35,     0,   229,     0,     0,     0,     0, 
          0,     0,   192,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   227,     0,   228,   200,   201,   202,   203,   204, 
          0,     0,   231,     0,     0,    79,    80,    83,    84,     0, 
         78,     0,     0,     0,     0,   299,    29,    35,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   198, 
          0,   196,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   215,     0,   194,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   275,   276,     0,   281,   291, 
        290,   288,   191,   278,     0,     0,     0,   221,     0,     0, 
        305,     0,   300,   303,     0,   307,     0,     0,    25,     0, 
         34,    36,    37,     0,     0,     0,    42,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   188,     0,   217,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   208,     0,     0,   199,     0,     0,   280,   286,     0, 
        175,     0,     0,   234,   232,    82,   301,    21,     0,     0, 
          0,     0,     0,     0,     0,    23,     0,    35,     0,   193, 
          0,     0,     0,     0,     0,   186,     0,   189,   218,     0, 
        216,     0,     0,   184,   181,     0,     0,     0,     0,     0, 
          0,     0,     0,   100,     0,     0,     0,   284,   113,     0, 
        131,   117,   121,   123,   119,   127,   129,   115,   125,     0, 
          0,     0,     0,   111,     0,    63,     0,     0,     0,     0, 
          0,     0,    35,    45,     0,    43,     0,     0,     0,     0, 
          0,     0,   190,     0,     0,   195,     0,   282,   289,     0, 
          0,     0,   133,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    38,   137,   112,     0,     0,    61, 
         59,   103,   104,   105,   106,   107,   108,     0,     0,     0, 
          0,     0,     0,     0,   179,   180,   197,   212,   209,     0, 
        287,     0,     0,     0,     0,     0,   138,     0,     0,     0, 
          0,   155,     0,     0,   128,   130,     0,     0,     0,     0, 
        142,   219,     0,     0,    93,     0,     0,     0,     0,     0, 
         65,     0,    48,     0,     0,    53,    33,     0,   178,     0, 
        182,   285,   114,     0,     0,     0,     0,   132,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    50, 
          0,    98,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    52,    55,     0,    49,    54,    47,   210,     0,     0, 
        139,     0,     0,     0,   156,     0,     0,     0,     0,     0, 
          0,   143,     0,     0,     0,     0,    94,    96,    95,     0, 
          0,     0,     0,     0,   164,   170,   134,     0,   161,   162, 
          0,     0,   122,     0,   146,     0,     0,     0,     0,    97, 
        102,     0,    85,     0,    64,     0,     0,     0,    56,     0, 
          0,   160,   169,   163,   135,     0,     0,     0,   158,   116, 
        151,   153,     0,     0,   149,   136,     0,     0,    62,    60, 
          0,     0,     0,     0,   124,   120,     0,     0,     0,   126, 
        150,    87,    86,    66,   166,     0,     0,     0,   159,     0, 
          0,     0,     0,   171,   118,     0,   154,   167,     0,   152, 
          0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   140,     4,     7,     8,    17,    53,    18, 
        250,   113,    61,    99,   121,   170,    63,   255,    62,   101, 
        123,   394,   251,   252,   253,   381,   256,   257,   334,   335, 
        382,   314,   269,   392,   485,   142,   475,   486,   518,   480, 
        546,   575,   479,   476,   429,   438,   521,    41,    30,    42, 
         58,    94,    95,    96,   143,   477,   478,   383,   384,   290, 
        412,   422,   463,   590,   416,   419,   504,   417,   418,   423, 
        593,   420,   421,   415,   454,   557,   456,   470,   457,   471, 
        594,   595,   608,   609,   607,   558,   582,   559,   560,   580, 
        616,   581,   144,   260,   115,   116,   145,   356,   184,   346, 
        233,   185,   191,   179,   276,   264,   146,   147,   148,   149, 
        150,   490,   192,   193,   151,   103,   152,   153,   325,   234, 
        235,   316,   236,   411,   367,   317,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -280,
          0,     0,  -267,   -92,   251,   620,  -267,     0,    69,    94, 
        260,     0,    50,    50,     0,     0,   151,     0,   266,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   238,     0, 
        506,     0,     0,   -92,   -92,     0,   -37,   309,    58,   207, 
         85,     0,     0,     0,     0,     0,     0,     0,    58,    58, 
         58,     0,   330,     0,   336,   306,     0,   360,   266,   506, 
        -92,   -92,   -92,   349,     0,   368,   375,     0,   -92,   -92, 
        746,     0,     0,   382,   144,   173,   144,     0,     0,     0, 
          0,     0,     0,   -92,   254,     0,     0,     0,     0,     0, 
        448,   106,     0,   505,   212,     0,   -49,   -92,   248,   -92, 
        441,   248,  4429,   528,   -21,   -21,  -192,     0,   -77,     0, 
        259,   530,     0,   495,     0,     0,   137,     0,     0,   -92, 
        468,   550,     0,     0,   473,     0,  5170,  5170,  5170,  5170, 
       5170,  5170,     0,  5170,   520,   543,     0,  5183,   480,   194, 
       3440,   -30,     0,   566,     0,     0,     0,     0,     0,     0, 
        518,   569,     0,  5170,    69,     0,     0,     0,     0,   555, 
          0,   -92,   213,   524,   -49,     0,     0,     0,   -92,  1084, 
        371,   365,    67,    67,   -81,    67,    67,    67,   213,     0, 
       5170,     0,  5170,   373,   -30,   530,   571,   -54,  2474,   -78, 
        596,   597,     0,   -73,     0,  5170,  5170,  5170,  5170,  5170, 
       5170,  5170,  5170,  5170,  5170,  5170,  5170,  5170,  5170,  5170, 
       5170,  4935,  5060,  4806,  5170,  4898,  5170,  5170,  5170,  5170, 
       5170,  5170,  5170,   -92,  5170,     0,     0,   213,     0,     0, 
          0,     0,     0,     0,   -30,     3,  5170,     0,  -188,   599, 
          0,   491,     0,     0,  1094,     0,   522,   387,     0,   105, 
          0,     0,     0,     0,   526,   288,     0,   609,   495,   -30, 
        529,   534,  3440,  5170,  3440,  5096,     0,  5170,     0,   -30, 
        571,   403,   -73,   571,   411,  -245,  3475,  3572,  3572,  3572, 
       3572,  3572,  3572,  3572,  3572,  3572,  3572,  3572,  3440,   615, 
        269,  2612,  1346,  5170,   100,  5170,   100,  5170,  5170,    75, 
         75,  5170,  5170,    75,    75,    37,    37,   217,   217,   217, 
        -81,     0,    67,   -13,     0,  5170,  5170,     0,     0,   635, 
          0,   618,   543,     0,     0,     0,     0,     0,   552,   419, 
        370,   422,   -72,   560,   645,     0,   371,     0,  5170,     0, 
       5170,   -32,   647,   552,  3440,     0,  3440,     0,     0,  5096, 
          0,  5096,   646,     0,     0,   -30,  5170,  3572,  3572,    75, 
         75,    75,    75,     0,   598,   648,  5170,     0,     0,     4, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   653, 
        573,  2582,   552,     0,   633,     0,   657,   659,   437,   617, 
        571,   577,     0,     0,  5170,     0,   889,   668,   595,   603, 
        -30,   607,     0,   621,  5170,     0,  3614,     0,     0,   680, 
       5170,  5170,     0,   405,  5170,   682,   709,   479,   716,   717, 
        724,   745,   757,   462,     0,     0,     0,   498,   -35,     0, 
          0,     0,     0,     0,     0,     0,     0,   765,   -35,   748, 
        548,  1550,  2716,   560,     0,     0,     0,     0,     0,   769, 
          0,   770,   764,   552,   763,   388,     0,  2878,  5170,  5170, 
        552,     0,   457,   486,     0,     0,  5170,  5170,   766,   400, 
          0,     0,   773,   305,     0,   788,   799,  -164,   -74,   -74, 
          0,   753,     0,    98,   -86,     0,     0,   560,     0,   -30, 
          0,     0,     0,   722,  5170,   405,   725,     0,   793,  2913, 
        728,   818,   811,   500,  3014,  3042,  5170,   462,   743,     0, 
        608,     0,   546,   -35,   535,   571,   -35,   828,   799,   829, 
        -35,     0,     0,   552,     0,     0,     0,     0,  -109,  3440, 
          0,   552,  5170,   479,     0,  5170,   536,  5170,   479,   754, 
       3440,     0,   552,   571,   -92,   -25,     0,     0,     0,   799, 
        546,   546,   837,   755,     0,     0,     0,  -109,     0,     0, 
        758,   820,     0,  3139,     0,  3174,   514,   -14,   761,     0, 
          0,  5170,     0,   552,     0,   -25,   -25,   546,     0,   844, 
        767,     0,     0,     0,     0,  5170,   832,   479,     0,     0, 
          0,     0,   762,   -14,     0,     0,  3315,   771,     0,     0, 
        -25,   -92,   552,   856,     0,     0,   479,  5170,   841,     0, 
          0,     0,     0,     0,     0,   -91,   785,   479,     0,  3342, 
        552,   -92,   870,     0,     0,   552,     0,     0,   796,     0, 
        552,   791,     0, 
    );
    protected static $yyRindex= array(          982,
          0,     0,  1874,     0,     0,   272,  1933,     0,   710,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        401,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -39,   295,     0,     0,    87,     0,   759, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   737,   -96,   797,   -96,     0,     0,     0, 
          0,     0,     0,     0,   -29,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   798,     0, 
          0,   798,   833,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   138,     0,     0,     0,     0,     0,     0, 
          0,   -24,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  1728,  1627,    45,   884,     0,     0, 
        379,  1456,     0,   427,     0,     0,     0,     0,     0,     0, 
          0,   129,     0,   888,   -33,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  -134, 
        805,   890,  1848,  1893,  2420,  2027,  2148,  2282,     0,     0, 
          0,     0,     0,     0,  1456,  1499,  1692,   -70,     0,     0, 
          0,    70,     0,   679,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   881,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  1591,     0,  1230,     0,    84,     0, 
          0,     0,     0,     0,  -134,     0,   432,     0,     0,     0, 
          0,     0,     0,   521,     0,   817,     0,   854,     0,  1456, 
        865,   866,   102,   888,   109,     0,     0,     0,     0,  1456, 
         80,     0,     0,    80,     0,     0,   815,   -12,    91,   474, 
        549,   813,   900,   902,   930,   946,  1380,  1382,  1037,     0, 
       2843,  4709,  4593,     0,  4641,     0,  4669,     0,     0,  4037, 
       4074,     0,     0,  4168,  4208,  3960,  3986,  3738,  3775,  3872, 
       2447,     0,  2325,  1291,     0,   869,   888,     0,     0,  1152, 
          0,     0,     0,     0,     0,     0,     0,     0,   822,     0, 
         81,     0,     0,     5,     0,     0,     0,     0,   888,     0, 
        840,     0,     0,   822,  1586,     0,   959,     0,     0,     0, 
          0,     0,  1194,     0,     0,  1456,     0,  1411,  1468,  4259, 
       4373,  4464,  4504,     0,     0,     0,   888,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -50,     0,     0,     0,     0,   843,     0,     0, 
        909,     0,     0,     0,     0,     0,    48,     0,     0,     0, 
       1456,     0,     0,     0,   888,     0,  4760,     0,     0,     0, 
        888,   910,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   931,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,  -134,     0,  1042,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   822,   453,     0,     0,     0,   914,     0, 
        822,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   276,     0,     0,   934,     0,   935,   935, 
          0,     0,     0,     0,     0,     0,     0,     5,     0,  1456, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   613,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    95,     0,     0,   276,     0,     0,   937,     0, 
        931,     0,     0,   822,     0,     0,     0,     0,     0,   454, 
          0,   822,   914,     0,     0,     0,     0,     0,     0,     0, 
        484,     0,   822,   276,     0,     0,     0,     0,     0,   938, 
         95,    95,     0,     0,     0,     0,     0,   293,     0,     0, 
          0,     0,     0,     0,     0,     0,   364,   860,     0,     0, 
          0,     0,     0,   822,     0,     0,     0,    95,     0,     0, 
          0,     0,     0,     0,     0,   888,     0,     0,     0,     0, 
          0,     0,     0,   861,     0,     0,     0,     0,     0,     0, 
          0,     0,   822,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        -28,     0,     0,     0,     0,   -28,     0,     0,     0,     0, 
        822,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   984,   513,   572,     2, 
        986,   -60,     0,   919,   896,  -146,     0,     0,     0,     0, 
       -115,  -419,     0,     0,     0,  2149,     0,   662,     0,     0, 
         76,  2153,  -120,     0,     0,   -43,  -329,   516,   532,     0, 
         -2,  -215,     0,   481,     0,     0,     0,     0,   953,   958, 
          0,   425,     0,   915,  -150,    28,   800,     0,  1360,  -160, 
          0,     0,  -463,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   533,   523, 
          0,   439,     0,     0,     0,     0,     0,   476,   477,     0, 
          0,     0,     0,     0,   847,   857,   695,     0,     0,   225, 
       -137,     0,   849,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   778,     0,     0,     0,   814,     0,   803, 
          0,     0,     0,     0,     0,     0,     0,   879,     0,  1023, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   240,   167,    97,    16,   219,    50,   232, 
        219,   219,   164,   111,   353,   231,   112,   112,   164,    13, 
        298,   245,     1,   104,   489,   126,    26,    93,   207,    47, 
         48,   207,   622,   573,   306,    57,     5,   119,   525,   122, 
         54,   112,   319,   414,   225,   207,   207,   267,    32,   364, 
         65,    54,    54,   246,   354,   112,    74,    74,    74,   122, 
        229,    93,    93,    32,    81,    82,    92,   158,   527,    83, 
        563,   322,   323,   222,   110,   567,   321,   164,   220,    74, 
        207,   187,   187,   221,   187,   187,   187,   187,   187,   187, 
        187,   187,    74,    74,   355,    74,   109,   574,   306,    52, 
         92,    92,   187,   187,   187,   187,   187,   187,   122,   482, 
        214,   222,   207,   343,    34,    74,   220,   218,   258,   219, 
         57,   221,   340,    57,   606,   308,   413,   233,    59,    32, 
         71,   237,   348,   188,   237,   187,   222,   187,   187,    35, 
         17,   220,   218,   619,   219,   235,   221,   159,   237,   237, 
        349,   308,   236,   101,   625,   365,   523,   241,    74,   214, 
         74,   216,   225,   312,    74,   515,   366,     9,   187,   187, 
        187,    17,    39,   484,    74,   516,   233,    60,   141,    71, 
        165,   304,   160,   237,   547,     9,     9,   388,   398,    74, 
        399,   397,   225,    10,   235,   112,    39,   308,   166,   304, 
        225,   236,   173,   174,   175,   176,   177,   178,   233,   180, 
          9,    10,    10,   189,    26,   237,   410,   101,   406,    74, 
        524,   230,    91,    74,     9,   225,   235,   322,   323,   141, 
        224,   572,   306,   236,   555,   556,    10,   320,   155,    86, 
         87,    88,    89,    90,   207,    74,   442,   389,   623,   228, 
         10,   453,   110,   230,   450,   109,   263,   517,   265,   390, 
        452,   271,    12,   447,    10,   474,   274,   391,    74,   298, 
        440,   277,   278,   279,   280,   281,   282,   283,   284,   285, 
        286,   287,   288,   289,   291,   292,   293,   295,   297,   300, 
        301,   304,   305,   306,   307,   308,   309,   310,   311,    34, 
        313,   185,    15,   112,   474,   222,   211,   308,   499,    12, 
        220,   218,   289,   219,   105,   221,    57,    12,    36,    57, 
        226,   227,   110,   110,    84,   168,   214,   168,   214,    40, 
        216,   337,   168,   308,    17,   168,    57,   168,    17,   141, 
         17,   345,   225,   347,   109,   109,   338,   237,   224,    15, 
        511,   101,   528,   512,    51,   195,   187,    15,   591,   592, 
        599,   600,   210,    70,   331,   268,    16,   228,    57,   358, 
         16,   359,    49,   360,   361,   187,    17,   362,   363,   308, 
         17,    34,   562,   168,   473,   614,   224,    17,    68,   230, 
         10,   289,   141,    69,   225,   549,   157,   228,   157,    71, 
         17,   207,   207,   157,   182,   228,   157,    78,   157,   386, 
         34,   224,    17,    16,   141,    34,   141,   168,   168,   174, 
         17,    16,   174,   570,    74,   345,    79,   345,   497,   571, 
        228,   496,   407,    80,    74,   604,   332,   174,   226,   227, 
        509,    97,   141,   508,   187,   187,   187,   187,   187,   187, 
        187,   187,   187,    98,   157,   187,   187,   223,   187,   187, 
        187,   187,   187,   187,   187,   187,    55,   173,   226,   227, 
        443,   174,     9,   436,    74,    74,   226,   227,   434,   432, 
        141,   433,   100,   435,   122,   173,   141,   289,   157,   157, 
        458,   309,    10,   140,   141,   223,   140,   141,    10,   217, 
        215,   226,   227,   174,   237,   237,   519,   519,   106,    74, 
         12,   129,    74,   139,   238,   107,    74,   238,   138,   173, 
        223,   127,   316,   128,   144,    37,    38,   144,   224,   156, 
        157,   238,   238,    13,   141,   500,    14,    43,    44,    45, 
         74,   615,   505,   506,   550,   108,    56,   228,   576,   577, 
         15,   173,   168,   168,   168,   168,   168,   168,   120,   182, 
         46,   628,   437,   124,    44,    34,   238,   154,   162,    83, 
        530,   308,   308,   308,   403,   601,   404,   181,   168,    44, 
        224,   164,   541,   327,   129,   164,   139,   163,    83,   239, 
        168,   138,   239,   169,   127,   171,   128,    74,   238,   228, 
        183,   461,   194,   195,   130,   168,   239,   239,   141,   237, 
        238,   564,   239,   566,    16,   105,   243,    74,   226,   227, 
         64,    66,    67,   157,   157,   157,   157,   157,   157,   266, 
        254,   268,   168,   168,   168,   168,   272,   223,   168,   326, 
        273,   239,    83,    44,   329,    44,   330,   597,   339,   157, 
        336,   341,   168,   168,   168,   168,   342,   168,   168,   350, 
        309,   141,   168,   168,   168,   168,   168,   352,   217,   215, 
        226,   227,   357,   239,   368,   181,   157,   130,   385,   212, 
        213,   387,   393,   620,   395,   405,   309,   401,   409,   223, 
        408,   316,   424,   428,   168,   168,   430,   425,   431,   441, 
        309,   309,   309,   157,   157,   157,   157,   439,   444,   157, 
         19,   316,   316,   316,   316,   316,   316,   316,   316,   445, 
        451,   459,   168,   157,   157,   157,   157,   446,   157,   157, 
        238,   448,   309,   157,   316,   157,   157,   157,   172,    86, 
         87,    88,    89,    90,   455,   449,    17,    17,   460,    17, 
         17,    17,    17,    17,    17,   464,    17,   472,    86,    87, 
         88,    89,    90,   316,    10,   157,   157,    17,    17,    17, 
         17,    17,    17,   298,   298,   465,   298,   298,   298,   298, 
        298,   298,   466,   298,   467,    20,    21,    22,    23,    24, 
         25,   134,    26,   157,   298,   298,   468,   298,   298,   298, 
         17,   469,    17,    17,   481,   239,   483,   484,    27,   491, 
        492,   172,    86,    87,    88,    89,    90,   502,   137,   369, 
        370,   371,   493,   495,   133,   503,   507,   298,   513,   298, 
        298,   510,    17,    17,    17,    17,    83,    10,   372,   373, 
        374,   375,   514,   376,   377,   522,   529,   532,   378,   308, 
        379,   533,   535,   240,   537,   206,   240,   536,   206,   298, 
        298,   298,   298,   538,   134,   543,   545,   544,   551,   552, 
        240,   240,   206,   206,   548,   565,   568,   578,   586,   579, 
        131,   132,   585,   602,   589,   596,   610,   238,   238,   603, 
        605,   137,   369,   370,   371,   613,   618,   133,   621,    20, 
         21,    22,    23,    24,    25,   240,    26,   206,   380,   624, 
        629,   372,   373,   374,   375,   633,   376,   377,   631,    30, 
         28,   378,    27,   379,   213,   172,   219,   219,   172,    41, 
        219,   219,   219,   219,   219,   213,   219,   240,   176,   206, 
        241,    40,   243,   241,   295,   243,   109,   219,   219,    17, 
        219,   219,   219,   131,   132,   296,   297,   241,   241,   243, 
        243,   176,   239,   239,   172,    51,    17,    57,   176,    17, 
        242,    91,   172,   242,    92,    88,   145,    90,    89,    19, 
         17,   380,   219,   219,   147,   148,   244,   242,   242,   244, 
         33,    29,   241,   298,   243,   102,   298,   125,   396,    58, 
        526,   553,    58,   244,   244,    85,    86,    87,    88,    89, 
         90,   520,    73,   219,   219,   219,    72,    58,   308,    17, 
         17,    17,   242,   161,   241,   261,   243,   315,   531,    17, 
        542,    10,   611,   583,   584,   262,   400,   318,   244,    17, 
         17,    17,   275,   244,   308,    91,   298,   298,   298,    17, 
        351,    58,   324,    46,   242,     0,   298,     0,   308,   308, 
        308,     0,     0,     0,     0,     0,   298,   298,   298,   240, 
        244,   206,     2,     0,     0,     0,   298,   177,    32,    32, 
        177,    32,    32,    32,    32,    32,    32,    32,    32,     0, 
        308,    84,     0,     0,   177,   177,     0,     0,     0,    32, 
         32,    32,    32,    32,    32,     0,     0,     0,     0,    17, 
         17,    17,    17,    17,    17,    17,    17,    17,     0,    17, 
         17,    17,     0,    17,    17,    17,    17,    17,    17,   177, 
         17,     0,    32,     0,    32,    32,   298,   298,   298,   298, 
        298,   298,   298,   298,   298,     0,   219,   298,   298,     0, 
        298,   298,   298,   298,   298,   298,   241,   298,   243,     0, 
          0,   177,     0,     0,     0,    32,    32,    32,    20,    21, 
         22,   247,    24,    25,    19,    26,     0,     0,     0,     0, 
          0,     0,     0,     0,    19,     0,   242,     0,   283,   283, 
          0,    27,   283,   283,   283,   283,   283,   283,   283,     0, 
          0,   219,   244,     0,     0,     0,     0,     0,   249,   283, 
        283,   283,   283,   283,   283,    58,     0,     0,   328,     0, 
        219,     0,   248,     0,     0,     0,   240,   240,   206,    17, 
        183,   183,     0,     0,   183,   183,   183,   183,   183,   183, 
        183,     0,   283,     0,   283,   283,     0,     0,     0,     0, 
          0,   183,   183,   183,   183,   183,   183,     0,     0,     0, 
          0,     2,     2,     2,     2,     2,     2,     0,     2,     0, 
        176,     0,     0,   176,     0,   283,   283,   283,     0,     0, 
          0,     2,     2,     2,   183,     2,   183,   183,   176,   219, 
        219,   219,   219,   219,   219,   219,   219,   219,    32,    17, 
        219,   219,     0,   219,   219,   219,   219,   219,   219,   219, 
        219,     0,     0,   241,   241,   243,   243,   183,   183,   183, 
          0,     0,   176,     0,     0,     0,     0,    99,    99,     0, 
          0,    99,    99,    99,    99,    99,     0,    99,     0,     0, 
          0,     0,     0,   242,   242,     0,     0,     0,    99,    99, 
         99,    99,    99,    32,   176,     0,     0,     0,     0,   244, 
        244,     0,     0,    20,    21,    22,   247,    24,    25,     0, 
         26,     0,    32,    20,    21,    22,   247,    24,    25,     0, 
         26,     0,   222,    99,    99,     0,    27,   220,   218,     0, 
        219,     0,   221,     0,     0,     0,    27,     0,     0,     0, 
          0,     0,     0,     0,     0,   214,     0,   216,   283,     0, 
          0,     0,     0,     0,    99,    99,    99,   248,     0,     0, 
        245,     0,   246,   245,     0,   246,     0,   248,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   245,   245,   246, 
        246,    32,    32,    32,    32,    32,    32,    32,    32,    32, 
        183,   255,    32,    32,   255,    32,    32,    32,    32,    32, 
         32,    32,    32,   283,     0,     0,     0,     0,   255,   255, 
          0,   225,   245,     0,   246,     0,     0,     0,     0,     0, 
          0,     0,   283,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   277,   277,     0,     0,   277,   277,   277,   277, 
        277,     0,   277,   255,   245,   183,   246,     0,   256,     0, 
          0,   256,     0,   277,   277,   277,   277,   277,   277,     0, 
          0,     0,     0,     0,   183,   256,   256,     0,     0,     0, 
          0,   220,     0,   220,     0,   255,     0,     0,   220,     0, 
          0,   220,     0,   220,     0,     0,     0,    99,   277,   277, 
          0,   283,   283,   283,   283,   283,   283,   283,   283,   283, 
        256,     0,   283,   283,     0,   283,   283,   283,   283,   283, 
        283,   283,   283,     0,     0,     0,     0,     0,     0,   277, 
        277,   277,     0,     0,     0,     0,     0,     0,     0,   220, 
          0,   220,   256,   183,   183,   183,   183,   183,   183,   183, 
        183,   183,    99,     0,   183,   183,     0,   183,   183,   183, 
        183,   183,   183,   183,   183,     0,     0,     0,     0,     0, 
         99,    99,     0,     0,   220,     0,   211,   279,   279,   211, 
         99,   279,   279,   279,   279,   279,   245,   279,   246,     0, 
         19,     0,     0,   211,   211,     0,     0,     0,   279,   279, 
        279,   279,   279,   279,     0,     0,     0,   224,     0,     0, 
          0,     0,     0,   226,   226,     0,   226,   255,   226,   226, 
        226,   226,   226,   226,   487,     0,   228,     0,   211,     0, 
          0,     0,     0,   279,   279,     0,   226,   226,   226,   226, 
         99,    99,    99,    99,    99,    99,    99,    99,    99,     0, 
          0,    99,    99,     0,    99,    99,    99,    99,    99,    99, 
        211,    99,   277,     0,   279,   279,   279,   226,     0,   226, 
        226,     0,     0,     0,   256,     0,     0,     0,   187,   187, 
          0,   187,    57,   187,   187,    57,   187,   187,   187,     0, 
          0,     0,   427,     0,     0,   217,   215,   226,   227,     0, 
        226,   187,   226,   187,   187,     0,   212,   213,   220,   220, 
        220,   220,   220,   220,   219,   219,   223,   277,     0,   219, 
        219,   219,   219,     0,   219,     0,     0,   462,     0,     0, 
          0,     0,   187,     0,   220,   187,   277,   219,   219,   219, 
        219,     0,     0,   245,   245,   246,   246,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   220,     0,     0,     0,   187,     0,   187,   219,     0, 
        219,   219,     0,     0,   255,   255,     0,     0,     0,    20, 
         21,    22,   247,    24,    25,     0,    26,     0,   220,     0, 
          0,     0,   211,     0,   220,     0,     0,   279,     0,     0, 
          0,   219,    27,   219,     0,   277,   277,   277,   277,   277, 
        277,   277,   277,   277,     0,     0,   277,   277,     0,   277, 
        277,   277,   277,   277,   277,     0,   277,     0,     0,     0, 
          0,   256,   256,   248,   271,   271,     0,     0,   271,   271, 
        271,   271,   271,   462,   271,     0,     0,     0,   462,     0, 
        220,   220,   279,     0,     0,   271,   271,   271,   271,   271, 
        271,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   279,     0,     0,     0,     0,     0,     0,     0,   272, 
        272,     0,     0,   272,   272,   272,   272,   272,   226,   272, 
        271,   271,     0,     0,     0,     0,     0,   462,   185,     0, 
        272,   272,   272,   272,   272,   272,     0,   226,     0,     0, 
          0,     0,     0,     0,     5,     0,   462,     0,     0,     0, 
          0,   271,   271,     0,     0,     0,     0,   462,     0,     0, 
          0,     0,     0,     0,     0,   272,   272,     0,     0,     0, 
        279,   279,   279,   279,   279,   279,   279,   279,   279,     0, 
          0,   279,   279,   187,   279,   279,   279,   279,   279,   279, 
          0,   279,     0,     0,     0,     0,   272,   272,     0,     0, 
          0,     0,   187,     6,     0,     0,   226,   226,   226,   226, 
        226,   226,   226,   226,   226,     0,     0,   226,   226,   219, 
        226,   226,   226,   226,   226,   226,   226,   226,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   219,     0, 
          0,     0,     0,   270,   270,     0,     0,   270,   270,   270, 
        270,   270,     0,   270,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   270,   270,   270,   270,   270,   270, 
          0,   187,   187,   187,   187,   187,   187,   187,   187,   187, 
          0,     0,   187,   187,   271,   187,   187,   187,   187,   187, 
        187,   187,   187,     0,     0,     0,     0,     0,     0,   270, 
        270,     0,     0,     0,     0,     0,     0,   219,   219,   219, 
        219,   219,   219,   219,   219,   219,     0,    17,   219,   219, 
          0,   219,   219,   219,   219,   219,   219,   219,   219,   272, 
        270,   270,     0,     5,     5,     5,     5,     5,     5,   271, 
          5,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     5,     5,     5,     5,     0,     0,     0, 
          0,     0,     0,     0,   273,   273,     0,     0,   273,   273, 
        273,   273,   273,     0,   273,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   272,   273,   273,   273,   273,   273, 
        273,     0,     6,     6,     6,     6,     6,     6,     0,     6, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     6,     6,     6,     6,     0,     0,     0,     0, 
        273,   273,     0,     0,     0,     0,     0,   271,   271,   114, 
          0,   271,   271,   271,   271,   271,     0,     0,   271,   271, 
          0,   271,   271,   271,   271,   271,   271,     0,   271,     0, 
          0,   273,   273,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   270,     0,     0,     0,     0,     0,     0, 
        190,     0,   272,   272,     0,     0,   272,   272,   272,   272, 
        272,     0,     0,   272,   272,     0,   272,   272,   272,   272, 
        272,   272,     0,   272,     0,   242,     0,   114,   274,   274, 
          0,     0,   274,   274,   274,   274,   274,     0,   274,     0, 
          0,   259,     0,     0,     0,     0,     0,     0,   270,   274, 
        274,   274,   274,   274,   274,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   262,   262,     0,     0,   262,   262,   262,   262,   262, 
          0,   262,     0,     0,   274,   274,     0,     0,     0,     0, 
          0,     0,   262,   262,   262,   262,   262,   262,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   333,     0,   273,   274,   274,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   262,   262,     0, 
          0,     0,     0,     0,     0,   190,   270,   270,     0,     0, 
        270,   270,   270,   270,   270,     0,     0,   270,   270,     0, 
        270,   270,   270,   270,   270,   270,     0,   270,   262,   262, 
          0,     0,     0,     0,     0,     0,   269,   269,     0,   273, 
        269,   269,   269,   269,   269,     0,   269,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   269,   269,   269, 
        269,   269,   269,   268,   268,     0,     0,   268,   268,   268, 
        268,   268,   402,   268,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   268,   268,   268,   268,   268,   268, 
        222,   211,   269,   269,   270,   220,   218,     0,   219,     0, 
        221,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   214,   198,   216,   208,     0,   274,   268, 
        268,     0,     0,   269,   269,     0,     0,   273,   273,     0, 
          0,   273,   273,   273,   273,   273,     0,     0,   273,   273, 
          0,   273,   273,   273,   273,   273,   273,   210,   273,     0, 
        268,   268,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   262,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   274,     0,     0,     0,   209,     0,   225, 
          0,     0,   494,     0,     0,     0,     0,     0,     0,   501, 
          0,     0,     0,     0,     0,     0,     0,     0,   222,   211, 
          0,     0,     0,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,   262,     0,     0,     0, 
        426,   214,   198,   216,   208,     0,     0,     0,   222,   211, 
          0,     0,     0,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   214,   554,   216,     0,   210,   269,     0,     0,     0, 
        561,   274,   274,     0,     0,   274,   274,   274,   274,   274, 
          0,   569,   274,   274,     0,   274,   274,   274,   274,   274, 
        274,     0,   274,   268,     0,   209,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   598,     0,   262,   262,     0,     0,   262,   262, 
        262,   262,   262,     0,     0,   262,   262,   225,   262,   262, 
        262,   262,   262,   262,     0,   262,     0,     0,     0,     0, 
          0,   617,   222,   211,     0,     0,   488,   220,   218,     0, 
        219,     0,   221,     0,     0,     0,     0,     0,     0,   627, 
          0,     0,     0,     0,   630,   214,   198,   216,   208,   632, 
          0,     0,     0,     0,     0,   224,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   228,     0,     0,     0,     0,   210, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   269, 
        269,     0,     0,   269,   269,   269,   269,   269,     0,     0, 
        269,   269,     0,   269,   269,   269,   269,   269,   269,   209, 
        269,   225,     0,     0,     0,     0,   268,   268,     0,     0, 
        268,   268,   268,   268,   268,     0,     0,   268,   268,     0, 
        268,   268,   268,   268,   268,   268,     0,   268,     0,     0, 
          0,     0,     0,   217,   215,   226,   227,   199,   200,   201, 
        202,   204,     0,   263,   212,   213,   263,   196,   197,   203, 
        206,   205,   207,   224,   223,     0,     0,     0,     0,     0, 
        263,   263,     0,   263,     0,   263,     0,     0,     0,     0, 
          0,     0,   228,     0,   222,   211,     0,     0,     0,   220, 
        218,     0,   219,   224,   221,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   263,   498,   214,   198,   216, 
        208,     0,   228,     0,     0,     0,     0,     0,     0,   222, 
        211,     0,     0,   534,   220,   218,     0,   219,     0,   221, 
          0,     0,     0,     0,     0,     0,   263,   263,     0,     0, 
          0,   210,   214,   198,   216,   208,     0,     0,     0,     0, 
          0,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
          0,     0,   212,   213,     0,   196,   197,   203,   206,   205, 
        207,   209,   223,   225,     0,     0,   210,     0,     0,     0, 
          0,   217,   215,   226,   227,     0,     0,     0,     0,     0, 
          0,     0,   212,   213,     0,     0,     0,   224,     0,     0, 
          0,     0,   223,     0,     0,     0,   209,     0,   225,     0, 
          0,     0,     0,     0,     0,     0,   228,     0,     0,     0, 
        222,   211,     0,     0,   539,   220,   218,     0,   219,     0, 
        221,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   214,   198,   216,   208,     0,   222,   211, 
          0,     0,   540,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   263, 
          0,   214,   198,   216,   208,     0,     0,   210,     0,     0, 
          0,     0,     0,     0,     0,   217,   215,   226,   227,   199, 
        200,   201,   202,   204,     0,     0,   212,   213,     0,   196, 
        197,   203,   206,   205,   207,   210,   223,   209,     0,   225, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   209,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,   222,   211,     0,     0,   587, 
        220,   218,     0,   219,     0,   221,     0,     0,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,   214,   198, 
        216,   208,     0,     0,     0,     0,     0,     0,   228,     0, 
        222,   211,     0,     0,   588,   220,   218,     0,   219,     0, 
        221,     0,     0,     0,   224,     0,     0,     0,     0,     0, 
          0,     0,   210,   214,   198,   216,   208,     0,     0,     0, 
          0,     0,     0,   228,     0,     0,   263,   263,   263,   263, 
        263,     0,     0,     0,     0,     0,   263,   263,   263,   263, 
        263,   263,   209,     0,   225,     0,     0,   210,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   217,   215,   226, 
        227,   199,   200,   201,   202,   204,     0,     0,   212,   213, 
          0,   196,   197,   203,   206,   205,   207,   209,   223,   225, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   217,   215,   226,   227,   199,   200,   201,   202, 
        204,     0,     0,   212,   213,   224,   196,   197,   203,   206, 
        205,   207,     0,   223,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   228,     0,     0,     0,     0,     0, 
          0,   222,   211,   224,     0,     0,   220,   218,     0,   219, 
          0,   221,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   228,   612,   214,   198,   216,   208,   222,   211, 
          0,     0,     0,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   626, 
          0,   214,   198,   216,   208,     0,     0,     0,   210,     0, 
          0,     0,     0,   217,   215,   226,   227,   199,   200,   201, 
        202,   204,     0,     0,   212,   213,     0,   196,   197,   203, 
        206,   205,   207,     0,   223,   210,     0,     0,   209,     0, 
        225,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
        224,     0,   212,   213,     0,   196,   197,   203,   206,   205, 
        207,     0,   223,     0,     0,   209,     0,   225,     0,   228, 
          0,     0,     0,     0,     0,     0,   222,   211,     0,     0, 
          0,   220,   218,     0,   219,   224,   221,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   214, 
        198,   216,   208,     0,   228,     0,     0,     0,     0,     0, 
          0,   222,   211,     0,     0,     0,   220,   218,     0,   219, 
          0,   221,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   210,   214,   198,   216,   208,   217,   215, 
        226,   227,   199,   200,   201,   202,   204,     0,     0,   212, 
        213,     0,   196,   197,   203,   206,   205,   207,     0,   223, 
          0,     0,     0,   209,     0,   225,     0,     0,   210,     0, 
          0,     0,     0,   217,   215,   226,   227,   199,   200,   201, 
        202,   204,     0,     0,   212,   213,     0,   196,   197,   203, 
        206,   205,   207,     0,   223,     0,     0,     0,   209,     0, 
        225,     0,     0,     0,     0,     0,     0,     0,   222,   211, 
          0,     0,     0,   220,   218,     0,   219,     0,   221,     0, 
          0,     0,     0,     0,     0,     0,   224,     0,     0,     0, 
          0,   214,   198,   216,   208,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,     0,     0,     0,     0, 
        222,   211,     0,   224,     0,   220,   218,     0,   219,     0, 
        221,     0,     0,     0,     0,   210,     0,     0,     0,     0, 
          0,     0,   228,   214,     0,   216,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   209,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   210,     0,     0, 
          0,     0,     0,     0,   217,   215,   226,   227,   199,   200, 
        201,   202,   204,     0,     0,   212,   213,     0,   196,   197, 
        203,   206,   205,   207,     0,   223,     0,   209,     0,   225, 
          0,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
          0,   224,   212,   213,     0,   196,   197,   203,   206,   205, 
        207,     0,   223,     0,     0,     0,     0,     0,     0,     0, 
        228,     0,     0,     0,   259,   259,     0,     0,   259,   259, 
        259,   259,   259,     0,   259,     0,   224,     0,     0,     0, 
          0,     0,     0,     0,     0,   259,   259,   259,   259,   259, 
        259,     0,     0,     0,     0,   228,     0,     0,     0,     0, 
          0,   260,   260,     0,     0,   260,   260,   260,   260,   260, 
          0,   260,     0,     0,     0,     0,     0,     0,     0,     0, 
        259,   259,   260,   260,   260,   260,   260,   260,     0,   217, 
        215,   226,   227,   199,   200,   201,   202,   204,     0,     0, 
        212,   213,     0,   196,   197,   203,   206,   205,   207,     0, 
        223,   259,   259,     0,     0,     0,     0,   260,   260,     0, 
          0,     0,     0,     0,   217,   215,   226,   227,   199,   200, 
        201,   202,   204,   224,     0,   212,   213,     0,     0,   197, 
        203,   206,   205,   207,     0,   223,     0,     0,   260,   260, 
          0,     0,   228,     0,     0,     0,     0,     0,   261,   261, 
          0,     0,   261,   261,   261,   261,   261,     0,   261,     0, 
          0,     0,     0,     0,     0,   224,     0,     0,     0,   261, 
        261,   261,   261,   261,   261,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   228,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   261,   261,     0,     0,     0,     0, 
          0,   217,   215,   226,   227,   199,   200,   201,   202,   204, 
          0,     0,   212,   213,     0,     0,     0,   203,   206,   205, 
        207,     0,   223,     0,   259,   261,   261,   257,     0,     0, 
        257,     0,   257,   257,   257,     0,     0,     0,     0,     0, 
          0,     0,     0,   217,   215,   226,   227,   257,   257,   257, 
        257,   257,   257,   258,   212,   213,   258,     0,   258,   258, 
        258,   260,     0,     0,   223,     0,     0,     0,     0,     0, 
          0,     0,     0,   258,   258,   258,   258,   258,   258,     0, 
          0,     0,   257,   257,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   249,     0,     0,   249,   258,   258, 
        249,     0,     0,   257,   257,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   249,   249,     0,   249,     0,   249, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   258, 
        258,   251,     0,     0,   251,     0,     0,   251,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   261,   249, 
        249,   251,   251,     0,   251,     0,   251,   259,   259,     0, 
          0,   259,   259,   259,   259,   259,     0,     0,   259,   259, 
          0,   259,   259,   259,   259,   259,   259,     0,     0,     0, 
        249,   249,     0,     0,     0,     0,   251,   251,     0,     0, 
          0,     0,     0,     0,   260,   260,     0,     0,   260,   260, 
        260,   260,   260,     0,     0,   260,   260,     0,   260,   260, 
        260,   260,   260,   260,     0,     0,     0,   251,   251,     0, 
          0,     0,     0,     0,     0,   250,     0,     0,   250,     0, 
          0,   250,     0,     0,     0,     0,   257,     0,     0,     0, 
          0,     0,     0,     0,     0,   250,   250,     0,   250,     0, 
        250,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   258,     0,     0,   252,     0,     0,   252,     0, 
          0,   252,     0,     0,     0,     0,     0,     0,     0,     0, 
        250,   250,     0,     0,     0,   252,   252,     0,   252,     0, 
        252,   261,   261,     0,     0,   261,   261,   261,   261,   261, 
          0,     0,   261,   261,     0,   261,   261,   261,   261,   261, 
        261,   250,   250,   249,     0,     0,   267,     0,     0,   267, 
        252,   252,   267,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   267,   267,     0,   267, 
          0,   267,     0,     0,     0,     0,     0,     0,     0,     0, 
        251,   252,   252,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   267,   267,     0,     0,     0,     0,     0,     0,   257, 
        257,     0,     0,   257,   257,   257,   257,   257,     0,     0, 
        257,   257,     0,   257,   257,   257,   257,   257,   257,     0, 
          0,     0,   267,   267,     0,   258,   258,     0,     0,   258, 
        258,   258,   258,   258,     0,     0,   258,   258,     0,   258, 
        258,   258,   258,   258,   258,     0,     0,     0,     0,     0, 
        248,     0,     0,   248,     0,     0,   248,     0,     0,     0, 
          0,     0,     0,     0,   250,     0,     0,     0,     0,     0, 
        248,   248,     0,   248,     0,   248,     0,     0,     0,     0, 
        249,   249,   249,   249,   249,     0,     0,   249,   249,     0, 
        249,   249,   249,   249,   249,   249,     0,     0,     0,     0, 
          0,   129,     0,   139,   252,   248,   248,     0,   138,     0, 
          0,   127,     0,   128,     0,     0,     0,   251,   251,   251, 
        251,   251,     0,     0,   251,   251,   126,   251,   251,   251, 
        251,   251,   251,     0,     0,     0,   248,   248,     0,     0, 
          0,   266,     0,     0,   266,     0,     0,   266,     0,     0, 
          0,     0,     0,     0,     0,   267,     0,     0,     0,    83, 
          0,   266,   266,     0,   266,     0,   266,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   247,     0,     0,   247,     0,     0,   247,     0,     0, 
          0,     0,     0,     0,   130,     0,   266,   266,     0,     0, 
          0,   247,   247,     0,   247,     0,   247,     0,     0,     0, 
          0,   250,   250,   250,   250,   250,     0,     0,   250,   250, 
          0,   250,   250,   250,   250,   250,   250,   266,   266,     0, 
          0,     0,     0,     0,     0,     0,   247,   247,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   252,   252,   252,   252,   252,     0,     0,   252,   252, 
          0,   252,   252,   252,   252,   252,   252,   247,   247,   248, 
        264,     0,     0,   264,     0,     0,   264,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        264,   264,     0,   264,     0,   264,     0,     0,     0,     0, 
          0,     0,   267,   267,   267,   267,   267,     0,     0,   267, 
        267,     0,   267,   267,   267,   267,   267,   267,   253,     0, 
          0,   253,     0,     0,   253,   264,   264,     0,   135,   136, 
         87,    88,    89,    90,     0,     0,     0,     0,   253,   253, 
          0,   253,     0,   253,     0,     0,   254,     0,     0,   254, 
          0,     0,   254,     0,    10,     0,   264,   264,     0,     0, 
        266,     0,     0,     0,     0,     0,   254,   254,     0,   254, 
          0,   254,     0,   253,   253,     0,     0,     0,     0,     0, 
          0,   134,     0,     0,     0,     0,     0,     0,     0,   265, 
          0,     0,   265,     0,     0,     0,     0,     0,     0,     0, 
        247,   254,   254,     0,   253,   253,   265,   265,   137,   265, 
          0,   265,     0,     0,   133,     0,   248,   248,   248,   248, 
        248,     0,     0,   248,   248,     0,   248,   248,   248,   248, 
        248,   248,   254,   254,     0,     0,     0,     0,     0,     0, 
        205,   265,   265,   205,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   205,   205,     0, 
        205,     0,   205,     0,     0,     0,     0,     0,     0,     0, 
        131,   132,   265,   265,     0,     0,     0,     0,   129,     0, 
        139,     0,     0,     0,     0,   138,     0,     0,   127,   264, 
        128,     0,   205,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   298,     0,   266,   266,   266, 
        266,   266,     0,     0,   266,   266,     0,   266,   266,   266, 
        266,   266,   266,     0,   205,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    83,   253,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   247,   247,   247, 
        247,   247,     0,     0,   247,   247,     0,   247,   247,   247, 
        247,   247,   247,     0,     0,   254,     0,     0,     0,     0, 
        129,   130,   139,     0,     0,     0,     0,   138,     0,     0, 
        127,     0,   128,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   302, 
          0,     0,     0,     0,     0,   265,     0,   129,     0,   139, 
          0,     0,     0,     0,   138,     0,     0,   127,     0,   128, 
          0,     0,     0,     0,     0,     0,     0,     0,    83,     0, 
          0,     0,     0,     0,     0,   294,   264,   264,   264,   264, 
        264,     0,     0,     0,     0,     0,   264,   264,   264,   264, 
        264,   264,     0,     0,     0,     0,   205,     0,     0,     0, 
          0,     0,     0,   130,     0,    83,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   253,   253,   253,   253,   253,     0, 
          0,     0,     0,     0,   253,   253,   253,   253,   253,   253, 
        130,     0,     0,     0,     0,   172,    86,    87,    88,    89, 
         90,     0,   254,   254,   254,   254,   254,     0,     0,     0, 
          0,     0,   254,   254,   254,   254,   254,   254,     0,     0, 
          0,    10,   129,     0,   139,     0,     0,     0,     0,   138, 
          0,     0,   127,     0,   128,     0,     0,     0,     0,     0, 
          0,     0,   265,   265,   265,   265,   265,     0,   134,     0, 
        296,     0,   265,   265,   265,   265,   265,   265,   129,     0, 
        139,     0,     0,     0,     0,   138,     0,     0,   127,     0, 
        128,     0,     0,     0,     0,   137,     0,     0,     0,     0, 
         83,   133,     0,     0,     0,     0,     0,   172,    86,    87, 
         88,    89,    90,   205,   205,   205,   205,   205,     0,     0, 
          0,     0,     0,   205,   205,   205,   205,   205,   205,     0, 
          0,     0,     0,    10,     0,   130,    83,     0,     0,     0, 
          0,     0,     0,     0,   172,    86,    87,    88,    89,    90, 
          0,     0,   129,     0,   139,     0,   299,   131,   132,   138, 
        134,     0,   127,     0,   128,   129,     0,   139,   344,     0, 
         10,   130,   138,     0,     0,   127,     0,   128,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   137,     0,     0, 
          0,     0,     0,   133,     0,     0,     0,   134,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         83,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   186,   137,     0,     0,     0,     0,     0, 
        133,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   130,     0,   303,     0,   131, 
        132,     0,     0,     0,     0,     0,     0,     0,   130,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   172, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   131,   132,     0,     0, 
          0,     0,     0,     0,     0,    10,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   172,    86,    87,    88,    89, 
         90,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,    10,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   137, 
          0,     0,     0,     0,     0,   133,     0,     0,   134,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   172, 
         86,    87,    88,    89,    90,   137,     0,     0,     0,     0, 
          0,   133,   172,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,     0,    10,     0,     0,     0,     0, 
          0,   131,   132,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   134,     0,   131,   132,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   137, 
          0,     0,     0,     0,     0,   133,     0,     0,     0,     0, 
          0,     0,   187,     0,     0,     0,     0,     0,   133,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   131,   132,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   131,   132, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   154,   120,    60,    46,    41,    46,    40, 
         44,    41,    91,    63,   260,    46,    91,    91,    91,    59, 
         91,   168,   303,    84,   444,    58,   123,    71,    41,    34, 
         35,    44,   124,    59,    59,    40,   304,    98,   125,   100, 
         39,    91,    40,    40,   126,    58,    59,   185,    44,    63, 
         49,    50,    51,   169,   300,    91,    61,    62,    63,   120, 
         91,   105,   106,    59,    69,    70,    71,   260,   488,    91, 
        534,   260,   261,    37,   125,   539,   237,    91,    42,    84, 
         93,    37,    38,    47,    40,    41,    42,    43,    44,    45, 
         46,    47,    97,    98,   340,   100,   125,   123,   123,    42, 
        105,   106,    58,    59,    60,    61,    62,    63,   169,   439, 
         41,    37,   125,   264,    46,   120,    42,    43,   179,    45, 
         41,    47,   260,    44,   588,   260,   123,    44,    44,   125, 
         44,    41,   270,   138,    44,    91,    37,    93,    94,    46, 
         60,    42,    43,   607,    45,    44,    47,   340,    58,    59, 
        271,   286,    44,    59,   618,   316,    59,   162,   163,    60, 
        165,    62,   126,   224,   169,   330,   317,   260,   124,   125, 
        126,    91,   125,   260,   179,   340,    93,    93,   103,    93, 
         44,    44,   260,    93,   514,   260,   260,   260,   339,   194, 
        341,   338,   126,   286,    93,    91,    46,   332,    62,    62, 
        126,    93,   127,   128,   129,   130,   131,   132,   125,   134, 
        260,   286,   286,   138,   311,   125,   367,   123,   356,   224, 
        123,    93,   300,   228,   260,   126,   125,   260,   261,   154, 
        312,   257,   257,   125,   344,   345,   286,   236,   260,   261, 
        262,   263,   264,   265,   257,   250,   393,   320,   340,   331, 
        286,   412,    41,   125,   405,    44,   181,   332,   183,   332, 
        411,   340,   260,   401,   286,   340,   340,   340,   273,   340, 
        391,   196,   197,   198,   199,   200,   201,   202,   203,   204, 
        205,   206,   207,   208,   209,   210,   211,   212,   213,   214, 
        215,   216,   217,   218,   219,   220,   221,   222,   223,    46, 
        225,   257,   300,    91,   340,    37,    38,   260,   459,   260, 
         42,    43,   237,    45,    61,    47,    41,   260,    59,    44, 
        402,   403,   373,   374,   346,    33,   257,    35,    60,    64, 
         62,    44,    40,   286,    40,    43,   257,    45,    44,   264, 
        260,   266,   126,   268,   373,   374,    59,   257,   312,   300, 
         46,   257,   490,   474,    46,   410,   312,   300,   373,   374, 
        576,   577,    94,    58,   260,    61,   364,   331,    93,   294, 
        410,   296,   410,   298,   299,   331,   410,   302,   303,   332, 
        410,    46,   533,    91,   428,   601,   312,    93,    59,   420, 
        286,   316,   317,    58,   126,   516,    33,   331,    35,    40, 
        320,   414,   415,    40,    40,   331,    43,    59,    45,    40, 
         46,   312,   332,   364,   339,    46,   341,   125,   126,    41, 
        340,   364,    44,   544,   429,   350,    59,   352,    41,   545, 
        331,    44,   357,    59,   439,   586,   332,    59,   402,   403, 
         41,    60,   367,    44,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   310,    91,   411,   412,   421,   414,   415, 
        416,   417,   418,   419,   420,   421,   260,    41,   402,   403, 
        395,    93,   260,    37,   479,   480,   402,   403,    42,    43, 
        405,    45,   310,    47,   545,    59,   411,   412,   125,   126, 
        415,    91,   286,    41,    41,   421,    44,    44,   286,   400, 
        401,   402,   403,   125,   414,   415,   479,   480,    61,   514, 
        260,    33,   517,    35,    41,   410,   521,    44,    40,    93, 
        421,    43,    91,    45,    41,    13,    14,    44,   312,   105, 
        106,    58,    59,   283,   459,   460,   286,   300,   301,   302, 
        545,   602,   467,   468,   517,    41,   340,   331,   551,   552, 
        300,   125,   260,   261,   262,   263,   264,   265,   311,    40, 
         40,   622,   126,   123,    44,    46,    93,    40,   310,    91, 
        495,   300,   301,   302,   350,   578,   352,    58,   286,    59, 
        312,    91,   507,    93,    33,    91,    35,    58,    91,    41, 
        123,    40,    44,    44,    43,   123,    45,   602,   125,   331, 
         58,   123,   123,   410,   126,   313,    58,    59,   533,    44, 
         93,   536,    44,   538,   364,    61,    93,   622,   402,   403, 
         49,    50,    51,   260,   261,   262,   263,   264,   265,   257, 
        260,    61,   340,   341,   342,   343,    41,   421,   346,    41, 
         44,    93,    91,   123,   123,   125,   260,   572,    40,   286, 
        125,   123,   360,   361,   362,   363,   123,   365,   366,   257, 
        260,   586,   370,   371,   372,   373,   374,   257,   400,   401, 
        402,   403,    58,   125,    40,    58,   313,   126,   260,   411, 
        412,   260,   123,   608,    40,    40,   286,    41,    41,   421, 
         93,   260,    40,    61,   402,   403,    40,   125,    40,   123, 
        300,   301,   302,   340,   341,   342,   343,    91,    41,   346, 
         91,   280,   281,   282,   283,   284,   285,   286,   287,   125, 
         41,    40,   430,   360,   361,   362,   363,   125,   365,   366, 
        257,   125,   332,   370,   303,   372,   373,   374,   260,   261, 
        262,   263,   264,   265,   340,   125,    37,    38,    40,    40, 
         41,    42,    43,    44,    45,    40,    47,   260,   261,   262, 
        263,   264,   265,   332,   286,   402,   403,    58,    59,    60, 
         61,    62,    63,    37,    38,    59,    40,    41,    42,    43, 
         44,    45,    59,    47,    40,   280,   281,   282,   283,   284, 
        285,   313,   287,   430,    58,    59,    40,    61,    62,    63, 
         91,   340,    93,    94,    40,   257,    59,   260,   303,    41, 
         41,   260,   261,   262,   263,   264,   265,   361,   340,   341, 
        342,   343,    59,    61,   346,   340,    61,    91,    41,    93, 
         94,    59,   123,   124,   125,   126,    91,   286,   360,   361, 
        362,   363,    44,   365,   366,    93,   125,   123,   370,    91, 
        372,    59,   125,    41,    44,    41,    44,    40,    44,   123, 
        124,   125,   126,   364,   313,   123,   321,   260,    41,    41, 
         58,    59,    58,    59,   340,   340,   123,    41,    59,   125, 
        402,   403,   125,    40,   371,   125,   125,   414,   415,   123, 
         59,   340,   341,   342,   343,   125,    41,   346,    58,   280, 
        281,   282,   283,   284,   285,    93,   287,    93,   430,   125, 
         41,   360,   361,   362,   363,   125,   365,   366,   123,   123, 
        123,   370,   303,   372,    41,    93,    37,    38,    41,   125, 
         41,    42,    43,    44,    45,   257,    47,   125,    58,   125, 
         41,   125,    41,    44,    91,    44,   125,    58,    59,    60, 
         61,    62,    63,   402,   403,    91,    91,    58,    59,    58, 
         59,    93,   414,   415,   125,   123,   257,    59,    59,   260, 
         41,    41,    59,    44,    41,    41,   364,    41,    41,    91, 
         91,   430,    93,    94,   125,   125,    41,    58,    59,    44, 
          7,     6,    93,   257,    93,    77,   260,   102,   337,    41, 
        485,   521,    44,    58,    59,   260,   261,   262,   263,   264, 
        265,   480,    60,   124,   125,   126,    59,    59,   260,   310, 
        311,   312,    93,   109,   125,   179,   125,   228,   496,   320, 
        508,   286,   594,   558,   558,   179,   342,   235,    93,   330, 
        331,   332,   194,   165,   286,   300,   310,   311,   312,   340, 
        273,    93,   239,    31,   125,    -1,   320,    -1,   300,   301, 
        302,    -1,    -1,    -1,    -1,    -1,   330,   331,   332,   257, 
        125,   257,    91,    -1,    -1,    -1,   340,    41,    37,    38, 
         44,    40,    41,    42,    43,    44,    45,    46,    47,    -1, 
        332,   346,    -1,    -1,    58,    59,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   410, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    93, 
        421,    -1,    91,    -1,    93,    94,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   257,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   257,   421,   257,    -1, 
         -1,   125,    -1,    -1,    -1,   124,   125,   126,   280,   281, 
        282,   283,   284,   285,    91,   287,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    91,    -1,   257,    -1,    37,    38, 
         -1,   303,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,   312,   257,    -1,    -1,    -1,    -1,    -1,   125,    58, 
         59,    60,    61,    62,    63,   257,    -1,    -1,   125,    -1, 
        331,    -1,   334,    -1,    -1,    -1,   414,   415,   414,   340, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    91,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,    -1, 
         41,    -1,    -1,    44,    -1,   124,   125,   126,    -1,    -1, 
         -1,   300,   301,   302,    91,   304,    93,    94,    59,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   257,   410, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,   414,   415,   414,   415,   124,   125,   126, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,   414,   415,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,   312,   125,    -1,    -1,    -1,    -1,   414, 
        415,    -1,    -1,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,   331,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,    37,    93,    94,    -1,   303,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,   303,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,    62,   257,    -1, 
         -1,    -1,    -1,    -1,   124,   125,   126,   334,    -1,    -1, 
         41,    -1,    41,    44,    -1,    44,    -1,   334,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    58, 
         59,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        257,    41,   411,   412,    44,   414,   415,   416,   417,   418, 
        419,   420,   421,   312,    -1,    -1,    -1,    -1,    58,    59, 
         -1,   126,    93,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    93,   125,   312,   125,    -1,    41,    -1, 
         -1,    44,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   331,    58,    59,    -1,    -1,    -1, 
         -1,    33,    -1,    35,    -1,   125,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,   257,    93,    94, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         93,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91, 
         -1,    93,   125,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        330,   331,    -1,    -1,   126,    -1,    41,    37,    38,    44, 
        340,    41,    42,    43,    44,    45,   257,    47,   257,    -1, 
         91,    -1,    -1,    58,    59,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    40,   257,    42,    43, 
         44,    45,    46,    47,   125,    -1,   331,    -1,    93,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    60,    61,    62,    63, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        125,   421,   257,    -1,   124,   125,   126,    91,    -1,    93, 
         94,    -1,    -1,    -1,   257,    -1,    -1,    -1,    37,    38, 
         -1,    40,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,   383,    -1,    -1,   400,   401,   402,   403,    -1, 
        124,    60,   126,    62,    63,    -1,   411,   412,   260,   261, 
        262,   263,   264,   265,    37,    38,   421,   312,    -1,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,   418,    -1,    -1, 
         -1,    -1,    91,    -1,   286,    94,   331,    60,    61,    62, 
         63,    -1,    -1,   414,   415,   414,   415,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,   124,    -1,   126,    91,    -1, 
         93,    94,    -1,    -1,   414,   415,    -1,    -1,    -1,   280, 
        281,   282,   283,   284,   285,    -1,   287,    -1,   340,    -1, 
         -1,    -1,   257,    -1,   346,    -1,    -1,   257,    -1,    -1, 
         -1,   124,   303,   126,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,   414,   415,   334,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,   534,    47,    -1,    -1,    -1,   539,    -1, 
        402,   403,   312,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,   312,    47, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   588,   257,    -1, 
         58,    59,    60,    61,    62,    63,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    91,    -1,   607,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,   618,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   312,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,   331,    91,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   312, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   257,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   257, 
        124,   125,    -1,   280,   281,   282,   283,   284,   285,   312, 
        287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   300,   301,   302,   303,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    58,    59,    60,    61,    62, 
         63,    -1,   280,   281,   282,   283,   284,   285,    -1,   287, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   300,   301,   302,   303,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   400,   401,    97, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1, 
        138,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,   163,    -1,   165,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,   179,    -1,    -1,    -1,    -1,    -1,    -1,   312,    58, 
         59,    60,    61,    62,    63,    -1,   194,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   250,    -1,   257,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,   273,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,   312, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,   344,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    93,    94,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,   257,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    94,   421,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,   124,    -1,   126, 
         -1,    -1,   454,    -1,    -1,    -1,    -1,    -1,    -1,   461, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,   524,    62,    -1,    94,   257,    -1,    -1,    -1, 
        532,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,   543,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,   257,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   574,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   126,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,   603,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   621, 
         -1,    -1,    -1,    -1,   626,    60,    61,    62,    63,   631, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   124, 
        421,   126,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    41,   411,   412,    44,   414,   415,   416, 
        417,   418,   419,   312,   421,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,   312,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    59,    60,    61,    62, 
         63,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    94,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   124,   421,   126,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   411,   412,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,   421,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         -1,    60,    61,    62,    63,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    94,   421,   124,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,   124,    -1,   126,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   124,   421,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   312,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,   312,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    59,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    94,    -1,    -1,   124,    -1, 
        126,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,   124,    -1,   126,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,   312,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    60,    61,    62,    63,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,   124,    -1,   126,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         37,    38,    -1,   312,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    60,    -1,    62,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,   124,    -1,   126, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   312,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    58,    59,    60,    61,    62,    63,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,    -1,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,   124,   125, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,    -1,    -1,   416,   417,   418, 
        419,    -1,   421,    -1,   257,   124,   125,    38,    -1,    -1, 
         41,    -1,    43,    44,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,    58,    59,    60, 
         61,    62,    63,    38,   411,   412,    41,    -1,    43,    44, 
         45,   257,    -1,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    93,    94, 
         44,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    93, 
         94,    58,    59,    -1,    61,    -1,    63,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   124,   125,   257,    -1,    -1,    38,    -1,    -1,    41, 
         93,    94,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,   124,   125,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    35,   257,    93,    94,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    58,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    91, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    93,    94,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   124,   125,   257, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    38,    -1, 
         -1,    41,    -1,    -1,    44,    93,    94,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,   286,    -1,   124,   125,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    93,    94,    -1,   124,   125,    58,    59,   340,    61, 
         -1,    63,    -1,    -1,   346,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         41,    93,    94,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,   124,   125,    -1,    -1,    -1,    -1,    33,    -1, 
         35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43,   257, 
         45,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,   257,    -1,    -1,    -1,    -1, 
         33,   126,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    33,    -1,    35, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,    61,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,    91,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
        126,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,   286,    33,    -1,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,   313,    -1, 
         61,    -1,   414,   415,   416,   417,   418,   419,    33,    -1, 
         35,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         91,   346,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,   286,    -1,   126,    91,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    33,    -1,    35,    -1,   401,   402,   403,    40, 
        313,    -1,    43,    -1,    45,    33,    -1,    35,   123,    -1, 
        286,   126,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,   313,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,   400,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,   340,    -1,    -1,    -1,    -1, 
         -1,   346,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', NULL, NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 196 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 196 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 207 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 208 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 212 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 215 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 218 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 221 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 234 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 239 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 246 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 255 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 255 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 264 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 264 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 275 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 276 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 317 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 320 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 320 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 330 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 337 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 344 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 350 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 351 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 372 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 383 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 383 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 394 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 394 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 419 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 419 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 432 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 433 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 442 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 445 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 456 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 461 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 466 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 473 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 474 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 484 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 493 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 499 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 500 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 501 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 524 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 529 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 534 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 553 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 558 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 559 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 563 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 566 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 566 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 571 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 571 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 581 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 581 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 586 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 586 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 599 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 600 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 600 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 603 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 608 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 611 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 618 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 619 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 623 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 626 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 633 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 634 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 638 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 644 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 645 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 654 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 655 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 659 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 670 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 686 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 690 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 690 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 704 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 705 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 714 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 714 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 722 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 727 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 728 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 737 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 743 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 748 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 756 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 759 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 762 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 765 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 771 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 771 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-3+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 774 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 774 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 780 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 788 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-3+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 791 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 797 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 797 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 806 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 806 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 816 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 816 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 825 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 199:  #line 828 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 200:  #line 831 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 201:  #line 834 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 202:  #line 837 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 203:  #line 840 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 843 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 205:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 207:  #line 859 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 208:  #line 865 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 209:  #line 870 "src/main/jay/grammars/xp.jay"
    { $yyVals[-5+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-3+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 210:  #line 870 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-7+$yyTop];
      }
    } break;

    case 211:  #line 880 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 212:  #line 881 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 213:  #line 885 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 215:  #line 890 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 216:  #line 891 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 217:  #line 895 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 218:  #line 896 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop]); $yyVals[-1+$yyTop] && $yyVal['default']= $yyVals[-1+$yyTop]; } break;

    case 219:  #line 900 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 220:  #line 906 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 221:  #line 906 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 222:  #line 907 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 223:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 224:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 225:  #line 910 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 911 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 915 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 228:  #line 918 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 231:  #line 929 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 232:  #line 930 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 233:  #line 934 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 235:  #line 939 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 236:  #line 940 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 237:  #line 944 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 238:  #line 945 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 239:  #line 946 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 240:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 949 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 950 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 951 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 954 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 248:  #line 955 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 249:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 252:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 256:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 257:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 260:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 267:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 268:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 271:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 276:  #line 995 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 277:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 279:  #line 1005 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 280:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 281:  #line 1010 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 282:  #line 1010 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 283:  #line 1013 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 284:  #line 1016 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 285:  #line 1016 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, $yyVals[-1+$yyTop])); } break;

    case 287:  #line 1019 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 288:  #line 1022 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 289:  #line 1022 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 290:  #line 1028 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 291:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 298:  #line 1047 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 299:  #line 1048 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 300:  #line 1052 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 301:  #line 1056 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 302:  #line 1060 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 303:  #line 1061 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 305:  #line 1066 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 306:  #line 1070 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 307:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 308:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 309:  #line 1078 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 310:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 311:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 312:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 313:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 314:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 315:  #line 1090 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 316:  #line 1091 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 317:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 318:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 319:  #line 1094 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 2955 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
