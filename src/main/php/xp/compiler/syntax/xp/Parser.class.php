<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
#line 76 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,   112,    31,    99,    99,   103,   103,   113,   113,   114, 
        114,    36,   116,    36,    36,    36,    36,    36,    36,   115, 
        115,    97,    97,   117,   117,   119,   119,   118,   118,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   108,   108,   108,   108,   108,   108,   108,   108,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   110,   110,   110,   110,   110,   110,   111,   111,   101, 
        101,   120,   120,   122,   121,   121,   124,   121,   125,   121, 
        123,   123,    10,    10,    10,    32,    32,    32,    32,    12, 
         12,    95,    96,   127,   127,   128,   128,   129,   129,   129, 
        126,   126,    21,    21,    49,    49,   130,   130,   131,   131, 
        131,   131,   131,   131,   131,   131, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     3,     1,     1,     1,     1,     1,     5,     3,     3, 
          3,     0,     7,     2,     4,     0,     1,     1,     3,     1, 
          3,     1,     0,     4,     1,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     3,     0,     1,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     2,     0,     6,     0,     4, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          4,     3,     4,     1,     3,     1,     3,     0,     1,     3, 
          5,     5,     1,     3,     0,     1,     1,     2,     1,     1, 
          1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   293,     0,     0,   295,   294,     0,    15,     0,   319, 
        321,   320,   323,   325,   324,   326,   322,     1,     0,    68, 
          0,   317,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   318,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   223,     0,     0,   229,   225,   228,   226,   227, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,     0,   296,     0,   297,   298,   299,     0,   304, 
         27,     0,     0,     0,    31,    35,     0,     0,   232,     0, 
          0,     0,     0,     0,     0,   192,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   230,     0,   231,   203,   204, 
        205,   206,   207,     0,     0,   234,     0,     0,    79,    80, 
         83,    84,     0,    78,     0,     0,     0,     0,     0,     0, 
          0,   301,    29,    35,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   198,     0,   196,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        218,     0,   194,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   278,   279,     0,   284,   292,   291,   289, 
        191,   281,     0,     0,     0,   224,     0,     0,   307,     0, 
          0,     0,     0,   302,   305,     0,   314,     0,     0,    25, 
          0,    34,    36,    37,     0,     0,     0,    42,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   186,   188, 
          0,   100,     0,     0,     0,   220,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   211,     0,   202,     0,     0,   283,     0, 
        175,     0,     0,   237,   235,    82,   303,     0,     0,     0, 
         21,     0,     0,     0,     0,     0,     0,     0,    23,     0, 
         35,     0,     0,   193,     0,     0,     0,     0,     0,   189, 
          0,   221,   190,   219,     0,     0,   184,   181,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   287,   311, 
        312,   113,     0,   131,   117,   121,   123,   119,   127,   129, 
        115,   125,     0,     0,     0,     0,   111,     0,    63,     0, 
          0,     0,     0,     0,     0,    35,    45,     0,    43,     0, 
          0,     0,     0,     0,     0,     0,   212,     0,   195,     0, 
        285,   290,     0,     0,   133,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    38,   137,   112,     0, 
          0,    61,    59,   103,   104,   105,   106,   107,   108,     0, 
          0,     0,     0,     0,     0,     0,   179,   180,   197,   215, 
          0,     0,     0,     0,     0,     0,     0,   138,     0,     0, 
          0,     0,   155,     0,     0,   128,   130,     0,     0,     0, 
          0,   142,   222,     0,     0,    93,     0,     0,     0,     0, 
          0,    65,     0,    48,     0,     0,    53,    33,     0,   178, 
        213,   182,   288,   114,     0,     0,     0,     0,   132,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         50,     0,    98,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    52,    55,     0,    49,    54,    47,     0,     0, 
        139,     0,     0,     0,   156,     0,     0,     0,     0,     0, 
          0,   143,     0,     0,     0,     0,    94,    96,    95,     0, 
          0,     0,     0,     0,   164,   170,   134,     0,   161,   162, 
          0,     0,   122,     0,   146,     0,     0,     0,     0,    97, 
        102,     0,    85,     0,    64,     0,     0,     0,    56,     0, 
          0,   160,   169,   163,   135,     0,     0,     0,   158,   116, 
        151,   153,     0,     0,   149,   136,     0,     0,    62,    60, 
          0,     0,     0,     0,   124,   120,     0,     0,     0,   126, 
        150,    87,    86,    66,   166,     0,     0,     0,   159,     0, 
          0,     0,     0,   171,   118,     0,   154,   167,     0,   152, 
          0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   143,     4,     7,     8,    17,    53,    18, 
        261,   114,    61,    99,   123,   176,    63,   266,    62,   101, 
        125,   407,   262,   263,   264,   394,   267,   268,   347,   348, 
        395,   197,   362,   405,   496,   145,   486,   497,   529,   491, 
        556,   585,   490,   487,   441,   450,   532,    41,    30,    42, 
         58,    94,    95,    96,   146,   488,   489,   396,   397,   302, 
        424,   434,   474,   600,   428,   431,   515,   429,   430,   435, 
        603,   432,   433,   427,   465,   567,   467,   481,   468,   482, 
        604,   605,   618,   619,   617,   568,   592,   569,   570,   590, 
        626,   591,   147,   272,   116,   117,   148,   369,   279,   191, 
        241,   192,   199,   186,   288,   276,   149,   150,   151,   152, 
        153,   461,   200,   201,   154,   103,   155,   156,   335,   242, 
        243,   327,   244,   423,   328,   118,   119,   120,   169,    31, 
         32, 
    );
    protected static $yySindex = array(         -228,
          0,     0,  -207,   -59,   260,  1773,  -207,     0,    65,   110, 
        114,     0,  -223,  -223,     0,     0,   151,     0,    49,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   279,     0, 
        956,     0,     0,   -59,   -59,     0,   -29,   180,   -23,  -148, 
         54,     0,     0,     0,     0,     0,     0,     0,   -23,   -23, 
        -23,     0,   136,     0,   226,   193,     0,   216,    49,   956, 
        -59,   -59,   -59,   219,     0,   224,   261,     0,   -59,   -59, 
        269,     0,     0,   336,   102,   109,   102,     0,     0,     0, 
          0,     0,     0,   -59,   221,     0,     0,     0,     0,     0, 
        353,    36,     0,   383,   390,     0,   116,   -59,   152,   -59, 
        352,   152,  5344,   454,   252,   252,  -206,     0,   -96,     0, 
        194,   451,   370,     0,   420,     0,     0,     0,   104,     0, 
          0,   -59,   404,   478,     0,     0,   414,  5618,     0,  5618, 
       5618,  5618,  5618,  5618,  5618,     0,  5618,   595,   484,     0, 
       5235,   426,   147,  3749,   -28,     0,   521,     0,     0,     0, 
          0,     0,     0,   480,   527,     0,  5618,    65,     0,     0, 
          0,     0,   516,     0,   -59,    -1,   327,   420,   -21,   493, 
        116,     0,     0,     0,   -59,    51,   351,   355,  2710,   -73, 
        -73,   -78,   -73,   -73,   -73,    -1,     0,  5618,     0,  5618, 
        364,   -28,   451,     0,   -54,  2872,    67,   285,   582,   596, 
          0,   -76,     0,  5618,  5618,  5618,  5618,  5618,  5618,  5618, 
       5618,  5618,  5618,  5618,  5618,  5618,  5618,  5618,  5618,  5353, 
       5468,  3995,  5618,  5226,  5618,  5618,  5618,  5618,  5618,  5618, 
       5618,   -59,  5618,     0,     0,    -1,     0,     0,     0,     0, 
          0,     0,   -28,  -223,  5618,     0,   339,   603,     0,   312, 
         -1,    -1,    -1,     0,     0,  1322,     0,   528,   398,     0, 
        259,     0,     0,     0,     0,   539,   298,     0,  5618,   630, 
        420,   -28,   565,   566,  3749,  5618,  3749,  5497,     0,     0, 
        -28,     0,   629,   364,   -76,     0,   364,   149,  3777,  3895, 
       3895,  3895,  3895,  3895,  3895,  3895,  3895,  3895,  3895,  3895, 
       3749,   633,  4005,   808,  4021,  5618,    27,  5618,    27,  5618, 
       5618,    39,    39,  5618,  5618,    39,    39,    14,    14,   -81, 
        -81,   -81,   -78,     0,   -73,     0,  5618,  5618,     0,   673, 
          0,   657,   484,     0,     0,     0,     0,    78,   420,   262, 
          0,   711,   456,   399,   463,   -66,   601,   685,     0,   351, 
          0,   326,  5618,     0,  5618,   -17,   691,   711,  3749,     0, 
       5618,     0,     0,     0,   608,   696,     0,     0,   -28,  5618, 
       3895,  3895,    39,    39,    39,    39,   647,   700,     0,     0, 
          0,     0,     9,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   708,   624,  3036,   711,     0,   689,     0,   712, 
        713,   605,   664,   629,   634,     0,     0,  5618,     0,   427, 
        717,   638,   640,   -28,   641,  3749,     0,  5618,     0,   326, 
          0,     0,  5618,  5618,     0,   419,  5618,   728,   729,   523, 
        731,   715,   716,   739,   740,   432,     0,     0,     0,   825, 
        139,     0,     0,     0,     0,     0,     0,     0,     0,   756, 
        139,   730,   545,  1389,  3095,   601,     0,     0,     0,     0, 
        -28,   763,   765,   753,   711,   752,   418,     0,  3133,  5618, 
       5618,   711,     0,   453,   475,     0,     0,  5618,  5618,   760, 
        455,     0,     0,   769,   301,     0,   792,   790,  -288,   -77, 
        -77,     0,   742,     0,    20,   -90,     0,     0,   601,     0, 
          0,     0,     0,     0,   714,  5618,   419,   718,     0,   779, 
       3173,   722,   800,   799,   485,  3270,  3297,  5618,   432,   733, 
          0,   592,     0,   533,   139,   518,   629,   139,   821,   790, 
        826,   139,     0,     0,   711,     0,     0,     0,   310,  3749, 
          0,   711,  5618,   523,     0,  5618,   531,  5618,   523,   738, 
       3749,     0,   711,   629,   -59,   -38,     0,     0,     0,   790, 
        533,   533,   831,   748,     0,     0,     0,   310,     0,     0, 
        750,   818,     0,  3337,     0,  3569,   507,   303,   754,     0, 
          0,  5618,     0,   711,     0,   -38,   -38,   533,     0,   840, 
        758,     0,     0,     0,     0,  5618,   823,   523,     0,     0, 
          0,     0,   766,   303,     0,     0,  3596,   767,     0,     0, 
        -38,   -59,   711,   853,     0,     0,   523,  5618,   842,     0, 
          0,     0,     0,     0,     0,  -111,   782,   523,     0,  3722, 
        711,   -59,   868,     0,     0,   711,     0,     0,   787,     0, 
        711,   788,     0, 
    );
    protected static $yyRindex= array(         1380,
          0,     0,   720,     0,     0,   361,  1596,     0,   861,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        875,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -30,   168,     0,     0,    75,     0,  1051, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   902,   -89,   789,   -89,     0,     0,     0, 
          0,     0,     0,     0,   -31,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   791,     0, 
          0,   791,   824,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -12,     0,   293,     0,     0,     0,     0,     0, 
          0,     0,     0,    29,     0,     0,     0,  2576,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  2026,  1915,  1000, 
        886,     0,     0,   701,  1730,     0,   307,     0,     0,     0, 
          0,     0,     0,     0,    81,     0,   887,   -36,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   -11,     0,     0, 
          0,     0,     0,     0,     0,   -97,   804,  1298,   751,  1985, 
       2150,  2613,  2411,  2448,  2485,     0,     0,     0,     0,     0, 
          0,  1730,  5510,  1848,   -13,     0,  1529,     0,     0,   -19, 
          0,   674,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   872,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  1958,     0,   732,     0,   100,     0,     0,     0, 
          0,     0,     0,     0,     0,   -97,     0,   820,     0,     0, 
          0,     0,     0,     0,    55,     0,   810,     0,     0,   845, 
          0,  1730,   846,   847,   481,   887,   534,     0,     0,     0, 
       1730,     0,    87,     0,     0,     0,     0,     0,    62,   363, 
        482,   544,   575,   723,   749,   874,   971,   973,  1306,  1488, 
        546,     0,  5003,  4949,  4879,     0,  4895,     0,  4924,     0, 
          0,    66,  1092,     0,     0,  4426,  4454,  4325,  4400,  4180, 
       4225,  4285,  2651,     0,  2539,     0,   848,   887,     0,  1395, 
          0,     0,     0,     0,     0,     0,     0,     0,    -5,     0, 
          0,   832,     0,    86,     0,     0,    24,     0,     0,     0, 
          0,  5024,   887,     0,   837,     0,     0,   832,   410,     0, 
          0,     0,     0,     0,     0,  1432,     0,     0,  1730,     0, 
       1501,  1600,  4496,  4621,  4727,  4836,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -105,     0,     0,     0,     0, 
        827,     0,     0,   889,     0,     0,     0,     0,     0,   290, 
          0,     0,     0,  1730,     0,    92,     0,   887,     0,  5047, 
          0,     0,   887,   892,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        915,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -97,     0,  1335,     0,     0,     0,     0, 
       1730,     0,     0,     0,   832,   464,     0,     0,     0,   909, 
          0,   832,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    64,     0,     0,   928,     0,   929, 
        929,     0,     0,     0,     0,     0,     0,     0,    24,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   613,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    58,     0,     0,    64,     0,     0,   937, 
          0,   915,     0,     0,   832,     0,     0,     0,     0,   495, 
          0,   832,   909,     0,     0,     0,     0,     0,     0,     0, 
        503,     0,   832,    64,     0,     0,     0,     0,     0,   938, 
         58,    58,     0,     0,     0,     0,     0,   332,     0,     0, 
          0,     0,     0,     0,     0,     0,   457,   856,     0,     0, 
          0,     0,     0,   832,     0,     0,     0,    58,     0,     0, 
          0,     0,     0,     0,     0,   887,     0,     0,     0,     0, 
          0,     0,     0,   857,     0,     0,     0,     0,     0,     0, 
          0,     0,   832,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        -98,     0,     0,     0,     0,   -98,     0,     0,     0,     0, 
        832,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   976,   670,   631,   416, 
        982,   -60,     0,   914,   890,  -146,     0,     0,     0,     0, 
       -115,  -364,     0,     0,     0,   980,     0,   644,     0,     0, 
         83,  1032,  -331,     0,     0,   -62,  -380,   513,   519,     0, 
         48,  -203,     0,   479,     0,     0,     0,     0,   953,   957, 
          0,   581,     0,   910,  -153,  -249,   -86,     0,    68,  -106, 
          0,     0,    15,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   511,   514, 
          0,   430,     0,     0,     0,     0,     0,   467,   468,     0, 
          0,     0,     0,     0,   862,   863,   683,     0,   283,     0, 
       -181,     0,   854,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   770,     0,     0,     0,   803,     0,   822, 
          0,     0,     0,     0,     0,     0,     0,   896,     0,     0, 
       1037, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   248,   222,    97,   173,   222,    93,   222, 
        280,   240,   632,   112,   112,    16,    50,   239,    52,   110, 
        583,   217,   252,   104,   170,   315,   109,   256,    13,    47, 
         48,   308,   309,    26,   536,    57,    12,   121,   310,   124, 
        129,   526,    93,    93,   233,   113,   113,   233,   426,   300, 
        230,   527,   233,   161,   198,   228,    74,    74,    74,   257, 
        229,   124,   237,   230,    81,    82,    92,    32,   228,   226, 
        493,   227,   452,   229,     1,   230,    15,   300,   534,    74, 
        228,   226,    32,   227,   584,   229,   222,   313,   224,   112, 
        354,   500,    74,    74,    46,    74,     5,    59,    44,   360, 
         92,    92,   209,   252,    57,   209,   252,    57,    74,   252, 
         34,    55,    40,    44,   124,   198,   101,    74,    71,   209, 
        209,   113,   357,   252,   252,   270,   252,    57,   252,   282, 
         57,   425,    58,   162,   538,    58,   195,    10,   331,   233, 
         16,    19,   535,   236,   557,    17,    60,   171,    32,   326, 
         58,   313,   233,   523,   209,    35,    57,   170,   252,   252, 
        249,    74,   315,   163,   233,   172,    74,    71,   170,   495, 
         74,   324,    36,   233,   378,   260,    17,    44,   111,    44, 
        101,    74,     9,     9,    58,   144,   209,   419,   315,   252, 
        252,    56,   236,   401,    68,   559,    39,    74,   198,   411, 
          9,   412,   380,    91,   410,   233,   112,    17,    10,    10, 
        179,    17,   180,   181,   182,   183,   184,   185,   582,   187, 
        377,    26,   580,   196,   236,    51,    10,    74,   633,   112, 
        232,    74,   459,   232,   315,   253,    12,   217,   113,   144, 
        530,   530,   332,   333,   308,   309,    74,    74,    74,   236, 
         70,   310,   236,   402,   528,    71,    74,   236,     9,   454, 
         17,   113,   485,   286,   462,   403,    34,   110,   110,   463, 
        275,    34,   277,   404,   109,   109,    15,    78,   560,   501, 
         74,   105,    79,    69,    10,   313,   289,   290,   291,   292, 
        293,   294,   295,   296,   297,   298,   299,   300,   301,   303, 
        304,   305,   307,   309,   312,   313,   316,   317,   318,   319, 
        320,   321,   322,   323,   101,   325,   510,   464,   209,    80, 
        234,   235,   252,   234,   235,   232,   300,   301,   234,   235, 
         20,    21,    22,   258,    24,    25,   306,    26,   232,   231, 
         16,   350,    83,    57,   236,    17,   522,   173,    58,   112, 
        232,   352,   170,    27,   306,   203,   351,   236,   144,    83, 
        359,   361,   230,   219,   168,   173,   168,   228,   226,   236, 
        227,   168,   229,    17,   168,     9,   168,   484,    17,    16, 
         49,   113,   609,   610,   259,   222,   381,   224,   371,   572, 
        372,   238,   373,   374,   189,    97,   375,   376,     9,   173, 
         34,    10,   170,   210,   337,    17,   210,   624,   366,   301, 
        144,    98,   315,   106,    39,   234,   235,    17,   100,   218, 
        210,   210,   168,   108,    10,    17,   225,   223,   234,   235, 
        110,   173,   167,   109,   231,   144,    74,   144,   399,   581, 
        234,   235,   614,   416,    34,   107,    74,   231,   367,   217, 
        214,   233,   420,   214,    54,   210,   168,   168,   508,   231, 
        112,   507,   122,   439,    65,    54,    54,   214,   214,   252, 
        252,   252,   252,   252,   126,   209,   252,   252,   485,   252, 
        252,   252,   252,   252,   252,    74,    74,   210,   368,   157, 
        455,   157,   113,   157,   124,   520,   157,   473,   519,   157, 
        144,   157,   214,   165,   140,   144,   301,   140,   166,   469, 
        170,   158,    86,    87,    88,    89,    90,    19,   344,    12, 
         74,   175,   240,    74,   238,   240,   174,    74,    85,    86, 
         87,    88,    89,    90,   214,   141,   177,    10,   141,   240, 
        240,   190,    13,   144,    10,    14,   144,   157,   202,   315, 
         74,   625,   144,   511,    10,   132,   203,   142,   573,    15, 
        516,   517,   141,   577,   245,   130,   363,   131,    91,   365, 
        247,   638,   246,   238,   240,   315,   105,   239,    43,    44, 
         45,   157,   157,   251,   241,   254,   177,   241,   540,   177, 
        345,   168,   168,   168,   168,   168,   168,    84,   332,   333, 
        551,   241,   241,   177,   177,   238,   240,    74,   586,   587, 
        265,   473,   616,    83,    84,   242,   473,   168,   242,   210, 
        278,   315,   284,    16,   283,   144,   239,    74,   574,     9, 
        576,   629,   242,   242,   189,   611,   241,   232,   177,   285, 
         34,   448,   635,   336,   168,   472,   446,   444,   133,   445, 
        342,   447,   188,   565,   566,    10,   236,   343,   239,   330, 
        315,   315,   315,   349,   607,   473,   214,   242,   241,   353, 
        177,   168,   168,   168,   168,   601,   602,   168,   144,    64, 
         66,    67,    37,    38,   473,   159,   160,   355,   356,   361, 
        370,   168,   168,   168,   168,   473,   168,   168,   168,   242, 
        630,   168,   168,   168,   168,   168,    20,    21,    22,   258, 
         24,    25,   379,    26,   188,   398,   157,   157,   157,   157, 
        157,   157,   400,   406,   408,   225,   223,   234,   235,    27, 
        449,   414,   417,   168,   168,   418,   220,   221,   240,   421, 
        422,   174,   157,   132,   174,   142,   231,   436,   437,   440, 
        141,   442,   443,   130,   451,   131,   453,   456,   466,   174, 
        259,   168,   457,   243,   458,   460,   243,   470,   471,   157, 
        475,   480,   176,   476,   477,   176,   210,   210,   478,   479, 
        243,   243,   178,    86,    87,    88,    89,    90,   494,   244, 
        176,   200,   244,   174,   200,   492,   157,   157,   157,   157, 
        241,    83,   157,   502,   495,   503,   244,   244,    10,   200, 
          5,   504,   506,   513,   514,   243,   157,   157,   157,   157, 
        518,   157,   157,   157,   176,   174,   157,   521,   157,   157, 
        157,   242,   524,   525,   533,   137,   133,   543,   539,   546, 
        542,   244,   547,   200,   230,   219,   545,   243,   548,   228, 
        226,   554,   227,   555,   229,   553,   176,   558,   157,   157, 
        578,   561,   140,   382,   383,   384,   562,   222,   136,   224, 
        575,   588,   589,   244,   595,   200,   596,   599,   606,   612, 
        613,   615,   385,   386,   387,   388,   157,   389,   390,   128, 
        620,   623,   391,   628,   392,   240,   240,    17,    17,   631, 
         17,    17,    17,    17,    17,    17,   634,    17,   639,   641, 
        323,    30,   643,    28,   246,    83,   172,   246,    17,    17, 
         17,    17,    17,    17,   134,   135,   216,   172,    41,   176, 
        216,   246,   246,   233,    40,   296,   297,   298,   300,   300, 
        176,   300,   300,   300,   300,   300,   300,    57,   300,    51, 
        176,    17,   393,    17,    17,    91,   109,   241,   241,   300, 
        300,   172,   300,   300,   300,   316,   246,   172,    92,    88, 
        178,    86,    87,    88,    89,    90,   145,    90,    89,   243, 
        147,   148,    33,    17,    17,    17,    17,    29,   242,   242, 
        102,   127,   300,   409,   300,   300,    10,   316,   246,     5, 
          5,     5,     5,     5,     5,   244,     5,   200,   537,   531, 
        563,   245,    73,   247,   245,    72,   247,   541,   164,     5, 
          5,     5,     5,   137,   300,   300,   300,   300,   245,   245, 
        247,   247,   552,   621,   593,   594,   187,   187,   413,   187, 
        187,   187,   187,   187,   187,   187,   187,   273,   274,   334, 
        140,   382,   383,   384,   364,   287,   136,   187,   187,   187, 
        187,   187,   187,   245,   329,   247,   255,    46,     0,     0, 
        385,   386,   387,   388,     0,   389,   390,   128,     0,   323, 
        391,     0,   392,     0,   483,    86,    87,    88,    89,    90, 
        187,     0,   187,   187,     0,   245,     0,   247,     0,   323, 
        323,   323,   323,   323,   323,   323,   323,     0,     0,     0, 
          0,     0,   134,   135,     0,     0,     0,    17,     0,   232, 
         17,     0,   323,   187,   187,   187,     0,     0,   115,   254, 
        246,     0,   254,     0,   316,   254,   243,   243,   236,     0, 
        393,   315,     0,     0,   168,     0,     0,     0,     0,   254, 
        254,   323,   254,     0,   254,     0,     0,     0,   300,     0, 
        316,   300,   244,   244,     0,     0,     0,     0,     0,     0, 
         17,    17,    17,   315,   316,   316,   316,     0,     0,     0, 
         17,     0,     0,     0,   254,   254,     0,     0,     0,     0, 
         17,    17,    17,     0,     0,     0,     0,   250,     0,     0, 
         17,     0,   115,     0,     0,     0,   316,   225,   223,   234, 
        235,   300,   300,   300,     0,   254,   254,   271,   220,   221, 
          0,   300,     0,     0,     0,     0,     0,   245,   231,   247, 
          0,   300,   300,   300,     0,    20,    21,    22,    23,    24, 
         25,   300,    26,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   185,     0,    27,     0, 
         17,    17,    17,    17,    17,    17,    17,    17,    17,     0, 
         17,    17,    17,     0,    17,    17,    17,    17,    17,    17, 
          0,    17,   338,   339,   340,     0,     0,   246,   246,     0, 
          0,     0,   346,     0,     0,     0,     0,     0,     0,     0, 
          0,   300,   300,   300,   300,   300,   300,   300,   300,   300, 
        315,   187,   300,   300,     0,   300,   300,   300,   300,   300, 
        300,     0,   300,     0,     0,     0,     0,     0,     0,     0, 
        187,     0,     0,     0,   222,   222,   315,   415,   222,   222, 
        222,   222,   222,     0,   222,     0,   248,     0,   254,   248, 
        315,   315,   315,     0,     0,   222,   222,    17,   222,   222, 
         17,     0,     0,   248,   248,     0,     0,     0,     0,     0, 
          0,    32,    32,     0,    32,    32,    32,    32,    32,    32, 
         32,    32,   315,     0,   245,   245,   247,   247,    17,     0, 
        222,   222,    32,    32,    32,    32,    32,    32,   248,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,     0, 
        187,   187,    19,   187,   187,   187,   187,   187,   187,   187, 
        187,   222,   222,   222,     0,    32,     0,    32,    32,     0, 
        248,   286,   286,     0,     0,   286,   286,   286,   286,   286, 
        286,   286,     0,     0,   505,     0,   341,     0,     0,     0, 
          0,   512,   286,   286,   286,   286,   286,   286,    32,    32, 
         32,     0,     0,     0,     0,     0,     0,     0,   183,   183, 
          2,     0,   183,   183,   183,   183,   183,   183,   183,    19, 
          0,     0,     0,     0,     0,   286,     0,   286,   286,   183, 
        183,   183,   183,   183,   183,   254,   254,   254,   254,   254, 
          0,     0,   254,   254,     0,   254,   254,   254,   254,   254, 
        254,     0,     0,   498,   564,     0,     0,     0,   286,   286, 
        286,   571,   183,     0,   183,   183,     0,     0,   249,     0, 
          0,   249,   579,     0,     0,     0,     0,     0,     0,     0, 
          0,   258,     0,     0,   258,   249,   249,     0,     0,     0, 
          0,     0,     0,     0,   222,   183,   183,   183,   258,   258, 
          0,     0,   248,   608,     0,    99,    99,     0,     0,    99, 
         99,    99,    99,    99,     0,    99,     0,     0,     0,     0, 
        249,     0,     0,     0,     0,     0,    99,    99,    99,    99, 
         99,    32,   627,   258,     0,     0,     0,     0,     0,     0, 
          0,    20,    21,    22,   258,    24,    25,     0,    26,   222, 
        637,     0,   249,     0,     0,   640,     0,     0,     0,     0, 
        642,    99,    99,     0,    27,   258,     0,     0,   222,     0, 
          0,     0,     0,     0,     0,     0,     0,    17,     0,     0, 
        259,     0,     0,   259,     0,     0,    32,     0,     0,     0, 
          0,   286,    99,    99,    99,   259,     0,   259,   259,     2, 
          2,     2,     2,     2,     2,    32,     2,     0,    20,    21, 
         22,   258,    24,    25,     0,    26,     0,     0,     0,     2, 
          2,     2,     0,     2,     0,     0,     6,     0,   183,     0, 
          0,    27,   259,     0,     0,     0,     0,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,   286,    17,   222,   222, 
          0,   222,   222,   222,   222,   222,   222,   222,   222,   248, 
        248,     0,   259,     0,   259,   286,     0,     0,     0,     0, 
          0,     0,     0,     0,    32,    32,    32,    32,    32,    32, 
         32,    32,    32,   183,   249,    32,    32,     0,    32,    32, 
         32,    32,    32,    32,    32,    32,     0,   258,     0,     0, 
          0,     0,   183,     0,     0,     0,   280,   280,     0,     0, 
        280,   280,   280,   280,   280,     0,   280,     0,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,   280,   280,   280, 
        280,   280,   280,     0,   286,   286,   286,   286,   286,   286, 
        286,   286,   286,     0,     0,   286,   286,     0,   286,   286, 
        286,   286,   286,   286,   286,   286,     0,     0,     0,     0, 
          0,     0,   280,   280,     0,     0,     0,     0,     0,     0, 
          0,   183,   183,   183,   183,   183,   183,   183,   183,   183, 
         99,     0,   183,   183,     0,   183,   183,   183,   183,   183, 
        183,   183,   183,   280,   280,   280,   259,     0,    99,    99, 
          0,     0,     0,    19,     0,     0,     0,     0,    99,     0, 
          0,     0,     0,     0,     0,     6,     6,     6,     6,     6, 
          6,     0,     6,     0,   187,   187,     0,   187,   187,   187, 
        187,   220,   187,   187,   187,     6,     6,     6,     6,     0, 
          0,   249,   249,     0,     0,     0,     0,   187,   187,   187, 
        187,     0,     0,     0,   258,   258,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    99,    99, 
         99,    99,    99,    99,    99,    99,    99,     0,   187,    99, 
         99,   187,    99,    99,    99,    99,    99,    99,     0,    99, 
          0,   229,   229,     0,   229,     0,   229,   229,   229,   229, 
        229,   229,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   187,     0,   187,   229,   229,   229,   229,     0,     0, 
          0,     0,     0,     0,     0,     0,   280,     0,     0,     0, 
          0,     0,     0,     0,   282,   282,     0,     0,   282,   282, 
        282,   282,   282,     0,   282,   229,     0,   229,   229,     0, 
          0,     0,     0,   259,   259,   282,   282,   282,   282,   282, 
        282,   274,   274,     0,     0,   274,   274,   274,   274,   274, 
          0,   274,     0,     0,     0,     0,     0,     0,   229,     0, 
        229,   280,   274,   274,   274,   274,   274,   274,     0,     0, 
        282,   282,    20,    21,    22,    23,    24,    25,     0,    26, 
        280,     0,   222,   222,     0,     0,     0,   222,   222,   222, 
        222,     0,   222,     0,     0,    27,     0,   274,   274,     0, 
          0,   282,   282,   282,     0,   222,   222,   222,   222,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   185,     0,     0,     0,   274,   274, 
          0,     0,     0,     0,     0,     0,   222,     0,   222,   222, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   280, 
        280,   280,   280,   280,   280,   280,   280,   280,     0,     0, 
        280,   280,     0,   280,   280,   280,   280,   280,   280,   222, 
        280,   222,     0,     0,     0,     0,     0,     0,     0,   187, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   187,     0, 
          0,     0,     0,     0,     0,     0,   275,   275,     0,     0, 
        275,   275,   275,   275,   275,     0,   275,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   275,   275,   275, 
        275,   275,   275,     0,   282,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   229,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   274,   275,   275,     0,   229,     0,   187,   187,   187, 
        187,   187,   187,   187,   187,   187,     0,     0,   187,   187, 
          0,   187,   187,   187,   187,   187,   187,   187,   187,   282, 
          0,     0,     0,   275,   275,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   282,     0, 
          0,     0,     0,     0,     0,     0,   274,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   229,   229,   229,   229,   229,   229, 
        229,   229,   229,     0,     0,   229,   229,     0,   229,   229, 
        229,   229,   229,   229,   229,   229,     0,   222,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   222,   282,   282,   282, 
        282,   282,   282,   282,   282,   282,     0,     0,   282,   282, 
          0,   282,   282,   282,   282,   282,   282,     0,   282,     0, 
          0,     0,     0,     0,   274,   274,     0,     0,   274,   274, 
        274,   274,   274,     0,     0,   274,   274,     0,   274,   274, 
        274,   274,   274,   274,     0,   274,   275,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   222,   222,   222,   222,   222, 
        222,   222,   222,   222,     0,    17,   222,   222,     0,   222, 
        222,   222,   222,   222,   222,   222,   222,   273,   273,     0, 
          0,   273,   273,   273,   273,   273,     0,   273,     0,     0, 
          0,   275,     0,     0,     0,     0,     0,     0,   273,   273, 
        273,   273,   273,   273,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   276,   276,     0,     0,   276,   276, 
        276,   276,   276,     0,   276,     0,     0,     0,     0,     0, 
          0,     0,     0,   273,   273,   276,   276,   276,   276,   276, 
        276,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   277,   277,     0,     0,   277,   277,   277,   277,   277, 
          0,   277,     0,     0,   273,   273,     0,     0,     0,     0, 
        276,   276,   277,   277,   277,   277,   277,   277,     0,   275, 
        275,     0,     0,   275,   275,   275,   275,   275,     0,     0, 
        275,   275,     0,   275,   275,   275,   275,   275,   275,     0, 
        275,   276,   276,     0,     0,   265,   265,   277,   277,   265, 
        265,   265,   265,   265,     0,   265,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   265,   265,   265,   265, 
        265,   265,     0,     0,     0,     0,     0,     0,   277,   277, 
          0,     0,   199,   199,     0,     0,   199,   199,     0,   199, 
          0,     0,   199,     0,     0,     0,     0,     0,     0,     0, 
          0,   265,   265,   199,   199,   199,   199,   199,   199,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   272, 
        272,     0,     0,   272,   272,   272,   272,   272,     0,   272, 
          0,     0,   265,   265,     0,     0,     0,   273,   199,   199, 
        272,   272,   272,   272,   272,   272,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   271,   271,     0, 
          0,   271,   271,   271,   271,   271,     0,   271,     0,   199, 
        199,     0,     0,     0,   276,   272,   272,     0,   271,   271, 
        271,   271,   271,   271,     0,     0,     0,     0,     0,     0, 
          0,     0,   273,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   272,   272,     0,     0, 
          0,   277,     0,   271,   271,     0,   230,   219,     0,     0, 
          0,   228,   226,     0,   227,     0,   229,     0,     0,   276, 
          0,     0,     0,     0,     0,     0,     0,   269,     0,   222, 
        206,   224,   216,     0,   271,   271,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   265,   277,     0,     0,     0, 
          0,     0,     0,   218,     0,     0,     0,     0,     0,     0, 
        273,   273,     0,     0,   273,   273,   273,   273,   273,     0, 
          0,   273,   273,     0,   273,   273,   273,   273,   273,   273, 
          0,   273,   199,   217,     0,   233,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   276,   276,     0, 
        265,   276,   276,   276,   276,   276,     0,     0,   276,   276, 
          0,   276,   276,   276,   276,   276,   276,     0,   276,   272, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   277,   277,     0,   199,   277,   277, 
        277,   277,   277,     0,     0,   277,   277,     0,   277,   277, 
        277,   277,   277,   277,     0,   277,   199,   271,   230,   219, 
          0,     0,   281,   228,   226,     0,   227,     0,   229,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   222,   206,   224,   216,     0,     0,     0,   265,   265, 
          0,     0,   265,   265,   265,   265,   265,     0,     0,   265, 
        265,     0,   265,   265,   265,   265,   265,   265,     0,   265, 
          0,     0,     0,     0,     0,   218,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   199,   199,     0,     0,   199, 
        199,   199,   199,   199,     0,     0,   199,   199,     0,   199, 
        199,   199,   199,   199,   199,   217,   199,   233,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   272,   272,     0,     0,   272,   272,   272,   272, 
        272,   232,     0,   272,   272,     0,   272,   272,   272,   272, 
        272,   272,     0,   272,     0,     0,     0,     0,     0,     0, 
        236,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        271,   271,     0,     0,   271,   271,   271,   271,   271,     0, 
          0,   271,   271,     0,   271,   271,   271,   271,   271,   271, 
          0,   271,   230,   219,     0,     0,     0,   228,   226,     0, 
        227,     0,   229,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   438,   222,   206,   224,   216,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   225, 
        223,   234,   235,   207,   208,   209,   210,   212,     0,     0, 
        220,   221,     0,   204,   205,   211,   214,   213,   215,   218, 
        231,   230,   219,     0,     0,   499,   228,   226,     0,   227, 
          0,   229,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   222,   206,   224,   216,     0,   217, 
          0,   233,     0,     0,     0,     0,     0,     0,     0,   230, 
        219,     0,     0,     0,   228,   226,     0,   227,     0,   229, 
          0,     0,     0,   232,     0,     0,     0,     0,   218,     0, 
          0,   509,   222,   206,   224,   216,     0,     0,     0,     0, 
          0,     0,   236,     0,     0,     0,     0,     0,     0,   230, 
        219,     0,     0,   544,   228,   226,     0,   227,   217,   229, 
        233,     0,     0,     0,     0,     0,   218,     0,     0,     0, 
          0,     0,   222,   206,   224,   216,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   217,     0,   233,     0, 
          0,     0,     0,     0,     0,     0,   218,     0,     0,     0, 
          0,   225,   223,   234,   235,   207,   208,   209,   210,   212, 
          0,     0,   220,   221,     0,   204,   205,   211,   214,   213, 
        215,     0,   231,     0,     0,     0,   217,     0,   233,     0, 
          0,     0,     0,     0,     0,     0,   230,   219,     0,     0, 
        549,   228,   226,     0,   227,     0,   229,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   222, 
        206,   224,   216,   230,   219,     0,     0,   550,   228,   226, 
          0,   227,     0,   229,     0,     0,     0,   232,     0,     0, 
          0,     0,     0,     0,     0,     0,   222,   206,   224,   216, 
          0,     0,     0,   218,     0,     0,   236,     0,     0,     0, 
          0,     0,     0,   230,   219,     0,     0,   597,   228,   226, 
          0,   227,     0,   229,     0,     0,     0,     0,     0,     0, 
        218,     0,     0,   217,     0,   233,   222,   206,   224,   216, 
          0,     0,     0,     0,     0,     0,   232,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        217,     0,   233,     0,     0,   236,     0,     0,     0,     0, 
        218,     0,     0,     0,     0,   225,   223,   234,   235,   207, 
        208,   209,   210,   212,   232,     0,   220,   221,     0,   204, 
        205,   211,   214,   213,   215,     0,   231,     0,     0,     0, 
        217,     0,   233,   236,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   232,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   225,   223,   234,   235,   207,   208, 
        209,   210,   212,   236,     0,   220,   221,     0,   204,   205, 
        211,   214,   213,   215,     0,   231,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   225,   223,   234,   235,   207,   208,   209,   210, 
        212,     0,     0,   220,   221,     0,   204,   205,   211,   214, 
        213,   215,     0,   231,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   225,   223,   234,   235,   207,   208,   209,   210, 
        212,   232,     0,   220,   221,     0,   204,   205,   211,   214, 
        213,   215,     0,   231,     0,     0,     0,     0,     0,     0, 
        236,     0,     0,     0,     0,   230,   219,     0,   232,   598, 
        228,   226,     0,   227,     0,   229,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   236,   222,   206, 
        224,   216,   230,   219,     0,     0,     0,   228,   226,     0, 
        227,     0,   229,     0,     0,     0,     0,     0,   232,     0, 
          0,     0,     0,     0,   622,   222,   206,   224,   216,     0, 
          0,     0,   218,     0,     0,     0,     0,   236,     0,   225, 
        223,   234,   235,   207,   208,   209,   210,   212,     0,     0, 
        220,   221,     0,   204,   205,   211,   214,   213,   215,   218, 
        231,     0,   217,     0,   233,     0,   225,   223,   234,   235, 
        207,   208,   209,   210,   212,     0,     0,   220,   221,     0, 
        204,   205,   211,   214,   213,   215,     0,   231,     0,   217, 
          0,   233,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   225,   223,   234,   235, 
        207,   208,   209,   210,   212,     0,     0,   220,   221,     0, 
        204,   205,   211,   214,   213,   215,     0,   231,   230,   219, 
          0,     0,     0,   228,   226,     0,   227,     0,   229,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   636, 
          0,   222,   206,   224,   216,   230,   219,     0,     0,     0, 
        228,   226,     0,   227,     0,   229,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   222,   206, 
        224,   216,     0,   230,   219,   218,     0,     0,   228,   226, 
          0,   227,     0,   229,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   222,   206,   224,   216, 
          0,     0,   218,     0,     0,   217,     0,   233,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        218,     0,   217,     0,   233,     0,     0,     0,     0,     0, 
        232,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   236, 
        217,     0,   233,     0,     0,     0,     0,   232,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   236,     0,     0,     0, 
          0,   230,   219,     0,     0,     0,   228,   226,     0,   227, 
          0,   229,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   222,   206,   224,   216,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   225,   223, 
        234,   235,   207,   208,   209,   210,   212,     0,     0,   220, 
        221,     0,   204,   205,   211,   214,   213,   215,   218,   231, 
          0,     0,     0,     0,     0,   225,   223,   234,   235,   207, 
        208,   209,   210,   212,     0,     0,   220,   221,     0,   204, 
        205,   211,   214,   213,   215,     0,   231,     0,   217,     0, 
        233,     0,     0,     0,     0,     0,     0,   132,     0,   142, 
          0,     0,     0,   232,   141,     0,     0,   130,     0,   131, 
          0,   230,   219,     0,     0,     0,   228,   226,     0,   227, 
          0,   229,   236,     0,   310,     0,     0,   230,     0,     0, 
        232,     0,   228,   226,   222,   227,   224,   229,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   236, 
        222,     0,   224,     0,     0,    83,     0,     0,   232,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   218,     0, 
          0,     0,     0,     0,     0,     0,     0,   236,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        133,   225,   223,   234,   235,   207,   208,   209,   210,   212, 
        233,     0,   220,   221,     0,   204,   205,   211,   214,   213, 
        215,     0,   231,     0,     0,     0,   233,     0,   225,   223, 
        234,   235,   207,   208,   209,   210,   212,     0,     0,   220, 
        221,     0,   204,   205,   211,   214,   213,   215,     0,   231, 
          0,     0,     0,     0,     0,     0,   225,   223,   234,   235, 
        207,   208,   209,   210,   212,     0,     0,   220,   221,     0, 
          0,   205,   211,   214,   213,   215,     0,   231,     0,     0, 
          0,     0,     0,     0,     0,     0,   232,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   262,   262,     0,     0, 
        262,   262,   262,   262,   262,   236,   262,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   262,   262,   262, 
        262,   262,   262,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   178,    86,    87,    88,    89,    90, 
          0,   263,   263,     0,     0,   263,   263,   263,   263,   263, 
          0,   263,   262,   262,     0,     0,     0,     0,     0,     0, 
         10,     0,   263,   263,   263,   263,   263,   263,     0,     0, 
          0,     0,     0,     0,   225,   223,   234,   235,   207,   208, 
        209,   210,   212,   262,   262,   220,   221,   137,     0,     0, 
        211,   214,   213,   215,     0,   231,   232,   263,   263,     0, 
          0,   264,   264,     0,     0,   264,   264,   264,   264,   264, 
          0,   264,   232,     0,   140,   236,     0,     0,     0,     0, 
        136,     0,   264,   264,   264,   264,   264,   264,   263,   263, 
          0,   236,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   128,   260,     0,     0,   260,     0,   260,   260,   260, 
          0,     0,     0,     0,     0,     0,     0,   264,   264,     0, 
          0,     0,   260,   260,   260,   260,   260,   260,     0,     0, 
          0,     0,     0,     0,     0,   311,   134,   135,     0,     0, 
          0,     0,     0,     0,   225,   223,   234,   235,   264,   264, 
          0,     0,     0,     0,     0,   220,   221,   260,   260,     0, 
        225,   223,   234,   235,     0,   231,     0,     0,     0,     0, 
          0,   220,   221,     0,     0,     0,   262,   261,     0,     0, 
        261,   231,   261,   261,   261,     0,     0,     0,   260,   260, 
          0,     0,     0,     0,     0,     0,     0,   261,   261,   261, 
        261,   261,   261,   253,     0,     0,   253,     0,     0,   253, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   263,     0,   253,   253,     0,   253,     0,   253,     0, 
          0,   255,   261,   261,   255,     0,     0,   255,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   255,   255,     0,   255,     0,   255,     0,   253,   253, 
          0,     0,     0,   261,   261,     0,     0,     0,     0,     0, 
          0,     0,     0,   270,     0,     0,   270,     0,     0,   270, 
          0,   264,     0,     0,     0,     0,   255,   255,     0,   253, 
        253,     0,     0,   270,   270,     0,   270,     0,   270,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   255,   255,   262, 
        262,   260,     0,   262,   262,   262,   262,   262,   270,   270, 
        262,   262,     0,   262,   262,   262,   262,   262,   262,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   270, 
        270,     0,     0,     0,   263,   263,     0,     0,   263,   263, 
        263,   263,   263,     0,     0,   263,   263,     0,   263,   263, 
        263,   263,   263,   263,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   261,     0,   251,     0, 
          0,   251,     0,     0,   251,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   251,   251, 
          0,   251,   253,   251,   264,   264,     0,     0,   264,   264, 
        264,   264,   264,     0,     0,   264,   264,     0,   264,   264, 
        264,   264,   264,   264,     0,     0,     0,     0,     0,     0, 
        255,     0,     0,   251,   251,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   260,   260,     0,     0,   260,   260, 
        260,   260,   260,     0,     0,   260,   260,     0,   260,   260, 
        260,   260,   260,   260,   251,   251,     0,     0,     0,     0, 
          0,     0,   270,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   269,     0,     0,   269,     0,     0, 
        269,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   269,   269,     0,   269,     0,   269, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   261, 
        261,     0,     0,   261,   261,   261,   261,   261,     0,     0, 
        261,   261,     0,   261,   261,   261,   261,   261,   261,   269, 
        269,     0,     0,     0,     0,     0,     0,     0,     0,   253, 
        253,   253,   253,   253,     0,     0,   253,   253,     0,   253, 
        253,   253,   253,   253,   253,     0,     0,     0,     0,     0, 
        269,   269,     0,     0,     0,     0,     0,   255,   255,   255, 
        255,   255,     0,     0,   255,   255,     0,   255,   255,   255, 
        255,   255,   255,   250,     0,     0,   250,   251,     0,   250, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   250,   250,     0,   250,     0,   250,   270, 
        270,   270,   270,   270,     0,     0,   270,   270,     0,   270, 
        270,   270,   270,   270,   270,     0,   267,     0,     0,   267, 
          0,     0,   267,     0,     0,     0,     0,     0,   250,   250, 
          0,     0,   256,     0,     0,   256,   267,   267,   256,   267, 
          0,   267,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   256,   256,     0,   256,     0,   256,     0,   250, 
        250,   257,     0,     0,   257,     0,     0,   257,     0,     0, 
          0,   267,   267,     0,     0,     0,     0,     0,     0,     0, 
          0,   257,   257,   269,   257,     0,   257,   256,   256,   268, 
          0,     0,   268,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   267,   267,     0,     0,   268,   268,     0,   268, 
          0,   268,     0,     0,     0,     0,   257,   257,   256,   256, 
          0,     0,     0,     0,   251,   251,   251,   251,   251,     0, 
          0,   251,   251,     0,   251,   251,   251,   251,   251,   251, 
          0,   268,   268,   266,     0,     0,   266,   257,   257,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        266,   266,     0,   266,   201,   266,     0,   201,     0,     0, 
          0,     0,   268,   268,     0,     0,     0,     0,     0,     0, 
          0,   201,   201,     0,   201,     0,   201,   208,     0,     0, 
        208,     0,   250,     0,     0,   266,     0,     0,     0,     0, 
          0,     0,     0,     0,   208,   208,     0,   208,     0,   208, 
          0,     0,     0,     0,     0,     0,   201,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   266,   266,     0,     0, 
        269,   269,   269,   269,   269,   267,     0,   269,   269,   208, 
        269,   269,   269,   269,   269,   269,     0,     0,   201,     0, 
          0,   256,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   208,     0,     0,     0,     0,     0,     0,     0,     0, 
        257,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   268,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   250, 
        250,   250,   250,   250,     0,     0,   250,   250,     0,   250, 
        250,   250,   250,   250,   250,     0,     0,     0,   132,   266, 
        142,     0,     0,     0,     0,   141,     0,   132,   130,   142, 
        131,     0,     0,     0,   141,     0,     0,   130,     0,   131, 
        201,     0,   267,   267,   267,   267,   267,   314,     0,     0, 
          0,     0,   267,   267,   267,   267,   267,   267,   256,   256, 
        256,   256,   256,   208,     0,     0,     0,     0,   256,   256, 
        256,   256,   256,   256,     0,     0,    83,     0,     0,     0, 
          0,     0,     0,     0,     0,   193,     0,   257,   257,   257, 
        257,   257,     0,     0,     0,     0,     0,   257,   257,   257, 
        257,   257,   257,     0,     0,     0,     0,     0,     0,     0, 
          0,   133,   268,   268,   268,   268,   268,   113,     0,     0, 
        133,     0,   268,   268,   268,   268,   268,   268,     0,     0, 
          0,     0,     0,     0,     0,     0,   132,     0,   142,     0, 
          0,     0,     0,   141,     0,   132,   130,   142,   131,     0, 
          0,     0,   141,     0,     0,   130,     0,   131,     0,     0, 
          0,   129,     0,     0,     0,     0,   266,   266,   266,   266, 
        266,     0,     0,   306,     0,     0,   266,   266,   266,   266, 
        266,   266,     0,     0,     0,     0,     0,   201,   201,   201, 
        201,   201,     0,     0,    83,     0,     0,   201,   201,   201, 
        201,   201,   201,    83,     0,     0,     0,     0,     0,     0, 
        208,   208,   208,   208,   208,     0,     0,     0,     0,     0, 
        208,   208,   208,   208,   208,   208,     0,     0,     0,   133, 
          0,     0,     0,     0,     0,     0,     0,     0,   133,     0, 
          0,     0,     0,     0,     0,   178,    86,    87,    88,    89, 
         90,     0,     0,     0,   178,    86,    87,    88,    89,    90, 
        132,     0,   142,     0,     0,     0,     0,   141,     0,     0, 
        130,    10,   131,     0,     0,     0,     0,     0,     0,     0, 
         10,     0,     0,     0,     0,     0,     0,     0,   308,   132, 
          0,   142,     0,     0,     0,     0,   141,     0,   137,   130, 
          0,   131,   223,     0,   223,     0,     0,   137,     0,   223, 
          0,     0,   223,     0,   223,     0,     0,     0,    83,     0, 
          0,     0,     0,     0,     0,   140,     0,     0,     0,     0, 
          0,   136,     0,     0,   194,     0,     0,     0,     0,     0, 
        136,     0,     0,     0,     0,     0,     0,    83,     0,     0, 
          0,     0,   128,   133,     0,     0,     0,     0,     0,     0, 
        223,   128,   223,   138,   139,    87,    88,    89,    90,     0, 
          0,     0,   178,    86,    87,    88,    89,    90,     0,   358, 
          0,     0,   133,     0,     0,   315,     0,   134,   135,    10, 
          0,     0,     0,     0,     0,   223,   134,   135,    10,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        132,     0,   142,     0,     0,     0,   137,   141,     0,     0, 
        130,     0,   131,     0,     0,   137,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   140,     0,     0,     0,     0,     0,   136, 
          0,     0,   140,     0,     0,     0,     0,     0,   136,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    83,     0, 
        128,     0,     0,     0,     0,     0,     0,     0,     0,   128, 
          0,     0,     0,     0,     0,     0,     0,   178,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   133,     0,   134,   135,     0,     0,     0, 
          0,     0,     0,    10,   134,   135,   178,    86,    87,    88, 
         89,    90,     0,     0,     0,     0,     0,     0,     0,   223, 
        223,   223,   223,   223,   223,     0,     0,     0,     0,     0, 
        137,     0,    10,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   223,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   140,     0,   137, 
          0,     0,     0,   136,     0,     0,     0,     0,     0,     0, 
          0,     0,   223,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   128,     0,   140,     0,     0,     0, 
          0,     0,   136,     0,     0,     0,     0,     0,     0,   223, 
          0,     0,     0,     0,     0,   223,     0,     0,     0,     0, 
          0,     0,     0,   128,     0,     0,     0,     0,     0,   134, 
        135,     0,     0,     0,     0,     0,   223,   178,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   134,   135, 
          0,     0,     0,    10,     0,     0,     0,     0,     0,     0, 
          0,   223,   223,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        137,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   140,     0,     0, 
          0,     0,     0,   136,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   128,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   134, 
        135, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,   157,    41,    60,   122,    44,    71,    41, 
        192,    40,   124,    91,    91,    46,    46,    46,    42,   125, 
         59,    41,    44,    84,    91,   123,   125,   174,    59,    34, 
         35,    44,    44,   123,   125,    40,   260,    98,    44,   100, 
         58,   330,   105,   106,   126,   123,   123,   126,    40,    63, 
         37,   340,   126,   260,   141,    42,    61,    62,    63,   175, 
         47,   122,    91,    37,    69,    70,    71,    44,    42,    43, 
        451,    45,   404,    47,   303,    37,   300,    91,    59,    84, 
         42,    43,    59,    45,   123,    47,    60,    59,    62,    91, 
        272,   456,    97,    98,    40,   100,   304,    44,    44,   281, 
        105,   106,    41,    38,    41,    44,    41,    44,   113,    44, 
         46,   260,    64,    59,   175,   202,    59,   122,    44,    58, 
         59,   123,   276,    58,    59,   186,    61,    41,    63,    63, 
         44,   123,    41,   340,   499,    44,   141,   286,   245,   126, 
        364,    91,   123,    44,   525,    60,    93,    44,   125,   236, 
         59,   123,   126,   485,    93,    46,    93,    91,    93,    94, 
        165,   166,   260,   260,   126,    62,   171,    93,    91,   260, 
        175,   232,    59,    93,   328,   125,    91,   123,    63,   125, 
        123,   186,   260,   260,    93,   103,   125,   369,   286,   124, 
        125,   340,    93,   260,    59,   527,    46,   202,   285,   353, 
        260,   355,   125,   300,   351,   125,    91,    40,   286,   286, 
        128,    44,   130,   131,   132,   133,   134,   135,   257,   137, 
        327,   311,   554,   141,   125,    46,   286,   232,   340,    91, 
        312,   236,   414,   312,   332,   257,   260,   257,   123,   157, 
        490,   491,   260,   261,   257,   257,   251,   252,   253,   331, 
         58,   257,   331,   320,   332,    40,   261,   331,   260,   406, 
         93,   123,   340,   340,   418,   332,    46,   373,   374,   423, 
        188,    46,   190,   340,   373,   374,   300,    59,   528,   461, 
        285,    61,    59,    58,   286,   257,   204,   205,   206,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   229,   230,   231,   257,   233,   470,   424,   257,    59, 
        402,   403,   257,   402,   403,   312,   340,   245,   402,   403, 
        280,   281,   282,   283,   284,   285,    44,   287,   312,   421, 
        364,    44,    91,   257,   331,   260,    46,    41,   257,    91, 
        312,   269,    91,   303,    62,   410,    59,   331,   276,    91, 
        278,    61,    37,    38,    33,    59,    35,    42,    43,   331, 
         45,    40,    47,   410,    43,   260,    45,   440,   410,   410, 
        410,   123,   586,   587,   334,    60,   125,    62,   306,   543, 
        308,   420,   310,   311,    40,    60,   314,   315,   260,    93, 
         46,   286,    91,    41,    93,   320,    44,   611,   260,   327, 
        328,   310,   123,    61,   125,   402,   403,   332,   310,    94, 
         58,    59,    91,    41,   286,   340,   400,   401,   402,   403, 
         41,   125,    63,    44,   421,   353,   441,   355,    40,   555, 
        402,   403,   596,   361,    46,   410,   451,   421,   300,   124, 
         41,   126,   370,    44,    39,    93,   125,   126,    41,   421, 
         91,    44,   311,   396,    49,    50,    51,    58,    59,   404, 
        405,   406,   407,   408,   123,   414,   411,   412,   340,   414, 
        415,   416,   417,   418,   419,   490,   491,   125,   340,    33, 
        408,    35,   123,    40,   555,    41,    40,   430,    44,    43, 
        418,    45,    93,   310,    41,   423,   424,    44,    58,   427, 
         91,   260,   261,   262,   263,   264,   265,    91,   260,   260, 
        525,    44,    41,   528,    44,    44,   123,   532,   260,   261, 
        262,   263,   264,   265,   125,    41,   123,   286,    44,    58, 
         59,    58,   283,    41,   286,   286,    44,    91,   123,   260, 
        555,   612,   470,   471,   286,    33,   410,    35,   544,   300, 
        478,   479,    40,   549,    44,    43,   284,    45,   300,   287, 
         44,   632,    93,    93,    93,   286,    61,    44,   300,   301, 
        302,   125,   126,   257,    41,    93,    41,    44,   506,    44, 
        332,   260,   261,   262,   263,   264,   265,   346,   260,   261, 
        518,    58,    59,    58,    59,   125,   125,   612,   561,   562, 
        260,   544,   598,    91,   346,    41,   549,   286,    44,   257, 
        257,   332,    41,   364,   340,   543,    93,   632,   546,   260, 
        548,   617,    58,    59,    40,   588,    93,   312,    93,    44, 
         46,    37,   628,    41,   313,   123,    42,    43,   126,    45, 
        123,    47,    58,   344,   345,   286,   331,   260,   125,   244, 
        300,   301,   302,   125,   582,   598,   257,    93,   125,    40, 
        125,   340,   341,   342,   343,   373,   374,   346,   596,    49, 
         50,    51,    13,    14,   617,   105,   106,   123,   123,    61, 
         58,   360,   361,   362,   363,   628,   365,   366,   367,   125, 
        618,   370,   371,   372,   373,   374,   280,   281,   282,   283, 
        284,   285,    40,   287,    58,   260,   260,   261,   262,   263, 
        264,   265,   260,   123,    40,   400,   401,   402,   403,   303, 
        126,    41,   125,   402,   403,    40,   411,   412,   257,    93, 
         41,    41,   286,    33,    44,    35,   421,    40,   125,    61, 
         40,    40,    40,    43,    91,    45,   123,    41,   340,    59, 
        334,   430,   125,    41,   125,   125,    44,    40,    40,   313, 
         40,   340,    41,    59,    59,    44,   414,   415,    40,    40, 
         58,    59,   260,   261,   262,   263,   264,   265,    59,    41, 
         59,    41,    44,    93,    44,    40,   340,   341,   342,   343, 
        257,    91,   346,    41,   260,    41,    58,    59,   286,    59, 
         91,    59,    61,   361,   340,    93,   360,   361,   362,   363, 
         61,   365,   366,   367,    93,   125,   370,    59,   372,   373, 
        374,   257,    41,    44,    93,   313,   126,    59,   125,    40, 
        123,    93,    44,    93,    37,    38,   125,   125,   364,    42, 
         43,   260,    45,   321,    47,   123,   125,   340,   402,   403, 
        123,    41,   340,   341,   342,   343,    41,    60,   346,    62, 
        340,    41,   125,   125,   125,   125,    59,   371,   125,    40, 
        123,    59,   360,   361,   362,   363,   430,   365,   366,   367, 
        125,   125,   370,    41,   372,   414,   415,    37,    38,    58, 
         40,    41,    42,    43,    44,    45,   125,    47,    41,   123, 
         91,   123,   125,   123,    41,    91,    93,    44,    58,    59, 
         60,    61,    62,    63,   402,   403,    41,    41,   125,    58, 
        257,    58,    59,   126,   125,    91,    91,    91,    37,    38, 
         93,    40,    41,    42,    43,    44,    45,    59,    47,   123, 
         59,    91,   430,    93,    94,    41,   125,   414,   415,    58, 
         59,   125,    61,    62,    63,    91,    93,    59,    41,    41, 
        260,   261,   262,   263,   264,   265,   364,    41,    41,   257, 
        125,   125,     7,   123,   124,   125,   126,     6,   414,   415, 
         77,   102,    91,   350,    93,    94,   286,   123,   125,   280, 
        281,   282,   283,   284,   285,   257,   287,   257,   496,   491, 
        532,    41,    60,    41,    44,    59,    44,   507,   109,   300, 
        301,   302,   303,   313,   123,   124,   125,   126,    58,    59, 
         58,    59,   519,   604,   568,   568,    37,    38,   356,    40, 
         41,    42,    43,    44,    45,    46,    47,   186,   186,   247, 
        340,   341,   342,   343,   285,   202,   346,    58,    59,    60, 
         61,    62,    63,    93,   243,    93,   171,    31,    -1,    -1, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,   260, 
        370,    -1,   372,    -1,   260,   261,   262,   263,   264,   265, 
         91,    -1,    93,    94,    -1,   125,    -1,   125,    -1,   280, 
        281,   282,   283,   284,   285,   286,   287,    -1,    -1,    -1, 
         -1,    -1,   402,   403,    -1,    -1,    -1,   257,    -1,   312, 
        260,    -1,   303,   124,   125,   126,    -1,    -1,    97,    38, 
        257,    -1,    41,    -1,   260,    44,   414,   415,   331,    -1, 
        430,    91,    -1,    -1,   113,    -1,    -1,    -1,    -1,    58, 
         59,   332,    61,    -1,    63,    -1,    -1,    -1,   257,    -1, 
        286,   260,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
        310,   311,   312,   123,   300,   301,   302,    -1,    -1,    -1, 
        320,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
        330,   331,   332,    -1,    -1,    -1,    -1,   166,    -1,    -1, 
        340,    -1,   171,    -1,    -1,    -1,   332,   400,   401,   402, 
        403,   310,   311,   312,    -1,   124,   125,   186,   411,   412, 
         -1,   320,    -1,    -1,    -1,    -1,    -1,   257,   421,   257, 
         -1,   330,   331,   332,    -1,   280,   281,   282,   283,   284, 
        285,   340,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,   303,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        410,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,   251,   252,   253,    -1,    -1,   414,   415,    -1, 
         -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        260,   312,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    37,    38,   286,   358,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    41,    -1,   257,    44, 
        300,   301,   302,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45, 
         46,    47,   332,    -1,   414,   415,   414,   415,    91,    -1, 
         93,    94,    58,    59,    60,    61,    62,    63,    93,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    91,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,   126,    -1,    91,    -1,    93,    94,    -1, 
        125,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,   465,    -1,   125,    -1,    -1,    -1, 
         -1,   472,    58,    59,    60,    61,    62,    63,   124,   125, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         91,    -1,    41,    42,    43,    44,    45,    46,    47,    91, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,    93,    94,    58, 
         59,    60,    61,    62,    63,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,   125,   535,    -1,    -1,    -1,   124,   125, 
        126,   542,    91,    -1,    93,    94,    -1,    -1,    41,    -1, 
         -1,    44,   553,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,   124,   125,   126,    58,    59, 
         -1,    -1,   257,   584,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,   257,   613,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,   312, 
        631,    -1,   125,    -1,    -1,   636,    -1,    -1,    -1,    -1, 
        641,    93,    94,    -1,   303,   125,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,   257,   124,   125,   126,   334,    -1,    58,    59,   280, 
        281,   282,   283,   284,   285,   331,   287,    -1,   280,   281, 
        282,   283,   284,   285,    -1,   287,    -1,    -1,    -1,   300, 
        301,   302,    -1,   304,    -1,    -1,    91,    -1,   257,    -1, 
         -1,   303,    93,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,   410,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   414, 
        415,    -1,   334,    -1,   125,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,   257,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,   257,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    58,    59,    60, 
         61,    62,    63,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   124,   125,   126,   257,    -1,   330,   331, 
         -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,    -1,   280,   281,   282,   283,   284, 
        285,    -1,   287,    -1,    37,    38,    -1,    40,    41,    42, 
         43,    44,    45,    46,    47,   300,   301,   302,   303,    -1, 
         -1,   414,   415,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    91,   411, 
        412,    94,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    37,    38,    -1,    40,    -1,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,   126,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    91,    -1,    93,    94,    -1, 
         -1,    -1,    -1,   414,   415,    58,    59,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        126,   312,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         93,    94,   280,   281,   282,   283,   284,   285,    -1,   287, 
        331,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    44, 
         45,    -1,    47,    -1,    -1,   303,    -1,    93,    94,    -1, 
         -1,   124,   125,   126,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   124, 
        421,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    93,    94,    -1,   331,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   312, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,   410,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         93,    94,    58,    59,    60,    61,    62,    63,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   124,   125,    -1,    -1,    37,    38,    93,    94,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    -1,    44, 
         -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,   124,   125,    -1,    -1,    -1,   257,    93,    94, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,   124, 
        125,    -1,    -1,    -1,   257,    93,    94,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,   257,    -1,    93,    94,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60, 
         61,    62,    63,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,   257,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
        312,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,   312,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,   331,   257,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   124,   421,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,   312,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    94, 
        421,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,   124, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,   124,    47, 
        126,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    94,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,   124,    -1,   126,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,    -1,   126,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
        124,    -1,   126,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   331,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    37,    38,    -1,   312,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    60,    61, 
         62,    63,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,   331,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    94, 
        421,    -1,   124,    -1,   126,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,   124, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    37,    38,    94,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    94,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
        124,    -1,   126,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    94,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    35, 
         -1,    -1,    -1,   312,    40,    -1,    -1,    43,    -1,    45, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,   331,    -1,    60,    -1,    -1,    37,    -1,    -1, 
        312,    -1,    42,    43,    60,    45,    62,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         60,    -1,    62,    -1,    -1,    91,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        126,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,   126,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
         -1,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,   331,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        286,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   124,   125,   411,   412,   313,    -1,    -1, 
        416,   417,   418,   419,    -1,   421,   312,    93,    94,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,   312,    -1,   340,   331,    -1,    -1,    -1,    -1, 
        346,    -1,    58,    59,    60,    61,    62,    63,   124,   125, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,    38,    -1,    -1,    41,    -1,    43,    44,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   401,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   124,   125, 
         -1,    -1,    -1,    -1,    -1,   411,   412,    93,    94,    -1, 
        400,   401,   402,   403,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,   411,   412,    -1,    -1,    -1,   257,    38,    -1,    -1, 
         41,   421,    43,    44,    45,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    38,    93,    94,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    93,    94, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   257,    -1,    -1,    -1,    -1,    93,    94,    -1,   124, 
        125,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   400, 
        401,   257,    -1,   404,   405,   406,   407,   408,    93,    94, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    38,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,   257,    63,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    38,    -1,    -1,    41,   257,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    38,    -1,    -1,    41,    58,    59,    44,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,   124, 
        125,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,   257,    61,    -1,    63,    93,    94,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    93,    94,   124,   125, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,    93,    94,    41,    -1,    -1,    44,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    41,    63,    -1,    44,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    41,    -1,    -1, 
         44,    -1,   257,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
        404,   405,   406,   407,   408,   257,    -1,   411,   412,    93, 
        414,   415,   416,   417,   418,   419,    -1,    -1,   125,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    33,   257, 
         35,    -1,    -1,    -1,    -1,    40,    -1,    33,    43,    35, 
         45,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
        257,    -1,   404,   405,   406,   407,   408,    62,    -1,    -1, 
         -1,    -1,   414,   415,   416,   417,   418,   419,   404,   405, 
        406,   407,   408,   257,    -1,    -1,    -1,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    91,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,   404,   405,   406,   407,   408,   123,    -1,    -1, 
        126,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    35,    -1, 
         -1,    -1,    -1,    40,    -1,    33,    43,    35,    45,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    58,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    61,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    91,    -1,    -1,   414,   415,   416, 
        417,   418,   419,    91,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,   286,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    33, 
         -1,    35,    -1,    -1,    -1,    -1,    40,    -1,   313,    43, 
         -1,    45,    33,    -1,    35,    -1,    -1,   313,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1, 
         -1,    -1,   367,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         91,   367,    93,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,   123, 
         -1,    -1,   126,    -1,    -1,   400,    -1,   402,   403,   286, 
         -1,    -1,    -1,    -1,    -1,   126,   402,   403,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         33,    -1,    35,    -1,    -1,    -1,   313,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1, 
        367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,   286,   402,   403,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,   313, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,   367,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 188 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 200 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 200 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 211 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 212 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 216 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 219 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 222 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 225 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 238 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 243 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 244 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 250 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 250 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 259 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 259 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 268 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 268 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 279 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 284 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 289 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 294 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 299 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 304 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 305 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 310 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 311 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 316 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 321 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 321 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 324 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 324 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 334 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 341 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 348 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 354 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 359 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 364 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 369 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 370 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 376 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 376 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 387 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 387 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 398 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 398 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 423 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 423 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 436 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 441 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 442 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 446 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 453 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 460 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 465 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 470 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 477 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 482 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 483 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 488 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 494 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 497 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 503 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 504 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 509 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 510 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 515 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 520 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 525 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 526 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 532 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 537 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 538 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 557 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 562 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 567 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 567 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 570 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 570 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 575 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 575 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 585 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 585 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 598 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 602 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 604 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 607 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 607 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 612 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 615 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 622 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 623 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 627 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 630 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 637 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 638 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 642 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 648 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 653 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 658 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 667 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 667 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 673 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 678 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 684 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 689 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 690 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 694 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 694 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 708 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 713 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 718 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 718 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 731 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 736 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 741 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 747 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 752 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 760 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 763 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 766 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 769 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 775 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 775 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 778 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 778 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 784 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 792 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 795 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 801 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 801 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 810 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 810 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 820 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 820 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 829 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 832 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 835 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 838 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 841 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 203:  #line 844 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 850 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 856 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 208:  #line 860 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 209:  #line 866 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 210:  #line 872 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 211:  #line 878 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 213:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 214:  #line 893 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 215:  #line 894 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 216:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 218:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 219:  #line 904 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 220:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 221:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 222:  #line 913 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 223:  #line 919 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 224:  #line 919 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 921 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 922 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 923 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 928 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 231:  #line 931 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 232:  #line 937 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 234:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 235:  #line 943 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 236:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 238:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 239:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 251:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 252:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 259:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 260:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 270:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 271:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 276:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 279:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 282:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 284:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 285:  #line 1023 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1026 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 287:  #line 1029 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 288:  #line 1029 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 289:  #line 1032 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 290:  #line 1032 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 291:  #line 1038 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 292:  #line 1039 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 300:  #line 1058 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 301:  #line 1059 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 302:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 303:  #line 1067 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 304:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 305:  #line 1072 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 307:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 308:  #line 1081 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 309:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 310:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 311:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), null); } break;

    case 312:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), $yyVals[-3+$yyTop]); } break;

    case 313:  #line 1092 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 314:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 315:  #line 1099 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 316:  #line 1100 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 317:  #line 1104 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 318:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 319:  #line 1109 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 320:  #line 1110 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 321:  #line 1111 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 322:  #line 1112 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 323:  #line 1113 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 324:  #line 1114 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 325:  #line 1115 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 326:  #line 1116 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3072 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
