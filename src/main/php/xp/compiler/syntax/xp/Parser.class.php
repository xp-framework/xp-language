<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
#line 75 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,   112,    31, 
         99,    99,   103,   103,   113,   113,   114,   114,    36,   116, 
         36,    36,    36,    36,    36,    36,   115,   115,    97,    97, 
        117,   117,   119,   119,   118,   118,   107,   107,   107,   107, 
        107,   107,   107,   107,   107,   107,   107,   107,   108,   108, 
        108,   108,   108,   108,   108,   108,   109,   109,   109,   109, 
        109,   109,   109,   109,   109,   109,   109,   109,   110,   110, 
        110,   110,   110,   110,   111,   111,   101,   101,   120,   120, 
        122,   121,   121,   124,   121,   125,   121,   123,   123,    10, 
         10,    10,    32,    32,    32,    12,    12,    95,    96,   126, 
        126,   127,   127,    21,    21,    49,    49,   128,   128,   129, 
        129,   129,   129,   129,   129,   129,   129, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     3,     1, 
          1,     1,     1,     1,     5,     3,     3,     3,     0,     7, 
          2,     4,     0,     1,     1,     3,     1,     3,     1,     0, 
          4,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          1,     3,     0,     1,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     4,     4,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     2,     2, 
          2,     2,     2,     2,     2,     2,     0,     1,     1,     2, 
          0,     4,     2,     0,     6,     0,     4,     1,     1,     1, 
          1,     1,     1,     1,     1,     1,     4,     3,     4,     1, 
          3,     1,     3,     1,     3,     0,     1,     1,     2,     1, 
          1,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   290,     0,     0,   292,   291,     0,    15,     0,   310, 
        312,   311,   314,   316,   315,   317,   313,     1,     0,    68, 
          0,   308,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   309,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   220,     0,     0,   226,   222,   225,   223,   224, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,   293,     0,   294,   295,     0,   300,    27,     0, 
          0,     0,    31,    35,     0,   229,     0,     0,     0,     0, 
          0,     0,   192,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   227,     0,   228,   200,   201,   202,   203,   204, 
          0,     0,   231,     0,     0,    79,    80,    83,    84,     0, 
         78,     0,     0,     0,     0,   297,    29,    35,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   198, 
          0,   196,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   215,     0,   194,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   275,   276,     0,   281, 
        289,   288,   286,   191,   278,     0,     0,     0,   221,     0, 
          0,   303,     0,   298,   301,     0,   305,     0,     0,    25, 
          0,    34,    36,    37,     0,     0,     0,    42,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   186,   188,     0, 
        100,     0,     0,     0,   217,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   208,     0,   199,     0,     0,   280,     0,   175, 
          0,     0,   234,   232,    82,   299,    21,     0,     0,     0, 
          0,     0,     0,     0,    23,     0,    35,     0,   193,     0, 
          0,     0,     0,     0,   189,     0,   218,   190,   216,     0, 
          0,   184,   181,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   284,   113,     0,   131,   117,   121,   123, 
        119,   127,   129,   115,   125,     0,     0,     0,     0,   111, 
          0,    63,     0,     0,     0,     0,     0,     0,    35,    45, 
          0,    43,     0,     0,     0,     0,     0,     0,     0,   209, 
          0,   195,     0,   282,   287,     0,     0,   133,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    38, 
        137,   112,     0,     0,    61,    59,   103,   104,   105,   106, 
        107,   108,     0,     0,     0,     0,     0,     0,     0,   179, 
        180,   197,   212,     0,     0,     0,     0,     0,     0,     0, 
        138,     0,     0,     0,     0,   155,     0,     0,   128,   130, 
          0,     0,     0,     0,   142,   219,     0,     0,    93,     0, 
          0,     0,     0,     0,    65,     0,    48,     0,     0,    53, 
         33,     0,   178,   210,   182,   285,   114,     0,     0,     0, 
          0,   132,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    50,     0,    98,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    52,    55,     0,    49,    54, 
         47,     0,     0,   139,     0,     0,     0,   156,     0,     0, 
          0,     0,     0,     0,   143,     0,     0,     0,     0,    94, 
         96,    95,     0,     0,     0,     0,     0,   164,   170,   134, 
          0,   161,   162,     0,     0,   122,     0,   146,     0,     0, 
          0,     0,    97,   102,     0,    85,     0,    64,     0,     0, 
          0,    56,     0,     0,   160,   169,   163,   135,     0,     0, 
          0,   158,   116,   151,   153,     0,     0,   149,   136,     0, 
          0,    62,    60,     0,     0,     0,     0,   124,   120,     0, 
          0,     0,   126,   150,    87,    86,    66,   166,     0,     0, 
          0,   159,     0,     0,     0,     0,   171,   118,     0,   154, 
        167,     0,   152,     0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   140,     4,     7,     8,    17,    53,    18, 
        251,   113,    61,    99,   121,   170,    63,   256,    62,   101, 
        123,   390,   252,   253,   254,   377,   257,   258,   333,   334, 
        378,   190,   347,   388,   479,   142,   469,   480,   512,   474, 
        539,   568,   473,   470,   424,   433,   515,    41,    30,    42, 
         58,    94,    95,    96,   143,   471,   472,   379,   380,   291, 
        407,   417,   457,   583,   411,   414,   498,   412,   413,   418, 
        586,   415,   416,   410,   448,   550,   450,   464,   451,   465, 
        587,   588,   601,   602,   600,   551,   575,   552,   553,   573, 
        609,   574,   144,   261,   115,   116,   145,   354,   268,   184, 
        234,   185,   192,   179,   277,   265,   146,   147,   148,   149, 
        150,   444,   193,   194,   151,   103,   152,   153,   324,   235, 
        236,   316,   237,   406,   317,   117,   118,    31,    32, 
    );
    protected static $yySindex = array(         -211,
          0,     0,  -181,    51,   293,  1078,  -181,     0,   118,   134, 
         80,     0,  -218,  -218,     0,     0,   154,     0,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   273,     0, 
       1250,     0,     0,    51,    51,     0,   -32,   182,     1,   135, 
        -24,     0,     0,     0,     0,     0,     0,     0,     1,     1, 
          1,     0,   183,     0,   339,   188,     0,   211,    83,  1250, 
         51,    51,    51,   208,     0,   276,   308,     0,    51,    51, 
        667,     0,     0,   285,    90,   123,    90,     0,     0,     0, 
          0,     0,     0,    51,    30,     0,     0,     0,     0,     0, 
        327,   -14,     0,   404,   157,     0,   -37,    51,   139,    51, 
        331,   139,  4971,   425,   177,   177,  -242,     0,  -189,     0, 
        174,   434,     0,   410,     0,     0,    28,     0,     0,    51, 
        396,   480,     0,     0,   403,     0,  5221,  5221,  5221,  5221, 
       5221,  5221,     0,  5221,   463,   473,     0,  5232,   417,   142, 
       3141,   -31,     0,   489,     0,     0,     0,     0,     0,     0, 
        452,   514,     0,  5221,   118,     0,     0,     0,     0,   507, 
          0,    51,   -51,   485,   -37,     0,     0,     0,    51,   878, 
        320,   138,   -94,   -94,   -97,   -94,   -94,   -94,   -51,     0, 
       5221,     0,  5221,   333,   -31,   434,     0,   -47,  2321,    15, 
        248,   557,   556,     0,   -68,     0,  5221,  5221,  5221,  5221, 
       5221,  5221,  5221,  5221,  5221,  5221,  5221,  5221,  5221,  5221, 
       5221,  5221,  4930,  5030,  4818,  5221,  4883,  5221,  5221,  5221, 
       5221,  5221,  5221,  5221,    51,  5221,     0,     0,   -51,     0, 
          0,     0,     0,     0,     0,   -31,  -218,  5221,     0,   252, 
        565,     0,   387,     0,     0,  1850,     0,   496,   365,     0, 
        -70,     0,     0,     0,     0,   508,   196,     0,   597,   410, 
        -31,   522,   527,  3141,  5221,  3141,  5122,     0,     0,   -31, 
          0,   600,   333,   -68,     0,   333,  -173,  3176,  3273,  3273, 
       3273,  3273,  3273,  3273,  3273,  3273,  3273,  3273,  3273,  3141, 
        604,  3438,  3303,  3473,  5221,    93,  5221,    93,  5221,  5221, 
         70,    70,  5221,  5221,    70,    70,   194,   194,   -99,   -99, 
        -99,   -97,     0,   -94,     0,  5221,  5221,     0,   624,     0, 
        607,   473,     0,     0,     0,     0,     0,   475,   407,   369, 
        408,    78,   546,   631,     0,   320,     0,  5221,     0,  5221, 
         67,   632,   475,  3141,     0,  5221,     0,     0,     0,   547, 
        634,     0,     0,   -31,  5221,  3273,  3273,    70,    70,    70, 
         70,   582,   637,     0,     0,     9,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   639,   555,  2422,   475,     0, 
        621,     0,   643,   645,   107,   595,   600,   564,     0,     0, 
       5221,     0,   572,   649,   583,   584,   -31,   585,  3141,     0, 
       5221,     0,  3405,     0,     0,  5221,  5221,     0,   374,  5221, 
        675,   686,   431,   701,   683,   684,   707,   712,   415,     0, 
          0,     0,   299,   -17,     0,     0,     0,     0,     0,     0, 
          0,     0,   716,   -17,   698,   499,  2192,  2449,   546,     0, 
          0,     0,     0,   -31,   721,   722,   705,   475,   706,   274, 
          0,  2546,  5221,  5221,   475,     0,   405,   428,     0,     0, 
       5221,  5221,   708,   311,     0,     0,   711,   279,     0,   734, 
        732,  -251,   -84,   -84,     0,   689,     0,    49,  -109,     0, 
          0,   546,     0,     0,     0,     0,     0,   662,  5221,   374, 
        666,     0,   736,  2581,   673,   759,   756,   440,  2721,  2748, 
       5221,   415,   682,     0,   549,     0,   486,   -17,   466,   600, 
        -17,   773,   732,   778,   -17,     0,     0,   475,     0,     0, 
          0,   240,  3141,     0,   475,  5221,   431,     0,  5221,   482, 
       5221,   431,   697,  3141,     0,   475,   600,    51,   104,     0, 
          0,     0,   732,   486,   486,   782,   699,     0,     0,     0, 
        240,     0,     0,   700,   768,     0,  2845,     0,  2880,   457, 
        257,   704,     0,     0,  5221,     0,   475,     0,   104,   104, 
        486,     0,   790,   709,     0,     0,     0,     0,  5221,   772, 
        431,     0,     0,     0,     0,   714,   257,     0,     0,  2977, 
        717,     0,     0,   104,    51,   475,   802,     0,     0,   431, 
       5221,   786,     0,     0,     0,     0,     0,     0,  -102,   723, 
        431,     0,  3020,   475,    51,   805,     0,     0,   475,     0, 
          0,   726,     0,   475,   725,     0, 
    );
    protected static $yyRindex= array(         1156,
          0,     0,  1456,     0,     0,   312,  1838,     0,   660,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        322,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -40,   324,     0,     0,    11,     0,   334, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   687,   -85,   728,   -85,     0,     0,     0, 
          0,     0,     0,     0,   -29,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   735,     0, 
          0,   735,   771,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    37,     0,     0,     0,     0,     0,     0, 
          0,   130,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  1687,  1590,   825,   832,     0,     0, 
        446,  1388,     0,   528,     0,     0,     0,     0,     0,     0, 
          0,   -16,     0,   833,   -36,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   195, 
        751,   852,  1815,  1852,  2151,  1889,  1986,  2023,     0,     0, 
          0,     0,     0,     0,  1388,  5133,  1430,   -28,     0,  1291, 
          0,     0,   -13,     0,   622,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   822,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1553,     0,   640,     0,   309, 
          0,     0,     0,     0,     0,   195,     0,  2377,     0,     0, 
          0,     0,     0,     0,   458,     0,   757,     0,   800,     0, 
       1388,   801,   807,   310,   833,   360,     0,     0,     0,  1388, 
          0,    56,     0,     0,     0,     0,     0,  1249,    -7,   127, 
        129,   298,   545,   551,   863,   896,  1080,  1082,  1084,  1361, 
          0,  4618,  4484,  4415,     0,  4543,     0,  4580,     0,     0, 
       3894,  3984,     0,     0,  4115,  4153,  3819,  3857,  3594,  3685, 
       3729,  2285,     0,  2113,     0,   788,   833,     0,  1157,     0, 
          0,     0,     0,     0,     0,     0,     0,   775,     0,     4, 
          0,     0,     3,     0,     0,     0,     0,   833,     0,   776, 
          0,     0,   775,  1261,     0,     0,     0,     0,     0,     0, 
       1254,     0,     0,  1388,     0,  1086,  1113,  4280,  4318,  4375, 
       4391,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,  -108,     0, 
          0,     0,     0,   779,     0,     0,   844,     0,     0,     0, 
          0,     0,    74,     0,     0,     0,  1388,     0,   101,     0, 
        833,     0,  4711,     0,     0,   833,   849,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   868,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   195,     0,   992,     0, 
          0,     0,     0,  1388,     0,     0,     0,   775,   325,     0, 
          0,     0,   864,     0,   775,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    12,     0,     0, 
        883,     0,   884,   884,     0,     0,     0,     0,     0,     0, 
          0,     3,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   562,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   271,     0,     0,    12, 
          0,     0,   892,     0,   868,     0,     0,   775,     0,     0, 
          0,     0,   456,     0,   775,   864,     0,     0,     0,     0, 
          0,     0,     0,   491,     0,   775,    12,     0,     0,     0, 
          0,     0,   893,   271,   271,     0,     0,     0,     0,     0, 
         86,     0,     0,     0,     0,     0,     0,     0,     0,   286, 
        810,     0,     0,     0,     0,     0,   775,     0,     0,     0, 
        271,     0,     0,     0,     0,     0,     0,     0,   833,     0, 
          0,     0,     0,     0,     0,     0,   811,     0,     0,     0, 
          0,     0,     0,     0,     0,   775,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -57,     0,     0,     0,     0,   -57,     0, 
          0,     0,     0,   775,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   931,   626,   567,    34, 
        933,   -59,     0,   865,   839,  -144,     0,     0,     0,     0, 
       -119,  -258,     0,     0,     0,  2295,     0,   612,     0,     0, 
         76,   -22,  -354,     0,     0,   -61,  -346,   478,   484,     0, 
       -212,  -126,     0,   437,     0,     0,     0,     0,   901,   903, 
          0,   537,     0,   854,  -143,   -12,   -92,     0,   447,  -168, 
          0,     0,   179,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   474,   471, 
          0,   381,     0,     0,     0,     0,     0,   424,   430,     0, 
          0,     0,     0,     0,   803,   804,   644,     0,   294,     0, 
       -137,     0,   789,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   713,     0,     0,     0,   746,     0,   758, 
          0,     0,     0,     0,     0,     0,   828,     0,   964, 
    );
    protected static $yyTable = array(11,
        167,    75,    76,    77,   219,    16,   112,   219,   233,    93, 
        241,   219,    97,    50,   232,   519,   110,   158,    13,    59, 
        112,   615,   112,   246,   104,   111,   226,   214,   226,    47, 
         48,   226,   435,   207,   296,    57,   207,    26,   119,   112, 
        122,    12,    52,    93,    93,   191,    32,   269,   409,   247, 
        207,   207,    57,   112,    71,    57,    74,    74,    74,   230, 
        122,    32,   296,    17,    81,    82,    92,   109,    60,   320, 
        160,   165,    54,   112,   114,    34,   230,   271,   509,    74, 
        302,    15,    65,    54,    54,   207,   351,   476,   510,   166, 
        105,     1,    74,    74,    17,    74,    57,   159,   302,    57, 
         92,    92,   191,    71,    57,   164,   223,   517,   230,   122, 
         91,   221,   219,   506,   220,    74,   222,   207,   168,   259, 
        168,   342,     5,   339,   126,   168,   352,    32,   168,   223, 
        168,   408,   345,   188,   221,   219,   315,   220,    36,   222, 
        243,    58,   114,   431,    58,    16,    40,   362,   429,   427, 
        478,   428,   215,   430,   217,   542,   260,   242,    74,    58, 
         74,   540,   566,    34,    74,   313,   353,   237,   164,   238, 
        237,   518,   238,   363,    74,     9,   168,   182,   141,    35, 
        483,   191,   563,    34,   237,   237,   238,   238,   304,   330, 
         74,     9,   393,    58,   394,   226,   395,   110,    39,    39, 
        109,    10,   173,   174,   175,   176,   177,   178,     9,   180, 
        168,   168,   225,   189,   225,    10,   402,    10,   226,   237, 
         74,   238,     9,   521,    74,    26,   567,    51,   332,   141, 
        223,   229,   432,   229,    10,   221,   229,   616,   447,   336, 
        222,    68,     9,   214,   437,    70,    74,   511,    10,   207, 
         71,   237,   304,   238,   337,   468,   264,   445,   266,   442, 
         12,   331,   446,    17,   110,   110,    78,    83,    10,    74, 
        319,   275,   278,   279,   280,   281,   282,   283,   284,   285, 
        286,   287,   288,   289,   290,   292,   293,   294,   296,   298, 
        301,   302,   305,   306,   307,   308,   309,   310,   311,   312, 
         15,   314,   227,   228,   227,   228,   484,   227,   228,   493, 
          9,   296,    57,   290,   491,   109,   109,   490,   157,   226, 
        157,   224,   468,    17,   505,   157,   321,   322,   157,   101, 
        157,   569,   570,   306,    79,    17,    10,   384,   239,   346, 
        141,   239,   344,    17,    97,   168,   168,   168,   168,   168, 
        168,   503,   233,   235,   502,   239,   239,    58,   594,   306, 
        565,   467,   196,    17,    16,   140,    80,    17,   140,    16, 
        356,   168,   357,    17,   358,   359,   157,    49,   360,   361, 
         17,   225,   555,   237,    34,   238,   304,   106,   231,    83, 
        239,   290,   141,   101,    55,   107,    69,   385,   168,    98, 
        229,   233,   235,   236,   225,   306,   207,   207,   382,   386, 
        157,   157,   307,   141,    34,   141,    17,   387,   564,    74, 
         10,   399,   239,   229,   306,   168,   168,   168,   168,    74, 
        403,   168,   100,   233,   235,   597,   155,    86,    87,    88, 
         89,    90,   592,   593,   108,   168,   168,   168,   168,   120, 
        168,   168,   236,   124,   306,   168,   168,   168,   168,   168, 
        513,   513,    10,   129,   154,   139,   438,   607,    74,    74, 
        138,   227,   228,   127,    56,   128,   141,   164,   122,   326, 
        306,   141,   290,   162,   236,   452,   174,   168,   168,   174, 
        224,   163,   218,   216,   227,   228,   141,    46,   543,   141, 
        164,    44,   182,    74,   174,   225,    74,   129,    34,   139, 
         74,   321,   322,   224,   138,   168,    44,   127,   168,   128, 
        181,    83,    84,   169,   229,   171,   306,   101,   141,   494, 
        183,   144,   238,    74,   144,   608,   499,   500,   174,   195, 
        237,   237,   238,   238,   239,   157,   157,   157,   157,   157, 
        157,   196,    12,   455,   239,   621,   130,   240,   466,    86, 
         87,    88,    89,    90,   523,    83,   348,   105,   173,   350, 
        174,   157,    43,    44,    45,    13,   534,   244,    14,   255, 
         44,   307,    44,   548,   549,   240,   173,   272,   240,   267, 
         74,   241,    15,   306,   241,   227,   228,   273,   157,   274, 
        130,   141,   240,   240,   557,   325,   559,   307,   241,   241, 
         74,   306,   306,   306,   224,    64,    66,    67,   328,   306, 
        173,   307,   307,   307,   329,   157,   157,   157,   157,   584, 
        585,   157,   335,   306,   306,   306,   338,   240,    37,    38, 
        590,   156,   157,   241,   340,   157,   157,   157,   157,   341, 
        157,   157,   173,   307,   141,   157,    16,   157,   157,   157, 
        346,   355,    19,   364,   181,   306,   381,   383,   389,   240, 
        391,   400,   397,   401,   404,   241,   613,   405,   419,   420, 
        176,   423,   425,   176,   426,   434,   436,   157,   157,   439, 
        172,    86,    87,    88,    89,    90,    17,    17,   176,    17, 
         17,    17,    17,    17,    17,   556,    17,   440,   441,   443, 
        560,   239,   239,   449,   453,   157,    10,    17,    17,    17, 
         17,    17,    17,   296,   296,   454,   296,   296,   296,   296, 
        296,   296,   176,   296,   172,    86,    87,    88,    89,    90, 
        458,   459,   460,   134,   296,   296,   461,   296,   296,   296, 
         17,   462,    17,    17,   463,   475,   477,    83,   478,   599, 
         10,   485,   486,   487,   176,   496,   489,   497,   501,   504, 
        137,   365,   366,   367,   507,   508,   133,   296,   612,   296, 
        296,   516,    17,    17,    17,    17,   522,   134,   525,   618, 
        368,   369,   370,   371,   526,   372,   373,   528,   529,   530, 
        374,   240,   375,   531,   536,   541,   538,   241,   537,   296, 
        296,   296,   296,   544,   137,   365,   366,   367,   545,   561, 
        133,   558,   571,   572,   578,   422,   579,   582,   589,   595, 
        598,   596,   131,   132,   368,   369,   370,   371,   603,   372, 
        373,   606,   611,   614,   374,   622,   375,   617,   624,   626, 
         30,    20,    21,    22,   248,    24,    25,    28,    26,   456, 
        376,   187,   187,   172,   187,   187,   187,   187,   187,   187, 
        187,   187,   213,   172,    27,    41,   131,   132,   213,   176, 
        176,    40,   187,   187,   187,   187,   187,   187,   219,   219, 
        293,   294,   219,   219,   219,   219,   219,   295,   219,   109, 
        172,    51,    57,   243,   376,   249,   243,   176,    91,   219, 
        219,    17,   219,   219,    17,   187,    17,   187,   187,    17, 
        243,   243,   172,    92,    88,   145,    85,    86,    87,    88, 
         89,    90,    90,    89,   147,   148,   242,    33,    29,   242, 
        125,   102,    17,   296,   219,   219,   296,   392,   187,   187, 
        187,   546,    10,   242,   242,   243,   520,   514,   240,   240, 
         73,    72,   161,   524,   241,   241,    91,   604,    19,    17, 
         17,    17,   535,   456,   576,   219,   219,   219,   456,    17, 
        577,   262,   263,   276,   396,   323,   349,   243,   242,    17, 
         17,    17,   245,   318,    46,     0,   296,   296,   296,    17, 
          0,     0,   250,     0,     0,     0,   296,     0,     0,     0, 
          0,     0,    84,     0,     0,     0,   296,   296,   296,     0, 
        242,     0,     0,     0,     0,     0,   296,   456,    32,    32, 
          0,    32,    32,    32,    32,    32,    32,    32,    32,     0, 
          0,     0,     0,     0,     0,     0,   456,     0,     0,    32, 
         32,    32,    32,    32,    32,     0,     0,   456,     0,    17, 
         17,    17,    17,    17,    17,    17,    17,    17,     0,    17, 
         17,    17,     0,    17,    17,    17,    17,    17,    17,     0, 
         17,   185,    32,     0,    32,    32,   296,   296,   296,   296, 
        296,   296,   296,   296,   296,     0,     0,   296,   296,     0, 
        296,   296,   296,   296,   296,   296,     0,   296,   219,     0, 
          0,     0,     0,     0,     0,    32,    32,    32,     0,   243, 
        244,     0,   245,   244,   246,   245,   255,   246,     0,   255, 
          0,     0,     0,     0,     0,     0,   187,   244,   244,   245, 
        245,   246,   246,   255,   255,     0,     0,     0,     0,     0, 
          0,     0,   242,   256,     0,   187,   256,    20,    21,    22, 
        248,    24,    25,   219,    26,     0,     0,     0,    19,     0, 
        256,   256,   244,     0,   245,     0,   246,     0,   255,     0, 
         27,     0,   219,     0,     0,     0,     0,     0,     0,     0, 
          0,    17,     0,   283,   283,     0,     0,   283,   283,   283, 
        283,   283,   283,   283,   244,   256,   245,     0,   246,     0, 
        255,   249,     0,     0,   283,   283,   283,   283,   283,   283, 
          0,     0,     0,     0,   187,   187,   187,   187,   187,   187, 
        187,   187,   187,     0,     0,   187,   187,   256,   187,   187, 
        187,   187,   187,   187,   187,   187,     2,   283,    32,   283, 
        283,   219,   219,   219,   219,   219,   219,   219,   219,   219, 
          0,    17,   219,   219,     0,   219,   219,   219,   219,   219, 
        219,   219,   219,     0,     0,     0,   243,   243,     0,     0, 
        283,   283,   283,     0,     0,     0,     0,     0,     0,   206, 
        183,   183,   206,     0,   183,   183,   183,   183,   183,   183, 
        183,   211,     0,    32,   211,     0,   206,   206,     0,   242, 
        242,   183,   183,   183,   183,   183,   183,     0,   211,   211, 
          0,     0,    32,     0,     0,     0,     0,    99,    99,     0, 
          0,    99,    99,    99,    99,    99,   244,    99,   245,     0, 
        246,   206,   255,     0,   183,     0,   183,   183,    99,    99, 
         99,    99,    99,   211,     0,     0,     0,    20,    21,    22, 
         23,    24,    25,     0,    26,     0,     0,     0,     0,   256, 
          0,     0,     0,   206,     0,     0,     0,   183,   183,   183, 
         27,     0,     0,    99,    99,   211,     0,     0,     0,     0, 
          0,    32,    32,    32,    32,    32,    32,    32,    32,    32, 
          0,   177,    32,    32,   177,    32,    32,    32,    32,    32, 
         32,    32,    32,   283,    99,    99,    99,     0,   177,   177, 
          0,     0,     0,     0,   277,   277,     0,     0,   277,   277, 
        277,   277,   277,     0,   277,     2,     2,     2,     2,     2, 
          2,     0,     2,     0,     0,   277,   277,   277,   277,   277, 
        277,     0,     0,   177,     0,     2,     2,     2,     0,     2, 
          0,     0,     0,     0,     0,     0,   187,   187,   283,   187, 
        187,   187,   187,   217,   187,   187,   187,     0,     0,     0, 
        277,   277,     0,     0,     0,   177,     0,   283,     0,   187, 
        187,   187,   187,   244,   244,   245,   245,   246,   246,   255, 
        255,     0,     0,     0,     0,   206,     0,     0,     0,     0, 
        183,   277,   277,   277,     0,     0,     0,   211,     0,     0, 
        187,     0,     0,   187,     0,     0,   256,   256,     0,    20, 
         21,    22,    23,    24,    25,     0,    26,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     5,    99,     0,     0, 
          0,     0,    27,   187,     0,   187,   283,   283,   283,   283, 
        283,   283,   283,   283,   283,   183,     0,   283,   283,     0, 
        283,   283,   283,   283,   283,   283,   283,   283,     0,     0, 
          0,     0,     0,     0,   183,     0,     0,     0,     0,   279, 
        279,     0,     0,   279,   279,   279,   279,   279,     0,   279, 
          0,     0,    99,     0,     0,     0,     0,     0,     0,     0, 
        279,   279,   279,   279,   279,   279,     0,     0,     0,     0, 
         99,    99,     0,     0,     0,     0,   226,   226,     0,   226, 
         99,   226,   226,   226,   226,   226,   226,     0,     0,     0, 
          0,     0,     0,     0,   277,   279,   279,     0,     0,   226, 
        226,   226,   226,   183,   183,   183,   183,   183,   183,   183, 
        183,   183,   206,     0,   183,   183,     0,   183,   183,   183, 
        183,   183,   183,   183,   183,     0,   279,   279,   279,     0, 
        226,     0,   226,   226,     0,     0,   185,     0,     0,     0, 
         99,    99,    99,    99,    99,    99,    99,    99,    99,   277, 
          0,    99,    99,     0,    99,    99,    99,    99,    99,    99, 
          0,    99,     0,   226,     0,   226,     0,     0,   277,     0, 
          0,     0,     0,   219,   219,     0,     0,     0,   219,   219, 
        219,   219,     0,   219,     0,     5,     5,     5,     5,     5, 
          5,   187,     5,     0,     0,     0,   219,   219,   219,   219, 
          0,     0,     0,     0,     0,     5,     5,     5,     5,     0, 
        187,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   219,     0,   219, 
        219,     0,     0,     0,     0,     0,     0,   277,   277,   277, 
        277,   277,   277,   277,   277,   277,     0,     0,   277,   277, 
          0,   277,   277,   277,   277,   277,   277,     0,   277,   279, 
        219,     0,   219,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,     0, 
        187,   187,     0,   187,   187,   187,   187,   187,   187,   187, 
        187,   271,   271,     0,     0,   271,   271,   271,   271,   271, 
          0,   271,     0,     0,   279,     0,     0,     0,     0,     0, 
          0,     0,   271,   271,   271,   271,   271,   271,     0,     0, 
          0,     0,     0,   279,     0,     0,     0,     0,   272,   272, 
          0,     0,   272,   272,   272,   272,   272,     0,   272,     0, 
          0,   226,     0,     0,     0,     0,     0,   271,   271,   272, 
        272,   272,   272,   272,   272,     0,     0,     0,     0,     0, 
        226,     0,     0,     0,     0,   270,   270,     0,     6,   270, 
        270,   270,   270,   270,     0,   270,     0,     0,   271,   271, 
         19,     0,     0,     0,   272,   272,   270,   270,   270,   270, 
        270,   270,   279,   279,   279,   279,   279,   279,   279,   279, 
        279,     0,     0,   279,   279,     0,   279,   279,   279,   279, 
        279,   279,     0,   279,   327,   272,   272,     0,     0,     0, 
          0,   270,   270,     0,     0,     0,     0,     0,     0,   226, 
        226,   226,   226,   226,   226,   226,   226,   226,   219,     0, 
        226,   226,     0,   226,   226,   226,   226,   226,   226,   226, 
        226,     0,   270,   270,     0,     0,     0,   219,     0,     0, 
          0,     0,   273,   273,     0,     0,   273,   273,   273,   273, 
        273,     0,   273,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   273,   273,   273,   273,   273,   273,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   274, 
        274,     0,     0,   274,   274,   274,   274,   274,     0,   274, 
          0,   271,     0,     0,     0,     0,     0,     0,   273,   273, 
        274,   274,   274,   274,   274,   274,   219,   219,   219,   219, 
        219,   219,   219,   219,   219,     0,    17,   219,   219,     0, 
        219,   219,   219,   219,   219,   219,   219,   219,   272,   273, 
        273,     0,     0,     0,     0,   274,   274,     6,     6,     6, 
          6,     6,     6,     0,     6,     0,   271,     0,     0,    20, 
         21,    22,   248,    24,    25,     0,    26,     6,     6,     6, 
          6,     0,     0,     0,     0,   270,   274,   274,     0,   262, 
        262,     0,    27,   262,   262,   262,   262,   262,     0,   262, 
          0,     0,     0,   272,     0,     0,     0,     0,     0,     0, 
        262,   262,   262,   262,   262,   262,     0,     0,     0,     0, 
          0,     0,     0,   249,     0,     0,     0,   269,   269,     0, 
          0,   269,   269,   269,   269,   269,     0,   269,     0,     0, 
        270,     0,     0,     0,     0,   262,   262,     0,   269,   269, 
        269,   269,   269,   269,   271,   271,     0,     0,   271,   271, 
        271,   271,   271,     0,     0,   271,   271,     0,   271,   271, 
        271,   271,   271,   271,     0,   271,   262,   262,     0,     0, 
          0,     0,   273,   269,   269,     0,     0,     0,     0,     0, 
          0,   272,   272,     0,     0,   272,   272,   272,   272,   272, 
          0,     0,   272,   272,     0,   272,   272,   272,   272,   272, 
        272,     0,   272,     0,   269,   269,     0,     0,     0,   274, 
          0,     0,    19,     0,     0,     0,     0,     0,   270,   270, 
          0,     0,   270,   270,   270,   270,   270,   273,     0,   270, 
        270,     0,   270,   270,   270,   270,   270,   270,     0,   270, 
          0,     0,     0,     0,     0,     0,   481,     0,     0,     0, 
          0,   268,   268,     0,     0,   268,   268,   268,   268,   268, 
          0,   268,     0,     0,   274,     0,     0,     0,     0,     0, 
          0,     0,   268,   268,   268,   268,   268,   268,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   223,   212,     0, 
          0,   270,   221,   219,     0,   220,     0,   222,     0,   262, 
          0,     0,     0,     0,     0,     0,     0,   268,   268,     0, 
        215,   199,   217,   209,     0,   273,   273,     0,     0,   273, 
        273,   273,   273,   273,     0,     0,   273,   273,     0,   273, 
        273,   273,   273,   273,   273,     0,   273,   269,   268,   268, 
          0,     0,     0,     0,   211,     0,     0,     0,     0,     0, 
          0,     0,   274,   274,   262,     0,   274,   274,   274,   274, 
        274,     0,     0,   274,   274,     0,   274,   274,   274,   274, 
        274,   274,     0,   274,   210,     0,   226,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   223,   212, 
          0,     0,     0,   221,   219,     0,   220,   314,   222,     0, 
          0,    20,    21,    22,   248,    24,    25,     0,    26,     0, 
        421,   215,   199,   217,   209,   223,   212,     0,     0,   482, 
        221,   219,     0,   220,    27,   222,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   215,   199, 
        217,   209,   262,   262,     0,   211,   262,   262,   262,   262, 
        262,     0,     0,   262,   262,   249,   262,   262,   262,   262, 
        262,   262,     0,   262,     0,     0,     0,     0,     0,     0, 
          0,   268,   211,     0,     0,   210,     0,   226,     0,     0, 
        269,   269,     0,     0,   269,   269,   269,   269,   269,     0, 
          0,   269,   269,     0,   269,   269,   269,   269,   269,   269, 
          0,   269,   210,     0,   226,     0,     0,     0,     0,     0, 
          0,     0,   223,   212,     0,     0,     0,   221,   219,     0, 
        220,     0,   222,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   492,   215,   199,   217,   209,     0, 
          0,     0,     0,     0,     0,     0,     0,   223,   212,     0, 
          0,   527,   221,   219,     0,   220,     0,   222,     0,     0, 
          0,     0,   225,     0,     0,     0,   314,   398,     0,   211, 
        215,   199,   217,   209,     0,     0,     0,     0,     0,     0, 
          0,   229,     0,     0,     0,     0,   314,   314,   314,   314, 
        314,   314,   314,   314,     0,     0,     0,     0,     0,   210, 
          0,   226,     0,     0,   211,     0,     0,     0,     0,   314, 
          0,     0,     0,     0,   268,   268,     0,     0,   268,   268, 
        268,   268,   268,     0,     0,   268,   268,     0,   268,   268, 
        268,   268,   268,   268,   210,   268,   226,     0,   314,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        218,   216,   227,   228,   200,   201,   202,   203,   205,     0, 
          0,   213,   214,   225,   197,   198,   204,   207,   206,   208, 
          0,   224,   488,     0,     0,     0,     0,     0,     0,   495, 
          0,     0,   229,     0,     0,     0,     0,   223,   212,     0, 
        225,   532,   221,   219,     0,   220,     0,   222,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   229, 
        215,   199,   217,   209,   223,   212,     0,     0,   533,   221, 
        219,     0,   220,     0,   222,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   215,   199,   217, 
        209,     0,   547,     0,   211,     0,     0,     0,     0,   554, 
          0,   218,   216,   227,   228,   200,   201,   202,   203,   205, 
        562,     0,   213,   214,     0,   197,   198,   204,   207,   206, 
        208,   211,   224,     0,   210,     0,   226,     0,   218,   216, 
        227,   228,   200,   201,   202,   203,   205,   225,     0,   213, 
        214,   591,   197,   198,   204,   207,   206,   208,     0,   224, 
          0,   210,     0,   226,     0,     0,   229,     0,     0,     0, 
          0,   223,   212,     0,     0,   580,   221,   219,     0,   220, 
        610,   222,   225,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   215,   199,   217,   209,   620,     0, 
          0,   229,     0,   623,     0,     0,   223,   212,   625,     0, 
        581,   221,   219,     0,   220,     0,   222,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   211,   215, 
        199,   217,   209,     0,     0,   218,   216,   227,   228,   200, 
        201,   202,   203,   205,     0,     0,   213,   214,     0,   197, 
        198,   204,   207,   206,   208,     0,   224,     0,   210,     0, 
        226,     0,     0,   211,     0,     0,     0,     0,     0,     0, 
        218,   216,   227,   228,   200,   201,   202,   203,   205,     0, 
          0,   213,   214,     0,   197,   198,   204,   207,   206,   208, 
          0,   224,     0,   210,     0,   226,     0,     0,     0,     0, 
          0,     0,     0,   223,   212,     0,     0,     0,   221,   219, 
          0,   220,     0,   222,     0,     0,     0,     0,     0,     0, 
          0,     0,   225,     0,     0,   605,   215,   199,   217,   209, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   229,     0,     0,     0,     0,   223,   212,     0,   225, 
          0,   221,   219,     0,   220,     0,   222,     0,     0,     0, 
        211,     0,     0,     0,     0,     0,     0,   619,   229,   215, 
        199,   217,   209,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        210,     0,   226,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   211,     0,     0,     0,     0,     0,     0, 
        218,   216,   227,   228,   200,   201,   202,   203,   205,     0, 
          0,   213,   214,     0,   197,   198,   204,   207,   206,   208, 
          0,   224,     0,   210,     0,   226,     0,   218,   216,   227, 
        228,   200,   201,   202,   203,   205,   225,     0,   213,   214, 
          0,   197,   198,   204,   207,   206,   208,     0,   224,     0, 
          0,     0,     0,     0,     0,   229,     0,   223,   212,     0, 
          0,     0,   221,   219,     0,   220,     0,   222,     0,     0, 
          0,   225,     0,     0,     0,     0,     0,     0,     0,     0, 
        215,   199,   217,   209,     0,     0,     0,     0,     0,     0, 
        229,     0,   223,   212,     0,     0,     0,   221,   219,     0, 
        220,     0,   222,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   211,   215,   199,   217,   209,     0, 
          0,     0,     0,     0,   218,   216,   227,   228,   200,   201, 
        202,   203,   205,     0,     0,   213,   214,     0,   197,   198, 
        204,   207,   206,   208,   210,   224,   226,     0,     0,   211, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   218, 
        216,   227,   228,   200,   201,   202,   203,   205,   225,     0, 
        213,   214,     0,   197,   198,   204,   207,   206,   208,   210, 
        224,   226,     0,     0,     0,     0,     0,   229,     0,   223, 
        212,     0,     0,     0,   221,   219,     0,   220,     0,   222, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   225,   215,   199,   217,   209,     0,     0,     0,   223, 
        212,     0,     0,     0,   221,   219,     0,   220,     0,   222, 
        229,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   215,     0,   217,     0,   211,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   218,   216,   227,   228, 
        200,   201,   202,   203,   205,     0,     0,   213,   214,     0, 
        197,   198,   204,   207,   206,   208,   210,   224,   226,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   218, 
        216,   227,   228,   200,   201,   202,   203,   205,   226,     0, 
        213,   214,     0,   197,   198,   204,   207,   206,   208,     0, 
        224,   223,   212,     0,     0,     0,   221,   219,     0,   220, 
          0,   222,   225,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   215,     0,   217,     0,     0,     0, 
          0,   229,     0,     0,   223,   212,     0,     0,     0,   221, 
        219,     0,   220,     0,   222,     0,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   215,   211,   217, 
          0,     0,     0,     0,     0,     0,   229,     0,     0,   223, 
          0,     0,     0,     0,   221,   219,     0,   220,     0,   222, 
          0,     0,     0,     0,     0,     0,     0,     0,   210,     0, 
        226,   211,   215,     0,   217,     0,     0,     0,     0,     0, 
        218,   216,   227,   228,   200,   201,   202,   203,   205,     0, 
          0,   213,   214,     0,   197,   198,   204,   207,   206,   208, 
          0,   224,     0,   226,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   218,   216,   227,   228,   200, 
        201,   202,   203,   205,   225,     0,   213,   214,     0,     0, 
        198,   204,   207,   206,   208,     0,   224,     0,   226,     0, 
          0,     0,     0,   229,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   225,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        259,   259,     0,   229,   259,   259,   259,   259,   259,     0, 
        259,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   259,   259,   259,   259,   259,   259,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   218,   216,   227,   228,   200,   201,   202,   203, 
        205,     0,     0,   213,   214,     0,   259,   259,   204,   207, 
        206,   208,     0,   224,     0,     0,     0,     0,     0,     0, 
          0,     0,   218,   216,   227,   228,     0,     0,     0,     0, 
          0,     0,     0,   213,   214,     0,   225,   259,   259,     0, 
          0,   260,   260,   224,     0,   260,   260,   260,   260,   260, 
          0,   260,     0,     0,     0,   229,     0,     0,     0,     0, 
          0,     0,   260,   260,   260,   260,   260,   260,     0,   225, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   261,   261,     0,   229,   261, 
        261,   261,   261,   261,     0,   261,     0,   260,   260,     0, 
          0,     0,     0,     0,   225,     0,   261,   261,   261,   261, 
        261,   261,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   229,   218,   216,   227,   228,   260,   260, 
          0,     0,     0,     0,     0,   213,   214,     0,     0,     0, 
          0,   261,   261,     0,     0,   224,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   218,   216,   227, 
        228,     0,     0,     0,     0,     0,     0,     0,   213,   214, 
        259,     0,   261,   261,     0,     0,   257,     0,   224,   257, 
          0,   257,   257,   257,     0,     0,     0,     0,     0,     0, 
          0,     0,   218,   216,   227,   228,   257,   257,   257,   257, 
        257,   257,     0,   213,   214,     0,     0,     0,     0,     0, 
          0,     0,     0,   224,   258,     0,     0,   258,     0,   258, 
        258,   258,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   257,   257,     0,   258,   258,   258,   258,   258,   258, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   249,     0,     0,   249,     0,     0,   249,     0,     0, 
          0,   260,   257,   257,     0,     0,     0,     0,     0,   258, 
        258,   249,   249,     0,   249,     0,   249,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        258,   258,     0,     0,     0,   261,   249,   249,     0,     0, 
          0,     0,     0,   259,   259,     0,     0,   259,   259,   259, 
        259,   259,     0,     0,   259,   259,     0,   259,   259,   259, 
        259,   259,   259,     0,     0,     0,     0,   249,   249,     0, 
          0,   251,     0,     0,   251,     0,     0,   251,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   251,   251,     0,   251,     0,   251,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   257,   251,   251,     0,     0, 
          0,     0,     0,     0,   260,   260,     0,     0,   260,   260, 
        260,   260,   260,     0,     0,   260,   260,     0,   260,   260, 
        260,   260,   260,   260,     0,     0,     0,   251,   251,     0, 
          0,     0,     0,   258,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   261,   261, 
          0,     0,   261,   261,   261,   261,   261,     0,     0,   261, 
        261,     0,   261,   261,   261,   261,   261,   261,     0,     0, 
        249,     0,   250,     0,     0,   250,     0,     0,   250,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   250,   250,     0,   250,     0,   250,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        252,     0,     0,   252,     0,     0,   252,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   250,   250,     0, 
        252,   252,     0,   252,     0,   252,     0,     0,   257,   257, 
          0,     0,   257,   257,   257,   257,   257,     0,     0,   257, 
        257,     0,   257,   257,   257,   257,   257,   257,   250,   250, 
        251,     0,     0,     0,     0,   252,   252,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   258,   258,     0,     0, 
        258,   258,   258,   258,   258,     0,     0,   258,   258,     0, 
        258,   258,   258,   258,   258,   258,   252,   252,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   249,   249,   249, 
        249,   249,     0,     0,   249,   249,     0,   249,   249,   249, 
        249,   249,   249,     0,     0,     0,     0,   267,     0,     0, 
        267,     0,     0,   267,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   267,   267,     0, 
        267,     0,   267,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   248,     0,     0,   248,     0, 
          0,   248,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   250,   267,   267,     0,   248,   248,     0,   248,     0, 
        248,     0,     0,     0,     0,     0,     0,   251,   251,   251, 
        251,   251,     0,     0,   251,   251,     0,   251,   251,   251, 
        251,   251,   251,   267,   267,     0,     0,     0,     0,   252, 
        248,   248,   266,     0,     0,   266,     0,     0,   266,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   247,     0, 
          0,   247,   266,   266,   247,   266,     0,   266,     0,     0, 
          0,   248,   248,     0,     0,     0,     0,     0,   247,   247, 
          0,   247,   264,   247,     0,   264,     0,     0,   264,     0, 
          0,     0,     0,     0,     0,     0,     0,   266,   266,     0, 
          0,     0,   264,   264,     0,   264,     0,   264,     0,     0, 
          0,     0,     0,   247,   247,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   266,   266, 
          0,     0,     0,     0,     0,     0,     0,   264,   264,     0, 
          0,     0,     0,     0,   247,   247,     0,     0,   250,   250, 
        250,   250,   250,     0,   265,   250,   250,   265,   250,   250, 
        250,   250,   250,   250,     0,     0,   267,     0,   264,   264, 
          0,   265,   265,     0,   265,     0,   265,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   252,   252,   252,   252, 
        252,     0,     0,   252,   252,     0,   252,   252,   252,   252, 
        252,   252,     0,     0,   248,     0,   265,   265,     0,     0, 
        253,     0,     0,   253,     0,     0,   253,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        253,   253,     0,   253,     0,   253,     0,   265,   265,     0, 
          0,     0,     0,     0,     0,     0,     0,   254,     0,     0, 
        254,     0,     0,   254,     0,     0,     0,     0,     0,     0, 
          0,   266,     0,     0,     0,   253,   253,   254,   254,     0, 
        254,     0,   254,     0,     0,     0,     0,   247,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   263,     0, 
          0,   263,     0,     0,     0,     0,   253,   253,     0,     0, 
          0,   264,   254,   254,     0,   263,   263,     0,   263,     0, 
        263,     0,     0,   267,   267,   267,   267,   267,     0,     0, 
        267,   267,     0,   267,   267,   267,   267,   267,   267,     0, 
          0,     0,     0,   254,   254,     0,     0,     0,     0,     0, 
        263,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   248,   248,   248,   248,   248,     0,     0,   248,   248, 
          0,   248,   248,   248,   248,   248,   248,     0,     0,     0, 
        265,   263,   263,     0,     0,     0,     0,     0,     0,     0, 
          0,   205,     0,     0,   205,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   205,   205, 
          0,   205,     0,   205,     0,     0,     0,     0,   266,   266, 
        266,   266,   266,     0,     0,   266,   266,     0,   266,   266, 
        266,   266,   266,   266,   247,   247,   247,   247,   247,   253, 
          0,   247,   247,   205,   247,   247,   247,   247,   247,   247, 
          0,     0,     0,     0,     0,     0,     0,     0,   264,   264, 
        264,   264,   264,     0,     0,     0,     0,     0,   264,   264, 
        264,   264,   264,   264,     0,   205,   254,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        129,     0,   139,     0,     0,     0,     0,   138,     0,     0, 
        127,     0,   128,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   263,     0,     0,   299,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   265,   265,   265, 
        265,   265,     0,     0,     0,     0,     0,   265,   265,   265, 
        265,   265,   265,     0,     0,     0,     0,     0,    83,     0, 
          0,     0,     0,     0,     0,   129,     0,   139,     0,     0, 
          0,     0,   138,     0,     0,   127,     0,   128,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   130,   303,     0,   253,   253,   253,   253, 
        253,     0,     0,     0,     0,     0,   253,   253,   253,   253, 
        253,   253,   129,     0,   139,     0,     0,   205,     0,   138, 
          0,     0,   127,    83,   128,     0,     0,     0,     0,     0, 
          0,     0,     0,   254,   254,   254,   254,   254,     0,     0, 
        295,     0,     0,   254,   254,   254,   254,   254,   254,     0, 
          0,     0,     0,   129,     0,   139,     0,     0,   130,     0, 
        138,     0,     0,   127,     0,   128,     0,     0,     0,     0, 
         83,   263,   263,   263,   263,   263,     0,     0,   126,     0, 
          0,   263,   263,   263,   263,   263,   263,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   130,     0,     0,     0,     0, 
          0,    83,   129,     0,   139,     0,     0,     0,     0,   138, 
          0,     0,   127,     0,   128,     0,     0,   172,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
        297,     0,     0,     0,     0,     0,   130,     0,     0,     0, 
          0,     0,     0,    10,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   205,   205,   205,   205,   205,     0, 
         83,     0,     0,     0,   205,   205,   205,   205,   205,   205, 
        134,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   172,    86,    87,    88,    89,    90,     0,     0, 
          0,     0,     0,     0,   129,   130,   139,   137,     0,     0, 
          0,   138,     0,   133,   127,   220,   128,   220,    10,     0, 
          0,     0,   220,     0,     0,   220,     0,   220,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   172, 
         86,    87,    88,    89,    90,   134,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    83,     0,     0,    10,     0,     0,   300,   131, 
        132,     0,   137,   220,     0,   220,     0,     0,   133,     0, 
        135,   136,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,     0,   134,     0,   343,     0,     0,   130,     0,     0, 
          0,     0,     0,   129,     0,   139,    10,     0,   220,     0, 
        138,     0,     0,   127,   129,   128,   139,     0,     0,   137, 
          0,   138,     0,     0,   127,   133,   128,     0,     0,     0, 
          0,     0,   304,   134,   131,   132,     0,     0,     0,   172, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        137,    83,     0,     0,     0,    10,   133,     0,     0,     0, 
          0,     0,   186,     0,     0,     0,     0,     0,     0,     0, 
          0,   131,   132,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   134,     0,     0,     0,   130,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   130,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   137, 
          0,     0,   131,   132,     0,   133,     0,     0,     0,     0, 
          0,   172,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,     0,   220,   220,   220,   220,   220,   220,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   220,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   131,   132,     0,   134,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   220,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   137,     0,     0,     0,     0,     0,   133,     0,     0, 
          0,     0,   220,     0,     0,     0,     0,     0,   220,     0, 
        172,    86,    87,    88,    89,    90,     0,     0,     0,     0, 
          0,   172,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    10,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,   131,   132,     0,     0,     0,     0,     0, 
          0,     0,     0,   134,   220,   220,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        137,     0,     0,     0,     0,     0,   133,     0,     0,     0, 
          0,   187,     0,     0,     0,     0,     0,   133,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   131,   132,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   131,   132, 
    );
    protected static $yyCheck = array(4,
        120,    61,    62,    63,    41,    46,    91,    44,    40,    71, 
        154,    41,    60,    46,    46,   125,   125,   260,    59,    44, 
         91,   124,    91,   168,    84,    63,   126,    41,   126,    34, 
         35,   126,   387,    41,    63,    40,    44,   123,    98,    91, 
        100,   260,    42,   105,   106,   138,    44,   185,    40,   169, 
         58,    59,    41,    91,    44,    44,    61,    62,    63,    91, 
        120,    59,    91,    60,    69,    70,    71,   125,    93,   238, 
        260,    44,    39,    91,    97,    46,    93,    63,   330,    84, 
         44,   300,    49,    50,    51,    93,   260,   434,   340,    62, 
         61,   303,    97,    98,    91,   100,    41,   340,    62,    44, 
        105,   106,   195,    93,    93,    91,    37,    59,   125,   169, 
        300,    42,    43,   468,    45,   120,    47,   125,    33,   179, 
         35,   265,   304,   261,    58,    40,   300,   125,    43,    37, 
         45,   123,   270,   138,    42,    43,   229,    45,    59,    47, 
        163,    41,   165,    37,    44,   364,    64,   316,    42,    43, 
        260,    45,    60,    47,    62,   510,   179,   162,   163,    59, 
        165,   508,    59,    46,   169,   225,   340,    41,    91,    41, 
         44,   123,    44,   317,   179,   260,    91,    40,   103,    46, 
        439,   274,   537,    46,    58,    59,    58,    59,    59,   260, 
        195,   260,   337,    93,   338,   126,   340,    41,   125,    46, 
         44,   286,   127,   128,   129,   130,   131,   132,   260,   134, 
        125,   126,   312,   138,   312,   286,   354,   286,   126,    93, 
        225,    93,   260,   482,   229,   311,   123,    46,   251,   154, 
         37,   331,   126,   331,   286,    42,   331,   340,   407,    44, 
         47,    59,   260,   257,   389,    58,   251,   332,   286,   257, 
         40,   125,   123,   125,    59,   340,   181,   401,   183,   397, 
        260,   332,   406,   260,   373,   374,    59,    91,   286,   274, 
        237,   340,   197,   198,   199,   200,   201,   202,   203,   204, 
        205,   206,   207,   208,   209,   210,   211,   212,   213,   214, 
        215,   216,   217,   218,   219,   220,   221,   222,   223,   224, 
        300,   226,   402,   403,   402,   403,   444,   402,   403,   453, 
        260,   340,   257,   238,    41,   373,   374,    44,    33,   126, 
         35,   421,   340,   320,    46,    40,   260,   261,    43,    59, 
         45,   544,   545,   260,    59,   332,   286,   260,    41,    61, 
        265,    44,   267,   340,    60,   260,   261,   262,   263,   264, 
        265,    41,    44,    44,    44,    58,    59,   257,   571,   286, 
        257,   423,   410,    40,   364,    41,    59,    44,    44,   410, 
        295,   286,   297,   410,   299,   300,    91,   410,   303,   304, 
        410,   312,   526,   257,    46,   257,   257,    61,   420,    91, 
         93,   316,   317,   123,   260,   410,    58,   320,   313,   310, 
        331,    93,    93,    44,   312,   332,   414,   415,    40,   332, 
        125,   126,    91,   338,    46,   340,    93,   340,   538,   424, 
        286,   346,   125,   331,    91,   340,   341,   342,   343,   434, 
        355,   346,   310,   125,   125,   579,   260,   261,   262,   263, 
        264,   265,   569,   570,    41,   360,   361,   362,   363,   311, 
        365,   366,    93,   123,   260,   370,   371,   372,   373,   374, 
        473,   474,   286,    33,    40,    35,   391,   594,   473,   474, 
         40,   402,   403,    43,   340,    45,   401,    91,   538,    93, 
        286,   406,   407,   310,   125,   410,    41,   402,   403,    44, 
        421,    58,   400,   401,   402,   403,    41,    40,   511,    44, 
         91,    44,    40,   508,    59,   312,   511,    33,    46,    35, 
        515,   260,   261,   421,    40,   430,    59,    43,   123,    45, 
         58,    91,   346,    44,   331,   123,   332,   257,   453,   454, 
         58,    41,    44,   538,    44,   595,   461,   462,    93,   123, 
        414,   415,   414,   415,    93,   260,   261,   262,   263,   264, 
        265,   410,   260,   123,   257,   615,   126,    44,   260,   261, 
        262,   263,   264,   265,   489,    91,   273,    61,    41,   276, 
        125,   286,   300,   301,   302,   283,   501,    93,   286,   260, 
        123,   260,   125,   344,   345,    41,    59,   340,    44,   257, 
        595,    41,   300,   260,    44,   402,   403,    41,   313,    44, 
        126,   526,    58,    59,   529,    41,   531,   286,    58,    59, 
        615,   300,   301,   302,   421,    49,    50,    51,   123,   286, 
         93,   300,   301,   302,   260,   340,   341,   342,   343,   373, 
        374,   346,   125,   300,   301,   302,    40,    93,    13,    14, 
        565,   105,   106,    93,   123,   360,   361,   362,   363,   123, 
        365,   366,   125,   332,   579,   370,   364,   372,   373,   374, 
         61,    58,    91,    40,    58,   332,   260,   260,   123,   125, 
         40,   125,    41,    40,    93,   125,   601,    41,    40,   125, 
         41,    61,    40,    44,    40,    91,   123,   402,   403,    41, 
        260,   261,   262,   263,   264,   265,    37,    38,    59,    40, 
         41,    42,    43,    44,    45,   527,    47,   125,   125,   125, 
        532,   414,   415,   340,    40,   430,   286,    58,    59,    60, 
         61,    62,    63,    37,    38,    40,    40,    41,    42,    43, 
         44,    45,    93,    47,   260,   261,   262,   263,   264,   265, 
         40,    59,    59,   313,    58,    59,    40,    61,    62,    63, 
         91,    40,    93,    94,   340,    40,    59,    91,   260,   581, 
        286,    41,    41,    59,   125,   361,    61,   340,    61,    59, 
        340,   341,   342,   343,    41,    44,   346,    91,   600,    93, 
         94,    93,   123,   124,   125,   126,   125,   313,   123,   611, 
        360,   361,   362,   363,    59,   365,   366,   125,    40,    44, 
        370,   257,   372,   364,   123,   340,   321,   257,   260,   123, 
        124,   125,   126,    41,   340,   341,   342,   343,    41,   123, 
        346,   340,    41,   125,   125,   379,    59,   371,   125,    40, 
         59,   123,   402,   403,   360,   361,   362,   363,   125,   365, 
        366,   125,    41,    58,   370,    41,   372,   125,   123,   125, 
        123,   280,   281,   282,   283,   284,   285,   123,   287,   413, 
        430,    37,    38,    93,    40,    41,    42,    43,    44,    45, 
         46,    47,    41,    41,   303,   125,   402,   403,   257,    58, 
         93,   125,    58,    59,    60,    61,    62,    63,    37,    38, 
         91,    91,    41,    42,    43,    44,    45,    91,    47,   125, 
        125,   123,    59,    41,   430,   334,    44,    59,    41,    58, 
         59,    60,    61,    62,    63,    91,   257,    93,    94,   260, 
         58,    59,    59,    41,    41,   364,   260,   261,   262,   263, 
        264,   265,    41,    41,   125,   125,    41,     7,     6,    44, 
        102,    77,    91,   257,    93,    94,   260,   336,   124,   125, 
        126,   515,   286,    58,    59,    93,   479,   474,   414,   415, 
         60,    59,   109,   490,   414,   415,   300,   587,    91,   310, 
        311,   312,   502,   527,   551,   124,   125,   126,   532,   320, 
        551,   179,   179,   195,   341,   240,   274,   125,    93,   330, 
        331,   332,   165,   236,    31,    -1,   310,   311,   312,   340, 
         -1,    -1,   125,    -1,    -1,    -1,   320,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,   330,   331,   332,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,   340,   581,    37,    38, 
         -1,    40,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   600,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,   611,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   410, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,   257,    91,    -1,    93,    94,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,   126,    -1,   257, 
         41,    -1,    41,    44,    41,    44,    41,    44,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    58,    59,    58, 
         59,    58,    59,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    41,    -1,   331,    44,   280,   281,   282, 
        283,   284,   285,   312,   287,    -1,    -1,    -1,    91,    -1, 
         58,    59,    93,    -1,    93,    -1,    93,    -1,    93,    -1, 
        303,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,   125,    93,   125,    -1,   125,    -1, 
        125,   334,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   125,   414,   415, 
        416,   417,   418,   419,   420,   421,    91,    91,   257,    93, 
         94,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,   414,   415,    -1,    -1, 
        124,   125,   126,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
         37,    38,    44,    -1,    41,    42,    43,    44,    45,    46, 
         47,    41,    -1,   312,    44,    -1,    58,    59,    -1,   414, 
        415,    58,    59,    60,    61,    62,    63,    -1,    58,    59, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,   257,    47,   257,    -1, 
        257,    93,   257,    -1,    91,    -1,    93,    94,    58,    59, 
         60,    61,    62,    93,    -1,    -1,    -1,   280,   281,   282, 
        283,   284,   285,    -1,   287,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,   124,   125,   126, 
        303,    -1,    -1,    93,    94,   125,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    41,   411,   412,    44,   414,   415,   416,   417,   418, 
        419,   420,   421,   257,   124,   125,   126,    -1,    58,    59, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,   280,   281,   282,   283,   284, 
        285,    -1,   287,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    93,    -1,   300,   301,   302,    -1,   304, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,   312,    40, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,   125,    -1,   331,    -1,    60, 
         61,    62,    63,   414,   415,   414,   415,   414,   415,   414, 
        415,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    -1, 
        257,   124,   125,   126,    -1,    -1,    -1,   257,    -1,    -1, 
         91,    -1,    -1,    94,    -1,    -1,   414,   415,    -1,   280, 
        281,   282,   283,   284,   285,    -1,   287,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,   257,    -1,    -1, 
         -1,    -1,   303,   124,    -1,   126,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
        330,   331,    -1,    -1,    -1,    -1,    37,    38,    -1,    40, 
        340,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    93,    94,    -1,    -1,    60, 
         61,    62,    63,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   414,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,   124,   125,   126,    -1, 
         91,    -1,    93,    94,    -1,    -1,   257,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,   124,    -1,   126,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         44,    45,    -1,    47,    -1,   280,   281,   282,   283,   284, 
        285,   312,   287,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,   300,   301,   302,   303,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,   257, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    93,    94,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    37,    38,    -1,    91,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,   124,   125, 
         91,    -1,    -1,    -1,    93,    94,    58,    59,    60,    61, 
         62,    63,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,   125,   124,   125,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,   124,   125,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         58,    59,    60,    61,    62,    63,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   257,   124, 
        125,    -1,    -1,    -1,    -1,    93,    94,   280,   281,   282, 
        283,   284,   285,    -1,   287,    -1,   312,    -1,    -1,   280, 
        281,   282,   283,   284,   285,    -1,   287,   300,   301,   302, 
        303,    -1,    -1,    -1,    -1,   257,   124,   125,    -1,    37, 
         38,    -1,   303,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   334,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    93,    94,    -1,    58,    59, 
         60,    61,    62,    63,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,   124,   125,    -1,    -1, 
         -1,    -1,   257,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,   124,   125,    -1,    -1,    -1,   257, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         60,    61,    62,    63,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,   257,   124,   125, 
         -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   312,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,   124,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    91,    47,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,    -1, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,   303,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,   400,   401,    -1,    94,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   334,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    94,    -1,    -1,   124,    -1,   126,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,   124,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,   260,   343,    -1,    94, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,   280,   281,   282,   283, 
        284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,   126,    -1,    -1,    94,    -1,    -1,    -1,    -1,   303, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   124,   421,   126,    -1,   332,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   312,   414,   415,   416,   417,   418,   419, 
         -1,   421,   448,    -1,    -1,    -1,    -1,    -1,    -1,   455, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1, 
        312,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,   518,    -1,    94,    -1,    -1,    -1,    -1,   525, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        536,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    94,   421,    -1,   124,    -1,   126,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,   567,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,   124,    -1,   126,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
        596,    47,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,   614,    -1, 
         -1,   331,    -1,   619,    -1,    -1,    37,    38,   624,    -1, 
         41,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    60, 
         61,    62,    63,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   124,    -1, 
        126,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1,   312, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    58,   331,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,   124,    -1,   126,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   124,   421,   126,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   124, 
        421,   126,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    60,    61,    62,    63,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    -1,    62,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   126,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    -1,    62,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    94,    62, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    37, 
         -1,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        126,    94,    60,    -1,    62,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,    -1, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   126,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,   331,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,    93,    94,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   411,   412,    -1,   312,   124,   125,    -1, 
         -1,    37,    38,   421,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,   331,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,   400,   401,   402,   403,   124,   125, 
         -1,    -1,    -1,    -1,    -1,   411,   412,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412, 
        257,    -1,   124,   125,    -1,    -1,    38,    -1,   421,    41, 
         -1,    43,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,    58,    59,    60,    61, 
         62,    63,    -1,   411,   412,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   421,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,   257,   124,   125,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,   257,    93,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
        257,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   124,   125, 
        257,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    93,    94,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   124,   125,    -1,    -1,    -1,    -1,   257, 
         93,    94,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    58,    59,    44,    61,    -1,    63,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    38,    63,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    41,   411,   412,    44,   414,   415, 
        416,   417,   418,   419,    -1,    -1,   257,    -1,   124,   125, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,   257,    -1,    93,    94,    -1,    -1, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,    93,    94,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,   257,    93,    94,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
        257,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   404,   405,   406,   407,   408,   257, 
         -1,   411,   412,    93,   414,   415,   416,   417,   418,   419, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   125,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    60,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416, 
        417,   418,   419,    -1,    -1,    -1,    -1,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    62,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    33,    -1,    35,    -1,    -1,   257,    -1,    40, 
         -1,    -1,    43,    91,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         61,    -1,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    33,    -1,    35,    -1,    -1,   126,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         91,   404,   405,   406,   407,   408,    -1,    -1,    58,    -1, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    91,    33,    -1,    35,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         61,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         91,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    33,   126,    35,   340,    -1,    -1, 
         -1,    40,    -1,   346,    43,    33,    45,    35,   286,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,   286,    -1,    -1,   401,   402, 
        403,    -1,   340,    91,    -1,    93,    -1,    -1,   346,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,   123,    -1,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    35,   286,    -1,   126,    -1, 
         40,    -1,    -1,    43,    33,    45,    35,    -1,    -1,   340, 
         -1,    40,    -1,    -1,    43,   346,    45,    -1,    -1,    -1, 
         -1,    -1,   400,   313,   402,   403,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        340,    91,    -1,    -1,    -1,   286,   346,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,   402,   403,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', NULL, NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 196 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 196 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 207 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 208 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 212 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 215 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 218 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 221 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 234 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 239 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 246 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 255 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 255 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 264 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 264 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 275 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 276 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 317 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 320 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 320 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 330 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 337 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 344 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 350 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 351 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 372 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 383 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 383 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 394 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 394 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 419 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 419 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 432 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 433 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 442 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 445 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 449 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 456 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 461 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 466 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 473 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 474 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 484 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 493 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 499 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 500 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 501 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 524 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 529 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 534 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 553 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 558 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 559 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 563 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 566 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 566 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 571 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 571 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 581 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 581 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 586 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 586 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 590 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 590 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 594 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 594 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 598 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 599 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 600 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 600 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 603 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 608 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 611 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 618 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 619 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 623 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 626 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 633 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 634 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 638 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 644 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 645 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 654 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 655 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 659 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 663 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 663 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 670 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 686 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 690 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 690 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 704 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 705 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 714 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 714 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 722 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 727 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 728 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 737 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 743 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 748 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 756 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 759 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 762 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 765 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 771 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 771 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 774 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 774 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 780 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 788 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 791 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 797 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 797 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 806 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 806 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 816 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 816 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 825 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 199:  #line 828 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 200:  #line 831 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 201:  #line 834 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 202:  #line 837 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 203:  #line 840 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 204:  #line 843 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 205:  #line 847 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 206:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 207:  #line 859 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 208:  #line 865 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 209:  #line 870 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 210:  #line 870 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 211:  #line 880 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 212:  #line 881 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 213:  #line 885 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 215:  #line 890 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 216:  #line 891 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 217:  #line 895 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 218:  #line 896 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 219:  #line 900 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 220:  #line 906 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 221:  #line 906 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 222:  #line 907 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 223:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 224:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 225:  #line 910 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 226:  #line 911 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 915 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 228:  #line 918 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 229:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 231:  #line 929 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 232:  #line 930 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 233:  #line 934 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 235:  #line 939 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 236:  #line 940 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 237:  #line 944 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 238:  #line 945 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 239:  #line 946 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 240:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 241:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 949 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 950 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 951 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 953 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 954 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 248:  #line 955 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 249:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 960 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 961 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 252:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 256:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 257:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 260:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 267:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 268:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 271:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 276:  #line 995 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 277:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 279:  #line 1005 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 280:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 281:  #line 1010 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 282:  #line 1010 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 283:  #line 1013 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 284:  #line 1016 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 285:  #line 1016 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 286:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 287:  #line 1019 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 288:  #line 1025 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 289:  #line 1026 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 296:  #line 1044 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 297:  #line 1045 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 298:  #line 1049 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 299:  #line 1053 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 300:  #line 1057 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 301:  #line 1058 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 303:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 304:  #line 1067 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 305:  #line 1068 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 306:  #line 1074 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 307:  #line 1075 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 308:  #line 1079 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 309:  #line 1080 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 310:  #line 1084 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 311:  #line 1085 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 312:  #line 1086 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 313:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 314:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 315:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 316:  #line 1090 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 317:  #line 1091 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 2954 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
