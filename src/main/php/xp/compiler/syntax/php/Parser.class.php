<?php
#line 2 "grammar/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
#line 80 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    30,    30,    27,    27,    39,    39,    40,    40,    38, 
         38,    41,    41,    45,    43,    46,    43,    48,    43,    50, 
         43,    52,    43,    53,    43,    54,    43,    56,    43,    58, 
         43,    59,    43,    60,    43,    43,    43,    51,    51,    55, 
         55,    61,    61,    63,    62,    64,    62,    42,    42,    47, 
         65,    47,    57,    66,    66,    68,    67,    49,    49,    69, 
         69,    44,    44,    70,    70,    71,    71,    71,    26,    73, 
         26,    74,    26,    75,    26,    76,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    82,    82,    83,    83,    84,    35,    86, 
         35,    25,    25,    25,    25,    25,    25,    85,    85,    85, 
         85,    87,    87,    89,    89,    88,    77,    77,    77,    77, 
         77,    77,    77,    77,    77,    77,    77,    77,    78,    78, 
         78,    78,    78,    78,    78,    78,    79,    79,    79,    79, 
         79,    79,    79,    79,    79,    79,    79,    80,    80,    80, 
         80,    80,    80,    81,    81,    72,    72,    90,    90,    92, 
         91,    93,    91,    91,    91,    91,    94,    91,    31,    31, 
         10,    95,    17,    17,    33,    33,    96,    96,    97,    97, 
         97,    97,    97,    97, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     3,     0,     1,     1,     3,     3,     2,     0, 
          1,     1,     2,     0,     4,     0,     7,     0,    10,     0, 
          8,     0,     6,     0,     8,     0,     8,     0,     6,     0, 
          3,     0,     3,     0,     4,     2,     1,     1,     3,     0, 
          1,     1,     2,     0,     5,     0,     4,     1,     3,     0, 
          0,     3,     1,     1,     2,     0,     9,     0,     1,     1, 
          3,     0,     1,     4,     4,     1,     4,     1,     1,     0, 
          3,     0,     3,     0,     5,     0,     6,     2,     1,     1, 
          1,     1,     1,     5,     3,     3,     3,     3,     4,     4, 
          2,     7,     4,     0,     1,     1,     3,     1,     1,     0, 
          5,     1,     1,     1,     1,     1,     1,     0,     1,     1, 
          1,     1,     3,     0,     1,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     4,     4,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     2,     2,     2, 
          2,     2,     2,     2,     2,     0,     1,     1,     2,     0, 
          4,     0,     4,     2,     2,     4,     0,     6,     1,     1, 
          1,     1,     1,     3,     0,     1,     1,     2,     1,     1, 
          1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   229,   231,   230,   232,   234,   233,     0,     1,     0, 
         42,   226,     0,     8,     0,     4,     9,     0,    14,    16, 
        228,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   221,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,   157,   153,   156,   154,   155,     0, 
          0,   149,     0,     0,     0,    19,     0,     0,     0,    23, 
         25,     0,     0,   150,    46,    47,     0,    21,    25,     0, 
          0,   152,    50,    51,     0,     0,    49,     0,   224,     0, 
         17,     0,    24,    26,    28,     0,     0,   159,     0,     0, 
          0,     0,     0,     0,   122,     0,     0,     0,     0,   120, 
          0,     0,   119,     0,   129,   130,   131,   132,   133,     0, 
          0,   162,    15,     0,    27,     0,     0,     0,     0,    29, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        128,   141,   126,     0,     0,   124,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   204,   205,     0, 
          0,   151,     0,     0,     0,    31,     0,     0,    33,     0, 
         30,     0,     0,     0,   222,     0,   219,     0,   123,   220, 
          0,   148,     0,     0,   146,   210,     0,   212,   121,   207, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   138,   137,     0, 
        111,     0,   165,   163,    34,    32,    37,     0,     0,     0, 
        143,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        215,     0,     0,   209,     0,   116,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   147,     0,   217, 
          0,     0,     0,   125,     0,     0,     0,     0,    55,     0, 
        115,   114,   127,    64,     0,    84,    68,    72,    74,    70, 
         80,    82,    66,    76,    87,     0,     0,     0,    61,     0, 
         98,   211,     0,   216,   213,     0,    59,     0,     0,     0, 
          0,    78,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    86,   142,    63,     0,   117,     0,     0,    58, 
         57,     0,     0,     0,     0,     0,     0,     0,    81,    83, 
          0,     0,    99,   218,    40,    52,     0,    38,    65,     0, 
         85,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    53,   106,    79,   103,     0, 
          0,    73,     0,     0,     0,     0,     0,     0,   105,     0, 
          0,     0,     0,   101,    67,    94,    96,     0,    91,     0, 
          0,     0,    75,    89,    71,     0,     0,     0,    77,    93, 
          0,     0,   102,     0,     0,     0,    69,     0,    97,     0, 
         95,     0,     0,   107, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   111,    92,   197, 
         36,    51,    68,    81,    37,    53,    70,    93,    94,   125, 
         95,    96,   126,   189,    62,   317,   297,   283,   349,   368, 
        298,    34,    21,    35,   113,    64,    65,   318,   299,   300, 
        319,   320,   321,   230,   331,   340,   405,   334,   265,   337, 
        395,   335,   336,   341,   408,   353,   388,   338,   339,   333, 
        409,   410,   417,   418,   416,   389,   390,   398,   266,   199, 
        277,   209,   145,   140,   212,   201,   115,   116,   117,   118, 
        119,   203,   204,   205,   120,    85,   121,   122,   254,   210, 
        211,   269,   273,   323,   200,    22,    23, 
    );
    protected static $yySindex = array(         -281,
          0,     0,  -247,  -213,  -213,   209,  -247,     0,     2,    68, 
        104,     0,     0,     0,     0,     0,     0,    77,     0,  -282, 
          0,     0,   166,     0,  -213,     0,     0,   106,     0,     0, 
          0,     0,   -19,   100,   151,   -19,   -19,     0,  -213,   227, 
        166,   106,     0,   -42,   -34,     0,    19,     0,     0,   -19, 
         -7,   -19,   174,   244,     0,     0,     0,     0,     0,   245, 
        269,     0,   274,   286,   288,     0,   -19,   207,   289,     0, 
          0,  -195,  -195,     0,     0,     0,  -170,     0,     0,   -19, 
          6,     0,     0,     0,  3383,   244,     0,   593,     0,    80, 
          0,  -294,     0,     0,     0,   110,  3835,     0,  3864,  3864, 
       3864,  3864,  3864,  3864,     0,  3864,  3864,   303,   305,     0, 
        -64,  1185,     0,   306,     0,     0,     0,     0,     0,   310, 
        309,     0,     0,   295,     0,   121,    87,   296,   209,     0, 
         62,   182,  1212,  -178,  -178,  -274,  -178,  -178,  -178,   -63, 
          0,     0,     0,    18,   -79,     0,  3864,  3864,  3864,  3864, 
       3864,  3864,  3864,  3864,  3864,  3629,  3738,  3864,  3864,  3864, 
       3864,  3864,  3864,  3864,  3747,  3777,  3864,  3864,  3864,  3864, 
       3864,  3864,  3864,  3864,  3864,  3864,   -20,     0,     0,  3864, 
       3864,     0,  3864,   369,    80,     0,   320,  3864,     0,    21, 
          0,  3864,  3864,   -79,     0,   322,     0,   345,     0,     0, 
       3864,     0,   347,   342,     0,     0,   -28,     0,     0,     0, 
        -79,  -244,  1969,  2012,  2012,  2012,  2012,  2012,  2012,  2012, 
       2012,  3864,  2012,  3864,  2012,  2012,  2012,  2012,  1942,   331, 
       3160,  2547,    75,  3864,   102,  3864,   102,   200,   200,   200, 
        200,   200,   281,   281,  -274,  -274,  -274,     0,     0,  1942, 
          0,  1185,     0,     0,     0,     0,     0,  1942,  1942,  1942, 
          0,  3864,  3864,  1942,   358,   306,   277,    18,  3864,   372, 
          0,  3864,  3864,     0,   373,     0,   -79,  2012,  2012,  3864, 
       2012,  2012,   -62,   374,   375,   -79,  3485,     0,   334,     0, 
       1239,  1282,  3864,     0,  3134,   296,   398,   103,     0,   396, 
          0,     0,     0,     0,   319,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  3485,  1309,   327,     0,  3485, 
          0,     0,  3864,     0,     0,   403,     0,   399,   296,   -62, 
       3864,     0,  3864,   418,   419,  3485,   420,   408,   409,   429, 
        430,   346,     0,     0,     0,   432,     0,     9,   -16,     0, 
          0,   415,  3485,  1336,  3864,  3864,   118,  3864,     0,     0, 
       3864,  3864,     0,     0,     0,     0,  3485,     0,     0,   359, 
          0,   424,  1379,   445,  1433,  1406,  1818,   363,   152,  3864, 
       3485,  3864,   155,  3485,   377,     0,     0,     0,     0,   152, 
        438,     0,  1845,    85,   460,   135,  -125,   467,     0,  3864, 
        450,   170,  3485,     0,     0,     0,     0,   386,     0,  -125, 
        -19,   472,     0,     0,     0,  3485,  3864,   478,     0,     0, 
        197,  3485,     0,  1872,  3485,   497,     0,  3485,     0,   416, 
          0,  3485,   425,     0, 
    );
    protected static $yyRindex= array(          473,
          0,     0,    54,     0,     0,   -45,   181,     0,   -37,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -208,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   447,     0,     0,     0,     0,    -2, 
        -82,     0,     0,  -121,   428,     0,     0,     0,     0,     0, 
        440,     0,     0,   523,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   524,     0,     0,     0,   443,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -215,     0,     0,     0,   526,     0,     0,  -215,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   114,     0,     0, 
          0,   148,     0,   536,     0,     0,     0,     0,     0,     0, 
        537,     0,     0,     0,     0,     0,     0,   137,   252,     0, 
       1915,     0,     0,   553,   580,   705,   607,   651,   678,     0, 
          0,     0,     0,   560,   141,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        546,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        213,     0,   150,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   141,     0,     0,     0,     0,     0,     0, 
        567,     0,     0,   568,     0,     0,     0,     0,     0,     0, 
        168,     0,  2106,    41,   192,  1264,  1457,  1484,  1897,  1983, 
       2060,     0,  3142,     0,  3151,  3167,  3171,  3175,   266,     0, 
       2725,  2704,  2611,     0,  2653,     0,  2679,  2489,  2517,  2557, 
       2585,  2463,  2051,  2079,   746,   773,   800,     0,     0,   176, 
          0,     0,     0,     0,     0,     0,     0,   254,  2090,  2119, 
          0,   567,   567,   267,     0,   112,     0,     0,   517,   -10, 
          0,     0,     0,     0,    17,     0,   141,  3180,  3211,     0, 
       3222,  3244,   578,     0,     0,   141,   495,     0,     0,     0, 
          0,     0,   567,     0,  2748,   255,     0,     0,     0,   594, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   495,     0,     0,     0,  -114, 
          0,     0,   567,     0,     0,     0,     0,   -14,   255,     0, 
        577,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   495,     0,   596,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   495,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   596, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  3337, 
          0,     0,     0,   615,     0,  3391,   512,     0,     0,   567, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   532, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  -110,     0,     0,  -110,     0,     0, 
          0,   495,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   111,     0,     0,   652,  3137,    14,   264, 
          0,     0,     0,   579,     0,     0,    66,     0,   531,   476, 
          0,     0,     0,  -225,   479,  4121,     0,     0,     0,     0, 
       -127,   620,   623,     0,    51,   595,     0,  1033,   341,     0, 
        356,   488,     0,  -164,     0,     0,     0,     0,   533,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        270,     0,     0,     0,     0,   291,     0,     0,   597,     0, 
          0,  -180,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   411,     0,     0,     0,   502,     0,   475, 
          0,     0,     0,     0,     0,   664,     0, 
    );
    protected static $yyTable = array(10,
         10,    18,    10,    10,    10,    10,    10,    10,    10,    10, 
         62,   206,   198,   261,    60,   275,   251,    29,    30,    20, 
         10,    10,    10,    10,    10,    10,   214,   214,    39,    39, 
        214,   214,   214,   214,   214,   214,   214,   177,     1,   127, 
         18,    45,   366,   208,    39,   128,     9,   214,   214,   214, 
        214,   214,   214,   118,   118,    10,    10,   118,   118,   118, 
        118,   118,   118,   118,    82,    55,    56,    57,    58,    59, 
        327,    39,    39,     5,   118,   118,   118,   118,   118,   118, 
        214,   136,   214,   214,   136,    10,    10,    10,     5,    86, 
         45,   227,   227,    25,   272,   276,   294,    63,   136,   136, 
         39,   143,   192,   350,   289,   303,   367,   118,    39,   118, 
        118,   176,   214,   214,   214,    11,   174,   172,   225,   173, 
        171,   175,    83,    84,   225,   227,    26,   178,   179,    60, 
         91,   227,    78,   136,   167,    32,   169,    61,   176,   118, 
        118,   118,   190,   174,   172,    89,   173,   171,   175,    46, 
        152,   152,   109,   129,   152,   152,   152,   152,   152,   152, 
        152,   167,    27,   169,   185,   136,   352,    28,   130,    33, 
        109,   152,   152,   152,   152,   152,   152,   206,   206,   186, 
         35,   206,   206,   206,   206,   206,   206,   206,   110,    18, 
        164,   110,    41,   164,    42,    35,    38,    38,   206,   206, 
        206,   206,   206,   206,   208,   208,   152,   152,   208,   208, 
        208,   208,   208,   208,   208,     6,   166,   225,   225,   166, 
        365,    74,   193,   178,   179,   208,   208,   208,   208,   208, 
        208,   270,   167,   206,   206,   167,   176,   152,   152,    38, 
         38,   174,   172,    18,   173,   171,   175,   406,   407,   167, 
        167,   225,   207,   112,   225,   225,   112,   225,    62,    62, 
        208,   208,    60,    60,   206,   206,    47,    50,    38,   195, 
        195,   112,    10,    10,    10,    52,   196,   296,    54,    55, 
         56,    57,    58,    59,   167,    12,    13,    14,    15,    16, 
         17,   208,   208,    10,    36,    35,    71,    36,    35,    44, 
         45,   214,    10,    67,    72,    73,   113,   110,    74,   113, 
        110,   271,    36,    66,    75,    69,   167,   176,    60,   248, 
        214,   214,   174,   113,   113,   110,    76,   175,   118,    79, 
         69,    77,    80,     5,     5,     5,     5,     5,     5,   124, 
         90,   195,   143,    69,   144,   146,   187,   118,   118,   181, 
        182,    61,   183,     5,     5,   184,   188,   202,   113,   257, 
        128,   262,    10,    10,    10,    10,    10,    10,    10,    10, 
         10,   136,    10,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   263,   268,   177,   267,   280,   214, 
        214,   214,   214,   214,   214,   214,   214,   214,   286,   287, 
        214,   214,   214,   214,   214,   214,   214,   214,   214,   214, 
        214,   290,   293,   177,   301,   302,   118,   118,   118,   118, 
        118,   118,   118,   118,   118,   152,   322,   118,   118,   118, 
        118,   118,   118,   118,   118,   118,   118,   118,   328,   330, 
        249,   332,   329,   347,   152,    12,    13,    14,    15,    16, 
         17,   344,   206,   136,   136,   136,   348,   355,   356,   358, 
          6,     6,     6,     6,     6,     6,   359,   360,   361,   362, 
        363,   206,   364,   369,   170,   168,   178,   179,   374,   208, 
          6,     6,   380,   379,   382,   165,   166,   386,    12,    13, 
         14,    15,    16,    17,   394,   387,   400,   402,   208,   397, 
        403,   170,   168,   178,   179,   404,   411,     2,   413,   414, 
        419,   177,   422,   152,   152,   152,   152,   152,   152,   152, 
        152,   152,   167,    12,   152,   152,   152,   152,   152,   152, 
        152,   152,   152,   152,   152,   425,   426,   430,   432,    43, 
        206,   206,   206,   206,   206,   206,   206,   206,   206,   434, 
         22,   206,   206,   206,   206,   206,   206,   206,   206,   206, 
        206,   206,    20,   152,    48,   223,   158,   208,   208,   208, 
        208,   208,   208,   208,   208,   208,   160,   161,   208,   208, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,   200, 
        200,   225,   177,   200,   200,   200,   200,   200,   200,   200, 
        144,   178,   179,   112,   167,   167,   167,   108,   145,   112, 
        200,   200,   200,   200,   200,   200,   201,   201,    54,    60, 
        201,   201,   201,   201,   201,   201,   201,    18,    82,    55, 
         56,    57,    58,    59,    56,   112,    90,   201,   201,   201, 
        201,   201,   201,   199,   199,   200,   200,   199,   199,   199, 
        199,   199,   199,   199,   108,    88,    92,    88,    24,   191, 
        256,    49,   255,    48,   199,   199,   199,   199,   199,   199, 
        351,    87,   201,   201,   421,   345,   200,   200,   288,   420, 
        399,   114,   178,   179,   253,   274,    31,   202,   202,     0, 
          0,   202,   202,   202,   202,   202,   202,   202,     0,   199, 
        199,     0,     0,   201,   201,     0,     0,     0,   202,   202, 
        202,   202,   202,   202,   203,   203,     0,   123,   203,   203, 
        203,   203,   203,   203,   203,     0,     0,     0,     0,     0, 
        199,   199,     0,     0,     0,   203,   203,   203,   203,   203, 
        203,   198,   198,   202,   202,   198,   198,   198,   198,   198, 
        198,   198,     2,     2,     2,     2,     2,     2,     0,     0, 
          0,     0,   198,   198,   198,   198,   198,   198,     0,     0, 
        203,   203,     2,     2,   202,   202,     0,     0,     0,     0, 
          0,     0,   189,   189,     0,     0,   189,   189,   189,   189, 
        189,   189,   189,     2,   284,   285,     0,   198,   198,     0, 
          0,   203,   203,   189,   189,   189,   189,   189,   189,   190, 
        190,     0,     0,   190,   190,   190,   190,   190,   190,   190, 
          0,     0,     0,   357,     0,   326,     0,     0,   198,   198, 
        190,   190,   190,   190,   190,   190,   191,   191,   189,   189, 
        191,   191,   191,   191,   191,   191,   191,     0,     0,     0, 
          0,     0,     0,     0,     0,   346,     0,   191,   191,   191, 
        191,   191,   191,     0,   200,   190,   190,     0,   392,   189, 
        189,   396,    12,    13,    14,    15,    16,    17,     0,     0, 
          0,     0,     0,   200,     0,     0,     0,   372,     0,     0, 
        415,   201,   191,   191,     0,     0,   190,   190,     0,     0, 
          0,     0,     0,   423,     0,     0,     0,     0,     0,   427, 
        201,     0,   391,     0,     0,     0,     0,     0,   199,     0, 
          0,     0,     0,   191,   191,     0,     0,    90,     0,     0, 
          0,     0,   412,     0,     0,     0,     0,   199,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   200,   200,     0,     0,   200,   200,   200,   200, 
        200,     0,   202,   200,   200,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,     0,     0,     0,     0,     0,   201, 
        201,   202,     0,   201,   201,   201,   201,   201,     0,   203, 
        201,   201,   201,   201,   201,   201,   201,   201,   201,   201, 
        201,     0,     0,     0,     0,     0,   199,   199,   203,     0, 
        199,   199,   199,   199,   199,     0,     0,   199,   199,   199, 
        199,   199,   199,   199,   199,   199,   199,   199,     0,     0, 
          0,     0,     0,     0,     0,   198,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        202,   202,     0,     0,   202,   202,   202,   202,   202,     0, 
          0,   202,   202,   202,   202,   202,   202,   202,   202,   202, 
        202,   202,     0,     0,     0,     0,   189,   203,   203,     0, 
          0,   203,   203,   203,   203,   203,     0,     0,   203,   203, 
        203,   203,   203,   203,   203,   203,   203,   203,   203,     0, 
          0,     0,     0,   190,   198,   198,     0,     0,   198,   198, 
        198,   198,   198,     0,     0,   198,   198,   198,   198,   198, 
        198,   198,   198,   198,   198,   198,     0,     0,     0,     0, 
        191,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   189,   189,     0,     0,   189, 
        189,   189,   189,   189,     0,     0,   189,   189,   189,   189, 
        189,   189,   189,   189,   189,   189,   189,     0,     0,     0, 
          0,     0,   190,   190,     0,     0,   190,   190,   190,   190, 
        190,     0,     0,   190,   190,   190,   190,   190,   190,   190, 
        190,   190,   190,   190,     0,     0,     0,     0,     0,   191, 
        191,     0,     0,   191,   191,   191,   191,   191,     0,     0, 
        191,   191,   191,   191,   191,   191,   191,   191,   191,   191, 
        191,   176,   164,     0,     0,     0,   174,   172,     0,   173, 
        171,   175,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   167,   149,   169,   161,   176,   164, 
          0,     0,   194,   174,   172,     0,   173,   171,   175,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   167,   149,   169,   161,   176,   164,     0,   163,     0, 
        174,   172,     0,   173,   171,   175,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   167,   149, 
        169,   161,     0,     0,   168,   163,     0,   168,   162,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   164, 
          0,   168,   168,   174,   172,     0,   173,   171,   175,     0, 
          0,     0,   163,     0,     0,   162,     0,     0,     0,     0, 
          0,   167,   149,   169,   161,   176,   164,     0,   342,     0, 
        174,   172,     0,   173,   171,   175,   168,     0,     0,     0, 
          0,     0,   162,   324,     0,     0,     0,   343,   167,   149, 
        169,   161,   176,   164,     0,   163,     0,   174,   172,     0, 
        173,   171,   175,     0,     0,   370,     0,     0,   168,     0, 
          0,     0,     0,     0,   371,   167,   149,   169,   161,   378, 
          0,     0,   163,     0,     0,   162,   325,     0,     0,     0, 
          0,     0,     0,     0,     0,   176,   164,     0,     0,   381, 
        174,   172,     0,   173,   171,   175,     0,     0,     0,   163, 
          0,     0,   162,     0,     0,     0,     0,     0,   167,   149, 
        169,   161,   176,   164,     0,     0,   384,   174,   172,     0, 
        173,   171,   175,     0,     0,     0,     0,   429,     0,   162, 
        431,     0,     0,     0,   433,   167,   149,   169,   161,   176, 
        164,     0,   163,     0,   174,   172,     0,   173,   171,   175, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   167,   149,   169,   161,   177,   169,     0,   163, 
        169,     0,   162,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   169,   169,     0,     0,     0,     0, 
          0,     0,     0,   177,   170,     0,   163,   170,     0,   162, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   170,   170,     0,     0,     0,     0,     0,     0,   169, 
        177,     0,     0,     0,     0,     0,   162,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   170,     0,     0,     0, 
          0,   169,     0,     0,   170,   168,   178,   179,   150,   151, 
        152,   153,   155,   177,   168,   165,   166,   180,   147,   148, 
        154,   159,   158,   160,   156,   157,     0,     0,   170,     0, 
          0,   170,   168,   178,   179,   150,   151,   152,   153,   155, 
        177,     0,   165,   166,     0,   147,   148,   154,   159,   158, 
        160,   156,   157,     0,     0,     0,     0,     0,   170,   168, 
        178,   179,   150,   151,   152,   153,   155,   177,     0,   165, 
        166,     0,   147,   148,   154,   159,   158,   160,   156,   157, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   168,   168,   168,     0, 
          0,   170,   168,   178,   179,   150,   151,   152,   153,   155, 
        177,     0,   165,   166,     0,   147,   148,   154,   159,   158, 
        160,   156,   157,     0,     0,     0,     0,     0,   170,   168, 
        178,   179,   150,   151,   152,   153,   155,   177,     0,   165, 
        166,     0,   147,   148,   154,   159,   158,   160,   156,   157, 
          0,     0,     0,     0,     0,   170,   168,   178,   179,   150, 
        151,   152,   153,   155,   177,     0,   165,   166,     0,   147, 
        148,   154,   159,   158,   160,   156,   157,     0,     0,     0, 
          0,     0,     0,   383,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   170,   168, 
        178,   179,   150,   151,   152,   153,   155,   169,     0,   165, 
        166,     0,   147,   148,   154,   159,   158,   160,   156,   157, 
          0,     0,     0,     0,     0,   170,   168,   178,   179,   150, 
        151,   152,   153,   155,   170,     0,   165,   166,     0,   147, 
        148,   154,   159,   158,   160,   156,   157,     0,     0,     0, 
          0,     0,   170,   168,   178,   179,   150,   151,   152,   153, 
        155,     0,     0,   165,   166,     0,   147,   148,   154,   159, 
        158,   160,   156,   157,   176,   164,     0,     0,   385,   174, 
        172,     0,   173,   171,   175,     0,     0,     0,     0,   169, 
        169,   169,     0,     0,     0,     0,     0,   167,   149,   169, 
        161,   176,   164,     0,     0,   401,   174,   172,     0,   173, 
        171,   175,     0,     0,     0,     0,   170,   170,   170,     0, 
          0,     0,     0,     0,   167,   149,   169,   161,   176,   164, 
          0,   163,     0,   174,   172,     0,   173,   171,   175,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   428, 
          0,   167,   149,   169,   161,     0,     0,   171,   163,     0, 
        171,   162,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   152,   152,     0,   171,   171,   152,   152,     0,   152, 
        152,   152,     0,     0,     0,   163,     0,     0,   162,     0, 
          0,     0,     0,     0,   152,   152,   152,   152,   176,   164, 
          0,     0,     0,   174,   172,     0,   173,   171,   175,   171, 
          0,     0,     0,     0,     0,   162,     0,     0,     0,     0, 
          0,   167,   149,   169,   161,   176,   164,     0,   152,     0, 
        174,   172,     0,   173,   171,   175,     0,     0,     0,     0, 
          0,   171,     0,   173,     0,     0,   173,     0,   167,   149, 
        169,   161,     0,     0,     0,   163,     0,     0,   152,     0, 
        173,   173,     0,     0,     0,     0,     0,     0,   176,   164, 
          0,     0,     0,   174,   172,     0,   173,   171,   175,     0, 
          0,     0,   163,     0,     0,   162,     0,     0,     0,     0, 
          0,   167,   149,   169,   161,   173,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   187,     0, 
          0,   187,   162,   187,   187,   187,   187,     0,     0,     0, 
        172,     0,     0,   172,     0,   163,     0,   173,   187,   187, 
        187,   187,   187,   187,     0,     0,   188,   172,   172,   188, 
          0,   188,   188,   188,   188,     0,     0,     0,     0,   177, 
        139,     0,     0,   139,     0,   162,   188,   188,   188,   188, 
        188,   188,     0,   187,   187,     0,   135,   139,   139,   135, 
          0,     0,   172,     0,     0,     0,   177,     0,     0,   140, 
          0,     0,   140,   135,   135,     0,     0,     0,     0,     0, 
          0,   188,   188,     0,   187,   187,   140,   140,     0,     0, 
          0,     0,   139,   177,   172,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   135,     0, 
          0,     0,   188,   188,     0,     0,     0,     0,     0,     0, 
          0,   140,     0,     0,   139,     0,     0,   170,   168,   178, 
        179,   150,   151,   152,   153,   155,   152,   171,   165,   166, 
        135,   147,   148,   154,   159,   158,   160,   156,   157,     0, 
          0,     0,     0,   140,   170,   168,   178,   179,   150,   151, 
        152,   153,   155,   177,     0,   165,   166,     0,   147,   148, 
        154,   159,   158,   160,   156,   157,     0,     0,     0,     0, 
          0,   170,   168,   178,   179,   150,   151,   152,   153,   155, 
        177,     0,   165,   166,     0,   147,   148,   154,   159,   158, 
        160,   156,   157,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   171, 
        171,   171,     0,   173,   152,   152,   152,   152,   152,   152, 
        152,   152,   152,   177,    12,   152,   152,     0,   152,   152, 
        152,   152,   152,   152,   152,   152,     0,     0,     0,     0, 
          0,   170,   168,   178,   179,   150,   151,   152,   153,   155, 
          0,     0,   165,   166,     0,   147,   148,   154,   159,   158, 
        160,   156,   157,     0,     0,     0,     0,     0,   170,   168, 
        178,   179,   150,   151,   152,   153,   155,     0,     0,   165, 
        166,   187,     0,   148,   154,   159,   158,   160,   156,   157, 
        172,     0,     0,     0,     0,   173,   173,   173,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   188, 
          0,   170,   168,   178,   179,   150,   151,   152,   153,   155, 
        139,     0,   165,   166,     0,     0,     0,   154,   159,   158, 
        160,   156,   157,     0,     0,     0,   135,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   140, 
        187,   187,     0,     0,   187,   187,   187,   187,   187,     0, 
          0,   187,   187,   187,   187,   187,   187,   187,   187,   187, 
        187,   187,   172,   172,   172,     0,     0,     0,   188,   188, 
          0,     0,   188,   188,   188,   188,   188,     0,     0,   188, 
        188,   188,   188,   188,   188,   188,   188,   188,   188,   188, 
        192,     0,   139,   192,     0,     0,   192,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   135,   135, 
        192,   192,   192,   192,   192,   192,   179,     0,     0,   179, 
          0,   140,   179,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   179,   179,     0,   179, 
          0,   179,     0,     0,   181,   192,   192,   181,     0,     0, 
        181,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   181,   181,     0,   181,     0,   181, 
          0,   179,   179,   176,   164,     0,   192,   192,   174,   172, 
          0,   173,   171,   175,   180,     0,     0,   180,     0,     0, 
        180,     0,     0,     0,     0,     0,   167,     0,   169,   181, 
        181,     0,   179,   179,   180,   180,     0,   180,     0,   180, 
          0,     0,   182,     0,     0,   182,     0,     0,   182,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        181,   181,   182,   182,     0,   182,     0,   182,   194,   180, 
        180,   194,     0,     0,   194,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   194,   194, 
          0,   194,     0,   194,     0,     0,     0,   182,   182,     0, 
        180,   180,     0,     0,     0,     0,     0,     0,     0,     0, 
        183,     0,     0,   183,     0,     0,   183,     0,     0,     0, 
          0,     0,     0,   194,   194,     0,     0,     0,   182,   182, 
        183,   183,     0,   183,     0,   183,   184,     0,     0,   184, 
          0,     0,   184,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   194,   194,   184,   184,     0,   184, 
          0,   184,     0,     0,   195,   183,   183,   195,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   195,   195,     0,   195,   193,   195,     0,   193,     0, 
          0,   184,   184,     0,     0,     0,   183,   183,     0,     0, 
          0,     0,   193,   193,     0,   193,     0,   193,   134,     0, 
          0,   134,     0,   192,     0,     0,   195,   195,     0,     0, 
          0,     0,   184,   184,     0,   134,   134,     0,   134,     0, 
        134,     0,     0,     0,     0,     0,     0,   193,     0,   179, 
          0,     0,     0,     0,     0,     0,     0,   195,   195,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        134,     0,     0,     0,     0,     0,     0,   181,   193,   193, 
          0,     0,     0,     0,     0,     0,     0,     0,   177,     0, 
          0,     0,   192,   192,     0,     0,   192,   192,   192,   192, 
        192,     0,   134,   192,   192,   192,   192,   192,   192,   192, 
        192,   192,   192,   192,     0,     0,     0,   180,     0,     0, 
          0,     0,   179,   179,   179,   179,   179,     0,     0,   179, 
        179,   179,   179,   179,   179,   179,   179,   179,   179,   179, 
          0,     0,     0,     0,     0,   182,     0,     0,     0,     0, 
        181,   181,   181,   181,   181,     0,     0,   181,   181,   181, 
        181,   181,   181,   181,   181,   181,   181,   181,     0,     0, 
          0,   194,     0,     0,     0,     0,   170,   168,   178,   179, 
          0,     0,     0,     0,     0,     0,     0,   165,   166,     0, 
        180,   180,   180,   180,   180,     0,     0,   180,   180,   180, 
        180,   180,   180,   180,   180,   180,   180,   180,     0,     0, 
          0,     0,     0,   183,     0,     0,     0,     0,   182,   182, 
        182,   182,   182,     0,     0,   182,   182,   182,   182,   182, 
        182,   182,   182,   182,   182,   182,     0,     0,     0,   184, 
          0,     0,     0,     0,   194,   194,   194,   194,   194,     0, 
          0,     0,     0,   194,   194,   194,   194,   194,   194,   194, 
        194,   194,     0,     0,   195,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   193,   183,   183,   183,   183, 
        183,     0,     0,     0,     0,   183,   183,   183,   183,   183, 
        183,   183,   183,   183,     0,     0,     0,     0,   134,     0, 
          0,     0,   184,   184,   184,   184,   184,     0,     0,     0, 
          0,   184,   184,   184,   184,   184,   184,   184,   184,   184, 
          0,     0,     0,     0,     0,     0,     0,   195,   195,   195, 
        195,   195,     0,     0,     0,     0,   195,   195,   195,   195, 
        195,   195,   195,   195,   195,     0,     0,     0,   193,   193, 
        193,   193,   193,     0,     0,     0,     0,   193,   193,   193, 
        193,   193,   193,   193,   193,   193,     0,     0,     0,     0, 
          0,   134,   134,   134,   134,   134,     0,     0,     0,     0, 
        134,   134,   134,   134,   134,   134,   134,   134,   134,    40, 
        176,   164,    43,    43,     0,   174,   172,     0,   173,   171, 
        175,     0,   196,     0,     0,   196,    43,     0,    43,     0, 
          0,   197,     0,   167,   197,   169,   176,   164,     0,   196, 
        196,   174,   172,    43,   173,   171,   175,   174,   197,   197, 
        174,   175,     0,     0,   175,   176,    43,     0,   176,   167, 
        177,   169,     0,   177,   174,   174,     0,   163,   175,   175, 
          0,     0,   176,   176,   196,     0,     0,   177,   177,     0, 
          0,     0,     0,   197,     0,     0,     0,     0,     0,     0, 
          0,   178,     0,   163,   178,     0,     0,   162,     0,   174, 
          0,     0,   185,   175,     0,   185,   196,   176,   178,   178, 
          0,     0,   177,     0,     0,   197,    43,     0,     0,   185, 
        185,     0,     0,     0,   186,     0,     0,   186,     0,     0, 
          0,   174,     0,     0,     0,   175,     0,     0,     0,   176, 
          0,   186,   186,   178,   177,     0,     0,     0,     0,     0, 
          0,     0,     0,    43,   185,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   178,   186,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   185,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   186,   104, 
          0,     0,     0,     0,     0,     0,   104,     0,     0,   104, 
          0,   104,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   104,     0,     0,     0,     0, 
        104,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   101,     0,     0,     0,    43, 
          0,     0,    97,   100,     0,    99,     0,   100,   104,     0, 
        100,     0,     0,   100,     0,   100,     0,     0,     0,     0, 
         98,     0,     0,     0,     0,   177,   107,     0,     0,   100, 
          0,     0,     0,     0,   100,     0,     0,     0,     0,   104, 
          0,   104,   104,     0,     0,     0,    43,     0,     0,     0, 
          0,   177,   196,     0,    39,     0,     0,     0,     0,     0, 
          0,   197,   100,     0,    43,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   174,     0,     0, 
          0,   175,     0,     0,     0,   176,     0,     0,   102,     0, 
        177,     0,     0,   100,     0,   100,   100,   101,     0,     0, 
          0,     0,     0,     0,    97,     0,     0,    99,     0,   100, 
          0,     0,     0,   170,   168,   178,   179,     0,     0,     0, 
          0,   178,     0,   315,   165,   166,     0,    43,   107,     0, 
          0,     0,   185,     0,   196,   196,   196,     0,     0,   170, 
        168,   178,   179,   197,   197,   197,     0,     0,     0,     0, 
        165,   166,     0,     0,   186,     0,    39,     0,     0,   174, 
        174,   174,     0,   175,   175,   175,     0,   176,   176,   176, 
          0,     0,   177,   177,   177,     0,   104,   104,   104,   104, 
        104,   104,     0,     0,     0,     0,     0,   316,     0,     0, 
        102,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   178,   178,   178,     0,     0,     0,     0, 
          0,     0,     0,     0,   185,   185,   185,     0,     0,     0, 
          0,     0,   108,    55,    56,    57,    58,    59,     0,   104, 
        100,   100,   100,   100,   100,   100,   186,   186,   186,     0, 
          0,   101,     0,     0,     0,     0,     0,     0,    97,   104, 
        104,    99,     0,   100,     0,     0,   104,   104,   104,   104, 
          0,     0,   104,     0,     0,     0,     0,     0,     0,   222, 
          0,     0,   107,     0,     0,   106,   104,   104,   104,   104, 
          0,   104,   104,   100,     0,     0,   104,   104,   104,   104, 
        104,     0,     0,     0,     0,    61,   109,     0,     0,     0, 
         39,     0,   110,   100,   100,     0,     0,     0,   105,     0, 
        100,   100,   100,   100,     0,     0,   100,     0,   104,   104, 
          0,     0,     0,     0,   108,    55,    56,    57,    58,    59, 
        100,   100,   100,   100,   102,   100,   100,     0,     0,     0, 
        100,     0,   100,   100,   100,     0,     0,     0,     0,     0, 
        101,     0,     0,     0,     0,     0,     0,    97,     0,   101, 
         99,     0,   100,     0,   103,   104,    97,     0,     0,    99, 
          0,   100,   100,   100,     0,     0,     0,   106,   224,     0, 
          0,   107,     0,     0,     0,     0,     0,   234,     0,   101, 
        107,     0,     0,     0,     0,     0,    97,    61,   109,    99, 
          0,   100,     0,     0,   110,   304,   305,   306,     0,    39, 
        105,     0,     0,     0,     0,     0,     0,   236,    39,     0, 
        107,     0,     0,     0,   307,   308,   309,   310,     0,   311, 
        312,     0,     0,     0,   313,     0,   314,     0,     0,     0, 
          0,     0,     0,   102,     0,     0,     0,   101,    39,     0, 
          0,     0,   102,     0,    97,     0,     0,    99,     0,   100, 
          0,     0,     0,     0,     0,     0,   103,   104,   108,    55, 
         56,    57,    58,    59,     0,     0,   101,     0,   107,     0, 
          0,     0,   102,    97,     0,     0,    99,     0,   100,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    39,   107,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   106,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    39,     0,     0,     0,     0, 
        102,    61,   109,     0,     0,     0,     0,     0,   110,     0, 
          0,     0,     0,     0,   105,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   102, 
          0,     0,     0,     0,     0,     0,     0,   108,    55,    56, 
         57,    58,    59,     0,     0,     0,   108,    55,    56,    57, 
         58,    59,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        103,   104,     0,     0,     0,     0,   108,    55,    56,    57, 
         58,    59,     0,     0,     0,     0,     0,     0,     0,     0, 
        106,     0,     0,     0,     0,     0,     0,     0,     0,   106, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         61,   109,     0,     0,     0,     0,     0,   110,     0,    61, 
        109,     0,     0,   105,     0,     0,   110,     0,     0,   106, 
          0,     0,   105,     0,   131,    55,    56,    57,    58,    59, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    61, 
        109,     0,     0,     0,     0,     0,   110,     0,     0,     0, 
          0,     0,   105,   108,    55,    56,    57,    58,    59,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   103, 
        104,     0,     0,     0,     0,     0,     0,   106,   103,   104, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   132,   109,     0, 
          0,     0,     0,     0,   110,     0,   106,     0,   103,   104, 
        105,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    61,   109,     0,     0, 
          0,     0,     0,   110,     0,   112,     0,     0,     0,   105, 
          0,     0,     0,     0,     0,     0,     0,   133,     0,   134, 
        135,   136,   137,   138,   139,     0,   141,   142,     0,     0, 
          0,     0,     0,     0,     0,     0,   103,   104,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   103,   104,   213,   214,   215, 
        216,   217,   218,   219,   220,   221,   223,   225,   226,   227, 
        228,   229,   231,   232,   233,   235,   237,   238,   239,   240, 
        241,   242,   243,   244,   245,   246,   247,     0,     0,     0, 
        250,   229,     0,   252,     0,     0,     0,     0,   258,     0, 
          0,     0,   259,   260,     0,     0,     0,     0,     0,     0, 
          0,   264,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   278,     0,   279,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   281,     0,   282,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   264,   264,     0,     0,     0,     0,     0,   229, 
          0,     0,   291,   292,     0,     0,     0,     0,     0,     0, 
        295,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   264,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   264,     0,     0,     0,     0,     0,     0, 
          0,   229,     0,   354,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   264,   373,     0,   375,     0, 
          0,   376,   377,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        264,     0,   393,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        264,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   424, 
    );
    protected static $yyCheck = array(37,
         38,   123,    40,    41,    42,    43,    44,    45,    46,    47, 
        125,    91,   140,   194,   125,   260,   181,   300,   301,     6, 
         58,    59,    60,    61,    62,    63,    37,    38,    92,    92, 
         41,    42,    43,    44,    45,    46,    47,   312,   320,   334, 
         35,    44,    59,   123,    59,   340,   260,    58,    59,    60, 
         61,    62,    63,    37,    38,    93,    94,    41,    42,    43, 
         44,    45,    46,    47,   260,   261,   262,   263,   264,   265, 
        296,    92,    92,   321,    58,    59,    60,    61,    62,    63, 
         91,    41,    93,    94,    44,   123,   124,   125,    35,   260, 
         93,   300,   301,    92,   123,   340,   277,    47,    58,    59, 
         92,    40,    41,   329,   269,   286,   123,    91,   123,    93, 
         94,    37,   123,   124,   125,     5,    42,    43,   334,    45, 
         46,    47,    72,    73,   340,   334,    59,   402,   403,   300, 
        125,   340,    67,    93,    60,    25,    62,   333,    37,   123, 
        124,   125,   129,    42,    43,    80,    45,    46,    47,    39, 
         37,    38,    41,    44,    41,    42,    43,    44,    45,    46, 
         47,    60,    59,    62,    44,   125,   331,    91,    59,    64, 
         59,    58,    59,    60,    61,    62,    63,    37,    38,    59, 
         44,    41,    42,    43,    44,    45,    46,    47,    41,   311, 
         41,    44,    93,    44,    44,    59,   260,   260,    58,    59, 
         60,    61,    62,    63,    37,    38,    93,    94,    41,    42, 
         43,    44,    45,    46,    47,    35,    41,   300,   301,    44, 
        348,    40,    41,   402,   403,    58,    59,    60,    61,    62, 
         63,   260,    41,    93,    94,    44,    37,   124,   125,   260, 
        260,    42,    43,    35,    45,    46,    47,   373,   374,    58, 
         59,   334,   332,    41,   300,   301,    44,   340,   373,   374, 
         93,    94,   373,   374,   124,   125,    40,   310,   260,   333, 
        333,    59,   310,   311,   312,   310,   340,   340,   260,   261, 
        262,   263,   264,   265,    93,   280,   281,   282,   283,   284, 
        285,   124,   125,   331,    41,    41,   123,    44,    44,    36, 
         37,   312,   340,   311,    61,    61,    41,    41,    40,    44, 
         44,   340,    59,    50,    41,    52,   125,    37,   300,   340, 
        331,   332,    42,    58,    59,    59,    41,    47,   312,   123, 
         67,    44,    44,   280,   281,   282,   283,   284,   285,   260, 
        335,   333,    40,    80,    40,   410,   260,   331,   332,    44, 
         41,   333,    44,   300,   301,    61,    61,   340,    93,    40, 
        340,    40,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   331,   410,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    40,    44,   312,    41,    58,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    41,   123, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    40,    40,   312,    41,    41,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    93,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    41,    44, 
        177,   123,   340,    41,   331,   280,   281,   282,   283,   284, 
        285,   125,   312,   413,   414,   415,    58,    40,    40,    40, 
        280,   281,   282,   283,   284,   285,    59,    59,    40,    40, 
        125,   331,    41,    59,   400,   401,   402,   403,   361,   312, 
        300,   301,    59,   125,    40,   411,   412,   125,   280,   281, 
        282,   283,   284,   285,   340,   344,    59,   413,   331,   123, 
         41,   400,   401,   402,   403,   371,    40,    35,    59,   340, 
        125,   312,    41,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   331,   410,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    58,   340,    41,   123,    93, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   125, 
        123,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   123,    41,    41,   123,    41,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    41,    41,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    37, 
         38,   340,   312,    41,    42,    43,    44,    45,    46,    47, 
         41,   402,   403,    58,   413,   414,   415,    41,    41,    93, 
         58,    59,    60,    61,    62,    63,    37,    38,    41,   125, 
         41,    42,    43,    44,    45,    46,    47,    35,   260,   261, 
        262,   263,   264,   265,    41,    59,   125,    58,    59,    60, 
         61,    62,    63,    37,    38,    93,    94,    41,    42,    43, 
         44,    45,    46,    47,    59,    41,   125,    79,     7,   129, 
        185,    42,   184,    41,    58,    59,    60,    61,    62,    63, 
        330,    77,    93,    94,   411,   320,   124,   125,   268,   410, 
        390,    85,   402,   403,   183,   211,    23,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    37,    38,    -1,   125,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    37,    38,    93,    94,    41,    42,    43,    44,    45, 
         46,    47,   280,   281,   282,   283,   284,   285,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         93,    94,   300,   301,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    46,    47,   321,   262,   263,    -1,    93,    94,    -1, 
         -1,   124,   125,    58,    59,    60,    61,    62,    63,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    46,    47, 
         -1,    -1,    -1,   336,    -1,   293,    -1,    -1,   124,   125, 
         58,    59,    60,    61,    62,    63,    37,    38,    93,    94, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   323,    -1,    58,    59,    60, 
         61,    62,    63,    -1,   312,    93,    94,    -1,   381,   124, 
        125,   384,   280,   281,   282,   283,   284,   285,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,   355,    -1,    -1, 
        403,   312,    93,    94,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,    -1,   422, 
        331,    -1,   380,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,   335,    -1,    -1, 
         -1,    -1,   400,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   331,    -1,   404,   405,   406,   407,   408,    -1,   312, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   331,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,   331,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,   331,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    94,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    41,    94,    -1,    44,   124,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    58,    59,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    94,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,   316,    -1, 
         42,    43,    -1,    45,    46,    47,    93,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    59,    60,    61, 
         62,    63,    37,    38,    -1,    94,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,   353,    -1,    -1,   125,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,   367, 
         -1,    -1,    94,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    94, 
         -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,   425,    -1,   124, 
        428,    -1,    -1,    -1,   432,    60,    61,    62,    63,    37, 
         38,    -1,    94,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,   312,    41,    -1,    94, 
         44,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    41,    -1,    94,    44,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
        312,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,   331,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,   125,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   331,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,   413,   414,   415,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    94,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    60,    61,    62,    63,    -1,    -1,    41,    94,    -1, 
         44,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    58,    59,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    93, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    94,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,   125,    -1,    41,    -1,    -1,    44,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    94,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,   124,    43,    44,    45,    46,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    94,    -1,   125,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    38,    58,    59,    41, 
         -1,    43,    44,    45,    46,    -1,    -1,    -1,    -1,   312, 
         41,    -1,    -1,    44,    -1,   124,    58,    59,    60,    61, 
         62,    63,    -1,    93,    94,    -1,    41,    58,    59,    44, 
         -1,    -1,    93,    -1,    -1,    -1,   312,    -1,    -1,    41, 
         -1,    -1,    44,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,   124,   125,    58,    59,    -1,    -1, 
         -1,    -1,    93,   312,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,   331,   411,   412, 
        125,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,   125,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,   331,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,   410,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   331,    -1,   415,   416,   417,   418,   419,   420,   421, 
        331,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        331,    -1,   411,   412,    -1,    -1,    -1,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   413,   414,   415,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         38,    -1,   413,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414, 
         58,    59,    60,    61,    62,    63,    38,    -1,    -1,    41, 
         -1,   413,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    38,    93,    94,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    93,    94,    37,    38,    -1,   124,   125,    42,    43, 
         -1,    45,    46,    47,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    93, 
         94,    -1,   124,   125,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    -1,    61,    -1,    63,    38,    93, 
         94,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    93,    94,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,   124,   125, 
         58,    59,    -1,    61,    -1,    63,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    41,    93,    94,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    41,    63,    -1,    44,    -1, 
         -1,    93,    94,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    41,    -1, 
         -1,    44,    -1,   331,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,   331,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,   125,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    33, 
         37,    38,    36,    37,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    41,    -1,    -1,    44,    50,    -1,    52,    -1, 
         -1,    41,    -1,    60,    44,    62,    37,    38,    -1,    58, 
         59,    42,    43,    67,    45,    46,    47,    41,    58,    59, 
         44,    41,    -1,    -1,    44,    41,    80,    -1,    44,    60, 
         41,    62,    -1,    44,    58,    59,    -1,    94,    58,    59, 
         -1,    -1,    58,    59,    93,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    94,    44,    -1,    -1,   124,    -1,    93, 
         -1,    -1,    41,    93,    -1,    44,   125,    93,    58,    59, 
         -1,    -1,    93,    -1,    -1,   125,   140,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,   125,    -1,    -1,    -1,   125,    -1,    -1,    -1,   125, 
         -1,    58,    59,    93,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   177,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    33, 
         -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    59,    -1,    -1,    -1,    -1, 
         64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,   283, 
         -1,    -1,    40,    33,    -1,    43,    -1,    45,    92,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         58,    -1,    -1,    -1,    -1,   312,    64,    -1,    -1,    59, 
         -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,   123, 
         -1,   125,   126,    -1,    -1,    -1,   330,    -1,    -1,    -1, 
         -1,   312,   331,    -1,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    92,    -1,   348,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,   331,    -1,    -1,   126,    -1, 
        331,    -1,    -1,   123,    -1,   125,   126,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,    -1,   400,   401,   402,   403,    -1,    -1,    -1, 
         -1,   331,    -1,    59,   411,   412,    -1,   411,    64,    -1, 
         -1,    -1,   331,    -1,   413,   414,   415,    -1,    -1,   400, 
        401,   402,   403,   413,   414,   415,    -1,    -1,    -1,    -1, 
        411,   412,    -1,    -1,   331,    -1,    92,    -1,    -1,   413, 
        414,   415,    -1,   413,   414,   415,    -1,   413,   414,   415, 
         -1,    -1,   413,   414,   415,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,   313, 
        260,   261,   262,   263,   264,   265,   413,   414,   415,    -1, 
         -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,   333, 
        334,    43,    -1,    45,    -1,    -1,   340,   341,   342,   343, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    61, 
         -1,    -1,    64,    -1,    -1,   313,   360,   361,   362,   363, 
         -1,   365,   366,   313,    -1,    -1,   370,   371,   372,   373, 
        374,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         92,    -1,   340,   333,   334,    -1,    -1,    -1,   346,    -1, 
        340,   341,   342,   343,    -1,    -1,   346,    -1,   402,   403, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
        360,   361,   362,   363,   126,   365,   366,    -1,    -1,    -1, 
        370,    -1,   372,   373,   374,    -1,    -1,    -1,    -1,    -1, 
         33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    33, 
         43,    -1,    45,    -1,   402,   403,    40,    -1,    -1,    43, 
         -1,    45,   402,   403,    -1,    -1,    -1,   313,    61,    -1, 
         -1,    64,    -1,    -1,    -1,    -1,    -1,    61,    -1,    33, 
         64,    -1,    -1,    -1,    -1,    -1,    40,   333,   334,    43, 
         -1,    45,    -1,    -1,   340,   341,   342,   343,    -1,    92, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    61,    92,    -1, 
         64,    -1,    -1,    -1,   360,   361,   362,   363,    -1,   365, 
        366,    -1,    -1,    -1,   370,    -1,   372,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,    33,    92,    -1, 
         -1,    -1,   126,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    33,    -1,    64,    -1, 
         -1,    -1,   126,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    92,    64,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1, 
        126,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        333,   334,    -1,    -1,    -1,    -1,    -1,   340,    -1,   333, 
        334,    -1,    -1,   346,    -1,    -1,   340,    -1,    -1,   313, 
         -1,    -1,   346,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,   313,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,   313,    -1,   402,   403, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    85,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,    99, 
        100,   101,   102,   103,   104,    -1,   106,   107,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,   147,   148,   149, 
        150,   151,   152,   153,   154,   155,   156,   157,   158,   159, 
        160,   161,   162,   163,   164,   165,   166,   167,   168,   169, 
        170,   171,   172,   173,   174,   175,   176,    -1,    -1,    -1, 
        180,   181,    -1,   183,    -1,    -1,    -1,    -1,   188,    -1, 
         -1,    -1,   192,   193,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   222,    -1,   224,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   234,    -1,   236,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   262,   263,    -1,    -1,    -1,    -1,    -1,   269, 
         -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1, 
        280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   323,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,   333,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   355,   356,    -1,   358,    -1, 
         -1,   361,   362,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        380,    -1,   382,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   417, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', NULL, NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 178 "grammar/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 193 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 193 "grammar/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 204 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 205 "grammar/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 209 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 216 "grammar/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 221 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 227 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 227 "grammar/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 236 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 236 "grammar/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 247 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 248 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 252 "grammar/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 253 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 257 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 258 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 262 "grammar/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 263 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 267 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 268 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 269 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 273 "grammar/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 274 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 278 "grammar/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 279 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 285 "grammar/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 295 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 301 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 302 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 308 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 308 "grammar/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 322 "grammar/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 323 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 328 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 329 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 333 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 334 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 338 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 342 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 347 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 355 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 356 "grammar/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 360 "grammar/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 361 "grammar/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 52:  #line 365 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 53:  #line 366 "grammar/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 54:  #line 370 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 55:  #line 371 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 56:  #line 375 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 57:  #line 376 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 58:  #line 380 "grammar/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 59:  #line 381 "grammar/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 60:  #line 389 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 62:  #line 394 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 63:  #line 395 "grammar/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 64:  #line 399 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 65:  #line 399 "grammar/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 66:  #line 402 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 67:  #line 402 "grammar/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 68:  #line 407 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 69:  #line 407 "grammar/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 70:  #line 417 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 71:  #line 417 "grammar/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 422 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 73:  #line 422 "grammar/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 426 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 75:  #line 426 "grammar/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 76:  #line 430 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 77:  #line 430 "grammar/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 78:  #line 434 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 79:  #line 434 "grammar/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 80:  #line 439 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 82:  #line 440 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 84:  #line 441 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 85:  #line 441 "grammar/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 87:  #line 445 "grammar/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 88:  #line 449 "grammar/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 89:  #line 450 "grammar/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 90:  #line 454 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 459 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 93:  #line 460 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 94:  #line 464 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 95:  #line 464 "grammar/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 96:  #line 468 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 97:  #line 468 "grammar/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 98:  #line 474 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 99:  #line 475 "grammar/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 100:  #line 479 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 101:  #line 480 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 102:  #line 480 "grammar/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 104:  #line 489 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 105:  #line 490 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 106:  #line 494 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 107:  #line 494 "grammar/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 108:  #line 504 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 110:  #line 509 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 111:  #line 510 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 112:  #line 514 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 519 "grammar/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 524 "grammar/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 116:  #line 532 "grammar/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 117:  #line 535 "grammar/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 118:  #line 538 "grammar/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 120:  #line 545 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 121:  #line 545 "grammar/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 122:  #line 551 "grammar/php.jay"
    { $p= $yyLex->position; } break;

    case 123:  #line 551 "grammar/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 124:  #line 555 "grammar/php.jay"
    { $p= $yyLex->position; } break;

    case 125:  #line 555 "grammar/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 126:  #line 565 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 127:  #line 565 "grammar/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 128:  #line 574 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 129:  #line 577 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 130:  #line 580 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 131:  #line 583 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 132:  #line 586 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 133:  #line 589 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 134:  #line 593 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 135:  #line 599 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 136:  #line 605 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 137:  #line 611 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 138:  #line 616 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 139:  #line 621 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 140:  #line 624 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 141:  #line 627 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 142:  #line 630 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 143:  #line 633 "grammar/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 144:  #line 644 "grammar/php.jay"
    { $yyVal= array(); } break;

    case 146:  #line 649 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 147:  #line 650 "grammar/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 148:  #line 654 "grammar/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 150:  #line 659 "grammar/php.jay"
    { $p= $yyLex->position; } break;

    case 151:  #line 659 "grammar/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 152:  #line 663 "grammar/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 153:  #line 669 "grammar/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 154:  #line 670 "grammar/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 155:  #line 671 "grammar/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 156:  #line 672 "grammar/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 157:  #line 673 "grammar/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 158:  #line 677 "grammar/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 159:  #line 680 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 160:  #line 683 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 161:  #line 686 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 162:  #line 692 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 163:  #line 693 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 164:  #line 697 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 166:  #line 702 "grammar/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 167:  #line 706 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 168:  #line 707 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 169:  #line 708 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 170:  #line 709 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 171:  #line 710 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 172:  #line 711 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 173:  #line 712 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 174:  #line 713 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 175:  #line 714 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 176:  #line 715 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 716 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 178:  #line 717 "grammar/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 179:  #line 721 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 722 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 723 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 724 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 725 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 726 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 727 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 186:  #line 728 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 187:  #line 732 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 733 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 734 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 735 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 736 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 737 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 193:  #line 738 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 739 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 740 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 741 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 742 "grammar/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 746 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 747 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 200:  #line 748 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 749 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 750 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 751 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 755 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 205:  #line 756 "grammar/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 206:  #line 761 "grammar/php.jay"
    { $yyVal= NULL; } break;

    case 208:  #line 766 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 209:  #line 767 "grammar/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 210:  #line 771 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 211:  #line 771 "grammar/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 212:  #line 774 "grammar/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 213:  #line 774 "grammar/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 214:  #line 777 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 215:  #line 780 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 216:  #line 783 "grammar/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 217:  #line 786 "grammar/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 218:  #line 786 "grammar/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 799 "grammar/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 222:  #line 803 "grammar/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 223:  #line 807 "grammar/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 224:  #line 808 "grammar/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 225:  #line 814 "grammar/php.jay"
    { $yyVal= 0; } break;

    case 226:  #line 815 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 227:  #line 819 "grammar/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 228:  #line 820 "grammar/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 229:  #line 824 "grammar/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 230:  #line 825 "grammar/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 231:  #line 826 "grammar/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 232:  #line 827 "grammar/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 233:  #line 828 "grammar/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 234:  #line 829 "grammar/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2330 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
