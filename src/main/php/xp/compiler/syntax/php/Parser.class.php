<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         83,    83,    84,    84,    85,    38,    87,    38,    25,    25, 
         25,    25,    25,    25,    86,    86,    86,    86,    88,    88, 
         90,    90,    89,    78,    78,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    79,    79,    79,    79,    79, 
         79,    79,    79,    80,    80,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    81,    81,    81,    81,    81,    81, 
         82,    82,    73,    73,    91,    91,    93,    92,    94,    92, 
         92,    92,    92,    95,    92,    96,    92,    31,    31,    10, 
         97,    17,    17,    33,    33,    98,    98,    99,    99,    99, 
         99,    99,    99, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     2,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     2,     4,     1,     1,     1,     1,     1, 
          5,     3,     3,     3,     3,     4,     4,     2,     7,     4, 
          0,     1,     1,     3,     2,     1,     0,     5,     1,     1, 
          1,     1,     1,     1,     0,     1,     1,     1,     1,     3, 
          0,     1,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     4,     4,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     2,     2,     2,     2,     2,     2, 
          2,     2,     0,     1,     1,     2,     0,     4,     0,     4, 
          2,     2,     4,     0,     6,     0,     4,     1,     1,     1, 
          1,     1,     3,     0,     1,     1,     2,     1,     1,     1, 
          1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   238,   240,   239,   241,   243,   242,     0,     1,     0, 
         42,   235,     0,     8,     0,     4,     9,     0,    14,    16, 
        237,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   230,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   164,   160,   163,   161,   162, 
          0,     0,     0,   156,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   157,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   233,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   124,     0,     0, 
          0,     0,     0,   136,   137,   138,   139,   140,   166,     0, 
          0,     0,     0,   169,    15,     0,    27,     0,     0,     0, 
          0,    29,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   132,   148,   130,     0,     0,   128,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        211,   212,   226,   217,     0,   219,   123,   214,     0,    53, 
          0,     0,   158,     0,     0,     0,    31,     0,     0,    33, 
          0,    30,     0,     0,     0,     0,   231,     0,   228,     0, 
        127,   229,     0,     0,     0,     0,   153,   125,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   145,   144,     0,     0,     0,   222, 
          0,     0,   216,   115,     0,     0,   172,   170,   159,    34, 
         32,    37,     0,     0,     0,   150,     0,     0,     0,     0, 
        155,     0,     0,     0,   120,     0,     0,     0,     0,     0, 
          0,     0,     0,   224,     0,     0,     0,     0,     0,     0, 
          0,   154,     0,   129,     0,   227,   218,     0,   223,   220, 
          0,     0,     0,    59,     0,   119,   118,   131,    68,     0, 
         88,    72,    76,    78,    74,    84,    86,    70,    80,    91, 
          0,     0,     0,    65,     0,   102,     0,     0,    63,     0, 
          0,     0,     0,    82,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    90,   149,    67,   121,   225,     0, 
          0,    62,    61,     0,     0,     0,     0,     0,     0,     0, 
         85,    87,     0,     0,   103,    40,    56,     0,    38,    69, 
          0,    89,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    57,   110,    83,   107, 
          0,     0,    77,     0,     0,     0,     0,     0,     0,   109, 
          0,     0,     0,     0,   105,    71,    98,   100,     0,    95, 
          0,     0,     0,    79,    93,    75,     0,     0,     0,    81, 
         97,     0,     0,   106,     0,     0,     0,    73,     0,   101, 
          0,    99,     0,     0,   111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   119,   100,   219, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   137, 
        103,   104,   138,   210,    64,   342,   322,   307,   371,   389, 
        323,    34,    21,    35,    65,    66,    67,   121,   122,   343, 
        324,   325,   344,   345,   346,   247,   353,   362,   426,   356, 
        359,   416,   357,   358,   363,   429,   375,   409,   360,   361, 
        355,   430,   431,   438,   439,   437,   410,   411,   419,   123, 
        221,   296,   197,   158,   153,   229,   223,   124,   125,   126, 
        127,   128,   225,   226,   227,   132,    91,   133,   134,   278, 
        198,   199,   268,   272,   318,   267,   222,    22,    23, 
    );
    protected static $yySindex = array(         -274,
          0,     0,  -270,  -192,  -192,   130,  -270,     0,   -19,    23, 
         41,     0,     0,     0,     0,     0,     0,    44,     0,  -109, 
          0,     0,   -62,     0,  -192,     0,     0,    85,     0,     0, 
          0,     0,   -80,    69,   109,   -80,   -80,     0,  -192,   129, 
        -62,    85,     0,  -139,  -121,     0,   -25,     0,     0,   -80, 
       -115,   -80,   101,   -80,   181,     0,     0,     0,     0,     0, 
        201,   247,  -138,     0,   248,   265,   255,     0,     0,   -80, 
        188,   272,     0,     0,   283,   473,   473,     0,  -249,     0, 
          0,  -230,     0,     0,   -80,    -4,  4140,     0,     0,     0, 
       3884,     0,     0,   181,     0,    13,     0,    65,     0,  -295, 
          0,     0,     0,    48,  4170,  4140,  4140,  4140,  4140,  4140, 
       4140,  4140,     0,  4140,  4140,   296,   298,     0,   -65,  2378, 
         -8,   305,   307,     0,     0,     0,     0,     0,     0,  1343, 
        307,   308,   309,     0,     0,   293,     0,    83,    98,   300, 
        130,     0,   175,   207,  1381,  1493,  -118,  -118,  -284,  -118, 
       -118,  -118,    60,     0,     0,     0,    28,    -8,     0,  4140, 
       4140,  4140,  4140,  4140,  4140,  4140,  4140,  4140,  3985,  3993, 
       4140,  4140,  4140,  4140,  4140,  4140,  4140,  4015,  4110,  4140, 
       4140,  4140,  4140,  4140,  4140,  4140,  4140,  4140,  4140,   -67, 
          0,     0,     0,     0,   -54,     0,     0,     0,    -8,     0, 
       4140,  4140,     0,  4140,   232,    65,     0,   329,  4140,     0, 
         32,     0,  4140,  4140,    -8,  4140,     0,   333,     0,   336, 
          0,     0,  4140,   300,   340,   350,     0,     0,  -244,  2423, 
       2521,  2521,  2521,  2521,  2521,  2521,  2521,  2521,  4140,  2521, 
       4140,  2521,  2521,  2521,  2521,  2378,   319,  3337,   731,  2007, 
       4140,  1306,  4140,  1306,   320,   320,   320,   320,   320,   -24, 
        -24,  -284,  -284,  -284,     0,     0,  4140,  4140,   355,     0, 
       4140,  4140,     0,     0,  2378,  1343,     0,     0,     0,     0, 
          0,     0,  2378,  2378,  2378,     0,  3287,  4140,  4140,   356, 
          0,   275,    28,   369,     0,    -8,  2521,  2521,  4140,  2521, 
       2521,   384,   347,     0,  1529,  1679,   258,   400,   401,    -8, 
       3826,     0,  4140,     0,  3287,     0,     0,  4140,     0,     0, 
        300,   424,   126,     0,   429,     0,     0,     0,     0,   357, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       3826,  1791,   375,     0,  3826,     0,   460,   461,     0,   445, 
        300,   258,  4140,     0,  4140,   464,   465,  3826,   468,   450, 
        458,   479,   481,   397,     0,     0,     0,     0,     0,   -28, 
        -26,     0,     0,   466,  3826,  1827,  4140,  4140,   162,  4140, 
          0,     0,  4140,  4140,     0,     0,     0,  3826,     0,     0, 
        399,     0,   467,  1924,   493,  1951,  1978,  2089,   409,   191, 
       4140,  3826,  4140,   196,  3826,   414,     0,     0,     0,     0, 
        191,   490,     0,  2125,   125,   509,   193,   -64,   526,     0, 
       4140,   517,   249,  3826,     0,     0,     0,     0,   452,     0, 
        -64,   -80,   551,     0,     0,     0,  3826,  4140,   537,     0, 
          0,   256,  3826,     0,  2223,  3826,   556,     0,  3826,     0, 
        476,     0,  3826,   475,     0, 
    );
    protected static $yyRindex= array(           59,
          0,     0,   663,     0,     0,    34,   685,     0,    16,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -184,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   508,     0,     0,     0,     0,     6, 
        341,     0,     0,  -114,   480,     0,     0,     0,     0,     0, 
        482,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   563,     0,     0,     0, 
          0,   483,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -164,   566,   -39,     0,     0, 
        576,     0,     0,     0,     0,  -164,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1231,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    43,     0,     0,     0,   102, 
        208,     0,   -12,     0,     0,     0,     0,     0,     0,    -3, 
        577,     0,   592,     0,     0,     0,     0,     0,     0,   100, 
        303,     0,  1284,     0,     0,   271,   469,   593,   895,   647, 
        767,   804,     0,     0,     0,     0,   604,   208,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   588,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   345,     0, 
        200,     0,     0,    81,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   208,     0,     0,     0,     0,     0, 
          0,     0,   566,    82,     0,   607,     0,     0,     0,    54, 
        259,   603,   743,   779,   867,  2015,  2019,  2621,     0,  2762, 
          0,  2855,  3347,  3371,  3479,   114,     0,  3202,   619,  3063, 
          0,  3087,     0,  3111,    70,  2810,  2948,  3039,  2650,  2558, 
       2612,  1045,  1103,  1194,     0,     0,   566,   557,   140,     0, 
          0,     0,     0,     0,   107,     0,     0,     0,     0,     0, 
          0,     0,   263,   858,  1435,     0,  3223,   566,   566,     0, 
          0,     0,     0,   167,     0,   208,  3499,  3507,     0,  3520, 
       3532,     0,     0,     0,     0,     0,   608,     0,     0,   208, 
        533,     0,   566,     0,  3246,     0,     0,   566,     0,     0, 
         82,     0,     0,     0,   618,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        533,     0,     0,     0,  -117,     0,     0,     0,     0,     7, 
         82,     0,   605,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   533,     0,   606,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   533,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        606,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       3641,     0,     0,     0,   625,     0,  3732,   542,     0,     0, 
        566,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        543,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   -91,     0,     0,   -91,     0, 
          0,     0,   533,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    10,     0,     0,   662,   -33,     4,   -30, 
          0,     0,     0,   586,     0,     0,   105,     0,   530,   477, 
          0,     0,     0,  -197,   474,  4414,     0,     0,     0,     0, 
       -127,   653,   656,     0,   237,   617,     0,    -5,  1112,   447, 
        348,     0,   358,   842,     0,  -136,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   270,     0,     0,     0,     0,   291,     0,     0,   613, 
          0,     0,  -122,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   418,     0,     0,     0,   510,     0, 
        516,     0,     0,     0,     0,     0,     0,   693,     0, 
    );
    protected static $yyTable = array(40,
        159,   159,    43,    43,   159,    44,    45,    66,    18,    20, 
         92,    39,   189,    63,    11,   294,    43,   187,    43,    69, 
         43,    72,   188,    75,    39,   220,   291,   190,   113,    94, 
         18,   193,   387,    64,    32,   228,    43,   114,   139,    72, 
        114,    68,    63,    63,   140,     1,   113,    18,    46,    45, 
          5,    43,    10,    10,    72,    10,    10,    10,    10,    10, 
         10,    10,    10,    39,   274,    39,    39,     9,   271,    61, 
         68,    68,    25,    10,    10,    10,    10,    10,    10,   159, 
        159,    26,   194,   159,   159,   159,   159,   159,   159,   159, 
         93,   141,   286,     2,   142,   295,   388,   142,    45,    27, 
        159,   159,   159,   159,   159,   159,   142,   186,    10,    10, 
        186,   142,   142,   186,   196,   236,   236,   191,   192,    43, 
         99,   171,    35,   349,   171,    35,   206,   186,   186,    39, 
        186,   303,   186,   159,    28,   159,   159,   135,    10,    10, 
         10,   207,   114,    35,   211,   114,   142,   173,    33,   236, 
        173,    39,    42,   372,   117,   236,    43,   117,    35,   266, 
        114,    41,   186,   186,    18,   159,   159,   159,    47,   234, 
         50,   117,   117,   314,    83,   234,   221,   221,   142,    38, 
        221,   221,   221,   221,   221,   221,   221,   328,    52,    97, 
         29,    30,    38,   186,   186,    70,    18,   221,   221,   221, 
        221,   221,   221,   122,   122,   269,   117,   122,   122,   122, 
        122,   122,   122,   122,   156,   213,   374,    12,    13,    14, 
         15,    16,    17,    74,   122,   122,   122,   122,   122,   122, 
        221,    38,   221,   221,    55,    56,    57,    58,    59,    60, 
        116,    76,   386,   116,   213,   213,    78,   214,   213,   213, 
        213,   213,   213,   213,   213,    66,    66,   122,   116,   122, 
        122,    77,   221,   221,   221,   213,   213,   213,   213,   213, 
        213,    79,   265,    43,    61,    12,    13,    14,    15,    16, 
         17,    64,    64,   191,   192,   270,    78,   190,    80,   122, 
        122,   122,    12,    13,    14,    15,    16,    17,    82,   143, 
        213,   213,   143,    36,   217,    81,    36,    62,   427,   428, 
         84,   134,    89,    90,   134,    85,   143,   143,    43,    38, 
         54,    36,    87,   195,   136,    10,    10,    10,   134,   134, 
         98,   213,   213,   234,   234,   156,    43,   157,     2,     2, 
          2,     2,     2,     2,   159,   200,    10,    98,   203,    39, 
        201,   143,   204,   205,   159,    10,   189,   208,     2,     2, 
        209,   187,   185,   134,   186,   184,   188,   224,   282,    12, 
         12,   140,   288,   159,   159,   289,   299,   191,   192,     2, 
        292,   215,   215,   143,   142,   215,   215,   215,   215,   215, 
        215,   215,   217,   293,   304,   134,   310,   311,    43,   218, 
        186,   442,   215,   215,   215,   215,   215,   215,   313,    12, 
         13,    14,    15,    16,    17,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   316,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   215,   215,   317, 
        326,   327,   159,   159,   159,   159,   159,   159,   159,   159, 
        159,   221,    12,   159,   159,   159,   159,   159,   159,   159, 
        159,   159,   159,   159,   350,   351,   142,   142,   215,   215, 
        221,   221,   352,   186,   186,   186,   186,   186,   122,   354, 
        186,   186,   186,   186,   186,   186,   186,   186,   186,   186, 
        186,   279,    56,    57,    58,    59,    60,   122,   122,   366, 
        368,   369,   370,   377,   378,   207,   207,   380,   381,   207, 
        207,   207,   207,   207,   207,   207,   382,    38,   383,   213, 
        384,   385,   395,   400,   390,   401,   207,   207,   207,   207, 
        207,   207,   403,   407,   408,   415,   418,   423,   213,   221, 
        221,   221,   221,   221,   221,   221,   221,   221,   421,   424, 
        221,   221,   221,   221,   221,   221,   221,   221,   221,   221, 
        221,   207,   207,   425,    39,   432,   122,   122,   122,   122, 
        122,   122,   122,   122,   122,   434,   440,   122,   122,   122, 
        122,   122,   122,   122,   122,   122,   122,   122,   435,   143, 
        217,   443,   207,   207,   446,   447,   451,   321,   453,   455, 
         43,   134,    22,    48,    20,   232,   112,   213,   213,   213, 
        213,   213,   213,   213,   213,   213,   165,   167,   213,   213, 
        213,   213,   213,   213,   213,   213,   213,   213,   213,   208, 
        208,   190,   168,   208,   208,   208,   208,   208,   208,   208, 
        234,   234,   234,   174,   151,   116,   174,   152,    58,   116, 
        208,   208,   208,   208,   208,   208,   215,    64,    60,   202, 
        174,   174,   202,   116,   112,    92,    94,    96,    24,    96, 
        212,   143,   143,   143,   234,   215,   202,   202,   280,   202, 
        234,   202,   281,   206,   206,   208,   208,   206,   206,   206, 
        206,   206,   206,   206,    49,   174,    48,     5,    95,   373, 
        441,   420,   367,   131,   206,   206,   206,   206,   206,   206, 
        312,   202,   202,   277,   273,    31,   208,   208,     0,     6, 
          0,   191,   192,     0,     0,     0,     0,   174,     0,     0, 
          0,     0,    88,    56,    57,    58,    59,    60,     0,   206, 
        206,     0,   202,   202,   215,   215,   215,   215,   215,   215, 
        215,   215,   215,     0,     0,   215,   215,   215,   215,   215, 
        215,   215,   215,   215,   215,   215,     0,   189,   177,     0, 
        206,   206,   187,   185,     0,   186,   184,   188,     0,     0, 
        207,     0,     0,   175,     0,     0,   175,   364,     0,     0, 
        180,     0,   182,     0,     0,     0,     0,     0,     0,   207, 
        175,   175,     0,   209,   209,    62,     0,   209,   209,   209, 
        209,   209,   209,   209,     0,     0,     0,     0,    54,   176, 
          0,   391,   176,     0,   209,   209,   209,   209,   209,   209, 
          0,     0,     0,     0,   399,   175,   176,   176,     0,     0, 
        210,   210,     0,     0,   210,   210,   210,   210,   210,   210, 
        210,     0,     0,     0,     0,     0,     0,     0,     0,   209, 
        209,   210,   210,   210,   210,   210,   210,   175,   207,   207, 
          0,   176,   207,   207,   207,   207,   207,     0,     0,   207, 
        207,   207,   207,   207,   207,   207,   207,   207,   207,   207, 
        209,   209,   450,     0,     0,   452,   210,   210,   146,   454, 
          0,   146,     0,   176,   208,     0,     0,   177,     0,     0, 
        177,     0,     0,     0,     0,   146,   146,     0,     0,     0, 
          0,     0,     0,   208,   177,   177,     0,   210,   210,     0, 
          0,   205,   205,   174,     0,   205,   205,   205,   205,   205, 
        205,   205,     5,     5,     5,     5,     5,     5,     0,   202, 
        146,     0,   205,   205,   205,   205,   205,   205,   206,   177, 
          0,     0,     5,     5,     6,     6,     6,     6,     6,     6, 
          0,     0,     0,     0,     0,     0,     0,   206,     0,     0, 
          0,     0,   146,     0,     6,     6,     0,   205,   205,     0, 
          0,   177,   208,   208,     0,     0,   208,   208,   208,   208, 
        208,     0,     0,   208,   208,   208,   208,   208,   208,   208, 
        208,   208,   208,   208,     0,   174,   174,   174,   205,   205, 
          0,     0,   202,   202,   202,   202,   202,     0,     0,     0, 
          0,   202,   202,   202,   202,   202,   202,   202,   202,   202, 
          0,     0,   190,     0,     0,     0,   206,   206,     0,     0, 
        206,   206,   206,   206,   206,     0,     0,   206,   206,   206, 
        206,   206,   206,   206,   206,   206,   206,   206,     0,     0, 
          0,     0,     0,   175,     0,     0,     0,     0,   209,     0, 
          0,   196,   196,     0,     0,   196,   196,   196,   196,   196, 
        196,   196,     0,     0,     0,     0,     0,   209,     0,     0, 
          0,     0,   196,   196,   196,   196,   196,   196,     0,   176, 
          0,     0,     0,     0,     0,   210,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   210,     0,     0,   196,   196,   197, 
        197,   178,   179,   197,   197,   197,   197,   197,   197,   197, 
          0,     0,     0,     0,     0,   175,   175,   175,     0,     0, 
        197,   197,   197,   197,   197,   197,   209,   209,   196,   196, 
        209,   209,   209,   209,   209,     0,     0,   209,   209,   209, 
        209,   209,   209,   209,   209,   209,   209,   209,   146,     0, 
          0,   176,   176,   176,     0,   197,   197,   177,     0,   379, 
          0,     0,     0,   210,   210,     0,     0,   210,   210,   210, 
        210,   210,     0,     0,   210,   210,   210,   210,   210,   210, 
        210,   210,   210,   210,   210,   205,   197,   197,     0,     0, 
        198,   198,     0,     0,   198,   198,   198,   198,   198,   198, 
        198,     0,     0,   413,     0,     0,   417,     0,     0,     0, 
          0,   198,   198,   198,   198,   198,   198,     0,     0,     0, 
          0,     0,     0,     0,     0,   436,     0,   133,   133,     0, 
        146,   133,   133,     0,   133,     0,   133,   133,   444,   177, 
        177,   177,     0,     0,   448,     0,   198,   198,   133,   133, 
        133,   133,   133,   133,   205,   205,     0,     0,   205,   205, 
        205,   205,   205,     0,     0,   205,   205,   205,   205,   205, 
        205,   205,   205,   205,   205,   205,     0,   198,   198,     0, 
        159,   159,     0,   133,   133,   159,   159,     0,   159,   159, 
        159,     0,     0,     0,   290,     0,     0,     0,     0,     0, 
          0,     0,   189,   159,   159,   159,   159,   187,   185,     0, 
        186,   184,   188,     0,   133,   133,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   180,     0,   182,     0,     0, 
          0,     0,     0,     0,   159,   196,     0,   159,   302,   189, 
        177,     0,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   308, 
        309,     0,   180,   162,   182,   174,   159,   159,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   189,   177,     0, 
          0,   215,   187,   185,   347,   186,   184,   188,     0,   348, 
          0,     0,     0,   197,     0,     0,   176,     0,     0,     0, 
        180,   162,   182,   174,   196,   196,     0,     0,   196,   196, 
        196,   196,   196,     0,     0,   196,   196,   196,   196,   196, 
        196,   196,   196,   196,   196,   196,   175,     0,     0,     0, 
          0,     0,     0,     0,   176,   147,     0,     0,   147,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   393,     0, 
          0,     0,   147,   147,     0,     0,     0,     0,     0,     0, 
          0,     0,   197,   197,   175,     0,   197,   197,   197,   197, 
        197,     0,   412,   197,   197,   197,   197,   197,   197,   197, 
        197,   197,   197,   197,   198,     0,     0,   147,     0,   189, 
        177,     0,   433,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,   133,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   180,   162,   182,   174,     0,     0,     0,   147, 
          0,   133,     0,     0,     0,   189,   177,     0,     0,     0, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   176,     0,   180,   162, 
        182,   174,     0,   198,   198,   159,     0,   198,   198,   198, 
        198,   198,     0,     0,   198,   198,   198,   198,   198,   198, 
        198,   198,   198,   198,   198,   159,   175,   190,     0,     0, 
          0,     0,   176,     0,     0,     0,     0,     0,     0,     0, 
        133,   133,     0,     0,   133,   133,   133,   133,   133,     0, 
          0,   133,   133,   133,   133,   133,   133,   133,   133,   133, 
        133,   133,   175,   319,   190,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   159,   159,   159,   159,   159,   159,   159, 
        159,   159,   190,    12,   159,   159,     0,   159,   159,   159, 
        159,   159,   159,   159,   159,   183,   181,   191,   192,     0, 
          0,     0,     0,     0,     0,   189,   177,     0,     0,     0, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   180,   162, 
        182,   174,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   202,   160,   161,   167,   172, 
        171,   173,   169,   170,     0,   147,     0,     0,     0,     0, 
          0,     0,   176,     0,     0,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,     0, 
          0,   178,   179,     0,   160,   161,   167,   172,   171,   173, 
        169,   170,   175,   320,   190,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   189,   177,     0, 
          0,     0,   187,   185,     0,   186,   184,   188,     0,     0, 
        190,     0,     0,     0,     0,     0,     0,   147,     0,   365, 
        180,   162,   182,   174,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   189,   177,     0,     0,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   176,   392,   180,   162,   182,   174, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   216,   160,   161,   167,   172, 
        171,   173,   169,   170,   175,     0,     0,     0,     0,     0, 
        176,     0,     0,     0,     0,     0,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,     0,     0,   178, 
        179,     0,   160,   161,   167,   172,   171,   173,   169,   170, 
        175,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        189,   177,     0,     0,   402,   187,   185,     0,   186,   184, 
        188,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   180,   162,   182,   174,   189,   177,     0, 
        190,     0,   187,   185,     0,   186,   184,   188,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        180,   162,   182,   174,   189,   177,     0,   176,   405,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   180,   162,   182, 
        174,     0,     0,   189,   176,     0,     0,   175,   187,   185, 
          0,   186,   184,   188,     0,   178,     0,     0,   178,   180, 
          0,     0,   180,     0,     0,     0,   180,     0,   182,     0, 
          0,   176,   178,   178,   175,     0,   180,   180,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,     0,     0,   178, 
        179,     0,   160,   161,   167,   172,   171,   173,   169,   170, 
          0,   175,   190,     0,     0,     0,     0,   178,     0,     0, 
          0,   180,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   189,   177,     0,     0,   406, 
        187,   185,     0,   186,   184,   188,     0,     0,   190,   178, 
          0,     0,     0,   180,     0,     0,     0,     0,   180,   162, 
        182,   174,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,     0,     0,   422,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   176,     0,   180,   162,   182,   174,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,     0, 
          0,   178,   179,     0,   160,   161,   167,   172,   171,   173, 
        169,   170,   175,     0,     0,     0,     0,     0,   176,     0, 
          0,     0,     0,     0,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   190,     0,   178,   179,     0, 
        160,   161,   167,   172,   171,   173,   169,   170,   175,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   189, 
        177,     0,   190,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        449,   404,   180,   162,   182,   174,     0,     0,     0,   190, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   176,     0,   190,     0, 
          0,     0,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,     0,     0,   178,   179,     0,   160,   161,   167, 
        172,   171,   173,   169,   170,   178,   175,     0,     0,   180, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,     0, 
          0,   178,   179,     0,   160,   161,   167,   172,   171,   173, 
        169,   170,     0,     0,     0,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,     0,     0,   178,   179, 
          0,   160,   161,   167,   172,   171,   173,   169,   170,     0, 
        190,     0,     0,     0,     0,     0,   183,   181,   191,   192, 
          0,     0,     0,     0,   189,   177,     0,   178,   179,   187, 
        185,     0,   186,   184,   188,     0,     0,   178,   178,   178, 
          0,   180,   180,   180,     0,     0,   190,   180,   162,   182, 
        174,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   189, 
        177,     0,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,   176,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   180,   162,   182,   174,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,     0,     0,   178, 
        179,   175,   160,   161,   167,   172,   171,   173,   169,   170, 
          0,     0,     0,     0,     0,     0,   176,     0,     0,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,   190,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,   175,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   189,   177,     0, 
          0,     0,   187,   185,     0,   186,   184,   188,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        180,   162,   182,   174,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   194,     0,     0,   194,     0, 
        194,   194,   194,   194,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   176,   194,   194,   194,   194,   194, 
        194,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,     0,   160,   161,   167,   172, 
        171,   173,   169,   170,   175,     0,     0,     0,     0,   195, 
        194,   194,   195,     0,   195,   195,   195,   195,     0,     0, 
          0,   179,     0,     0,   179,     0,     0,     0,     0,   195, 
        195,   195,   195,   195,   195,     0,     0,     0,   179,   179, 
          0,   194,   194,     0,     0,     0,     0,   199,     0,   190, 
        199,     0,     0,   199,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   195,   195,     0,   199,   199,   199, 
        199,   199,   199,   179,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   190,   195,   195,     0,     0,     0, 
          0,     0,   199,   199,     0,   179,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   199,   199,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,     0,     0,   178,   179, 
          0,   160,   161,   167,   172,   171,   173,   169,   170,     0, 
          0,     0,   203,     0,     0,   203,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   203, 
        203,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,   190,   178,   179,     0,     0,   161,   167,   172, 
        171,   173,   169,   170,     0,     0,     0,   188,     0,     0, 
        188,     0,     0,   188,   203,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   188,   188,     0, 
        188,     0,   188,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   203,     0,   194,     0, 
          0,     0,     0,     0,     0,   204,     0,     0,   204,     0, 
          0,     0,   188,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,   204,   204,     0,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,     0, 
          0,   178,   179,   188,   188,     0,   167,   172,   171,   173, 
        169,   170,   195,     0,     0,     0,     0,   204,     0,     0, 
          0,   179,     0,     0,     0,     0,     0,   194,   194,     0, 
          0,   194,   194,   194,   194,   194,     0,     0,   194,   194, 
        194,   194,   194,   194,   194,   194,   194,   194,   194,   204, 
        199,     0,     0,     0,     0,   187,     0,     0,   187,     0, 
          0,   187,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   187,   187,     0,   187,     0, 
        187,   195,   195,     0,     0,   195,   195,   195,   195,   195, 
          0,     0,   195,   195,   195,   195,   195,   195,   195,   195, 
        195,   195,   195,   179,   179,   179,     0,     0,     0,     0, 
        187,   187,     0,     0,     0,     0,     0,     0,     0,   199, 
        199,     0,     0,   199,   199,   199,   199,   199,     0,     0, 
        199,   199,   199,   199,   199,   199,   199,   199,   199,   199, 
        199,   187,   187,     0,     0,     0,   189,     0,     0,   189, 
          0,     0,   189,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   203,     0,     0,     0,   189,   189,     0,   189, 
        201,   189,     0,   201,     0,     0,   201,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        201,   201,     0,   201,   190,   201,     0,   190,     0,     0, 
        190,   189,   189,     0,     0,     0,     0,     0,     0,     0, 
        188,     0,     0,     0,   190,   190,     0,   190,   191,   190, 
          0,   191,     0,     0,   191,   201,   201,     0,     0,     0, 
          0,     0,   189,   189,     0,     0,     0,     0,   191,   191, 
          0,   191,     0,   191,   203,   203,   203,     0,     0,   190, 
        190,     0,     0,     0,     0,   204,   201,   201,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   191,   191,     0,     0,     0,     0,     0, 
        190,   190,     0,   188,   188,   188,   188,   188,     0,     0, 
        188,   188,   188,   188,   188,   188,   188,   188,   188,   188, 
        188,     0,     0,     0,   191,   191,     0,     0,     0,     0, 
          0,     0,   200,     0,     0,   200,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   200, 
        200,     0,   200,   135,   200,     0,   135,   204,   204,   204, 
          0,     0,     0,     0,     0,     0,     0,     0,   187,     0, 
        135,   135,     0,   135,     0,   135,   141,     0,     0,   141, 
          0,     0,     0,     0,   200,     0,     0,     0,     0,     0, 
          0,     0,     0,   141,   141,     0,   141,     0,   141,     0, 
          0,     0,     0,     0,     0,   135,     0,     0,     0,     0, 
          0,     0,     0,   189,   177,   200,   200,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,     0,   141,     0, 
          0,     0,     0,     0,     0,     0,   180,   135,   182,     0, 
          0,   187,   187,   187,   187,   187,     0,     0,   187,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,   187,   189, 
        141,     0,     0,   189,   177,     0,     0,     0,   187,   185, 
        176,   186,   184,   188,     0,     0,     0,   181,     0,     0, 
        181,     0,     0,   201,     0,     0,   180,     0,   182,     0, 
          0,     0,     0,     0,   181,   181,     0,     0,     0,     0, 
        175,   182,     0,     0,   182,     0,     0,   190,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   182,   182, 
        176,     0,     0,     0,     0,     0,     0,     0,     0,   181, 
          0,   191,   189,   189,   189,   189,   189,     0,     0,   189, 
        189,   189,   189,   189,   189,   189,   189,   189,   189,   189, 
          0,     0,     0,   182,     0,     0,   201,   201,   201,   201, 
        201,   181,     0,     0,     0,   201,   201,   201,   201,   201, 
        201,   201,   201,   201,     0,     0,     0,     0,     0,     0, 
        190,   190,   190,   190,   190,   182,     0,     0,     0,   190, 
        190,   190,   190,   190,   190,   190,   190,   190,     0,     0, 
          0,     0,     0,     0,   191,   191,   191,   191,   191,   183, 
          0,     0,   183,   191,   191,   191,   191,   191,   191,   191, 
        191,   191,   200,     0,     0,     0,   183,   183,     0,   184, 
          0,     0,   184,     0,     0,     0,     0,   185,     0,     0, 
        185,     0,     0,   135,     0,     0,   184,   184,     0,     0, 
        192,     0,     0,   192,   185,   185,     0,     0,     0,     0, 
          0,   183,   193,     0,     0,   193,   141,   192,   192,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   193, 
        193,   184,     0,     0,     0,     0,     0,     0,   190,   185, 
          0,     0,     0,   183,     0,   200,   200,   200,   200,   200, 
          0,     0,   192,     0,   200,   200,   200,   200,   200,   200, 
        200,   200,   200,   184,   193,     0,   135,   135,   135,   135, 
        135,   185,     0,     0,     0,   135,   135,   135,   135,   135, 
        135,   135,   135,   135,   192,     0,     0,     0,   190,   141, 
        141,   141,   141,   141,     0,     0,   193,     0,   141,   141, 
        141,   141,   141,   141,   141,   141,   141,     0,     0,     0, 
          0,     0,     0,   108,     0,     0,     0,   181,     0,     0, 
        108,     0,     0,   108,     0,   108,   183,   181,   191,   192, 
          0,     0,     0,     0,     0,     0,     0,   178,   179,   108, 
          0,   182,     0,     0,   108,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   108,     0,     0,     0,   183,   181,   191,   192, 
          0,     0,     0,     0,     0,     0,     0,   178,   179,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   181, 
        181,   181,     0,   108,   104,   108,   108,     0,     0,     0, 
          0,   104,     0,     0,   104,     0,   104,     0,     0,     0, 
          0,     0,     0,   182,   182,   182,     0,     0,     0,     0, 
        104,     0,     0,     0,     0,   104,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   183, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   104,     0,     0,     0,     0,     0,   184, 
          0,     0,     0,     0,     0,     0,     0,   185,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        192,     0,     0,     0,   104,     0,   104,   104,   109,     0, 
          0,     0,   193,     0,     0,   105,     0,     0,   107,     0, 
        108,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   340,     0,     0,     0,     0,   115, 
          0,   183,   183,   183,     0,     0,     0,     0,     0,     0, 
        108,   108,   108,   108,   108,   108,     0,     0,     0,     0, 
          0,   184,   184,   184,     0,     0,   109,    39,     0,   185, 
        185,   185,     0,   105,     0,     0,   107,     0,   108,     0, 
          0,     0,   192,   192,   192,     0,     0,     0,     0,     0, 
          0,   129,     0,     0,   193,   193,   193,   115,   341,     0, 
          0,   110,     0,   108,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   108,   108,    39,     0,     0,     0,     0, 
        108,   108,   108,   108,     0,     0,   108,     0,     0,     0, 
          0,   104,   104,   104,   104,   104,   104,     0,     0,     0, 
        108,   108,   108,   108,     0,   108,   108,   108,     0,   110, 
        108,   108,   108,   108,   108,     0,     0,   109,     0,     0, 
          0,     0,     0,     0,   105,   109,     0,   107,     0,   108, 
          0,     0,   105,     0,     0,   107,     0,   108,     0,     0, 
          0,     0,   108,   108,   104,   239,     0,   109,   115,     0, 
          0,     0,     0,   241,   105,     0,   115,   107,     0,   108, 
          0,     0,     0,     0,   104,   104,     0,     0,     0,     0, 
          0,   104,   104,   104,   104,   251,    39,   104,   115,     0, 
          0,     0,     0,     0,    39,   116,    56,    57,    58,    59, 
         60,   104,   104,   104,   104,     0,   104,   104,   104,     0, 
          0,   104,     0,   104,   104,   104,    39,     0,     0,     0, 
        110,     0,     0,     0,     0,     0,     0,     0,   110,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   104,   104,     0,     0,     0,   114,     0, 
        110,     0,   109,   116,    56,    57,    58,    59,    60,   105, 
          0,     0,   107,     0,   108,     0,     0,     0,    62,   117, 
          0,     0,     0,     0,     0,   118,   329,   330,   331,     0, 
        253,   113,   109,   115,     0,     0,     0,     0,     0,   105, 
          0,     0,   107,     0,   108,   332,   333,   334,   335,     0, 
        336,   337,   106,     0,     0,   338,   114,   339,     0,     0, 
          0,    39,   109,   115,     0,     0,     0,     0,     0,   105, 
          0,     0,   107,     0,   108,     0,    62,   117,     0,     0, 
          0,     0,     0,   118,     0,     0,     0,   111,   112,   113, 
          0,    39,     0,   115,     0,   110,     0,     0,     0,     0, 
          0,     0,     0,     0,   116,    56,    57,    58,    59,    60, 
        106,     0,   116,    56,    57,    58,    59,    60,     0,     0, 
          0,    39,     0,     0,     0,   110,     0,     0,     0,     0, 
          0,     0,     0,     0,   116,    56,    57,    58,    59,    60, 
          0,     0,     0,     0,     0,   111,   112,     0,     0,     0, 
          0,     0,     0,     0,     0,   110,     0,   114,     0,     0, 
          0,     0,     0,     0,     0,   114,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    62,   117,     0, 
          0,     0,     0,     0,   118,    62,   117,   114,     0,     0, 
        113,     0,   118,     0,     0,     0,     0,     0,   113,     0, 
          0,     0,     0,     0,     0,     0,     0,    62,   117,     0, 
          0,   106,     0,     0,   118,     0,     0,     0,     0,   106, 
        113,     0,     0,     0,     0,     0,     0,     0,     0,   116, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
          0,   106,     0,     0,     0,     0,   111,   112,     0,     0, 
          0,     0,     0,     0,   111,   112,     0,     0,     0,   116, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   111,   112,     0,     0, 
          0,     0,   114,     0,     0,     0,     0,     0,     0,   143, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
          0,     0,    62,   117,     0,     0,     0,     0,     0,   118, 
          0,     0,   114,     0,     0,   113,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    62,   117,     0,     0,   106,     0,     0,   118, 
          0,     0,   114,     0,     0,   113,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,     0,   144,   117,   130,     0,   106,     0,     0,   118, 
          0,   111,   112,     0,     0,   113,     0,     0,   145,   146, 
        147,   148,   149,   150,   151,   152,     0,   154,   155,     0, 
          0,     0,     0,     0,     0,     0,   106,     0,     0,     0, 
          0,   111,   112,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   111,   112,   230,   231,   232,   233,   234,   235,   236, 
        237,   238,   240,   242,   243,   244,   245,   246,   248,   249, 
        250,   252,   254,   255,   256,   257,   258,   259,   260,   261, 
        262,   263,   264,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   246,   275,     0,   276,     0,     0, 
          0,     0,   283,     0,     0,     0,   284,   285,     0,   287, 
          0,     0,     0,     0,     0,     0,   120,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   297,     0,   298,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   300,     0,   301,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,   246,     0,     0,   305,   306,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   120,   120,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   315,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   120,     0,     0,     0, 
          0,   120,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   246,     0,   376,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,   394,     0,   396,     0,     0,   397,   398,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   120,     0,   414,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   120,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   445, 
    );
    protected static $yyCheck = array(33,
         41,    41,    36,    37,    44,    36,    37,   125,   123,     6, 
        260,    92,    37,    47,     5,   260,    50,    42,    52,    50, 
         54,    52,    47,    54,    92,   153,   224,   312,    41,   260, 
         35,    40,    59,   125,    25,   158,    70,    41,   334,    70, 
         44,    47,    76,    77,   340,   320,    59,    35,    39,    44, 
        321,    85,    37,    38,    85,    40,    41,    42,    43,    44, 
         45,    46,    47,    92,   201,    59,    92,   260,   123,   300, 
         76,    77,    92,    58,    59,    60,    61,    62,    63,    37, 
         38,    59,    91,    41,    42,    43,    44,    45,    46,    47, 
        340,    44,   215,    35,    41,   340,   123,    44,    93,    59, 
         58,    59,    60,    61,    62,    63,    59,    38,    93,    94, 
         41,    58,    59,    44,   123,   300,   301,   402,   403,   153, 
        125,    41,    41,   321,    44,    44,    44,    58,    59,   123, 
         61,   268,    63,    91,    91,    93,    94,   125,   123,   124, 
        125,    59,    41,    44,   141,    44,    93,    41,    64,   334, 
         44,    92,    44,   351,    41,   340,   190,    44,    59,   190, 
         59,    93,    93,    94,    35,   123,   124,   125,    40,   334, 
        310,    58,    59,   296,    70,   340,    37,    38,   125,   260, 
         41,    42,    43,    44,    45,    46,    47,   310,   310,    85, 
        300,   301,   260,   124,   125,   311,   311,    58,    59,    60, 
         61,    62,    63,    37,    38,   260,    93,    41,    42,    43, 
         44,    45,    46,    47,    40,    41,   353,   280,   281,   282, 
        283,   284,   285,   123,    58,    59,    60,    61,    62,    63, 
         91,   260,    93,    94,   260,   261,   262,   263,   264,   265, 
         41,    61,   370,    44,    37,    38,    40,    41,    41,    42, 
         43,    44,    45,    46,    47,   373,   374,    91,    59,    93, 
         94,    61,   123,   124,   125,    58,    59,    60,    61,    62, 
         63,   410,   340,   307,   300,   280,   281,   282,   283,   284, 
        285,   373,   374,   402,   403,   340,    40,   312,    41,   123, 
        124,   125,   280,   281,   282,   283,   284,   285,    44,    41, 
         93,    94,    44,    41,   333,    41,    44,   333,   373,   374, 
        123,    41,    76,    77,    44,    44,    58,    59,   352,   260, 
        346,    59,    40,   332,   260,   310,   311,   312,    58,    59, 
        335,   124,   125,   300,   301,    40,   370,    40,   280,   281, 
        282,   283,   284,   285,   410,    41,   331,   335,    41,    92, 
         44,    93,    44,    61,   312,   340,    37,   260,   300,   301, 
         61,    42,    43,    93,    45,    46,    47,   340,    40,   410, 
        410,   340,    40,   331,   332,    40,    58,   402,   403,   321, 
         41,    37,    38,   125,   331,    41,    42,    43,    44,    45, 
         46,    47,   333,    44,    40,   125,    41,   123,   432,   340, 
        331,   432,    58,    59,    60,    61,    62,    63,    40,   280, 
        281,   282,   283,   284,   285,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    41,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    94,    93, 
         41,    41,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,   410,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    41,   340,   413,   414,   124,   125, 
        331,   332,    44,   404,   405,   406,   407,   408,   312,   123, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   260,   261,   262,   263,   264,   265,   331,   332,   125, 
         41,    41,    58,    40,    40,    37,    38,    40,    59,    41, 
         42,    43,    44,    45,    46,    47,    59,   260,    40,   312, 
         40,   125,   361,   125,    59,    59,    58,    59,    60,    61, 
         62,    63,    40,   125,   344,   340,   123,   413,   331,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    59,    41, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,    94,   371,    92,    40,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    59,   125,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   340,   331, 
        333,    41,   124,   125,    58,   340,    41,   340,   123,   125, 
         93,   331,   123,    41,   123,   123,    41,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    41,    41,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    37, 
         38,   312,    41,    41,    42,    43,    44,    45,    46,    47, 
        300,   301,   340,    41,    41,    58,    44,    41,    41,    93, 
         58,    59,    60,    61,    62,    63,   312,   125,    41,    41, 
         58,    59,    44,    59,    59,    41,   125,   125,     7,    84, 
        141,   413,   414,   415,   334,   331,    58,    59,   205,    61, 
        340,    63,   206,    37,    38,    93,    94,    41,    42,    43, 
         44,    45,    46,    47,    42,    93,    41,    35,    82,   352, 
        431,   411,   345,    91,    58,    59,    60,    61,    62,    63, 
        293,    93,    94,   204,   199,    23,   124,   125,    -1,    35, 
         -1,   402,   403,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    93, 
         94,    -1,   124,   125,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    37,    38,    -1, 
        124,   125,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
        312,    -1,    -1,    41,    -1,    -1,    44,   341,    -1,    -1, 
         60,    -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         58,    59,    -1,    37,    38,   333,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,   346,    41, 
         -1,   375,    44,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,   388,    93,    58,    59,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,   125,   400,   401, 
         -1,    93,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,   125,   446,    -1,    -1,   449,    93,    94,    41,   453, 
         -1,    44,    -1,   125,   312,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    58,    59,    -1,   124,   125,    -1, 
         -1,    37,    38,   331,    -1,    41,    42,    43,    44,    45, 
         46,    47,   280,   281,   282,   283,   284,   285,    -1,   331, 
         93,    -1,    58,    59,    60,    61,    62,    63,   312,    93, 
         -1,    -1,   300,   301,   280,   281,   282,   283,   284,   285, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,   125,    -1,   300,   301,    -1,    93,    94,    -1, 
         -1,   125,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   413,   414,   415,   124,   125, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,   312,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   331,    -1,    -1,    93,    94,    37, 
         38,   411,   412,    41,    42,    43,    44,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
         58,    59,    60,    61,    62,    63,   400,   401,   124,   125, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   331,    -1, 
         -1,   413,   414,   415,    -1,    93,    94,   331,    -1,   358, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   331,   124,   125,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,   402,    -1,    -1,   405,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   424,    -1,    37,    38,    -1, 
        413,    41,    42,    -1,    44,    -1,    46,    47,   437,   413, 
        414,   415,    -1,    -1,   443,    -1,    93,    94,    58,    59, 
         60,    61,    62,    63,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,   124,   125,    -1, 
         37,    38,    -1,    93,    94,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,   223,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    60,    61,    62,    63,    42,    43,    -1, 
         45,    46,    47,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    -1,    -1, 
         -1,    -1,    -1,    -1,    91,   331,    -1,    94,   267,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288, 
        289,    -1,    60,    61,    62,    63,   123,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,   313,    45,    46,    47,    -1,   318, 
         -1,    -1,    -1,   331,    -1,    -1,    94,    -1,    -1,    -1, 
         60,    61,    62,    63,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   124,    -1,   404,   405,   406,   407, 
        408,    -1,   401,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   331,    -1,    -1,    93,    -1,    37, 
         38,    -1,   421,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,   125, 
         -1,   331,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    60,    61, 
         62,    63,    -1,   400,   401,   312,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   332,   124,   312,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   124,   125,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,   410,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   400,   401,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   124,   125,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,   413,    -1,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    59,    60,    61,    62,    63, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   124,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
        312,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    94,    41,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    37,    94,    -1,    -1,   124,    42,    43, 
         -1,    45,    46,    47,    -1,    41,    -1,    -1,    44,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    60,    -1,    62,    -1, 
         -1,    94,    58,    59,   124,    -1,    58,    59,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   124,   312,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,   312,   125, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    60,    61,    62,    63,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   124,    -1,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   124,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,   312,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,   331,    60,    61,    62,    63,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,   312,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   331,   124,    -1,    -1,   331, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,    -1,    -1,    -1,    37,    38,    -1,   411,   412,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,   413,   414,   415, 
         -1,   413,   414,   415,    -1,    -1,   312,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   124,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,   312,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         43,    44,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    58,    59,    60,    61,    62, 
         63,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   124,    -1,    -1,    -1,    -1,    38, 
         93,    94,    41,    -1,    43,    44,    45,    46,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    58,    59, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    38,    -1,   312, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    58,    59,    60, 
         61,    62,    63,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,    -1,    -1,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   124,   125,    -1,   416,   417,   418,   419, 
        420,   421,   331,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   125, 
        331,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   413,   414,   415,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,    -1,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    58,    59,    -1,    61, 
         38,    63,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    38,    63,    -1,    41,    -1,    -1, 
         44,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    58,    59,    -1,    61,    38,    63, 
         -1,    41,    -1,    -1,    44,    93,    94,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,   413,   414,   415,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,   331,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    41,    63,    -1,    44,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         58,    59,    -1,    61,    -1,    63,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,   124,   125,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,   125,    62,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
        125,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         94,    45,    46,    47,    -1,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,   331,    -1,    -1,    60,    -1,    62,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
        124,    41,    -1,    -1,    44,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,   331,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    93,    -1,    -1,   404,   405,   406,   407, 
        408,   125,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,   125,    -1,    -1,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    41, 
         -1,    -1,    44,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   331,    -1,    -1,    -1,    58,    59,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,   331,    -1,    -1,    58,    59,    -1,    -1, 
         41,    -1,    -1,    44,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    93,    41,    -1,    -1,    44,   331,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    93,    -1,    -1,    -1,    -1,    -1,    -1,   312,    93, 
         -1,    -1,    -1,   125,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    93,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   125,    93,    -1,   404,   405,   406,   407, 
        408,   125,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   125,    -1,    -1,    -1,   312,   404, 
        405,   406,   407,   408,    -1,    -1,   125,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    -1,    -1,   331,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,   400,   401,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,    59, 
         -1,   331,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    92,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,   123,    33,   125,   126,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         59,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,   123,    -1,   125,   126,    33,    -1, 
         -1,    -1,   331,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    -1,    -1,    -1,    -1,    64, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    33,    92,    -1,   413, 
        414,   415,    -1,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    -1,    -1,   413,   414,   415,    64,   123,    -1, 
         -1,   126,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   333,   334,    92,    -1,    -1,    -1,    -1, 
        340,   341,   342,   343,    -1,    -1,   346,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,   126, 
        370,   371,   372,   373,   374,    -1,    -1,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,    33,    -1,    43,    -1,    45, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,   402,   403,   313,    61,    -1,    33,    64,    -1, 
         -1,    -1,    -1,    61,    40,    -1,    64,    43,    -1,    45, 
         -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,   341,   342,   343,    61,    92,   346,    64,    -1, 
         -1,    -1,    -1,    -1,    92,   260,   261,   262,   263,   264, 
        265,   360,   361,   362,   363,    -1,   365,   366,   367,    -1, 
         -1,   370,    -1,   372,   373,   374,    92,    -1,    -1,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   313,    -1, 
        126,    -1,    33,   260,   261,   262,   263,   264,   265,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,   333,   334, 
         -1,    -1,    -1,    -1,    -1,   340,   341,   342,   343,    -1, 
         61,   346,    33,    64,    -1,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,   360,   361,   362,   363,    -1, 
        365,   366,   367,    -1,    -1,   370,   313,   372,    -1,    -1, 
         -1,    92,    33,    64,    -1,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,   333,   334,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,   402,   403,   346, 
         -1,    92,    -1,    64,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
        367,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    92,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,   313,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,   333,   334,   313,    -1,    -1, 
        346,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,   367,    -1,    -1,   340,    -1,    -1,    -1,    -1,   367, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,   313,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   333,   334,    -1,    -1,   367,    -1,    -1,   340, 
         -1,    -1,   313,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         87,    -1,   333,   334,    91,    -1,   367,    -1,    -1,   340, 
         -1,   402,   403,    -1,    -1,   346,    -1,    -1,   105,   106, 
        107,   108,   109,   110,   111,   112,    -1,   114,   115,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,   160,   161,   162,   163,   164,   165,   166, 
        167,   168,   169,   170,   171,   172,   173,   174,   175,   176, 
        177,   178,   179,   180,   181,   182,   183,   184,   185,   186, 
        187,   188,   189,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   201,   202,    -1,   204,    -1,    -1, 
         -1,    -1,   209,    -1,    -1,    -1,   213,   214,    -1,   216, 
         -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   239,    -1,   241,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        267,   268,    -1,    -1,   271,   272,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   288,   289,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   299,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,   318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   353,    -1,   355,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        377,   378,    -1,   380,    -1,    -1,   383,   384,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   401,    -1,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   438, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 387 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 416 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 420 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 423 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 428 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 438 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 438 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 451 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 451 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 455 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 455 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 461 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 462 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 481 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 485 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 489 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 495 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 496 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 511 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 515 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 525 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 531 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 540 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 553 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 123:  #line 565 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 124:  #line 571 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 571 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 577 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 577 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 581 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 581 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 591 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 591 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 603 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 134:  #line 606 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 135:  #line 609 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 136:  #line 612 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 137:  #line 615 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 138:  #line 618 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 621 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 624 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 141:  #line 628 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 142:  #line 634 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 143:  #line 640 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 144:  #line 646 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 145:  #line 651 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 146:  #line 656 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 147:  #line 659 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 148:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 149:  #line 665 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 150:  #line 668 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 151:  #line 679 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 153:  #line 684 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 154:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 155:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 157:  #line 694 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 158:  #line 694 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 159:  #line 698 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 160:  #line 704 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 161:  #line 705 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 162:  #line 706 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 712 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 166:  #line 715 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 167:  #line 718 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 168:  #line 721 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 169:  #line 727 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 170:  #line 728 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 171:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 173:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 174:  #line 741 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 175:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 176:  #line 743 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 181:  #line 748 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 185:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 186:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 187:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 193:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 194:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 200:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 207:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 212:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 213:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 215:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 216:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 217:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 218:  #line 806 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 219:  #line 809 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 220:  #line 809 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 812 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 222:  #line 815 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 223:  #line 818 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 224:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 225:  #line 821 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 226:  #line 824 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 227:  #line 824 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 230:  #line 837 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 231:  #line 841 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 232:  #line 845 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 233:  #line 846 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 234:  #line 852 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 235:  #line 853 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 236:  #line 857 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 237:  #line 858 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 238:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 239:  #line 863 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 240:  #line 864 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 241:  #line 865 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 242:  #line 866 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 243:  #line 867 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2451 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
