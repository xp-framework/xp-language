<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         83,    83,    84,    84,    85,    38,    87,    38,    25,    25, 
         25,    25,    25,    25,    86,    86,    86,    86,    88,    88, 
         90,    90,    89,    78,    78,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    79,    79,    79,    79,    79, 
         79,    79,    79,    80,    80,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    81,    81,    81,    81,    81,    81, 
         82,    82,    73,    73,    91,    91,    93,    92,    94,    92, 
         92,    92,    92,    95,    92,    31,    31,    10,    96,    17, 
         17,    33,    33,    97,    97,    98,    98,    98,    98,    98, 
         98, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     1,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     2,     4,     1,     1,     1,     1,     1, 
          5,     3,     3,     3,     3,     4,     4,     2,     7,     4, 
          0,     1,     1,     3,     1,     1,     0,     5,     1,     1, 
          1,     1,     1,     1,     0,     1,     1,     1,     1,     3, 
          0,     1,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     4,     4,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     2,     2,     2,     2,     2,     2, 
          2,     2,     0,     1,     1,     2,     0,     4,     0,     4, 
          2,     2,     4,     0,     6,     1,     1,     1,     1,     1, 
          3,     0,     1,     1,     2,     1,     1,     1,     1,     1, 
          1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   236,   238,   237,   239,   241,   240,     0,     1,     0, 
         42,   233,     0,     8,     0,     4,     9,     0,    14,    16, 
        235,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   228,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   164,   160,   163,   161,   162, 
          0,     0,     0,   156,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   157,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   231,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   124,     0,     0, 
        123,     0,     0,   136,   137,   138,   139,   140,   166,     0, 
          0,     0,     0,   169,    15,     0,    27,     0,     0,     0, 
          0,    29,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   132,   148,   130,     0,     0,   128,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        211,   212,    53,     0,     0,   158,     0,     0,     0,    31, 
          0,     0,    33,     0,    30,     0,     0,     0,     0,   229, 
          0,   226,     0,   127,   227,     0,   155,     0,     0,   153, 
        217,     0,   219,   125,   214,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   145,   144,   115,     0,     0,   172,   170,   159, 
         34,    32,    37,     0,     0,     0,   150,     0,     0,     0, 
          0,     0,     0,     0,     0,   222,     0,     0,   216,     0, 
        120,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   154,     0,   224,     0,     0,     0,   129,     0, 
          0,     0,     0,    59,     0,   119,   118,   131,    68,     0, 
         88,    72,    76,    78,    74,    84,    86,    70,    80,    91, 
          0,     0,     0,    65,     0,   102,   218,     0,   223,   220, 
          0,    63,     0,     0,     0,     0,    82,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    90,   149,    67, 
          0,   121,     0,     0,    62,    61,     0,     0,     0,     0, 
          0,     0,     0,    85,    87,     0,     0,   103,   225,    40, 
         56,     0,    38,    69,     0,    89,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         57,   110,    83,   107,     0,     0,    77,     0,     0,     0, 
          0,     0,     0,   109,     0,     0,     0,     0,   105,    71, 
         98,   100,     0,    95,     0,     0,     0,    79,    93,    75, 
          0,     0,     0,    81,    97,     0,     0,   106,     0,     0, 
          0,    73,     0,   101,     0,    99,     0,     0,   111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   119,   100,   212, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   137, 
        103,   104,   138,   203,    64,   332,   312,   298,   364,   383, 
        313,    34,    21,    35,    65,    66,    67,   121,   122,   333, 
        314,   315,   334,   335,   336,   245,   346,   355,   420,   349, 
        352,   410,   350,   351,   356,   423,   368,   403,   353,   354, 
        348,   424,   425,   432,   433,   431,   404,   405,   413,   123, 
        214,   292,   224,   158,   153,   227,   216,   124,   125,   126, 
        127,   128,   218,   219,   220,   132,    91,   133,   134,   269, 
        225,   226,   284,   288,   338,   215,    22,    23, 
    );
    protected static $yySindex = array(         -273,
          0,     0,  -253,  -135,  -135,   127,  -253,     0,    58,    89, 
        100,     0,     0,     0,     0,     0,     0,    95,     0,  -228, 
          0,     0,   219,     0,  -135,     0,     0,   125,     0,     0, 
          0,     0,   -79,   103,   173,   -79,   -79,     0,  -135,   180, 
        219,   125,     0,   -87,   -68,     0,  1207,     0,     0,   -79, 
        -77,   -79,   148,   -79,   213,     0,     0,     0,     0,     0, 
        217,   258,  -111,     0,   262,   264,   265,     0,     0,   -79, 
        187,   271,     0,     0,   276,   -63,   -63,     0,  -222,     0, 
          0,  -233,     0,     0,   -79,    57,  4092,     0,     0,     0, 
       3325,     0,     0,   213,     0,   342,     0,    60,     0,  -191, 
          0,     0,     0,   231,  4109,  4092,  4092,  4092,  4092,  4092, 
       4092,  4092,     0,  4092,  4092,   281,   284,     0,   -85,  2411, 
          0,   294,   299,     0,     0,     0,     0,     0,     0,  1269, 
        299,   303,   301,     0,     0,   287,     0,   235,    92,   297, 
        127,     0,    82,   166,  1296,  1339,  -187,  -187,  -276,  -187, 
       -187,  -187,   -27,     0,     0,     0,    13,   -59,     0,  4092, 
       4092,  4092,  4092,  4092,  4092,  4092,  4092,  4092,  3762,  3849, 
       4092,  4092,  4092,  4092,  4092,  4092,  4092,  4054,  4083,  4092, 
       4092,  4092,  4092,  4092,  4092,  4092,  4092,  4092,  4092,   -76, 
          0,     0,     0,  4092,  4092,     0,  4092,   255,    60,     0, 
        320,  4092,     0,    21,     0,  4092,  4092,   -59,  4092,     0, 
        325,     0,   327,     0,     0,  4092,     0,   332,   336,     0, 
          0,  -118,     0,     0,     0,   -59,  -221,  2438,  2465,  2465, 
       2465,  2465,  2465,  2465,  2465,  2465,  4092,  2465,  4092,  2465, 
       2465,  2465,  2465,  2411,   318,   -12,  3215,  3239,  4092,   128, 
       4092,   128,   239,   239,   239,   239,   239,   -19,   -19,  -276, 
       -276,  -276,     0,     0,     0,  2411,  1269,     0,     0,     0, 
          0,     0,     0,  2411,  2411,  2411,     0,  3194,  4092,  4092, 
        345,   272,    13,  4092,   354,     0,  4092,  4092,     0,   364, 
          0,   -59,  2465,  2465,  4092,  2465,  2465,    29,   372,   373, 
        -59,  3719,     0,   312,     0,  1366,  1393,  4092,     0,  3194, 
        297,   374,    99,     0,   397,     0,     0,     0,     0,   319, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       3719,  1778,   328,     0,  3719,     0,     0,  4092,     0,     0, 
        411,     0,   407,   297,    29,  4092,     0,  4092,   426,   428, 
       3719,   429,   421,   434,   454,   456,   380,     0,     0,     0, 
        470,     0,   -84,    24,     0,     0,   438,  3719,  1805,  4092, 
       4092,   152,  4092,     0,     0,  4092,  4092,     0,     0,     0, 
          0,  3719,     0,     0,   396,     0,   463,  1832,   483,  1929, 
       1875,  1902,   399,   182,  4092,  3719,  4092,   196,  3719,   404, 
          0,     0,     0,     0,   182,   473,     0,  1972,   132,   505, 
        176,  -127,   508,     0,  4092,   490,   210,  3719,     0,     0, 
          0,     0,   427,     0,  -127,   -79,   512,     0,     0,     0, 
       3719,  4092,   502,     0,     0,   221,  3719,     0,  1999,  3719, 
        521,     0,  3719,     0,   440,     0,  3719,   439,     0, 
    );
    protected static $yyRindex= array(          660,
          0,     0,   594,     0,     0,   -34,   638,     0,    16,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -155,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   472,     0,     0,     0,     0,     1, 
         63,     0,     0,  -108,   443,     0,     0,     0,     0,     0, 
        468,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   551,     0,     0,     0, 
          0,   480,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -162,   552,   -32,     0,     0, 
        575,     0,     0,     0,     0,  -162,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1242,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   167,     0,     0,     0,   110, 
          0,     0,    10,     0,     0,     0,     0,     0,     0,     5, 
        587,     0,   591,     0,     0,     0,     0,     0,     0,   252, 
        293,     0,  2026,     0,     0,   273,   593,   620,   759,   647, 
        691,   718,     0,     0,     0,     0,   602,   194,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   588,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   236,     0,     0,    52,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   194,     0,     0, 
          0,     0,     0,     0,     0,   552,     0,     0,   604,     0, 
          0,     0,     0,     0,     0,   496,     0,    94,   204,  1321, 
       1348,  1418,  1445,  1475,  1981,  2050,     0,  2077,     0,  3061, 
       3105,  3253,  3261,   292,     0,  3141,  3118,  2710,     0,  3050, 
          0,  3094,  2588,  2615,  2639,  2666,  2547,  2493,  2520,  1144, 
       1171,  1198,     0,     0,     0,    54,     0,     0,     0,     0, 
          0,     0,     0,   263,   313,  1406,     0,   451,   552,   552, 
          0,     0,     0,   554,    43,     0,     0,     0,     0,    70, 
          0,   194,  3269,  3273,     0,  3280,  3289,   607,     0,     0, 
        194,   524,     0,     0,     0,     0,     0,   552,     0,  3162, 
         56,     0,     0,     0,   609,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        524,     0,     0,     0,  -123,     0,     0,   552,     0,     0, 
          0,     0,    32,    56,     0,   600,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   524,     0,   601, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   524,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   601,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  3588,     0,     0,     0,   627,     0, 
       3675,   544,     0,     0,   552,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   545,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  -115, 
          0,     0,  -115,     0,     0,     0,   524,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   119,     0,     0,   664,   -33,    36,   -30, 
          0,     0,     0,   592,     0,     0,   238,     0,   531,   476, 
          0,     0,     0,  -120,   498,  4357,     0,     0,     0,     0, 
       -142,   655,   657,     0,   192,   617,     0,    -6,   -36,   343, 
        355,     0,   366,   -50,     0,  -128,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   277,     0,     0,     0,     0,   298,     0,     0,   613, 
          0,     0,  -109,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   432,     0,     0,     0,   515,     0, 
        493,     0,     0,     0,     0,     0,   693,     0, 
    );
    protected static $yyTable = array(40,
        159,    66,    43,    43,   287,    44,    45,    39,   159,    64, 
        213,   159,    39,    63,    18,    39,    43,   189,    43,    69, 
         43,    72,   187,    75,   189,   177,    94,   188,    39,   187, 
        185,   221,   186,   184,   188,   190,    43,    92,   290,    72, 
         68,    20,    63,    63,    45,   114,     1,   180,   114,   182, 
        113,    43,    10,    10,    72,    10,    10,    10,    10,    10, 
         10,    10,    10,   223,    39,   265,    61,     5,   113,    68, 
         68,    29,    30,    10,    10,    10,    10,    10,    10,   221, 
        221,   176,   381,   221,   221,   221,   221,   221,   221,   221, 
         39,    18,   171,    45,   173,   171,    35,   173,   277,    35, 
        221,   221,   221,   221,   221,   221,   122,   122,    10,    10, 
        122,   122,   122,   122,   122,   122,   122,    93,   291,    43, 
         39,   156,   206,    11,     9,   191,   192,   122,   122,   122, 
        122,   122,   122,   221,   142,   221,   221,   142,    10,    10, 
         10,   285,   139,    32,   234,   234,   382,    26,   140,    25, 
        114,   142,   142,   114,    39,   304,    43,    46,    27,   264, 
        122,    18,   122,   122,   189,   221,   221,   221,   114,   187, 
        185,   232,   186,   184,   188,    38,   204,   232,   234,   281, 
         38,    99,   309,    38,   234,    28,   142,   180,    33,   182, 
        342,   318,   122,   122,   122,    41,    88,    56,    57,    58, 
         59,    60,    18,   159,   159,    78,   207,   159,   159,   159, 
        159,   159,   159,   159,   191,   192,    42,   367,   142,    47, 
        380,   286,    50,   365,   159,   159,   159,   159,   159,   159, 
        213,   213,    38,    70,   213,   213,   213,   213,   213,   213, 
        213,    52,   299,   300,   143,   421,   422,   143,   210,    66, 
         66,   213,   213,   213,   213,   213,   213,    64,    64,   159, 
        159,   143,   143,   263,    43,   232,   232,    89,    90,    62, 
         74,   341,   222,    76,   141,   189,   116,    77,   199,   116, 
        187,   185,    54,   186,   184,   188,   213,   213,    38,   142, 
        159,   159,   190,   200,   116,    35,   143,    78,    79,   190, 
        372,   361,    80,    36,    81,   210,    36,    83,    82,    84, 
         35,    43,   211,   134,    85,    87,   134,   213,   213,   136, 
        156,    36,    97,   157,   159,    10,    10,    10,   143,    43, 
        134,   134,   117,   387,   193,   117,    12,    13,    14,    15, 
         16,    17,   194,   196,   197,   407,    10,   198,   411,   117, 
        117,   201,   217,   146,   221,    10,   146,   202,   406,   273, 
        140,   210,   232,   232,   279,   134,   280,   430,   311,    12, 
        146,   146,   282,   221,   221,   295,    18,    12,   427,   283, 
        438,   122,   191,   192,   117,   301,   442,   183,   181,   191, 
        192,    98,    43,   305,   302,   436,   232,   134,   178,   179, 
        122,   122,   232,   308,   337,   146,    12,    13,    14,    15, 
         16,    17,   316,   317,   343,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   142,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   146,   344,   190, 
        345,   347,   221,   221,   221,   221,   221,   221,   221,   221, 
        221,   362,   359,   221,   221,   221,   221,   221,   221,   221, 
        221,   221,   221,   221,   363,   370,   135,   371,   373,   122, 
        122,   122,   122,   122,   122,   122,   122,   122,   159,   374, 
        122,   122,   122,   122,   122,   122,   122,   122,   122,   122, 
        122,   135,   375,   376,   135,   377,   384,   159,    12,    13, 
         14,    15,    16,    17,   378,   213,   142,   142,   135,   135, 
        379,   135,   389,   135,   270,    56,    57,    58,    59,    60, 
        394,   395,   397,   401,   213,   402,   412,   183,   181,   191, 
        192,   415,   215,   215,   143,   409,   215,   215,   215,   215, 
        215,   215,   215,   135,   417,   418,   419,   426,   428,   429, 
        190,   434,   437,   215,   215,   215,   215,   215,   215,   440, 
        441,   445,   447,   449,    43,    22,   159,   159,   159,   159, 
        159,   159,   159,   159,   159,   135,    12,   159,   159,   159, 
        159,   159,   159,   159,   159,   159,   159,   159,   215,   215, 
         20,    48,   112,   213,   213,   213,   213,   213,   213,   213, 
        213,   213,   230,   134,   213,   213,   213,   213,   213,   213, 
        213,   213,   213,   213,   213,   165,   143,   143,   143,   215, 
        215,    12,    13,    14,    15,    16,    17,   167,     5,   207, 
        207,   168,   232,   207,   207,   207,   207,   207,   207,   207, 
        191,   192,   151,   146,   152,   116,   116,    58,    64,    60, 
        207,   207,   207,   207,   207,   207,   208,   208,   116,   112, 
        208,   208,   208,   208,   208,   208,   208,    92,    94,    96, 
         24,   205,     6,   357,   272,    96,    98,   208,   208,   208, 
        208,   208,   208,   206,   206,   207,   207,   206,   206,   206, 
        206,   206,   206,   206,     2,   271,    49,    48,    95,   366, 
        360,   435,   414,   131,   206,   206,   206,   206,   206,   206, 
        385,   268,   208,   208,   303,    31,   207,   207,   289,     0, 
          0,     0,     0,     0,   393,   146,     0,   209,   209,     0, 
          0,   209,   209,   209,   209,   209,   209,   209,     0,   206, 
        206,     0,     0,   208,   208,     0,     0,     0,   209,   209, 
        209,   209,   209,   209,   210,   210,     0,     0,   210,   210, 
        210,   210,   210,   210,   210,     0,     0,     0,     0,     0, 
        206,   206,     0,     0,     0,   210,   210,   210,   210,   210, 
        210,   135,   444,   209,   209,   446,     0,     0,     0,   448, 
          0,     0,     0,     0,     0,   205,   205,     0,     0,   205, 
        205,   205,   205,   205,   205,   205,     0,   215,     0,     0, 
        210,   210,     0,     0,   209,   209,   205,   205,   205,   205, 
        205,   205,     0,     0,     0,     0,   215,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   210,   210,     0,     0,     0,     0,     0,     0,     0, 
          0,   205,   205,     0,   135,   135,   135,   135,   135,     0, 
          0,     0,     0,   135,   135,   135,   135,   135,   135,   135, 
        135,   135,     0,     5,     5,     5,     5,     5,     5,     0, 
          0,     0,   205,   205,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     5,     5,   215,   215,   215,   215,   215, 
        215,   215,   215,   215,   207,     0,   215,   215,   215,   215, 
        215,   215,   215,   215,   215,   215,   215,     6,     6,     6, 
          6,     6,     6,   207,     0,     0,     0,     0,     0,     0, 
          0,   208,     0,     0,     0,     0,     0,     6,     6,     2, 
          2,     2,     2,     2,     2,     0,     0,     0,     0,     0, 
        208,     0,     0,     0,     0,     0,     0,     0,   206,     2, 
          2,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   206,     0,     0, 
          2,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   207,   207,     0,     0,   207,   207,   207,   207, 
        207,     0,   209,   207,   207,   207,   207,   207,   207,   207, 
        207,   207,   207,   207,     0,     0,     0,     0,     0,   208, 
        208,   209,     0,   208,   208,   208,   208,   208,     0,   210, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,   208, 
        208,     0,     0,     0,     0,     0,   206,   206,   210,     0, 
        206,   206,   206,   206,   206,     0,     0,   206,   206,   206, 
        206,   206,   206,   206,   206,   206,   206,   206,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   205, 
        209,   209,     0,     0,   209,   209,   209,   209,   209,     0, 
          0,   209,   209,   209,   209,   209,   209,   209,   209,   209, 
        209,   209,     0,     0,     0,     0,     0,   210,   210,     0, 
          0,   210,   210,   210,   210,   210,     0,     0,   210,   210, 
        210,   210,   210,   210,   210,   210,   210,   210,   210,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   205,   205, 
          0,     0,   205,   205,   205,   205,   205,     0,     0,   205, 
        205,   205,   205,   205,   205,   205,   205,   205,   205,   205, 
        196,   196,     0,     0,   196,   196,   196,   196,   196,   196, 
        196,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   196,   196,   196,   196,   196,   196,   197,   197,     0, 
          0,   197,   197,   197,   197,   197,   197,   197,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   197,   197, 
        197,   197,   197,   197,   198,   198,   196,   196,   198,   198, 
        198,   198,   198,   198,   198,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   198,   198,   198,   198,   198, 
        198,     0,     0,   197,   197,     0,     0,   196,   196,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   133,   133, 
          0,     0,   133,   133,     0,   133,     0,   133,   133,     0, 
        198,   198,     0,     0,   197,   197,     0,     0,    39,   133, 
        133,   133,   133,   133,   133,   189,   177,     0,     0,     0, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,   198,   198,     0,     0,     0,     0,     0,   180,   162, 
        182,   174,   189,   177,   133,   133,   208,   187,   185,     0, 
        186,   184,   188,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   180,   162,   182,   174,     0, 
          0,   174,   176,     0,   174,   133,   133,     0,     0,     0, 
          0,     0,     0,     0,     0,   189,   177,     0,   174,   174, 
        187,   185,     0,   186,   184,   188,     0,     0,   175,   176, 
          0,   175,   175,     0,     0,     0,     0,     0,   180,   162, 
        182,   174,   189,   177,     0,   175,   175,   187,   185,     0, 
        186,   184,   188,   174,     0,     0,     0,     0,     0,   175, 
          0,     0,     0,     0,     0,   180,   162,   182,   174,   189, 
        177,     0,   176,     0,   187,   185,     0,   186,   184,   188, 
        175,     0,     0,     0,     0,   174,   147,     0,     0,   147, 
          0,     0,   180,   162,   182,   174,     0,     0,   176,   176, 
          0,   176,   175,   147,   147,     0,    55,    56,    57,    58, 
         59,    60,   175,     0,   196,   176,   176,     0,     0,     0, 
          0,     0,     0,     0,     0,   177,   176,     0,   177,   175, 
        339,     0,     0,     0,     0,     0,     0,     0,   147,     0, 
          0,   197,   177,   177,     0,     0,    61,     0,     0,     0, 
        176,     0,     0,     0,     0,   178,   175,   340,   178,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   198,     0, 
        147,     0,   178,   178,     0,     0,     0,   177,     0,    62, 
          0,     0,   176,   196,   196,     0,     0,   196,   196,   196, 
        196,   196,    54,   133,   196,   196,   196,   196,   196,   196, 
        196,   196,   196,   196,   196,     0,     0,   178,     0,   177, 
        197,   197,   133,     0,   197,   197,   197,   197,   197,     0, 
        190,   197,   197,   197,   197,   197,   197,   197,   197,   197, 
        197,   197,     0,     0,     0,     0,     0,   198,   198,   178, 
          0,   198,   198,   198,   198,   198,     0,   190,   198,   198, 
        198,   198,   198,   198,   198,   198,   198,   198,   198,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   133,   133,     0,     0,   133,   133,   133,   133,   133, 
        190,   174,   133,   133,   133,   133,   133,   133,   133,   133, 
        133,   133,   133,     0,     0,     0,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,   190,   175,   178, 
        179,   195,   160,   161,   167,   172,   171,   173,   169,   170, 
          0,     0,     0,     0,     0,   183,   181,   191,   192,   163, 
        164,   165,   166,   168,   190,     0,   178,   179,     0,   160, 
        161,   167,   172,   171,   173,   169,   170,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   174,   174,   174,   147,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,     0,   176,   178, 
        179,   209,   160,   161,   167,   172,   171,   173,   169,   170, 
        175,   175,   175,     0,     0,   183,   181,   191,   192,   163, 
        164,   165,   166,   168,     0,   177,   178,   179,     0,   160, 
        161,   167,   172,   171,   173,   169,   170,     0,     0,     0, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   178,   160,   161,   167,   172, 
        171,   173,   169,   170,   189,   177,     0,     0,   147,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,     0, 
        176,   176,   176,     0,     0,     0,   358,   180,   162,   182, 
        174,   189,   177,     0,     0,     0,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,     0,     0,   177,   177,   177, 
          0,     0,     0,   386,   180,   162,   182,   174,   189,   177, 
          0,   176,   396,   187,   185,     0,   186,   184,   188,     0, 
          0,     0,     0,     0,     0,     0,     0,   178,   178,   178, 
          0,   180,   162,   182,   174,     0,     0,     0,   176,     0, 
          0,   175,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,     0,     0,   399,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,   176,     0,     0,   175,     0, 
          0,     0,     0,     0,   180,   162,   182,   174,   189,   177, 
          0,     0,   400,   187,   185,     0,   186,   184,   188,     0, 
          0,     0,     0,     0,     0,   175,     0,     0,     0,     0, 
          0,   180,   162,   182,   174,   189,   177,     0,   176,     0, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   180,   162, 
        182,   174,     0,     0,     0,   176,     0,     0,   175,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   189,   177, 
          0,     0,   416,   187,   185,     0,   186,   184,   188,     0, 
          0,   180,   176,     0,   180,   175,     0,     0,     0,     0, 
          0,   180,   162,   182,   174,   189,   177,     0,   180,   180, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,     0,   175,     0,     0,     0,   443,     0,   180,   162, 
        182,   174,   159,   159,     0,   176,     0,   159,   159,     0, 
        159,   159,   159,   180,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   159,   159,   159,   159,   190, 
        179,     0,   176,   179,     0,   175,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   180,     0,   179,   179,     0, 
          0,     0,     0,     0,     0,     0,   190,   203,     0,   159, 
        203,     0,   175,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   203,   203,     0,     0,     0,     0, 
          0,     0,   179,   190,     0,     0,     0,     0,     0,   159, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   203, 
          0,     0,     0,     0,   179,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,   190,     0,   178,   179, 
          0,   160,   161,   167,   172,   171,   173,   169,   170,     0, 
          0,   203,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,   190,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,     0,     0,     0,     0, 
          0,   183,   181,   191,   192,   163,   164,   165,   166,   168, 
        190,     0,   178,   179,     0,   160,   161,   167,   172,   171, 
        173,   169,   170,     0,     0,     0,     0,     0,     0,   398, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,   190,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,     0,     0,     0,     0, 
          0,   183,   181,   191,   192,   163,   164,   165,   166,   168, 
        190,   180,   178,   179,     0,   160,   161,   167,   172,   171, 
        173,   169,   170,     0,     0,     0,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,   159,     0,   178, 
        179,     0,   160,   161,   167,   172,   171,   173,   169,   170, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   183,   181,   191,   192,   163,   164,   165,   166,   168, 
        179,     0,   178,   179,     0,   160,   161,   167,   172,   171, 
        173,   169,   170,   180,   180,   180,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,   203,     0,   178, 
        179,     0,   160,   161,   167,   172,   171,   173,   169,   170, 
          0,     0,     0,     0,     0,   159,   159,   159,   159,   159, 
        159,   159,   159,   159,     0,    12,   159,   159,     0,   159, 
        159,   159,   159,   159,   159,   159,   159,   189,   177,     0, 
          0,     0,   187,   185,     0,   186,   184,   188,     0,     0, 
          0,     0,   179,   179,   179,     0,     0,     0,     0,     0, 
        180,   162,   182,   174,   189,   177,     0,     0,     0,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,   203, 
        203,   203,     0,     0,     0,     0,     0,   180,   162,   182, 
        174,   189,   177,     0,   176,     0,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   180,   162,   182,   174,     0,     0, 
        194,   176,     0,   194,   175,   194,   194,   194,   194,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        194,   194,   194,   194,   194,   194,     0,   195,   176,     0, 
        195,   175,   195,   195,   195,   195,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   195,   195,   195, 
        195,   195,   195,     0,   199,   194,   194,   199,   175,     0, 
        199,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,   199,   199,   199,   199,   199, 
          0,     0,   195,   195,     0,     0,   194,   194,     0,     0, 
          0,     0,     0,     0,     0,   186,     0,     0,   186,     0, 
          0,   186,     0,     0,     0,     0,     0,     0,     0,   199, 
        199,     0,     0,   195,   195,   186,   186,     0,   186,     0, 
        186,     0,   188,     0,     0,   188,     0,     0,   188,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        199,   199,   188,   188,     0,   188,   187,   188,     0,   187, 
        186,   186,   187,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   187,   187,     0,   187, 
          0,   187,     0,   189,     0,     0,   189,   188,   188,   189, 
          0,   186,   186,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   190,   189,   189,     0,   189,     0,   189,     0, 
          0,   187,   187,     0,     0,     0,     0,     0,   188,   188, 
          0,     0,     0,     0,     0,     0,     0,   201,     0,   190, 
        201,     0,     0,   201,     0,     0,     0,     0,   189,   189, 
          0,     0,   187,   187,     0,     0,     0,   201,   201,     0, 
        201,     0,   201,     0,     0,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   189, 
        189,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   201,   201,     0,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,     0, 
          0,   178,   179,   194,   160,   161,   167,   172,   171,   173, 
        169,   170,     0,   201,   201,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,     0,     0,   178,   179, 
        195,     0,   161,   167,   172,   171,   173,   169,   170,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,     0,   178,   179,   199,     0,     0, 
        167,   172,   171,   173,   169,   170,     0,     0,     0,     0, 
          0,     0,   194,   194,     0,     0,   194,   194,   194,   194, 
        194,     0,     0,   194,   194,   194,   194,   194,   194,   194, 
        194,   194,   194,   194,     0,     0,     0,     0,   186,   195, 
        195,     0,     0,   195,   195,   195,   195,   195,     0,     0, 
        195,   195,   195,   195,   195,   195,   195,   195,   195,   195, 
        195,     0,     0,     0,     0,   188,   199,   199,     0,     0, 
        199,   199,   199,   199,   199,     0,     0,   199,   199,   199, 
        199,   199,   199,   199,   199,   199,   199,   199,     0,   187, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   186,   186,   186,   186,   186,   189,     0,   186,   186, 
        186,   186,   186,   186,   186,   186,   186,   186,   186,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   188,   188, 
        188,   188,   188,     0,     0,   188,   188,   188,   188,   188, 
        188,   188,   188,   188,   188,   188,     0,     0,     0,     0, 
        201,     0,   187,   187,   187,   187,   187,     0,     0,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,   187,   187, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   189, 
        189,   189,   189,   189,     0,     0,   189,   189,   189,   189, 
        189,   189,   189,   189,   189,   189,   189,   190,     0,     0, 
        190,     0,     0,   190,     0,     0,     0,     0,     0,     0, 
          0,   204,     0,     0,   204,     0,     0,   190,   190,     0, 
        190,     0,   190,   201,   201,   201,   201,   201,   204,   204, 
          0,     0,   201,   201,   201,   201,   201,   201,   201,   201, 
        201,   191,     0,     0,   191,     0,     0,   191,     0,     0, 
          0,     0,   190,   190,     0,   181,     0,     0,   181,     0, 
          0,   191,   191,   204,   191,     0,   191,     0,   202,     0, 
          0,   202,   181,   181,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   190,   190,   202,   202,     0,   202,     0, 
        202,   200,     0,     0,   200,   204,   191,   191,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   181,   200,   200, 
          0,   200,   141,   200,     0,   141,     0,     0,     0,     0, 
        202,   202,     0,     0,     0,     0,     0,   191,   191,   141, 
        141,     0,   141,     0,   141,     0,     0,     0,     0,   181, 
        189,   177,     0,   200,     0,   187,   185,     0,   186,   184, 
        188,   202,   202,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,   180,   141,   182,   187,   185,     0,   186, 
        184,   188,     0,     0,   200,   200,     0,     0,     0,     0, 
          0,     0,     0,     0,   180,   189,   182,     0,     0,     0, 
        187,   185,     0,   186,   184,   188,   141,   176,     0,     0, 
          0,     0,     0,   182,     0,     0,   182,     0,   180,     0, 
        182,   183,     0,     0,   183,     0,     0,     0,     0,   184, 
        182,   182,   184,   185,     0,     0,   185,   175,   183,   183, 
        192,     0,     0,   192,     0,     0,   184,   184,     0,   193, 
        185,   185,   193,     0,     0,     0,     0,   192,   192,     0, 
          0,     0,     0,     0,     0,   182,   193,   193,     0,     0, 
          0,     0,     0,   183,     0,     0,     0,   109,     0,     0, 
          0,   184,     0,     0,   105,   185,     0,   107,     0,   108, 
          0,     0,   192,     0,     0,     0,     0,   182,     0,     0, 
        190,   193,   129,     0,     0,   183,     0,     0,   115,     0, 
          0,   204,     0,   184,     0,     0,     0,   185,     0,     0, 
          0,     0,     0,     0,   192,     0,     0,     0,     0,     0, 
          0,     0,     0,   193,     0,     0,    39,     0,     0,     0, 
          0,     0,     0,     0,   191,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   181,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   202,     0, 
        110,     0,     0,   190,   190,   190,   190,   190,     0,     0, 
          0,     0,   190,   190,   190,   190,   190,   190,   190,   190, 
        190,   200,     0,   204,   204,   204,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   141,     0,     0,     0,     0,   191,   191,   191, 
        191,   191,     0,     0,     0,   190,   191,   191,   191,   191, 
        191,   191,   191,   191,   191,     0,     0,   181,   181,   181, 
          0,   202,   202,   202,   202,   202,   190,     0,     0,     0, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,     0, 
          0,     0,     0,     0,   200,   200,   200,   200,   200,     0, 
        190,     0,     0,   200,   200,   200,   200,   200,   200,   200, 
        200,   200,     0,     0,     0,   141,   141,   141,   141,   141, 
          0,     0,     0,     0,   141,   141,   141,   141,   141,   141, 
        141,   141,   141,   182,   116,    56,    57,    58,    59,    60, 
          0,   183,     0,   183,   181,   191,   192,     0,     0,   184, 
          0,     0,     0,   185,   178,   179,     0,     0,     0,     0, 
        192,     0,     0,     0,   183,   181,   191,   192,     0,   193, 
        108,     0,     0,     0,     0,   178,   179,   108,     0,     0, 
        108,     0,   108,     0,     0,     0,     0,   114,   183,   181, 
        191,   192,     0,     0,     0,     0,   108,     0,     0,   178, 
        179,   108,     0,     0,     0,     0,     0,    62,   117,     0, 
          0,     0,     0,     0,   118,   182,   182,   182,     0,     0, 
        113,     0,     0,   183,   183,   183,     0,     0,     0,   108, 
          0,   184,   184,   184,     0,   185,   185,   185,     0,     0, 
          0,   106,   192,   192,   192,     0,     0,     0,     0,     0, 
          0,   193,   193,   193,     0,     0,     0,   104,     0,     0, 
        108,     0,   108,   108,   104,     0,     0,   104,     0,   104, 
          0,     0,     0,     0,     0,     0,   111,   112,     0,     0, 
          0,     0,     0,   104,     0,     0,     0,     0,   104,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   109,     0,     0,     0,     0,     0,     0,   105,     0, 
          0,   107,     0,   108,     0,     0,   104,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   330,     0,     0, 
          0,     0,   115,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   109,     0,     0,   104,     0,   104, 
        104,   105,     0,     0,   107,     0,   108,     0,     0,     0, 
         39,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   237,     0,     0,   115,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   331,     0,     0,   110,     0,     0,   108,   108,   108, 
        108,   108,   108,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   109,     0,     0,     0,     0,     0,   110,   105,     0, 
          0,   107,     0,   108,     0,     0,     0,     0,     0,     0, 
        108,     0,     0,     0,     0,     0,     0,     0,     0,   239, 
          0,     0,   115,     0,     0,     0,     0,     0,     0,     0, 
        108,   108,     0,     0,     0,     0,     0,   108,   108,   108, 
        108,     0,     0,   108,   104,   104,   104,   104,   104,   104, 
         39,     0,     0,     0,     0,     0,     0,   108,   108,   108, 
        108,     0,   108,   108,   108,     0,     0,   108,   108,   108, 
        108,   108,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   110,     0,     0,     0,   116,    56, 
         57,    58,    59,    60,     0,     0,     0,   104,     0,   108, 
        108,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   104,   104,     0, 
          0,     0,     0,     0,   104,   104,   104,   104,     0,     0, 
        104,   116,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,   114,     0,     0,   104,   104,   104,   104,     0,   104, 
        104,   104,     0,     0,   104,     0,   104,   104,   104,     0, 
          0,    62,   117,     0,     0,     0,     0,     0,   118,   319, 
        320,   321,     0,     0,   113,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   114,     0,   104,   104,   322,   323, 
        324,   325,     0,   326,   327,   106,   109,     0,   328,     0, 
        329,     0,     0,   105,    62,   117,   107,     0,   108,     0, 
          0,   118,     0,     0,     0,     0,     0,   113,   116,    56, 
         57,    58,    59,    60,   249,   109,     0,   115,     0,     0, 
        111,   112,   105,     0,   109,   107,     0,   108,   106,     0, 
          0,   105,     0,     0,   107,     0,   108,     0,     0,     0, 
          0,   109,     0,   251,     0,    39,   115,     0,   105,     0, 
          0,   107,     0,   108,     0,   115,     0,     0,     0,     0, 
          0,   114,     0,   111,   112,     0,     0,     0,     0,     0, 
          0,     0,   115,     0,    39,     0,     0,     0,     0,   110, 
          0,    62,   117,    39,     0,     0,     0,     0,   118,     0, 
          0,     0,     0,     0,   113,     0,     0,     0,     0,     0, 
         39,     0,     0,     0,     0,     0,     0,     0,   110,     0, 
          0,     0,     0,     0,     0,   106,     0,   110,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   110,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        111,   112,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   116,    56,    57,    58,    59,    60,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   116,    56,    57,    58,    59,    60,     0,     0, 
          0,   116,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   114,     0,   143,    56, 
         57,    58,    59,    60,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    62,   117,     0,     0, 
          0,     0,     0,   118,     0,   114,     0,     0,     0,   113, 
          0,     0,     0,     0,   114,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    62,   117,     0,     0,     0, 
        106,   114,   118,     0,    62,   117,     0,     0,   113,     0, 
          0,   118,     0,     0,     0,     0,     0,   113,     0,     0, 
          0,   144,   117,   120,     0,     0,     0,   130,   118,   106, 
          0,     0,     0,     0,   113,   111,   112,     0,   106,     0, 
          0,   145,   146,   147,   148,   149,   150,   151,   152,     0, 
        154,   155,     0,     0,     0,   106,     0,     0,     0,     0, 
          0,     0,     0,     0,   111,   112,     0,     0,     0,     0, 
          0,     0,     0,   111,   112,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        111,   112,     0,     0,     0,     0,   228,   229,   230,   231, 
        232,   233,   234,   235,   236,   238,   240,   241,   242,   243, 
        244,   246,   247,   248,   250,   252,   253,   254,   255,   256, 
        257,   258,   259,   260,   261,   262,     0,     0,     0,     0, 
        244,   266,     0,   267,     0,     0,     0,     0,   274,     0, 
          0,     0,   275,   276,     0,   278,     0,     0,     0,     0, 
          0,     0,   120,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   293,     0,   294,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   296,     0,   297,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   120,   120,     0,     0,     0, 
        244,     0,     0,   306,   307,     0,     0,     0,     0,     0, 
          0,   310,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   120,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   120,     0,     0,     0,     0,     0, 
          0,     0,   244,     0,   369,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   120,   388,     0,   390, 
          0,     0,   391,   392,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   120,     0,   408,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   120,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   439, 
    );
    protected static $yyCheck = array(33,
         41,   125,    36,    37,   123,    36,    37,    92,    41,   125, 
        153,    44,    92,    47,   123,    92,    50,    37,    52,    50, 
         54,    52,    42,    54,    37,    38,   260,    47,    92,    42, 
         43,    91,    45,    46,    47,   312,    70,   260,   260,    70, 
         47,     6,    76,    77,    44,    41,   320,    60,    44,    62, 
         41,    85,    37,    38,    85,    40,    41,    42,    43,    44, 
         45,    46,    47,   123,    92,   194,   300,   321,    59,    76, 
         77,   300,   301,    58,    59,    60,    61,    62,    63,    37, 
         38,    94,    59,    41,    42,    43,    44,    45,    46,    47, 
         59,    35,    41,    93,    41,    44,    41,    44,   208,    44, 
         58,    59,    60,    61,    62,    63,    37,    38,    93,    94, 
         41,    42,    43,    44,    45,    46,    47,   340,   340,   153, 
         92,    40,    41,     5,   260,   402,   403,    58,    59,    60, 
         61,    62,    63,    91,    41,    93,    94,    44,   123,   124, 
        125,   260,   334,    25,   300,   301,   123,    59,   340,    92, 
         41,    58,    59,    44,   123,   284,   190,    39,    59,   190, 
         91,    35,    93,    94,    37,   123,   124,   125,    59,    42, 
         43,   334,    45,    46,    47,   260,   141,   340,   334,   216, 
        260,   125,   292,   260,   340,    91,    93,    60,    64,    62, 
        311,   301,   123,   124,   125,    93,   260,   261,   262,   263, 
        264,   265,   311,    37,    38,    40,    41,    41,    42,    43, 
         44,    45,    46,    47,   402,   403,    44,   346,   125,    40, 
        363,   340,   310,   344,    58,    59,    60,    61,    62,    63, 
         37,    38,   260,   311,    41,    42,    43,    44,    45,    46, 
         47,   310,   279,   280,    41,   373,   374,    44,   333,   373, 
        374,    58,    59,    60,    61,    62,    63,   373,   374,    93, 
         94,    58,    59,   340,   298,   300,   301,    76,    77,   333, 
        123,   308,   332,    61,    44,    37,    41,    61,    44,    44, 
         42,    43,   346,    45,    46,    47,    93,    94,   260,    59, 
        124,   125,   312,    59,    59,    44,    93,    40,   410,   312, 
        351,   338,    41,    41,    41,   333,    44,    70,    44,   123, 
         59,   345,   340,    41,    44,    40,    44,   124,   125,   260, 
         40,    59,    85,    40,   410,   310,   311,   312,   125,   363, 
         58,    59,    41,   370,    41,    44,   280,   281,   282,   283, 
        284,   285,    44,    41,    44,   396,   331,    61,   399,    58, 
         59,   260,   340,    41,   312,   340,    44,    61,   395,    40, 
        340,   333,   300,   301,    40,    93,    40,   418,   340,   410, 
         58,    59,    41,   331,   332,    58,    35,   410,   415,    44, 
        431,   312,   402,   403,    93,    41,   437,   400,   401,   402, 
        403,   335,   426,    40,   123,   426,   334,   125,   411,   412, 
        331,   332,   340,    40,    93,    93,   280,   281,   282,   283, 
        284,   285,    41,    41,    41,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   331,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   125,   340,   312, 
         44,   123,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    41,   125,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    58,    40,   125,    40,    40,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    59, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    41,    59,    40,    44,    40,    59,   331,   280,   281, 
        282,   283,   284,   285,   125,   312,   413,   414,    58,    59, 
         41,    61,   361,    63,   260,   261,   262,   263,   264,   265, 
        125,    59,    40,   125,   331,   344,   123,   400,   401,   402, 
        403,    59,    37,    38,   331,   340,    41,    42,    43,    44, 
         45,    46,    47,    93,   413,    41,   371,    40,    59,   340, 
        312,   125,    41,    58,    59,    60,    61,    62,    63,    58, 
        340,    41,   123,   125,    93,   123,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   125,   410,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    93,    94, 
        123,    41,    41,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   123,   331,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    41,   413,   414,   415,   124, 
        125,   280,   281,   282,   283,   284,   285,    41,    35,    37, 
         38,    41,   340,    41,    42,    43,    44,    45,    46,    47, 
        402,   403,    41,   331,    41,    58,    93,    41,   125,    41, 
         58,    59,    60,    61,    62,    63,    37,    38,    59,    59, 
         41,    42,    43,    44,    45,    46,    47,    41,   125,   125, 
          7,   141,    35,   331,   199,    84,   335,    58,    59,    60, 
         61,    62,    63,    37,    38,    93,    94,    41,    42,    43, 
         44,    45,    46,    47,    35,   198,    42,    41,    82,   345, 
        335,   425,   405,    91,    58,    59,    60,    61,    62,    63, 
        368,   197,    93,    94,   283,    23,   124,   125,   226,    -1, 
         -1,    -1,    -1,    -1,   382,   413,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,   331,   440,    93,    94,   443,    -1,    -1,    -1,   447, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,   312,    -1,    -1, 
         93,    94,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   280,   281,   282,   283,   284,   285,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   300,   301,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   280,   281,   282, 
        283,   284,   285,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,   300,   301,   280, 
        281,   282,   283,   284,   285,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,   300, 
        301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
        321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   331,    -1,   404,   405,   406,   407,   408,    -1,   312, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   331,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    37,    38,    93,    94,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    93,    94,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    -1,    44,    -1,    46,    47,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    92,    58, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    93,    94,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1, 
         -1,    41,    94,    -1,    44,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    58,    59, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    41,    94, 
         -1,    44,   124,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    58,    59,    42,    43,    -1, 
         45,    46,    47,    93,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    37, 
         38,    -1,    94,    -1,    42,    43,    -1,    45,    46,    47, 
         93,    -1,    -1,    -1,    -1,   125,    41,    -1,    -1,    44, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    41,    94, 
         -1,    44,   124,    58,    59,    -1,   260,   261,   262,   263, 
        264,   265,   125,    -1,   331,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    94,    -1,    44,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,   331,    58,    59,    -1,    -1,   300,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    41,   124,   125,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
        125,    -1,    58,    59,    -1,    -1,    -1,    93,    -1,   333, 
         -1,    -1,   125,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,   346,   312,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    93,    -1,   125, 
        400,   401,   331,    -1,   404,   405,   406,   407,   408,    -1, 
        312,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,   125, 
         -1,   404,   405,   406,   407,   408,    -1,   312,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
        312,   331,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,   331,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,   331,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,   331,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        413,   414,   415,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,   331,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   331,   414,   415,   416,   417, 
        418,   419,   420,   421,    37,    38,    -1,    -1,   413,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    59,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    59,    60,    61,    62,    63,    37,    38, 
         -1,    94,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    94,    -1, 
         -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    94,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    41,    94,    -1,    44,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    58,    59, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,    -1,    -1,    -1,    58,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    94,    -1,    42,    43,    -1, 
         45,    46,    47,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,   312, 
         41,    -1,    94,    44,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    41,    -1,    94, 
         44,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,   312,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,   125,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,   331,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        331,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   413,   414,   415,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,   410,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    37,    38,    -1,    94,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         38,    94,    -1,    41,   124,    43,    44,    45,    46,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    38,    94,    -1, 
         41,   124,    43,    44,    45,    46,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    38,    93,    94,    41,   124,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    93,    94,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,   124,   125,    58,    59,    -1,    61,    -1, 
         63,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    -1,    61,    38,    63,    -1,    41, 
         93,    94,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    38,    -1,    -1,    41,    93,    94,    44, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,   312, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   331,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   124,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        331,    -1,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   331,    -1,    -1, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,   331,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,   331,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,   404,   405,   406,   407,   408,    58,    59, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    58,    59,    93,    61,    -1,    63,    -1,    41,    -1, 
         -1,    44,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    58,    59,    -1,    61,    -1, 
         63,    41,    -1,    -1,    44,   125,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    58,    59, 
         -1,    61,    41,    63,    -1,    44,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   124,   125,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1,   125, 
         37,    38,    -1,    93,    -1,    42,    43,    -1,    45,    46, 
         47,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    60,    93,    62,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    37,    62,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,   125,    94,    -1,    -1, 
         -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    60,    -1, 
         62,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    41, 
         58,    59,    44,    41,    -1,    -1,    44,   124,    58,    59, 
         41,    -1,    -1,    44,    -1,    -1,    58,    59,    -1,    41, 
         58,    59,    44,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    93,    -1,    -1,    -1,    33,    -1,    -1, 
         -1,    93,    -1,    -1,    40,    93,    -1,    43,    -1,    45, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
        331,    93,    58,    -1,    -1,   125,    -1,    -1,    64,    -1, 
         -1,   331,    -1,   125,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    92,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
        126,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   331,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,   312,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,   413,   414,   415, 
         -1,   404,   405,   406,   407,   408,   312,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
        312,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   331,   260,   261,   262,   263,   264,   265, 
         -1,   331,    -1,   400,   401,   402,   403,    -1,    -1,   331, 
         -1,    -1,    -1,   331,   411,   412,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,   400,   401,   402,   403,    -1,   331, 
         33,    -1,    -1,    -1,    -1,   411,   412,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,   313,   400,   401, 
        402,   403,    -1,    -1,    -1,    -1,    59,    -1,    -1,   411, 
        412,    64,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,   413,   414,   415,    -1,    -1, 
        346,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    92, 
         -1,   413,   414,   415,    -1,   413,   414,   415,    -1,    -1, 
         -1,   367,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    -1,    33,    -1,    -1, 
        123,    -1,   125,   126,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    59,    -1,    -1,    -1,    -1,    64,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    92,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    -1,    -1, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    -1,   123,    -1,   125, 
        126,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   123,    -1,    -1,   126,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    -1,    -1,    -1,    -1,   126,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    61, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341,   342, 
        343,    -1,    -1,   346,   260,   261,   262,   263,   264,   265, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,   360,   361,   362, 
        363,    -1,   365,   366,   367,    -1,    -1,   370,   371,   372, 
        373,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,   313,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,   341,   342,   343,    -1,    -1, 
        346,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,   360,   361,   362,   363,    -1,   365, 
        366,   367,    -1,    -1,   370,    -1,   372,   373,   374,    -1, 
         -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341, 
        342,   343,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,   402,   403,   360,   361, 
        362,   363,    -1,   365,   366,   367,    33,    -1,   370,    -1, 
        372,    -1,    -1,    40,   333,   334,    43,    -1,    45,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,   260,   261, 
        262,   263,   264,   265,    61,    33,    -1,    64,    -1,    -1, 
        402,   403,    40,    -1,    33,    43,    -1,    45,   367,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    33,    -1,    61,    -1,    92,    64,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    64,    -1,    92,    -1,    -1,    -1,    -1,   126, 
         -1,   333,   334,    92,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,   313,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
        367,   313,   340,    -1,   333,   334,    -1,    -1,   346,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,   333,   334,    87,    -1,    -1,    -1,    91,   340,   367, 
         -1,    -1,    -1,    -1,   346,   402,   403,    -1,   367,    -1, 
         -1,   105,   106,   107,   108,   109,   110,   111,   112,    -1, 
        114,   115,    -1,    -1,    -1,   367,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,   160,   161,   162,   163, 
        164,   165,   166,   167,   168,   169,   170,   171,   172,   173, 
        174,   175,   176,   177,   178,   179,   180,   181,   182,   183, 
        184,   185,   186,   187,   188,   189,    -1,    -1,    -1,    -1, 
        194,   195,    -1,   197,    -1,    -1,    -1,    -1,   202,    -1, 
         -1,    -1,   206,   207,    -1,   209,    -1,    -1,    -1,    -1, 
         -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   237,    -1,   239,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   249,    -1,   251,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   279,   280,    -1,    -1,    -1, 
        284,    -1,    -1,   287,   288,    -1,    -1,    -1,    -1,    -1, 
         -1,   295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   308,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   338,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,   348,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   370,   371,    -1,   373, 
         -1,    -1,   376,   377,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   395,    -1,   397,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   432, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 387 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 416 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 420 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 423 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 428 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 438 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 438 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 451 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 451 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 455 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 455 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 461 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 462 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 481 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 485 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 489 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 495 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 496 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 511 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 515 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 525 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 531 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 540 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 553 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 566 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 566 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 572 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 572 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 576 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 576 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 586 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 586 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 595 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 598 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 134:  #line 601 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 135:  #line 604 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 136:  #line 607 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 137:  #line 610 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 138:  #line 613 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 616 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 619 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 141:  #line 623 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 142:  #line 629 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 143:  #line 635 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 144:  #line 641 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 145:  #line 646 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 146:  #line 651 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 147:  #line 654 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 148:  #line 657 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 149:  #line 660 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 150:  #line 663 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 151:  #line 674 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 153:  #line 679 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 154:  #line 680 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 155:  #line 684 "src/main/jay/grammars/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 157:  #line 689 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 158:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 159:  #line 693 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 160:  #line 699 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 161:  #line 700 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 162:  #line 701 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 702 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 703 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 707 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 166:  #line 710 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 167:  #line 713 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 168:  #line 716 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 169:  #line 722 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 170:  #line 723 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 171:  #line 727 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 173:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 174:  #line 736 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 175:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 176:  #line 738 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 739 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 740 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 741 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 181:  #line 743 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 185:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 186:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 187:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 193:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 194:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 200:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 207:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 212:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 213:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 215:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 216:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 217:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 218:  #line 801 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 219:  #line 804 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 220:  #line 804 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 807 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 222:  #line 810 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 223:  #line 813 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 224:  #line 816 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 225:  #line 816 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 228:  #line 829 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 229:  #line 833 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 230:  #line 837 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 231:  #line 838 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 232:  #line 844 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 233:  #line 845 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 234:  #line 849 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 235:  #line 850 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 236:  #line 854 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 237:  #line 855 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 238:  #line 856 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 239:  #line 857 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 240:  #line 858 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 241:  #line 859 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2418 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
