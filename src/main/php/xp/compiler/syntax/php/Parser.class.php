<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\YieldFromNode;
#line 82 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_YIELD_FROM= 368;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    83,    83,    84,    84,    85,    38,    87,    38,    25, 
         25,    25,    25,    25,    25,    86,    86,    86,    86,    88, 
         88,    90,    90,    89,    78,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    78,    79,    79,    79,    79, 
         79,    79,    79,    79,    80,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    81,    81,    81,    81,    81, 
         81,    82,    82,    73,    73,    91,    91,    93,    92,    94, 
         92,    92,    92,    92,    95,    92,    31,    31,    10,    96, 
         17,    17,    33,    33,    97,    97,    98,    98,    98,    98, 
         98,    98, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     1,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     2,     4,     2,     1,     1,     1,     1, 
          1,     5,     3,     3,     3,     3,     4,     4,     2,     7, 
          4,     0,     1,     1,     3,     1,     1,     0,     5,     1, 
          1,     1,     1,     1,     1,     0,     1,     1,     1,     1, 
          3,     0,     1,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     4,     4,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     2,     2,     2,     2,     2, 
          2,     2,     2,     0,     1,     1,     2,     0,     4,     0, 
          4,     2,     2,     4,     0,     6,     1,     1,     1,     1, 
          1,     3,     0,     1,     1,     2,     1,     1,     1,     1, 
          1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   237,   239,   238,   240,   242,   241,     0,     1,     0, 
         42,   234,     0,     8,     0,     4,     9,     0,    14,    16, 
        236,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   229,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   165,   161,   164,   162,   163, 
          0,     0,     0,   157,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   158,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   232,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   126,     0,     0,     0,     0,   124,     0, 
          0,   123,     0,     0,   137,   138,   139,   140,   141,   167, 
          0,     0,     0,     0,   170,    15,     0,    27,     0,     0, 
          0,     0,    29,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   132,   149,   130,     0,     0, 
        128,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   212,   213,    53,     0,     0,   159,     0,     0, 
          0,    31,     0,     0,    33,     0,    30,     0,     0,     0, 
          0,   230,     0,   227,     0,   127,   228,     0,   156,     0, 
          0,   154,   218,     0,   220,   125,   215,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   146,   145,   115,     0,     0,   173, 
        171,   160,    34,    32,    37,     0,     0,     0,   151,     0, 
          0,     0,     0,     0,     0,     0,     0,   223,     0,     0, 
        217,     0,   120,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   155,     0,   225,     0,     0,     0, 
        129,     0,     0,     0,     0,    59,     0,   119,   118,   131, 
         68,     0,    88,    72,    76,    78,    74,    84,    86,    70, 
         80,    91,     0,     0,     0,    65,     0,   102,   219,     0, 
        224,   221,     0,    63,     0,     0,     0,     0,    82,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    90, 
        150,    67,     0,   121,     0,     0,    62,    61,     0,     0, 
          0,     0,     0,     0,     0,    85,    87,     0,     0,   103, 
        226,    40,    56,     0,    38,    69,     0,    89,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    57,   110,    83,   107,     0,     0,    77,     0, 
          0,     0,     0,     0,     0,   109,     0,     0,     0,     0, 
        105,    71,    98,   100,     0,    95,     0,     0,     0,    79, 
         93,    75,     0,     0,     0,    81,    97,     0,     0,   106, 
          0,     0,     0,    73,     0,   101,     0,    99,     0,     0, 
        111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   120,   100,   214, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   138, 
        103,   104,   139,   205,    64,   334,   314,   300,   366,   385, 
        315,    34,    21,    35,    65,    66,    67,   122,   123,   335, 
        316,   317,   336,   337,   338,   247,   348,   357,   422,   351, 
        354,   412,   352,   353,   358,   425,   370,   405,   355,   356, 
        350,   426,   427,   434,   435,   433,   406,   407,   415,   124, 
        216,   294,   226,   160,   155,   229,   218,   125,   126,   127, 
        128,   129,   220,   221,   222,   133,    91,   134,   135,   271, 
        227,   228,   286,   290,   340,   217,    22,    23, 
    );
    protected static $yySindex = array(         -294,
          0,     0,  -279,  -189,  -189,   -10,  -279,     0,   -19,    41, 
         61,     0,     0,     0,     0,     0,     0,    65,     0,  -121, 
          0,     0,    78,     0,  -189,     0,     0,   105,     0,     0, 
          0,     0,   -83,    88,   141,   -83,   -83,     0,  -189,   184, 
         78,   105,     0,   -76,   -68,     0,   630,     0,     0,   -83, 
        -61,   -83,   157,   -83,   229,     0,     0,     0,     0,     0, 
        234,   269,  -104,     0,   270,   272,   273,     0,     0,   -83, 
        201,   291,     0,     0,   297,   -64,   -64,     0,  -221,     0, 
          0,  -118,     0,     0,   -83,    59,  4050,     0,     0,     0, 
       3392,     0,     0,   229,     0,   594,     0,    85,     0,  -216, 
          0,     0,     0,   147,  4091,  4050,  4050,  4050,  4050,  4050, 
       4050,  4050,  4050,     0,  4050,  4050,   306,   311,     0,   -58, 
       2411,     0,   312,   310,     0,     0,     0,     0,     0,     0, 
       1269,   310,   340,   352,     0,     0,   336,     0,   148,   139, 
        339,   -10,     0,   182,   253,  1296,  1339,  2411,  -101,  -101, 
       -248,  -101,  -101,  -101,   -74,     0,     0,     0,    63,   -53, 
          0,  4050,  4050,  4050,  4050,  4050,  4050,  4050,  4050,  4050, 
       3553,  3741,  4050,  4050,  4050,  4050,  4050,  4050,  4050,  3858, 
       4033,  4050,  4050,  4050,  4050,  4050,  4050,  4050,  4050,  4050, 
       4050,    -9,     0,     0,     0,  4050,  4050,     0,  4050,   104, 
         85,     0,   364,  4050,     0,    69,     0,  4050,  4050,   -53, 
       4050,     0,   365,     0,   370,     0,     0,  4050,     0,   371, 
        369,     0,     0,    -2,     0,     0,     0,   -53,  -215,  2438, 
       2465,  2465,  2465,  2465,  2465,  2465,  2465,  2465,  4050,  2465, 
       4050,  2465,  2465,  2465,  2465,  2411,   356,  2700,  3204,  2956, 
       4050,   128,  4050,   128,     4,     4,     4,     4,     4,   239, 
        239,  -248,  -248,  -248,     0,     0,     0,  2411,  1269,     0, 
          0,     0,     0,     0,     0,  2411,  2411,  2411,     0,  3167, 
       4050,  4050,   397,   316,    63,  4050,   401,     0,  4050,  4050, 
          0,   402,     0,   -53,  2465,  2465,  4050,  2465,  2465,   -44, 
        411,   412,   -53,  3697,     0,   372,     0,  1366,  1393,  4050, 
          0,  3167,   339,   425,   127,     0,   424,     0,     0,     0, 
          0,   346,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  3697,  1778,   355,     0,  3697,     0,     0,  4050, 
          0,     0,   452,     0,   436,   339,   -44,  4050,     0,  4050, 
        456,   457,  3697,   459,   441,   442,   462,   463,   379,     0, 
          0,     0,   464,     0,   -84,   -32,     0,     0,   454,  3697, 
       1805,  4050,  4050,   150,  4050,     0,     0,  4050,  4050,     0, 
          0,     0,     0,  3697,     0,     0,   391,     0,   458,  1832, 
        475,  1929,  1875,  1902,   393,   175,  4050,  3697,  4050,   180, 
       3697,   398,     0,     0,     0,     0,   175,   465,     0,  1972, 
        109,   482,   155,   -25,   487,     0,  4050,   473,   196,  3697, 
          0,     0,     0,     0,   427,     0,   -25,   -83,   512,     0, 
          0,     0,  3697,  4050,   502,     0,     0,   221,  3697,     0, 
       1999,  3697,   521,     0,  3697,     0,   440,     0,  3697,   439, 
          0, 
    );
    protected static $yyRindex= array(          660,
          0,     0,   265,     0,     0,    20,   638,     0,    16,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -151,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   498,     0,     0,     0,     0,   -21, 
        -36,     0,     0,  -108,   469,     0,     0,     0,     0,     0, 
        470,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   562,     0,     0,     0, 
          0,   481,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -162,   575,   -39,     0,     0, 
        581,     0,     0,     0,     0,  -162,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1242,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   167,     0,     0,     0, 
        174,     0,     0,    86,     0,     0,     0,     0,     0,     0, 
         51,   582,     0,   583,     0,     0,     0,     0,     0,     0, 
        158,   285,     0,  2026,     0,     0,   890,  1406,   593,   620, 
        759,   647,   691,   718,     0,     0,     0,     0,   585,   194, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   569,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   266,     0,     0,   103,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   194, 
          0,     0,     0,     0,     0,     0,     0,   575,     0,     0, 
        587,     0,     0,     0,     0,     0,     0,   496,     0,    94, 
        204,  1321,  1348,  1418,  1445,  1475,  1981,  2050,     0,  2077, 
          0,  2592,  3159,  3216,  3229,   264,     0,  3115,  3091,  2663, 
          0,  2710,     0,  3047,  2547,  2571,  2615,  2639,   -28,  2493, 
       2520,  1144,  1171,  1198,     0,     0,     0,   202,     0,     0, 
          0,     0,     0,     0,     0,   271,  2039,  2066,     0,   451, 
        575,   575,     0,     0,     0,   539,    43,     0,     0,     0, 
          0,    70,     0,   194,  3235,  3245,     0,  3254,  3258,   592, 
          0,     0,   194,   518,     0,     0,     0,     0,     0,   575, 
          0,  3138,   203,     0,     0,     0,   603,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   518,     0,     0,     0,   -96,     0,     0,   575, 
          0,     0,     0,     0,    23,   203,     0,   586,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   518, 
          0,   588,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   518,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   588,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  3348,     0,     0,     0, 
        605,     0,  3653,   523,     0,     0,   575,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   524,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   -89,     0,     0,   -89,     0,     0,     0,   518,     0, 
          0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   118,     0,     0,   643,   -33,     6,   -30, 
          0,     0,     0,   576,     0,     0,   198,     0,   517,   467, 
          0,     0,     0,  -220,   471,  4300,     0,     0,     0,     0, 
       -144,   627,   629,     0,   257,   590,     0,    22,  2205,   -34, 
        327,     0,   338,   390,     0,  -128,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   249,     0,     0,     0,     0,   289,     0,     0,   606, 
          0,     0,  -143,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   392,     0,     0,     0,   499,     0, 
        472,     0,     0,     0,     0,     0,   676,     0, 
    );
    protected static $yyTable = array(40,
        160,   160,    43,    43,   160,    44,    45,    39,    39,   200, 
        215,    20,   200,    63,    18,   200,    43,    39,    43,    69, 
         43,    72,    45,    75,    18,     1,   383,    39,    66,   200, 
        200,   200,   200,   200,   200,    64,    43,   223,    92,    72, 
        191,     5,    63,    63,   292,   189,   187,    39,   188,   186, 
        190,    43,    10,    10,    72,    10,    10,    10,    10,    10, 
         10,    10,    10,   192,   200,   200,   279,   267,    68,   225, 
          9,    45,    25,    10,    10,    10,    10,    10,    10,   222, 
        222,    39,    39,   222,   222,   222,   222,   222,   222,   222, 
        384,   114,   344,    18,   114,   200,   200,    68,    68,    26, 
        222,   222,   222,   222,   222,   222,   122,   122,    10,    10, 
        122,   122,   122,   122,   122,   122,   122,   140,    93,    27, 
        289,    43,    11,   141,   293,   367,   113,   122,   122,   122, 
        122,   122,   122,   222,   143,   222,   222,   143,    10,    10, 
         10,    94,    32,   172,   113,    39,   172,   206,   235,   235, 
        311,   143,   143,   193,   194,    28,    46,   306,    43,   320, 
        122,   266,   122,   122,   191,   222,   222,   222,    33,   189, 
        187,   233,   188,   186,   190,    38,    38,   233,    29,    30, 
         41,    61,   235,    99,    42,    38,   143,   182,   235,   184, 
        142,   201,   122,   122,   122,    88,    56,    57,    58,    59, 
         60,    35,    18,   160,   160,   143,   202,   160,   160,   160, 
        160,   160,   160,   160,   114,    38,    35,   114,   143,   369, 
        382,   158,   208,    47,   160,   160,   160,   160,   160,   160, 
        214,   214,   114,    50,   214,   214,   214,   214,   214,   214, 
        214,    52,   174,    35,   144,   174,    35,   144,   212,    70, 
         38,   214,   214,   214,   214,   214,   214,   287,   212,   160, 
        160,   144,   144,   233,   233,   213,    43,    83,    62,    12, 
         13,    14,    15,    16,    17,   191,    66,    66,   224,    74, 
        189,    54,    97,    64,    64,   190,   214,   214,   212,    76, 
        160,   160,    78,   209,    77,   313,   144,   233,   359,     5, 
        193,   194,   200,   233,   117,    79,   116,   117,    78,   116, 
         80,    36,    81,    43,    36,   192,    82,   214,   214,   233, 
        233,   117,   117,    84,   116,    10,    10,    10,   144,    36, 
        265,    43,    89,    90,    85,   387,    87,   288,    12,    13, 
         14,    15,    16,    17,   137,   158,    10,   423,   424,   395, 
        159,   161,   195,   196,   222,    10,   117,    12,    13,    14, 
         15,    16,    17,   272,    56,    57,    58,    59,    60,    12, 
         12,   200,   200,   222,   222,   200,   200,   200,   200,   200, 
        198,   122,   200,   200,   200,   200,   200,   200,   200,   200, 
        200,   200,   200,    98,    43,   199,   200,   438,   203,   204, 
        122,   122,   219,   275,   281,   193,   194,   446,   141,   282, 
        448,   284,   285,   297,   450,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   143,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   303,   304,   192, 
        307,   310,   222,   222,   222,   222,   222,   222,   222,   222, 
        222,   318,   319,   222,   222,   222,   222,   222,   222,   222, 
        222,   222,   222,   222,   339,   345,   346,   347,   349,   122, 
        122,   122,   122,   122,   122,   122,   122,   122,   160,   361, 
        122,   122,   122,   122,   122,   122,   122,   122,   122,   122, 
        122,   135,   364,   365,   135,   372,   373,   160,   375,   376, 
        377,   378,   379,   380,   381,   214,   143,   143,   135,   135, 
        391,   135,   386,   135,   399,   396,   397,   403,   404,   411, 
        414,   419,   420,   417,   214,   421,   428,   185,   183,   193, 
        194,   430,   216,   216,   144,   431,   216,   216,   216,   216, 
        216,   216,   216,   135,     5,     5,     5,     5,     5,     5, 
        192,   436,   439,   216,   216,   216,   216,   216,   216,   442, 
        443,   447,   449,   451,     5,     5,   160,   160,   160,   160, 
        160,   160,   160,   160,   160,   135,    12,   160,   160,   160, 
        160,   160,   160,   160,   160,   160,   160,   160,   216,   216, 
         43,    22,    20,   214,   214,   214,   214,   214,   214,   214, 
        214,   214,    48,   231,   214,   214,   214,   214,   214,   214, 
        214,   214,   214,   214,   214,   112,   144,   144,   144,   216, 
        216,   166,   168,   169,   233,   152,   116,   153,    18,   208, 
        208,   116,    58,   208,   208,   208,   208,   208,   208,   208, 
        193,   194,    64,    60,   116,    92,   112,    94,    96,    24, 
        208,   208,   208,   208,   208,   208,   209,   209,   207,    96, 
        209,   209,   209,   209,   209,   209,   209,   274,    49,    48, 
        273,    95,     6,   368,   362,   437,   305,   209,   209,   209, 
        209,   209,   209,   207,   207,   208,   208,   207,   207,   207, 
        207,   207,   207,   207,     2,   416,   132,   270,    31,   291, 
          0,     0,     0,     0,   207,   207,   207,   207,   207,   207, 
          0,     0,   209,   209,     0,     0,   208,   208,   136,     0, 
          0,    39,     0,     0,     0,     0,     0,   210,   210,     0, 
          0,   210,   210,   210,   210,   210,   210,   210,     0,   207, 
        207,     0,   374,   209,   209,     0,     0,     0,   210,   210, 
        210,   210,   210,   210,   211,   211,     0,     0,   211,   211, 
        211,   211,   211,   211,   211,     0,     0,     0,     0,     0, 
        207,   207,     0,     0,     0,   211,   211,   211,   211,   211, 
        211,   135,     0,   210,   210,     0,     0,   409,     0,     0, 
        413,     0,     0,     0,     0,   206,   206,     0,     0,   206, 
        206,   206,   206,   206,   206,   206,     0,   216,     0,   432, 
        211,   211,     0,     0,   210,   210,   206,   206,   206,   206, 
        206,   206,   440,     0,     0,     0,   216,     0,   444,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   211,   211,     0,     0,     0,     0,     0,     0,     0, 
          0,   206,   206,     0,   135,   135,   135,   135,   135,     0, 
          0,     0,     0,   135,   135,   135,   135,   135,   135,   135, 
        135,   135,     0,    12,    13,    14,    15,    16,    17,     0, 
          0,     0,   206,   206,     0,     0,     0,     0,     0,    55, 
         56,    57,    58,    59,    60,   216,   216,   216,   216,   216, 
        216,   216,   216,   216,   208,     0,   216,   216,   216,   216, 
        216,   216,   216,   216,   216,   216,   216,     6,     6,     6, 
          6,     6,     6,   208,     0,     0,     0,     0,    98,    61, 
        134,   209,     0,   134,     0,     0,     0,     6,     6,     2, 
          2,     2,     2,     2,     2,     0,     0,   134,   134,     0, 
        209,     0,     0,     0,     0,     0,     0,     0,   207,     2, 
          2,     0,    62,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    54,     0,   207,     0,     0, 
          2,     0,   134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   208,   208,     0,     0,   208,   208,   208,   208, 
        208,     0,   210,   208,   208,   208,   208,   208,   208,   208, 
        208,   208,   208,   208,   134,     0,     0,     0,     0,   209, 
        209,   210,     0,   209,   209,   209,   209,   209,     0,   211, 
        209,   209,   209,   209,   209,   209,   209,   209,   209,   209, 
        209,     0,     0,     0,     0,     0,   207,   207,   211,     0, 
        207,   207,   207,   207,   207,     0,     0,   207,   207,   207, 
        207,   207,   207,   207,   207,   207,   207,   207,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   206, 
        210,   210,     0,     0,   210,   210,   210,   210,   210,     0, 
          0,   210,   210,   210,   210,   210,   210,   210,   210,   210, 
        210,   210,     0,     0,     0,     0,     0,   211,   211,     0, 
          0,   211,   211,   211,   211,   211,     0,     0,   211,   211, 
        211,   211,   211,   211,   211,   211,   211,   211,   211,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   206,   206, 
          0,     0,   206,   206,   206,   206,   206,     0,     0,   206, 
        206,   206,   206,   206,   206,   206,   206,   206,   206,   206, 
        197,   197,     0,     0,   197,   197,   197,   197,   197,   197, 
        197,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   197,   197,   197,   197,   197,   197,   198,   198,     0, 
          0,   198,   198,   198,   198,   198,   198,   198,     0,     0, 
        134,     0,     0,     0,     0,     0,     0,     0,   198,   198, 
        198,   198,   198,   198,   199,   199,   197,   197,   199,   199, 
        199,   199,   199,   199,   199,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   199,   199,   199,   199,   199, 
        199,     0,     0,   198,   198,     0,     0,   197,   197,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   133,   133, 
          0,     0,   133,   133,     0,   133,     0,   133,   133,     0, 
        199,   199,     0,     0,   198,   198,     0,     0,     0,   133, 
        133,   133,   133,   133,   133,   191,   179,     0,     0,     0, 
        189,   187,     0,   188,   186,   190,     0,     0,     0,     0, 
          0,   199,   199,     0,     0,     0,     0,     0,   182,   164, 
        184,   176,   191,   179,   133,   133,   210,   189,   187,     0, 
        188,   186,   190,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   182,   164,   184,   176,     0, 
          0,   175,   178,     0,   175,   133,   133,     0,     0,     0, 
          0,     0,     0,     0,     0,   191,   179,     0,   175,   175, 
        189,   187,     0,   188,   186,   190,     0,     0,   176,   178, 
          0,   176,   177,     0,     0,     0,     0,     0,   182,   164, 
        184,   176,   191,   179,     0,   176,   176,   189,   187,     0, 
        188,   186,   190,   175,     0,     0,     0,     0,     0,   177, 
          0,     0,     0,     0,     0,   182,   164,   184,   176,   191, 
        179,     0,   178,     0,   189,   187,     0,   188,   186,   190, 
        176,     0,     0,     0,     0,   175,   136,     0,     0,   136, 
          0,     0,   182,   164,   184,   176,     0,     0,   177,   178, 
          0,   177,   177,   136,   136,     0,     0,     0,     0,     0, 
          0,     0,   176,     0,   197,   177,   177,     0,     0,     0, 
          0,     0,     0,     0,     0,   178,   178,     0,   178,   177, 
        341,     0,     0,     0,     0,     0,     0,     0,   136,     0, 
          0,   198,   178,   178,     0,     0,     0,     0,     0,     0, 
        177,     0,     0,     0,     0,   179,   177,   342,   179,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   199,     0, 
        136,     0,   179,   179,     0,     0,     0,   178,     0,     0, 
          0,     0,   177,   197,   197,     0,     0,   197,   197,   197, 
        197,   197,     0,   133,   197,   197,   197,   197,   197,   197, 
        197,   197,   197,   197,   197,     0,     0,   179,     0,   178, 
        198,   198,   133,     0,   198,   198,   198,   198,   198,     0, 
        192,   198,   198,   198,   198,   198,   198,   198,   198,   198, 
        198,   198,     0,     0,     0,     0,     0,   199,   199,   179, 
          0,   199,   199,   199,   199,   199,     0,   192,   199,   199, 
        199,   199,   199,   199,   199,   199,   199,   199,   199,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   133,   133,     0,     0,   133,   133,   133,   133,   133, 
        192,   175,   133,   133,   133,   133,   133,   133,   133,   133, 
        133,   133,   133,     0,     0,     0,     0,     0,   185,   183, 
        193,   194,   165,   166,   167,   168,   170,   192,   176,   180, 
        181,   197,   162,   163,   169,   174,   173,   175,   171,   172, 
          0,     0,     0,     0,     0,   185,   183,   193,   194,   165, 
        166,   167,   168,   170,   192,     0,   180,   181,     0,   162, 
        163,   169,   174,   173,   175,   171,   172,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   175,   175,   175,   136,     0,   185,   183, 
        193,   194,   165,   166,   167,   168,   170,     0,   177,   180, 
        181,   211,   162,   163,   169,   174,   173,   175,   171,   172, 
        176,   176,   176,     0,     0,   185,   183,   193,   194,   165, 
        166,   167,   168,   170,     0,   178,   180,   181,     0,   162, 
        163,   169,   174,   173,   175,   171,   172,     0,     0,     0, 
          0,     0,   185,   183,   193,   194,   165,   166,   167,   168, 
        170,     0,     0,   180,   181,   179,   162,   163,   169,   174, 
        173,   175,   171,   172,   191,   179,     0,     0,   136,   189, 
        187,     0,   188,   186,   190,     0,     0,     0,     0,     0, 
        177,   177,   177,     0,     0,     0,   360,   182,   164,   184, 
        176,   191,   179,     0,     0,     0,   189,   187,     0,   188, 
        186,   190,     0,     0,     0,     0,     0,   178,   178,   178, 
          0,     0,     0,   388,   182,   164,   184,   176,   191,   179, 
          0,   178,   398,   189,   187,     0,   188,   186,   190,     0, 
          0,     0,     0,     0,     0,     0,     0,   179,   179,   179, 
          0,   182,   164,   184,   176,     0,     0,     0,   178,     0, 
          0,   177,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   191,   179,     0,     0,   401,   189,   187,     0,   188, 
        186,   190,     0,     0,     0,   178,     0,     0,   177,     0, 
          0,     0,     0,     0,   182,   164,   184,   176,   191,   179, 
          0,     0,   402,   189,   187,     0,   188,   186,   190,     0, 
          0,     0,     0,     0,     0,   177,     0,     0,     0,     0, 
          0,   182,   164,   184,   176,   191,   179,     0,   178,     0, 
        189,   187,     0,   188,   186,   190,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   182,   164, 
        184,   176,     0,     0,     0,   178,     0,     0,   177,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   191,   179, 
          0,     0,   418,   189,   187,     0,   188,   186,   190,     0, 
          0,   181,   178,     0,   181,   177,     0,     0,     0,     0, 
          0,   182,   164,   184,   176,   191,   179,     0,   181,   181, 
        189,   187,     0,   188,   186,   190,     0,     0,     0,     0, 
          0,     0,   177,     0,     0,     0,   445,     0,   182,   164, 
        184,   176,   160,   160,     0,   178,     0,   160,   160,     0, 
        160,   160,   160,   181,     0,     0,     0,     0,     0,   147, 
          0,     0,   147,     0,     0,   160,   160,   160,   160,   192, 
        180,     0,   178,   180,     0,   177,   147,   147,     0,     0, 
          0,     0,     0,     0,     0,   181,   148,   180,   180,   148, 
          0,     0,     0,     0,     0,     0,   192,   204,     0,   160, 
        204,     0,   177,   148,   148,     0,     0,     0,     0,     0, 
          0,   147,     0,     0,   204,   204,     0,     0,     0,     0, 
          0,     0,   180,   192,     0,     0,     0,     0,     0,   160, 
          0,     0,     0,     0,     0,     0,     0,     0,   148,     0, 
          0,     0,     0,   147,     0,     0,     0,     0,     0,   204, 
          0,     0,     0,     0,   180,     0,     0,   185,   183,   193, 
        194,   165,   166,   167,   168,   170,   192,     0,   180,   181, 
        148,   162,   163,   169,   174,   173,   175,   171,   172,     0, 
          0,   204,     0,     0,   185,   183,   193,   194,   165,   166, 
        167,   168,   170,   192,     0,   180,   181,     0,   162,   163, 
        169,   174,   173,   175,   171,   172,     0,     0,     0,     0, 
          0,   185,   183,   193,   194,   165,   166,   167,   168,   170, 
        192,     0,   180,   181,     0,   162,   163,   169,   174,   173, 
        175,   171,   172,     0,     0,     0,     0,     0,     0,   400, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   185,   183,   193,   194,   165,   166, 
        167,   168,   170,   192,     0,   180,   181,     0,   162,   163, 
        169,   174,   173,   175,   171,   172,     0,     0,     0,     0, 
          0,   185,   183,   193,   194,   165,   166,   167,   168,   170, 
        192,   181,   180,   181,     0,   162,   163,   169,   174,   173, 
        175,   171,   172,     0,     0,     0,     0,     0,   185,   183, 
        193,   194,   165,   166,   167,   168,   170,   160,     0,   180, 
        181,     0,   162,   163,   169,   174,   173,   175,   171,   172, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   147, 
          0,   185,   183,   193,   194,   165,   166,   167,   168,   170, 
        180,     0,   180,   181,     0,   162,   163,   169,   174,   173, 
        175,   171,   172,   181,   181,   181,   148,     0,   185,   183, 
        193,   194,   165,   166,   167,   168,   170,   204,     0,   180, 
        181,     0,   162,   163,   169,   174,   173,   175,   171,   172, 
          0,     0,   283,     0,     0,   160,   160,   160,   160,   160, 
        160,   160,   160,   160,     0,    12,   160,   160,     0,   160, 
        160,   160,   160,   160,   160,   160,   160,   191,   179,     0, 
          0,   147,   189,   187,     0,   188,   186,   190,     0,     0, 
          0,     0,   180,   180,   180,     0,     0,     0,     0,     0, 
        182,   164,   184,   176,   191,   179,     0,     0,   148,   189, 
        187,     0,   188,   186,   190,   301,   302,     0,     0,   204, 
        204,   204,     0,     0,     0,     0,     0,   182,   164,   184, 
        176,   191,   179,     0,   178,     0,   189,   187,     0,   188, 
        186,   190,     0,     0,   343,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   182,   164,   184,   176,     0,     0, 
        195,   178,     0,   195,   177,   195,   195,   195,   195,     0, 
          0,     0,     0,     0,   363,     0,     0,     0,     0,     0, 
        195,   195,   195,   195,   195,   195,     0,   196,   178,     0, 
        196,   177,   196,   196,   196,   196,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   389,   196,   196,   196, 
        196,   196,   196,     0,   187,   195,   195,   187,   177,     0, 
        187,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   408,     0,     0,   187,   187,     0,   187,   189,   187, 
          0,   189,   196,   196,   189,     0,   195,   195,     0,     0, 
          0,   429,     0,     0,     0,     0,     0,     0,   189,   189, 
          0,   189,   205,   189,     0,   205,     0,     0,     0,   187, 
        187,     0,     0,   196,   196,     0,     0,     0,     0,   205, 
        205,     0,   188,     0,     0,   188,     0,     0,   188,     0, 
          0,     0,     0,   189,   189,     0,     0,     0,     0,     0, 
        187,   187,   188,   188,     0,   188,   190,   188,     0,   190, 
          0,     0,   190,     0,   205,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   189,   189,   190,   190,     0,   190, 
        202,   190,     0,   202,     0,     0,   202,   188,   188,     0, 
          0,     0,     0,     0,     0,     0,   205,     0,     0,     0, 
        202,   202,   192,   202,     0,   202,     0,     0,     0,     0, 
          0,   190,   190,     0,     0,     0,   191,   179,   188,   188, 
          0,   189,   187,     0,   188,   186,   190,   191,     0,   192, 
        191,     0,     0,   191,     0,   202,   202,     0,     0,   182, 
          0,   184,   190,   190,     0,     0,     0,   191,   191,     0, 
        191,     0,   191,     0,     0,     0,   192,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   202,   202,     0,     0, 
          0,     0,     0,   178,     0,     0,     0,     0,     0,     0, 
          0,     0,   191,   191,     0,     0,     0,     0,     0,     0, 
        185,   183,   193,   194,   165,   166,   167,   168,   170,     0, 
          0,   180,   181,   195,   162,   163,   169,   174,   173,   175, 
        171,   172,     0,   191,   191,     0,     0,   185,   183,   193, 
        194,   165,   166,   167,   168,   170,     0,     0,   180,   181, 
        196,     0,   163,   169,   174,   173,   175,   171,   172,     0, 
          0,     0,     0,     0,   185,   183,   193,   194,   165,   166, 
        167,   168,   170,     0,     0,   180,   181,   187,     0,     0, 
        169,   174,   173,   175,   171,   172,     0,     0,     0,     0, 
          0,     0,   195,   195,     0,     0,   195,   195,   195,   195, 
        195,   189,     0,   195,   195,   195,   195,   195,   195,   195, 
        195,   195,   195,   195,     0,     0,     0,     0,     0,   196, 
        196,     0,   205,   196,   196,   196,   196,   196,     0,     0, 
        196,   196,   196,   196,   196,   196,   196,   196,   196,   196, 
        196,     0,     0,     0,     0,   188,     0,     0,     0,     0, 
        187,   187,   187,   187,   187,     0,     0,   187,   187,   187, 
        187,   187,   187,   187,   187,   187,   187,   187,     0,   190, 
          0,     0,     0,     0,   189,   189,   189,   189,   189,     0, 
          0,   189,   189,   189,   189,   189,   189,   189,   189,   189, 
        189,   189,   191,   202,     0,     0,     0,   189,   187,     0, 
        188,   186,   190,     0,   205,   205,   205,     0,     0,     0, 
          0,   192,     0,     0,     0,   182,     0,   184,   188,   188, 
        188,   188,   188,     0,     0,   188,   188,   188,   188,   188, 
        188,   188,   188,   188,   188,   188,     0,     0,     0,     0, 
        191,     0,   190,   190,   190,   190,   190,     0,     0,   190, 
        190,   190,   190,   190,   190,   190,   190,   190,   190,   190, 
          0,     0,     0,     0,     0,     0,   202,   202,   202,   202, 
        202,     0,     0,     0,     0,   202,   202,   202,   202,   202, 
        202,   202,   202,   202,   192,     0,     0,   192,     0,     0, 
        192,     0,     0,     0,     0,     0,     0,     0,     0,   185, 
        183,   193,   194,     0,   192,   192,     0,   192,     0,   192, 
        180,   181,     0,   191,   191,   191,   191,   191,     0,     0, 
          0,     0,   191,   191,   191,   191,   191,   191,   191,   191, 
        191,   203,     0,     0,   203,     0,     0,     0,     0,   192, 
        192,     0,     0,     0,     0,     0,     0,     0,   203,   203, 
          0,   203,     0,   203,     0,   201,     0,     0,   201,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        192,   192,   201,   201,     0,   201,     0,   201,   142,     0, 
          0,   142,     0,   203,   203,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   142,   142,     0,   142,   182, 
        142,     0,   182,   191,   179,     0,     0,   201,   189,   187, 
          0,   188,   186,   190,   203,   203,   182,   182,     0,     0, 
          0,     0,     0,     0,     0,     0,   182,     0,   184,     0, 
        142,     0,     0,     0,     0,     0,     0,     0,   201,   201, 
        191,   179,     0,     0,     0,   189,   187,     0,   188,   186, 
        190,   182,     0,     0,     0,     0,   183,     0,     0,   183, 
        178,     0,   142,   182,     0,   184,     0,   192,     0,   184, 
          0,     0,   184,   183,   183,   185,     0,     0,   185,     0, 
          0,     0,     0,   182,     0,   186,   184,   184,   186,     0, 
        177,     0,   185,   185,   193,     0,     0,   193,   194,     0, 
          0,   194,   186,   186,     0,     0,     0,     0,   183,     0, 
          0,   193,   193,     0,     0,   194,   194,     0,     0,     0, 
          0,   184,     0,     0,     0,     0,     0,   185,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   186,     0,     0, 
        183,     0,     0,     0,     0,     0,   193,     0,     0,     0, 
        194,     0,     0,   184,     0,   185,   183,   193,   194,   185, 
          0,     0,     0,     0,     0,     0,   180,   181,     0,   186, 
          0,     0,     0,     0,     0,     0,     0,   192,   193,     0, 
        108,     0,   194,     0,     0,     0,     0,   108,     0,     0, 
        108,     0,   108,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   108,     0,     0,     0, 
          0,   108,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   203,     0,     0,   110,     0,     0,     0,     0,     0, 
          0,   105,     0,     0,   108,     0,   109,     0,     0,   108, 
          0,     0,     0,     0,     0,   201,     0,     0,     0,   130, 
        192,   192,   192,   192,   192,   116,     0,     0,     0,   192, 
        192,   192,   192,   192,   192,   192,   192,   192,   142,     0, 
        108,     0,   108,   108,     0,     0,     0,     0,   192,     0, 
          0,     0,     0,    39,     0,     0,     0,     0,     0,   182, 
          0,     0,     0,     0,   203,   203,   203,   203,   203,     0, 
          0,     0,     0,   203,   203,   203,   203,   203,   203,   203, 
        203,   203,     0,     0,     0,   192,     0,   111,   201,   201, 
        201,   201,   201,     0,     0,     0,     0,   201,   201,   201, 
        201,   201,   201,   201,   201,   201,     0,     0,     0,     0, 
          0,   142,   142,   142,   142,   142,   183,     0,     0,     0, 
        142,   142,   142,   142,   142,   142,   142,   142,   142,   184, 
          0,     0,     0,     0,     0,   185,   185,   183,   193,   194, 
          0,   182,   182,   182,     0,   186,     0,   180,   181,     0, 
          0,     0,     0,     0,   193,   110,     0,     0,   194,     0, 
          0,     0,   105,     0,     0,   108,     0,   109,     0,     0, 
          0,     0,     0,   185,   183,   193,   194,   108,   108,   108, 
        108,   108,   108,   239,   180,   181,   116,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   183,   183, 
        183,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   184,   184,   184,    39,     0,     0,   185,   185,   185, 
          0,   117,    56,    57,    58,    59,    60,   186,   186,   186, 
        108,     0,     0,     0,     0,     0,   193,   193,   193,     0, 
        194,   194,   194,     0,     0,     0,     0,     0,   111,     0, 
        108,   108,     0,     0,     0,   104,     0,   108,   108,   108, 
        108,     0,   104,   108,     0,   104,     0,   104,     0,     0, 
          0,     0,     0,     0,   115,     0,     0,   108,   108,   108, 
        108,   104,   108,   108,   108,   108,   104,   108,   108,   108, 
        108,   108,     0,     0,    62,   118,     0,     0,     0,   110, 
          0,   119,     0,     0,     0,     0,   105,   114,     0,   108, 
          0,   109,     0,     0,   104,     0,     0,     0,     0,   108, 
        108,     0,     0,     0,     0,   332,     0,     0,   106,   107, 
        116,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   110,     0,   104,     0,   104,   104,     0, 
        105,     0,     0,   108,     0,   109,     0,     0,    39,     0, 
          0,     0,     0,   112,   113,     0,     0,     0,     0,     0, 
          0,   241,     0,     0,   116,     0,     0,     0,     0,     0, 
          0,     0,   117,    56,    57,    58,    59,    60,     0,   333, 
          0,     0,   111,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    39,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   115,   111,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    62,   118,     0,     0,     0, 
        110,     0,   119,     0,     0,     0,     0,   105,   114,     0, 
        108,     0,   109,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   104,   104,   104,   104,   104,   104,   251,   106, 
        107,   116,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    39, 
          0,     0,     0,     0,   112,   113,   117,    56,    57,    58, 
         59,    60,     0,     0,     0,   104,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   111,     0,   104,   104,     0,     0,     0, 
          0,     0,   104,   104,   104,   104,     0,     0,   104,     0, 
        117,    56,    57,    58,    59,    60,     0,     0,     0,   115, 
          0,     0,   104,   104,   104,   104,     0,   104,   104,   104, 
        104,     0,   104,     0,   104,   104,   104,     0,     0,    62, 
        118,     0,     0,     0,     0,     0,   119,   321,   322,   323, 
          0,     0,   114,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   115,   104,   104,   324,   325,   326,   327, 
          0,   328,   329,   106,   107,   110,   330,     0,   331,     0, 
          0,     0,   105,    62,   118,   108,     0,   109,     0,     0, 
        119,     0,   110,     0,     0,     0,   114,     0,     0,   105, 
          0,     0,   108,   253,   109,     0,   116,     0,   112,   113, 
          0,     0,     0,     0,     0,     0,     0,   106,   107,     0, 
          0,     0,     0,   116,     0,     0,     0,   117,    56,    57, 
         58,    59,    60,   110,    39,     0,     0,     0,     0,     0, 
        105,     0,     0,   108,     0,   109,     0,     0,     0,     0, 
          0,    39,   112,   113,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   116,     0,     0,     0,   111,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        115,     0,     0,     0,     0,   111,     0,     0,     0,     0, 
          0,     0,    39,     0,     0,     0,     0,     0,     0,     0, 
         62,   118,     0,     0,     0,     0,     0,   119,     0,     0, 
          0,     0,     0,   114,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   111,     0,     0,     0, 
          0,     0,     0,     0,   106,   107,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   112, 
        113,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   117,    56,    57,    58,    59,    60,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   117, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   115,     0,     0,     0,     0, 
        144,    56,    57,    58,    59,    60,     0,     0,     0,     0, 
          0,     0,   115,     0,     0,    62,   118,     0,     0,     0, 
          0,     0,   119,     0,     0,     0,     0,     0,   114,     0, 
          0,     0,    62,   118,     0,     0,   121,     0,     0,   119, 
        131,     0,     0,     0,     0,   114,     0,     0,     0,   106, 
        107,     0,     0,   115,   146,   147,   148,   149,   150,   151, 
        152,   153,   154,     0,   156,   157,   106,   107,     0,     0, 
          0,     0,     0,   145,   118,     0,     0,     0,     0,     0, 
        119,     0,     0,     0,   112,   113,   114,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   112,   113,     0,     0,     0,     0,   106,   107,     0, 
          0,   230,   231,   232,   233,   234,   235,   236,   237,   238, 
        240,   242,   243,   244,   245,   246,   248,   249,   250,   252, 
        254,   255,   256,   257,   258,   259,   260,   261,   262,   263, 
        264,     0,   112,   113,     0,   246,   268,     0,   269,     0, 
          0,     0,     0,   276,     0,     0,     0,   277,   278,     0, 
        280,     0,     0,     0,     0,     0,     0,   121,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   295,     0, 
        296,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        298,     0,   299,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        121,   121,     0,     0,     0,   246,     0,     0,   308,   309, 
          0,     0,     0,     0,     0,     0,   312,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   121, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   121, 
          0,     0,     0,     0,     0,     0,     0,   246,     0,   371, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   121,   390,     0,   392,     0,     0,   393,   394,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   121,     0,   410,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   121,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   441, 
    );
    protected static $yyCheck = array(33,
         41,    41,    36,    37,    44,    36,    37,    92,    92,    38, 
        155,     6,    41,    47,   123,    44,    50,    92,    52,    50, 
         54,    52,    44,    54,    35,   320,    59,    92,   125,    58, 
         59,    60,    61,    62,    63,   125,    70,    91,   260,    70, 
         37,   321,    76,    77,   260,    42,    43,    92,    45,    46, 
         47,    85,    37,    38,    85,    40,    41,    42,    43,    44, 
         45,    46,    47,   312,    93,    94,   210,   196,    47,   123, 
        260,    93,    92,    58,    59,    60,    61,    62,    63,    37, 
         38,    59,    92,    41,    42,    43,    44,    45,    46,    47, 
        123,    41,   313,    35,    44,   124,   125,    76,    77,    59, 
         58,    59,    60,    61,    62,    63,    37,    38,    93,    94, 
         41,    42,    43,    44,    45,    46,    47,   334,   340,    59, 
        123,   155,     5,   340,   340,   346,    41,    58,    59,    60, 
         61,    62,    63,    91,    41,    93,    94,    44,   123,   124, 
        125,   260,    25,    41,    59,   123,    44,   142,   300,   301, 
        294,    58,    59,   402,   403,    91,    39,   286,   192,   303, 
         91,   192,    93,    94,    37,   123,   124,   125,    64,    42, 
         43,   334,    45,    46,    47,   260,   260,   340,   300,   301, 
         93,   300,   334,   125,    44,   260,    93,    60,   340,    62, 
         44,    44,   123,   124,   125,   260,   261,   262,   263,   264, 
        265,    44,   311,    37,    38,    59,    59,    41,    42,    43, 
         44,    45,    46,    47,    41,   260,    59,    44,   125,   348, 
        365,    40,    41,    40,    58,    59,    60,    61,    62,    63, 
         37,    38,    59,   310,    41,    42,    43,    44,    45,    46, 
         47,   310,    41,    41,    41,    44,    44,    44,   333,   311, 
        260,    58,    59,    60,    61,    62,    63,   260,   333,    93, 
         94,    58,    59,   300,   301,   340,   300,    70,   333,   280, 
        281,   282,   283,   284,   285,    37,   373,   374,   332,   123, 
         42,   346,    85,   373,   374,    47,    93,    94,   333,    61, 
        124,   125,    40,    41,    61,   340,    93,   334,   333,    35, 
        402,   403,   331,   340,    41,   410,    41,    44,    40,    44, 
         41,    41,    41,   347,    44,   312,    44,   124,   125,   300, 
        301,    58,    59,   123,    59,   310,   311,   312,   125,    59, 
        340,   365,    76,    77,    44,   370,    40,   340,   280,   281, 
        282,   283,   284,   285,   260,    40,   331,   373,   374,   384, 
         40,   410,    41,    44,   312,   340,    93,   280,   281,   282, 
        283,   284,   285,   260,   261,   262,   263,   264,   265,   410, 
        410,   400,   401,   331,   332,   404,   405,   406,   407,   408, 
         41,   312,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   335,   428,    44,    61,   428,   260,    61, 
        331,   332,   340,    40,    40,   402,   403,   442,   340,    40, 
        445,    41,    44,    58,   449,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   331,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    41,   123,   312, 
         40,    40,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    41,    41,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    93,    41,   340,    44,   123,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,   125, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    41,    41,    58,    44,    40,    40,   331,    40,    59, 
         59,    40,    40,   125,    41,   312,   413,   414,    58,    59, 
        361,    61,    59,    63,    40,   125,    59,   125,   344,   340, 
        123,   413,    41,    59,   331,   371,    40,   400,   401,   402, 
        403,    59,    37,    38,   331,   340,    41,    42,    43,    44, 
         45,    46,    47,    93,   280,   281,   282,   283,   284,   285, 
        312,   125,    41,    58,    59,    60,    61,    62,    63,    58, 
        340,    41,   123,   125,   300,   301,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   125,   410,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    93,    94, 
         93,   123,   123,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    41,   123,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    41,   413,   414,   415,   124, 
        125,    41,    41,    41,   340,    41,    58,    41,    35,    37, 
         38,    93,    41,    41,    42,    43,    44,    45,    46,    47, 
        402,   403,   125,    41,    59,    41,    59,   125,   125,     7, 
         58,    59,    60,    61,    62,    63,    37,    38,   142,    84, 
         41,    42,    43,    44,    45,    46,    47,   201,    42,    41, 
        200,    82,    35,   347,   337,   427,   285,    58,    59,    60, 
         61,    62,    63,    37,    38,    93,    94,    41,    42,    43, 
         44,    45,    46,    47,    35,   407,    91,   199,    23,   228, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    93,    94,    -1,    -1,   124,   125,   125,    -1, 
         -1,    92,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    93, 
         94,    -1,   353,   124,   125,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,   331,    -1,    93,    94,    -1,    -1,   398,    -1,    -1, 
        401,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,   312,    -1,   420, 
         93,    94,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,   433,    -1,    -1,    -1,   331,    -1,   439,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   280,   281,   282,   283,   284,   285,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   280,   281,   282, 
        283,   284,   285,   331,    -1,    -1,    -1,    -1,   335,   300, 
         41,   312,    -1,    44,    -1,    -1,    -1,   300,   301,   280, 
        281,   282,   283,   284,   285,    -1,    -1,    58,    59,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,   300, 
        301,    -1,   333,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,   331,    -1,    -1, 
        321,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,   312,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   125,    -1,    -1,    -1,    -1,   400, 
        401,   331,    -1,   404,   405,   406,   407,   408,    -1,   312, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   331,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    37,    38,    93,    94,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    93,    94,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    -1,    44,    -1,    46,    47,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    93,    94,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1, 
         -1,    41,    94,    -1,    44,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    58,    59, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    41,    94, 
         -1,    44,   124,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    58,    59,    42,    43,    -1, 
         45,    46,    47,    93,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    37, 
         38,    -1,    94,    -1,    42,    43,    -1,    45,    46,    47, 
         93,    -1,    -1,    -1,    -1,   125,    41,    -1,    -1,    44, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    41,    94, 
         -1,    44,   124,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   125,    -1,   331,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    94,    -1,    44,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,   331,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    41,   124,   125,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
        125,    -1,    58,    59,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    -1,   125,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,   312,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    93,    -1,   125, 
        400,   401,   331,    -1,   404,   405,   406,   407,   408,    -1, 
        312,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,   125, 
         -1,   404,   405,   406,   407,   408,    -1,   312,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
        312,   331,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,   331,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,   331,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,   331,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        413,   414,   415,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,   331,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   331,   414,   415,   416,   417, 
        418,   419,   420,   421,    37,    38,    -1,    -1,   413,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    59,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    59,    60,    61,    62,    63,    37,    38, 
         -1,    94,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    94,    -1, 
         -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    94,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    41,    94,    -1,    44,   124,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    58,    59, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,    -1,    -1,    -1,    58,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    94,    -1,    42,    43,    -1, 
         45,    46,    47,    93,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    60,    61,    62,    63,   312, 
         41,    -1,    94,    44,    -1,   124,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    41,    58,    59,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    41,    -1,    94, 
         44,    -1,   124,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,   312,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
        125,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,   125,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,   331,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        331,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   413,   414,   415,   331,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,   218,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,   410,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    37,    38,    -1, 
         -1,   413,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    -1,   413,    42, 
         43,    -1,    45,    46,    47,   281,   282,    -1,    -1,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    37,    38,    -1,    94,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,   310,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         38,    94,    -1,    41,   124,    43,    44,    45,    46,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    38,    94,    -1, 
         41,   124,    43,    44,    45,    46,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   372,    58,    59,    60, 
         61,    62,    63,    -1,    38,    93,    94,    41,   124,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   397,    -1,    -1,    58,    59,    -1,    61,    38,    63, 
         -1,    41,    93,    94,    44,    -1,   124,   125,    -1,    -1, 
         -1,   417,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    41,    63,    -1,    44,    -1,    -1,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    -1,    61,    38,    63,    -1,    41, 
         -1,    -1,    44,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    58,    59,    -1,    61, 
         38,    63,    -1,    41,    -1,    -1,    44,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         58,    59,   312,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    37,    38,   124,   125, 
         -1,    42,    43,    -1,    45,    46,    47,    38,    -1,   312, 
         41,    -1,    -1,    44,    -1,    93,    94,    -1,    -1,    60, 
         -1,    62,   124,   125,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   331,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   124,   125,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        331,    -1,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   331,    -1,    -1, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,   331,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,   331,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   331, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    37,   331,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    60,    -1,    62,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,    -1,    58,    59,    -1,    61,    -1,    63, 
        411,   412,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    -1,    61,    -1,    63,    41,    -1, 
         -1,    44,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    41, 
         63,    -1,    44,    37,    38,    -1,    -1,    93,    42,    43, 
         -1,    45,    46,    47,   124,   125,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    46, 
         47,    93,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         94,    -1,   125,    60,    -1,    62,    -1,   312,    -1,    41, 
         -1,    -1,    44,    58,    59,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,   125,    -1,    41,    58,    59,    44,    -1, 
        124,    -1,    58,    59,    41,    -1,    -1,    44,    41,    -1, 
         -1,    44,    58,    59,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    58,    59,    -1,    -1,    58,    59,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         93,    -1,    -1,   125,    -1,   400,   401,   402,   403,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,   411,   412,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,   125,    -1, 
         33,    -1,   125,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    59,    -1,    -1,    -1, 
         -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    92, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    58, 
        404,   405,   406,   407,   408,    64,    -1,    -1,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   331,    -1, 
        123,    -1,   125,   126,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,   312,    -1,   126,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,   331,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
         -1,    -1,    -1,    -1,    -1,   331,   400,   401,   402,   403, 
         -1,   413,   414,   415,    -1,   331,    -1,   411,   412,    -1, 
         -1,    -1,    -1,    -1,   331,    33,    -1,    -1,   331,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   260,   261,   262, 
        263,   264,   265,    61,   411,   412,    64,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   413,   414,   415,    92,    -1,    -1,   413,   414,   415, 
         -1,   260,   261,   262,   263,   264,   265,   413,   414,   415, 
        313,    -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,   126,    -1, 
        333,   334,    -1,    -1,    -1,    33,    -1,   340,   341,   342, 
        343,    -1,    40,   346,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,   360,   361,   362, 
        363,    59,   365,   366,   367,   368,    64,   370,   371,   372, 
        373,   374,    -1,    -1,   333,   334,    -1,    -1,    -1,    33, 
         -1,   340,    -1,    -1,    -1,    -1,    40,   346,    -1,    43, 
         -1,    45,    -1,    -1,    92,    -1,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    59,    -1,    -1,   367,   368, 
         64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,   123,    -1,   125,   126,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    92,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,   123, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         33,    -1,   340,    -1,    -1,    -1,    -1,    40,   346,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    61,   367, 
        368,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92, 
         -1,    -1,    -1,    -1,   402,   403,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,   341,   342,   343,    -1,    -1,   346,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,   313, 
         -1,    -1,   360,   361,   362,   363,    -1,   365,   366,   367, 
        368,    -1,   370,    -1,   372,   373,   374,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,   341,   342,   343, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,   402,   403,   360,   361,   362,   363, 
         -1,   365,   366,   367,   368,    33,   370,    -1,   372,    -1, 
         -1,    -1,    40,   333,   334,    43,    -1,    45,    -1,    -1, 
        340,    -1,    33,    -1,    -1,    -1,   346,    -1,    -1,    40, 
         -1,    -1,    43,    61,    45,    -1,    64,    -1,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,   368,    -1, 
         -1,    -1,    -1,    64,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    33,    92,    -1,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    92,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        333,   334,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,   333,   334,    -1,    -1,    87,    -1,    -1,   340, 
         91,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,   367, 
        368,    -1,    -1,   313,   105,   106,   107,   108,   109,   110, 
        111,   112,   113,    -1,   115,   116,   367,   368,    -1,    -1, 
         -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,    -1,    -1,    -1,   402,   403,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,   367,   368,    -1, 
         -1,   162,   163,   164,   165,   166,   167,   168,   169,   170, 
        171,   172,   173,   174,   175,   176,   177,   178,   179,   180, 
        181,   182,   183,   184,   185,   186,   187,   188,   189,   190, 
        191,    -1,   402,   403,    -1,   196,   197,    -1,   199,    -1, 
         -1,    -1,    -1,   204,    -1,    -1,    -1,   208,   209,    -1, 
        211,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   239,    -1, 
        241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        251,    -1,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        281,   282,    -1,    -1,    -1,   286,    -1,    -1,   289,   290, 
         -1,    -1,    -1,    -1,    -1,    -1,   297,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   310, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   348,    -1,   350, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   372,   373,    -1,   375,    -1,    -1,   378,   379,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   397,    -1,   399,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   417,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   434, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', 
      'T_YIELD_FROM', NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 
      'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 
      'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 
      'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 
      'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 
      'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 199 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 199 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 210 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 211 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 215 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 222 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 227 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 233 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 233 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 242 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 242 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 253 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 254 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 258 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 259 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 263 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 264 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 268 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 269 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 274 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 275 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 279 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 280 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 284 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 285 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 291 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 301 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 307 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 308 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 314 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 314 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 328 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 329 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 334 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 335 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 339 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 340 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 344 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 348 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 353 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 361 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 362 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 366 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 367 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 372 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 378 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 381 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 388 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 389 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 393 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 394 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 398 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 399 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 403 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 404 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 412 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 417 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 418 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 422 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 422 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 425 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 425 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 430 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 430 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 440 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 440 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 445 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 445 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 449 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 449 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 453 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 453 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 457 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 457 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 463 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 464 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 464 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 468 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 472 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 473 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 477 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 482 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 483 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 487 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 487 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 491 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 491 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 497 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 498 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 502 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 503 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 503 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 512 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 513 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 517 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 517 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 527 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 532 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 533 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 537 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 542 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 547 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 555 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 558 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 561 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 568 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 568 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 574 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 574 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 578 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 578 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 588 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 588 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 597 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 600 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 134:  #line 603 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 135:  #line 606 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 136:  #line 609 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldFromNode($yyVals[0+$yyTop]));
    } break;

    case 137:  #line 612 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 138:  #line 615 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 618 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 621 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 141:  #line 624 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 142:  #line 628 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 143:  #line 634 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 144:  #line 640 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 145:  #line 646 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 146:  #line 651 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 147:  #line 656 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 148:  #line 659 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 149:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 150:  #line 665 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 151:  #line 668 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 152:  #line 679 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 154:  #line 684 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 155:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 156:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 158:  #line 694 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 159:  #line 694 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 160:  #line 698 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 161:  #line 704 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 162:  #line 705 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 706 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 166:  #line 712 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 167:  #line 715 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 168:  #line 718 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 169:  #line 721 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 170:  #line 727 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 171:  #line 728 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 172:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 175:  #line 741 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 176:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 743 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 182:  #line 748 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 186:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 187:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 194:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 195:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 201:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 208:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 213:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 214:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 216:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 217:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 218:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 219:  #line 806 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 220:  #line 809 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 221:  #line 809 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 222:  #line 812 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 223:  #line 815 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 224:  #line 818 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 225:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 226:  #line 821 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 229:  #line 834 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 230:  #line 838 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 231:  #line 842 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 232:  #line 843 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 233:  #line 849 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 234:  #line 850 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 235:  #line 854 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 236:  #line 855 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 237:  #line 859 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 238:  #line 860 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 239:  #line 861 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 240:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 241:  #line 863 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 242:  #line 864 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2419 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
