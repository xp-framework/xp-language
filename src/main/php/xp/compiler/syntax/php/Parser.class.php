<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\UnpackNode;
#line 82 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 422;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_ELLIPSIS= 423;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    42,    42,    40,    40,    43,    43, 
         47,    45,    48,    45,    50,    45,    52,    45,    54,    45, 
         55,    45,    56,    45,    58,    45,    60,    45,    61,    45, 
         62,    45,    45,    45,    53,    53,    57,    57,    63,    63, 
         65,    64,    66,    64,    44,    44,    49,    67,    49,    59, 
         68,    68,    70,    69,    39,    39,    39,    71,    71,    51, 
         51,    72,    72,    46,    46,    73,    73,    74,    74,    74, 
         74,    26,    76,    26,    77,    26,    78,    26,    79,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    85, 
         85,    87,    87,    88,    86,    86,    38,    90,    38,    91, 
         38,    25,    25,    25,    25,    25,    25,    89,    89,    89, 
         89,    92,    92,    94,    94,    93,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    80,    80,    80,    81,    81, 
         81,    81,    81,    81,    81,    81,    82,    82,    82,    82, 
         82,    82,    82,    82,    82,    82,    82,    82,    83,    83, 
         83,    83,    83,    83,    84,    84,    75,    75,    95,    95, 
         97,    96,    98,    96,    96,    96,    96,    99,    96,   100, 
         96,    31,    31,    10,   101,    17,    17,    33,    33,   102, 
        102,   103,   103,   103,   103,   103,   103, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     4,     2,     3,     0,     1,     1,     2, 
          0,     4,     0,     7,     0,    10,     0,     8,     0,     6, 
          0,     8,     0,     8,     0,     6,     0,     3,     0,     3, 
          0,     4,     2,     1,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     1, 
          1,     2,     0,     9,     0,     1,     3,     2,     1,     0, 
          1,     1,     3,     0,     1,     4,     4,     1,     4,     1, 
          1,     2,     0,     3,     0,     3,     0,     5,     0,     6, 
          2,     1,     2,     4,     1,     1,     1,     1,     1,     5, 
          3,     3,     3,     3,     4,     4,     2,     8,     4,     0, 
          1,     1,     3,     2,     0,     4,     1,     0,     4,     0, 
          5,     1,     1,     1,     1,     1,     1,     0,     1,     1, 
          1,     1,     3,     0,     1,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     4,     4,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     2,     2, 
          2,     2,     2,     2,     2,     2,     0,     1,     1,     2, 
          0,     4,     0,     4,     2,     2,     4,     0,     6,     0, 
          4,     1,     1,     1,     1,     1,     3,     0,     1,     1, 
          2,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   252,   254,   253,   255,   257,   256,     0,     1,     0, 
         42,   249,     0,     8,     0,     4,     9,     0,    14,    16, 
        251,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   244,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,   168,     0,     0,   177,   173,   176,   174, 
        175,     0,     0,     0,   167,     0,     0,     0,    52,    19, 
          0,     0,     0,    23,    25,     0,     0,     0,     0,   170, 
          0,    46,    47,     0,    21,    25,     0,     0,     0,     0, 
        179,     0,     0,     0,     0,     0,     0,   135,     0,     0, 
          0,     0,   133,     0,     0,     0,     0,   145,   146,   147, 
        148,   149,     0,     0,   182,     0,     0,    50,    51,     0, 
         54,    56,    55,     0,    49,     0,   247,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   141,   157,   139,     0,     0, 
        137,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   225,   226,   240,   231,     0,   233, 
        132,   228,     0,     0,   169,     0,     0,     0,     0,     0, 
          0,    15,     0,    27,     0,     0,     0,     0,    29,     0, 
          0,     0,     0,   245,     0,   242,     0,   136,   243,     0, 
          0,     0,     0,   162,   134,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   154,   153,     0,     0,     0,   236,     0, 
          0,   230,   123,     0,   185,   183,     0,    53,     0,   171, 
          0,     0,    31,     0,     0,    33,     0,    30,     0,     0, 
        159,     0,     0,     0,     0,   164,     0,     0,     0,   131, 
        128,     0,     0,     0,     0,     0,     0,     0,     0,   238, 
          0,     0,   117,   172,    34,    32,    37,     0,     0,     0, 
          0,     0,     0,   163,     0,   138,     0,   241,   232,     0, 
        237,   234,     0,   127,   126,   140,     0,     0,     0,     0, 
          0,     0,     0,     0,    60,     0,     0,    71,     0,    91, 
         75,    79,    81,    77,    87,    89,    73,    83,    94,     0, 
          0,     0,    68,     0,   105,   129,   239,    65,     0,     0, 
          0,     0,     0,   166,     0,    85,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    93,   158,    70,    66, 
          0,     0,    63,     0,    62,     0,     0,     0,     0,     0, 
          0,     0,    88,    90,     0,     0,   106,    40,    57,     0, 
         38,    64,    72,     0,    92,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    58,   113,    86,   110,     0,     0,    80,     0,     0, 
          0,     0,     0,     0,   112,     0,     0,     0,     0,   108, 
         74,   101,   103,     0,    98,     0,     0,     0,    82,    96, 
         78,     0,     0,     0,    84,   100,     0,     0,   109,     0, 
          0,     0,    76,     0,   104,     0,   102,     0,     0,   114, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   104,   130,   216, 
         36,    51,    72,    88,    37,    53,    74,   131,   132,   204, 
        133,   134,   205,   286,    65,   361,   343,   333,   392,   411, 
        344,    34,    21,    35,    66,    67,    68,   106,   199,   362, 
        345,   346,   363,   364,   365,   244,   375,   384,   451,   378, 
        417,   381,   441,   379,   380,   385,   454,   397,   434,   382, 
        383,   377,   455,   456,   463,   464,   462,   435,   436,   444, 
        200,   418,   218,   302,   191,   150,   145,   226,   220,   108, 
        109,   110,   111,   112,   222,   323,   223,   224,   113,    76, 
        120,   114,   115,   276,   192,   193,   267,   271,   330,   266, 
        219,    22,    23, 
    );
    protected static $yySindex = array(         -270,
          0,     0,  -261,  -173,  -173,   121,  -261,     0,    15,    70, 
         80,     0,     0,     0,     0,     0,     0,    62,     0,    28, 
          0,     0,   297,     0,  -173,     0,     0,   100,     0,     0, 
          0,     0,   -26,    91,   144,   -26,   -26,     0,  -173,   236, 
        297,   100,     0,   -79,   -70,     0,   458,     0,     0,   -26, 
        -49,   -26,   151,     0,   -26,   224,     0,     0,     0,     0, 
          0,   253,   257,  -127,     0,   254,   276,   277,     0,     0, 
        -26,   207,   305,     0,     0,  4322,   313,   576,   576,     0, 
       -231,     0,     0,  -229,     0,     0,   -26,   191,  4756,  4770, 
          0,  4770,  4770,  4770,  4770,  4770,  4770,     0,  4770,  4770, 
        317,   324,     0,   -51,  1400,    22,   323,     0,     0,     0, 
          0,     0,   268,   341,     0,   -15,     0,     0,     0,  4322, 
          0,     0,     0,   224,     0,   304,     0,   105,     0,  -234, 
          0,     0,     0,    30,   283,   292,  1638,  1704,   -61,   -61, 
       -253,   -61,   -61,   -61,   -27,     0,     0,     0,    46,    22, 
          0,  4770,  4770,  4770,  4770,  4770,  4770,  4770,  4770,  4770, 
       4366,  4624,  4770,  4770,  4770,  4770,  4770,  4770,  4770,  4770, 
       4647,  4662,  4770,  4770,  4770,  4770,  4770,  4770,  4770,  4770, 
       4770,  4770,  4770,   -80,     0,     0,     0,     0,  -108,     0, 
          0,     0,    22,  4770,     0,  4770,  4770,  2485,   355,   353, 
        357,     0,   346,     0,   119,   149,   354,   121,     0,  4770, 
       4770,    22,  4770,     0,   374,     0,   380,     0,     0,   -15, 
        354,   386,   387,     0,     0,  -197,  2674,  2785,  2785,  2785, 
       2785,  2785,  2785,  2785,  2785,  4770,  2785,  4770,  2785,  2785, 
       2785,  2785,  2485,   372,  2485,    10,   765,  1138,  4770,    36, 
       4770,    36,    77,    77,    77,    77,    77,    -3,    -3,  -276, 
       -276,  -276,  -253,     0,     0,   -15,  4770,   393,     0,  4770, 
       4770,     0,     0,  1400,     0,     0,  2485,     0,   -15,     0, 
        385,   105,     0,   394,  4770,     0,    95,     0,  2485,  2485, 
          0,    48,   -15,   -15,   401,     0,   123,    46,   405,     0, 
          0,    22,  2785,  2785,  4770,  2785,  2785,   411,   360,     0, 
       1787,  1815,     0,     0,     0,     0,     0,  2485,   413,   420, 
         22,   422,   342,     0,   -15,     0,    48,     0,     0,   -15, 
          0,     0,   -68,     0,     0,     0,    46,  4279,   423,   425, 
        354,   128,   436,  -335,     0,   438,   186,     0,   363,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  4279, 
       1842,   358,     0,  4279,     0,     0,     0,     0,   354,   439, 
        354,   158,   -68,     0,  4770,     0,  4770,   460,   462,  4279, 
        463,   454,   455,   482,   483,   399,     0,     0,     0,     0, 
        -91,   -24,     0,   354,     0,   466,  4279,  1939,  4770,  4770, 
        166,  4770,     0,     0,  4770,  4770,     0,     0,     0,  4279, 
          0,     0,     0,   403,     0,  2485,   480,   323,  2040,   502, 
       2238,  2273,  2339,   419,   204,  4770,  4279,  4770,   211,  4279, 
        429,     0,     0,     0,     0,   204,   505,     0,  2374,   148, 
        522,   195,   -23,   529,     0,  4770,   514,   260,  4279,     0, 
          0,     0,     0,   498,     0,   -23,   -26,   542,     0,     0, 
          0,  4279,  4770,   549,     0,     0,   288,  4279,     0,  2450, 
       4279,   583,     0,  4279,     0,   515,     0,  4279,   516,     0, 
    );
    protected static $yyRindex= array(          275,
          0,     0,   310,     0,     0,    43,   321,     0,   332,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    83,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   547,     0,     0,     0,     0,    -1, 
        319,     0,     0,   -83,   528,     0,     0,     0,     0,     0, 
        531,     0,     0,     0,     0,   -30,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   611,     0,     0, 
          0,     0,   532,     0,     0,   567,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -153,     0,  1303, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        447,     0,     0,     0,    23,   668,    -9,     0,     0,     0, 
          0,     0,     0,    39,     0,   620,   -28,     0,     0,   625, 
          0,     0,     0,     0,     0,  -153,     0,     0,     0,     0, 
          0,     0,     0,     0,  1603,     0,     0,   437,   907,   967, 
       1169,  1004,  1064,  1101,     0,     0,     0,     0,   628,   668, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   612,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   870,   234,     0,    61,     0,   200,     0,   630, 
          0,     0,     0,     0,     0,     0,   229,   333,     0,     0, 
          0,   668,     0,     0,     0,     0,     0,     0,     0,   620, 
        250,     0,   633,     0,     0,     0,  3897,   132,   212,   222, 
        243,  1504,  1613,  1716,  1738,     0,  1855,     0,  2498,  2542, 
       2708,  2836,   245,     0,    74,  3758,  3707,  3598,     0,  3639, 
          0,  3666,  3175,  3368,  3504,  3561,  3116,  2975,  3070,  2877, 
       2904,  2931,  1206,     0,     0,   620,   582,   474,     0,     0, 
          0,     0,     0,     0,     0,     0,   255,     0,   620,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,  1866,  3513, 
          0,  3779,   620,   620,     0,     0,   553,     0,   571,     0, 
          0,   668,  3043,  3380,     0,  3703,  3812,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   130,     0,     0, 
        668,     0,     0,     0,   620,     0,  3802,     0,     0,   620, 
          0,     0,   636,     0,     0,     0,     0,   554,     0,     0, 
        250,     0,     0,     0,     0,   637,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   554, 
          0,     0,     0,  -115,     0,     0,     0,     0,   250,   -22, 
        250,     0,     0,     0,   621,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   250,     0,     0,   554,     0,   622,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   554, 
          0,     0,     0,     0,     0,   223,     0,    -8,     0,     0, 
          0,     0,     0,     0,     0,   622,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  4191,     0,     0,     0,   641, 
          0,  4235,   558,     0,     0,   643,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   560,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -105,     0,     0,  -105,     0,     0,     0,   554,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   143,     0,     0,   679,   -33,    21,   -29, 
          0,     0,     0,   601,     0,     0,    99,     0,   481,   406, 
          0,     0,     0,   160,   409,    41,     0,     0,     0,     0, 
       -136,   649,   651,     0,   284,   609,     0,    81,   504,  -235, 
        325,     0,   335,  -283,     0,  -192,     0,     0,     0,     0, 
       -385,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   241,     0,     0,     0,     0,   264,     0,     0, 
          0,    45,     0,     0,  -144,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   364,   404,   584,     0, 
          0,     0,   507,     0,   523,     0,     0,     0,     0,     0, 
          0,   684,     0, 
    );
    protected static $yyTable = array(40,
         39,   273,    43,    43,   371,   225,    44,    45,   217,    69, 
        172,    39,   172,    64,   270,   172,    43,    94,    43,    67, 
         70,    43,    73,    39,    89,    77,    20,    92,   121,    93, 
        124,   180,   121,   182,   409,   184,    39,    43,   180,    18, 
        437,    73,    45,   181,    64,    64,   182,   170,   100,     1, 
        121,   180,   178,    43,   179,   177,   181,    73,   184,     5, 
        458,   187,   299,   122,    39,    39,   122,   291,   122,   173, 
         62,   175,   182,   208,   309,    54,    39,   180,   178,   181, 
        179,   177,   181,   180,   182,   170,     9,   372,   209,   180, 
        178,    45,   179,   177,   181,   173,   401,   175,   410,   206, 
         39,   184,   300,   169,   184,   207,    25,   173,   123,   175, 
         95,    43,   188,   182,   186,   122,   105,   186,   180,   178, 
        107,   179,   177,   181,   386,   185,   186,    69,    26,   137, 
        138,   181,   139,   140,   141,   142,   143,   144,    27,   146, 
        147,   169,   301,   438,   190,   183,   442,    11,   185,   186, 
         43,   268,    28,   184,   265,    18,   198,   326,    69,    69, 
        105,   414,   282,    33,   107,   461,   186,    32,    38,    85, 
         36,   168,   152,    36,   424,   152,   336,   283,   469,    38, 
        248,    46,   396,    41,   473,   127,   248,    42,    36,   152, 
        152,    38,   227,   228,   229,   230,   231,   232,   233,   234, 
        235,   237,   239,   240,   241,   242,   243,   245,   246,   247, 
        248,   250,   252,   253,   254,   255,   256,   257,   258,   259, 
        260,   261,   262,   263,   152,    18,   374,    18,   287,   298, 
         50,   269,    38,    38,   243,   475,   274,   277,   477,    52, 
        119,   214,   479,   119,   101,    57,    58,    59,    60,    61, 
        289,   290,   187,   292,   408,   187,   152,    69,    69,   264, 
        198,    71,   188,   122,   214,   188,   122,    67,    67,   187, 
        187,   341,    35,    75,   124,    47,   303,   124,   304,   188, 
        188,   122,    81,   189,    78,   125,   189,    35,   125,   306, 
         35,   307,   124,    35,    82,   118,    80,    99,   118,    43, 
        189,   189,   125,   125,   187,   214,   198,   243,   184,     2, 
        311,   312,   215,    79,   188,   129,    83,    63,   102,   198, 
         84,   184,   148,   210,   103,   318,   124,    29,    30,    86, 
         98,    80,   211,   198,   198,   189,   187,   125,    18,    43, 
        185,   186,   248,   248,     5,   327,   188,   184,    87,   452, 
        453,    90,   116,   189,   342,     6,   148,    43,   151,   184, 
        195,   118,   119,   149,   203,   198,   194,   189,    10,    10, 
        198,    10,    10,    10,    10,    10,    10,    10,    10,    12, 
        296,    12,   250,   250,   196,   221,    96,    97,   184,    10, 
         10,    10,    10,    10,    10,   278,   279,   280,   185,   186, 
         12,    13,    14,    15,    16,    17,   281,   197,   284,   176, 
        174,   185,   186,   293,   285,   243,   250,   398,   183,   294, 
        171,   172,   250,    43,    10,    10,   297,   467,   202,   305, 
        298,   183,   310,   317,   207,   176,   174,   185,   186,   416, 
        419,   321,   421,   322,   325,   422,   423,   176,   174,   185, 
        186,   328,   329,   334,    10,    10,    10,   183,   171,   172, 
        335,   337,   152,   366,   338,   367,   416,   369,   439,   183, 
         12,    13,    14,    15,    16,    17,   370,   143,   185,   186, 
        143,   373,   388,   172,   172,   376,   416,   172,   172,   172, 
        172,   172,   172,   172,   143,   143,   391,   394,   183,   399, 
        368,   400,   402,   470,   172,   172,   172,   172,   172,   172, 
        235,   235,   403,   404,   235,   235,   235,   235,   235,   235, 
        235,   405,   406,   407,   413,   128,   420,   425,   390,   143, 
        393,   235,   235,   235,   235,   235,   235,   172,   426,   172, 
        172,   428,   187,   432,   152,   152,   152,   433,    54,    39, 
        440,   443,   188,   412,     2,     2,     2,     2,     2,     2, 
        448,   143,   449,   446,   235,   450,   235,   235,   457,   172, 
        172,   172,   459,   189,     2,     2,    12,    13,    14,    15, 
         16,    17,   468,    12,    13,    14,    15,    16,    17,     5, 
          5,     5,     5,     5,     5,     2,   235,   235,   235,   460, 
          6,     6,     6,     6,     6,     6,   471,   130,   130,     5, 
          5,   130,   130,   130,   130,   130,   130,   130,   248,   248, 
          6,     6,   465,   476,   187,   187,   187,   472,   130,   130, 
        130,   130,   130,   130,   188,   188,   188,   478,   128,    43, 
        480,    10,    10,    10,   314,    57,    58,    59,    60,    61, 
         22,    48,   248,    20,   246,   189,   189,   189,   248,   178, 
        115,   130,    10,   130,   130,   178,    54,    39,   160,   124, 
        116,    10,   248,   161,   124,   165,    59,    61,    67,   124, 
        120,    95,    97,   120,    99,    24,   126,   316,   288,   315, 
         49,    48,   125,   130,   130,   130,   466,   395,   389,   445, 
        347,   324,   275,   201,   227,   227,    31,     0,   227,   227, 
        227,   227,   227,   227,   227,   272,     0,    56,    57,    58, 
         59,    60,    61,   295,     0,   227,   227,   227,   227,   227, 
        227,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
          0,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,     0,     0,    62,   172,     0, 
        227,   227,     0,     0,     0,     0,     0,   143,     0,   308, 
          0,     0,     0,     0,     0,     0,     0,   172,   172,     0, 
          0,     0,   313,     0,     0,   235,     0,     0,     0,     0, 
         63,   227,   227,     0,     0,     0,   319,   320,     0,     0, 
          0,   182,   170,    55,   235,   235,   180,   178,     0,   179, 
        177,   181,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   173,     0,   175,     0,   339,     0, 
          0,     0,     0,   340,     0,   117,    57,    58,    59,    60, 
         61,     0,     0,     0,     0,     0,   172,   172,   172,   172, 
        172,   172,   172,   172,   172,     0,    12,   172,   172,   172, 
        172,   172,   172,   172,   172,   172,   172,   172,   172,     0, 
          0,     0,     0,   235,   235,   235,   235,   235,   235,   235, 
        235,   235,   130,     0,   235,   235,   235,   235,   235,   235, 
        235,   235,   235,   235,   235,   235,     0,     0,     0,     0, 
          0,   130,   130,     0,     0,     0,   229,   229,    63,     0, 
        229,   229,   229,   229,   229,   229,   229,     0,     0,     0, 
          0,    55,     0,     0,     0,     0,     0,   229,   229,   229, 
        229,   229,   229,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   221,   221,     0,     0,   221,   221,   221, 
        221,   221,   221,   221,     0,     0,     0,     0,     0,     0, 
          0,     0,   229,   229,   221,   221,   221,   221,   221,   221, 
        130,   130,   130,   130,   130,   130,   130,   130,   130,   227, 
          0,   130,   130,   130,   130,   130,   130,   130,   130,   130, 
        130,   130,   130,   229,   229,     0,     0,     0,   227,   221, 
        221,     0,     0,   222,   222,     0,     0,   222,   222,   222, 
        222,   222,   222,   222,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   222,   222,   222,   222,   222,   222, 
        221,   221,     0,     0,     0,     0,     0,     0,     0,     0, 
        220,   220,     0,     0,   220,   220,   220,   220,   220,   220, 
        220,     0,     0,     0,     0,     0,     0,     0,     0,   222, 
        222,   220,   220,   220,   220,   220,   220,   227,   227,   227, 
        227,   227,   227,   227,   227,   227,   184,     0,   227,   227, 
        227,   227,   227,   227,   227,   227,   227,   227,   227,   227, 
        222,   222,     0,     0,     0,     0,   220,   220,     0,     0, 
        223,   223,     0,     0,   223,   223,   223,   223,   223,   223, 
        223,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   223,   223,   223,   223,   223,   223,   220,   220,     0, 
          0,     0,     0,     0,     0,     0,     0,   224,   224,     0, 
          0,   224,   224,   224,   224,   224,   224,   224,     0,     0, 
          0,     0,     0,     0,     0,     0,   223,   223,   224,   224, 
        224,   224,   224,   224,   176,   174,   185,   186,     0,     0, 
          0,     0,     0,     0,   182,   171,   172,     0,     0,   180, 
        178,   229,   179,   177,   181,     0,   183,   223,   223,     0, 
          0,     0,     0,   224,   224,     0,     0,   173,     0,   175, 
        229,     0,     0,     0,     0,   219,   219,     0,     0,   219, 
        219,   219,   219,   219,   219,   219,     0,     0,   221,     0, 
          0,     0,     0,     0,   224,   224,   219,   219,   219,   219, 
        219,   219,     0,     0,     0,     0,     0,   221,     0,     0, 
          0,     0,   218,   218,     0,     0,   218,   218,   218,   218, 
        218,   218,   218,     0,     0,     0,     0,     0,     0,     0, 
          0,   219,   219,   218,   218,   218,   218,   218,   218,   229, 
        229,   229,   229,   229,   229,   229,   229,   229,   222,     0, 
        229,   229,   229,   229,   229,   229,   229,   229,   229,   229, 
        229,   229,   219,   219,     0,     0,     0,   222,   218,   218, 
          0,     0,     0,     0,     0,     0,   221,   221,     0,     0, 
        221,   221,   221,   221,   221,   220,     0,   221,   221,   221, 
        221,   221,   221,   221,   221,   221,   221,   221,   221,   218, 
        218,     0,     0,     0,   220,     0,     0,     0,     0,   142, 
        142,     0,     0,   142,   142,     0,   142,     0,   142,   142, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        142,   142,   142,   142,   142,   142,   222,   222,     0,     0, 
        222,   222,   222,   222,   222,   223,     0,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,   222,   222,   222,     0, 
          0,     0,     0,     0,   223,   142,   142,     0,     0,     0, 
          0,     0,     0,   220,   220,     0,     0,   220,   220,   220, 
        220,   220,   224,     0,   220,   220,   220,   220,   220,   220, 
        220,   220,   220,   220,   220,   220,   142,   142,     0,     0, 
          0,   224,     0,     0,     0,     0,   182,   170,     0,     0, 
          0,   180,   178,     0,   179,   177,   181,     0,     0,   184, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   173, 
        154,   175,   166,   223,   223,     0,     0,   223,   223,   223, 
        223,   223,     0,     0,   223,   223,   223,   223,   223,   223, 
        223,   223,   223,   223,   223,   223,     0,     0,     0,     0, 
          0,     0,     0,   169,     0,     0,     0,     0,     0,   219, 
        224,   224,     0,     0,   224,   224,   224,   224,   224,     0, 
          0,   224,   224,   224,   224,   224,   224,   224,   224,   224, 
        224,   224,   224,   168,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   218,   176,   174,   185, 
        186,     0,     0,     0,   190,     0,     0,   190,   171,   172, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   183, 
          0,   190,   190,     0,     0,     0,     0,     0,   219,   219, 
          0,     0,   219,   219,   219,   219,   219,     0,     0,   219, 
        219,   219,   219,   219,   219,   219,   219,   219,   219,   219, 
        219,     0,     0,     0,     0,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,   218,   218,     0,     0,   218, 
        218,   218,   218,   218,   142,     0,   218,   218,   218,   218, 
        218,   218,   218,   218,   218,   218,   218,   218,   190,     0, 
          0,     0,     0,   142,     0,     0,     0,     0,     0,   172, 
        172,     0,     0,     0,   172,   172,     0,   172,   172,   172, 
          0,     0,     0,   191,     0,     0,   191,     0,     0,     0, 
          0,     0,   172,   172,   172,   172,     0,     0,     0,     0, 
        191,   191,     0,     0,   182,   170,     0,     0,   212,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,     0,     0, 
          0,     0,     0,   172,     0,     0,   172,   173,   154,   175, 
        166,     0,   142,   142,     0,   191,   142,   142,   142,   142, 
        142,   184,     0,   142,   142,   142,   142,   142,   142,   142, 
        142,   142,   142,   142,   142,   172,   172,     0,     0,     0, 
          0,   169,     0,     0,     0,     0,     0,   191,     0,     0, 
        182,   170,     0,     0,     0,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,   193,     0,     0,   193, 
          0,   168,     0,   173,   154,   175,   166,     0,     0,     0, 
          0,     0,     0,   193,   193,     0,     0,     0,   192,     0, 
          0,   192,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   192,   192,   169,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,   193,     0, 
        171,   172,   167,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,     0,   182,   170,     0,     0,   168,   180,   178, 
        192,   179,   177,   181,   190,     0,     0,     0,     0,     0, 
        193,     0,     0,     0,     0,     0,   173,   154,   175,   166, 
          0,   182,   170,     0,     0,     0,   180,   178,     0,   179, 
        177,   181,   192,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   173,   154,   175,   166,   182,   170, 
        169,     0,     0,   180,   178,     0,   179,   177,   181,     0, 
          0,     0,     0,     0,     0,   216,     0,     0,   216,     0, 
        387,   173,   154,   175,   166,     0,   155,     0,   169,   155, 
        168,   331,   216,   216,   172,     0,   190,   190,   190,     0, 
          0,     0,     0,   155,   155,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   172,   169,     0,     0,   168,   332, 
          0,     0,     0,   191,     0,     0,     0,   216,     0,   184, 
          0,     0,     0,     0,     0,     0,     0,     0,   155,     0, 
          0,     0,     0,     0,     0,   168,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   182,   170,     0,     0,   216, 
        180,   178,     0,   179,   177,   181,     0,     0,     0,     0, 
        155,     0,     0,     0,     0,     0,     0,   415,   173,   154, 
        175,   166,   172,   172,   172,   172,   172,   172,   172,   172, 
        172,     0,    12,   172,   172,   184,   172,   172,   172,   172, 
        172,   172,   172,   172,   172,   191,   191,   191,     0,     0, 
          0,     0,   169,     0,     0,     0,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,   193,     0,   171,   172, 
          0,   152,   153,   159,   164,   163,   165,   161,   162,   183, 
          0,     0,   168,     0,     0,     0,     0,     0,   192,     0, 
          0,     0,     0,     0,     0,     0,   182,   170,     0,     0, 
        427,   180,   178,     0,   179,   177,   181,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   184,   173, 
        154,   175,   166,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,     0,     0,   171,   172,   213,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,   184,     0,   193,   193, 
        193,     0,     0,   169,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        192,   192,   192,   184,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   168,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   216,   176,   174,   185,   186, 
        155,   156,   157,   158,   160,     0,   155,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,   183,     0, 
          0,     0,     0,     0,   176,   174,   185,   186,   155,   156, 
        157,   158,   160,     0,     0,   171,   172,     0,   152,   153, 
        159,   164,   163,   165,   161,   162,   183,     0,     0,     0, 
          0,   176,   174,   185,   186,   155,   156,   157,   158,   160, 
        184,     0,   171,   172,     0,   152,   153,   159,   164,   163, 
        165,   161,   162,   183,     0,     0,     0,   216,   216,   216, 
          0,     0,     0,     0,   182,   170,     0,     0,   155,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   173,   154,   175, 
        166,     0,     0,     0,     0,     0,     0,     0,     0,   182, 
        170,     0,     0,   430,   180,   178,     0,   179,   177,   181, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   169,   173,   154,   175,   166,     0,     0,   176,   174, 
        185,   186,   155,   156,   157,   158,   160,     0,     0,   171, 
        172,   184,   152,   153,   159,   164,   163,   165,   161,   162, 
        183,   168,     0,     0,     0,     0,   169,     0,     0,     0, 
          0,     0,     0,     0,     0,   182,   170,     0,     0,   431, 
        180,   178,     0,   179,   177,   181,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   168,     0,   173,   154, 
        175,   166,     0,     0,     0,     0,     0,     0,     0,     0, 
        182,   170,     0,     0,   447,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   169,   173,   154,   175,   166,     0,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,     0,     0, 
        171,   172,     0,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,   168,     0,     0,     0,     0,   169,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   182,   170,     0,     0, 
          0,   180,   178,     0,   179,   177,   181,   168,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   474,     0,   173, 
        154,   175,   166,     0,     0,     0,     0,     0,     0,     0, 
          0,   182,   170,     0,     0,     0,   180,   178,     0,   179, 
        177,   181,     0,     0,     0,     0,     0,     0,   217,     0, 
          0,   217,     0,   169,   173,   154,   175,   166,     0,   184, 
          0,     0,     0,     0,     0,   217,   217,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   429,     0, 
          0,     0,     0,   168,     0,     0,     0,     0,   169,     0, 
          0,     0,   194,     0,   184,   194,     0,     0,     0,     0, 
        217,     0,     0,     0,     0,     0,     0,     0,     0,   194, 
        194,     0,     0,     0,     0,     0,     0,     0,   168,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   217,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   194,     0,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,     0,     0,   171,   172, 
        184,   152,   153,   159,   164,   163,   165,   161,   162,   183, 
          0,     0,     0,     0,     0,     0,   194,     0,     0,     0, 
          0,     0,   176,   174,   185,   186,   155,   156,   157,   158, 
        160,     0,     0,   171,   172,   184,   152,   153,   159,   164, 
        163,   165,   161,   162,   183,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        182,   170,     0,     0,     0,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   173,   154,   175,   166,     0,   176,   174, 
        185,   186,   155,   156,   157,   158,   160,     0,   195,   171, 
        172,   195,   152,   153,   159,   164,   163,   165,   161,   162, 
        183,   184,     0,     0,     0,   195,   195,   169,     0,     0, 
          0,     0,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,     0,     0,   171,   172,     0,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,   184,   168,     0,     0, 
        195,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   182,   170,     0,     0,     0,   180,   178,   217,   179, 
        177,   181,   195,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   173,   154,   175,   166,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,     0,     0, 
        171,   172,     0,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,   194,     0,     0,     0,   196,     0,   169,   196, 
          0,     0,     0,     0,   176,   174,   185,   186,   155,   156, 
        157,   158,   160,   196,   196,   171,   172,     0,   152,   153, 
        159,   164,   163,   165,   161,   162,   183,     0,   168,     0, 
        217,   217,   217,   209,   209,     0,     0,   209,   209,   209, 
        209,   209,   209,   209,     0,     0,     0,     0,   196,     0, 
          0,     0,     0,     0,   209,   209,   209,   209,   209,   209, 
        210,   210,     0,     0,   210,   210,   210,   210,   210,   210, 
        210,     0,     0,     0,   194,   194,   194,     0,     0,     0, 
        196,   210,   210,   210,   210,   210,   210,   211,   211,   209, 
        209,   211,   211,   211,   211,   211,   211,   211,     0,     0, 
          0,     0,     0,     0,     0,   184,     0,     0,   211,   211, 
        211,   211,   211,   211,     0,     0,   210,   210,     0,     0, 
        209,   209,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   207,     0,     0,   207,     0,   207,   207,   207, 
        207,     0,     0,   211,   211,     0,     0,   210,   210,     0, 
          0,     0,   207,   207,   207,   207,   207,   207,   195,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   211,   211,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   207,   207,     0, 
          0,     0,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,     0,   197,   171,   172,   197,     0,   153,   159, 
        164,   163,   165,   161,   162,   183,   184,     0,   207,   207, 
        197,   197,     0,     0,     0,     0,     0,   208,     0,     0, 
        208,     0,   208,   208,   208,   208,     0,     0,     0,     0, 
        195,   195,   195,     0,     0,     0,     0,   208,   208,   208, 
        208,   208,   208,     0,     0,   197,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   212,     0,     0,   212,     0,     0,   212, 
          0,     0,   208,   208,     0,     0,   196,   197,     0,     0, 
          0,     0,     0,   212,   212,   212,   212,   212,   212,     0, 
          0,     0,     0,     0,   176,   174,   185,   186,   155,   156, 
        157,   158,   160,   208,   208,   171,   172,     0,     0,     0, 
        159,   164,   163,   165,   161,   162,   183,   209,   212,   212, 
          0,     0,   199,     0,     0,   199,     0,     0,   199,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   199,   199,   210,   199,     0,   199,     0,   212, 
        212,     0,     0,     0,     0,     0,     0,     0,   196,   196, 
        196,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   211,     0,     0,     0,     0,     0,   199,   199,     0, 
          0,     0,     0,     0,     0,     0,   209,   209,     0,     0, 
        209,   209,   209,   209,   209,     0,     0,   209,   209,   209, 
        209,   209,   209,   209,   209,   209,   209,   209,   199,   199, 
          0,     0,     0,   210,   210,   207,     0,   210,   210,   210, 
        210,   210,     0,     0,   210,   210,   210,   210,   210,   210, 
        210,   210,   210,   210,   210,     0,     0,     0,     0,     0, 
        211,   211,     0,     0,   211,   211,   211,   211,   211,     0, 
          0,   211,   211,   211,   211,   211,   211,   211,   211,   211, 
        211,   211,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   197,   207,   207,     0,     0,   207,   207, 
        207,   207,   207,     0,     0,   207,   207,   207,   207,   207, 
        207,   207,   207,   207,   207,   207,     0,     0,     0,     0, 
        208,     0,     0,     0,     0,   201,     0,     0,   201,     0, 
          0,   201,     0,     0,     0,     0,     0,     0,     0,     0, 
        198,     0,     0,   198,     0,   201,   201,     0,   201,     0, 
        201,     0,     0,     0,     0,     0,     0,   198,   198,     0, 
          0,     0,     0,     0,     0,     0,   212,     0,     0,     0, 
          0,     0,     0,     0,     0,   197,   197,   197,     0,     0, 
        201,   201,     0,     0,     0,     0,     0,     0,     0,   208, 
        208,     0,   198,   208,   208,   208,   208,   208,     0,     0, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,   208, 
        208,   201,   201,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   198,   199,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   212,   212,     0,     0,   212, 
        212,   212,   212,   212,     0,     0,   212,   212,   212,   212, 
        212,   212,   212,   212,   212,   212,   212,     0,     0,     0, 
          0,   200,     0,     0,   200,     0,     0,   200,     0,     0, 
          0,     0,     0,   156,     0,     0,   156,     0,     0,     0, 
          0,   200,   200,     0,   200,     0,   200,     0,     0,     0, 
        156,   156,     0,     0,     0,     0,     0,     0,   199,   199, 
        199,   199,   199,     0,     0,   199,   199,   199,   199,   199, 
        199,   199,   199,   199,   199,   199,   200,   200,   202,     0, 
          0,   202,     0,     0,   202,   156,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   202,   202, 
          0,   202,     0,   202,     0,     0,     0,   200,   200,     0, 
          0,     0,     0,     0,     0,   214,     0,   156,   214,     0, 
          0,   214,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   202,   202,   214,   214,     0,   214,     0, 
        214,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   203,     0,     0,   203, 
          0,     0,   203,     0,   202,   202,     0,     0,     0,     0, 
        214,   214,     0,     0,     0,     0,   203,   203,   201,   203, 
          0,   203,     0,   204,     0,     0,   204,     0,     0,   204, 
        198,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   214,   214,   204,   204,     0,   204,     0,   204,     0, 
          0,   203,   203,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   205,     0,     0,   205,   215,     0,     0, 
        215,     0,     0,     0,     0,     0,     0,     0,   204,   204, 
        205,   205,   203,   203,   215,   215,     0,   215,     0,   215, 
          0,   201,   201,   201,   201,   201,     0,     0,   201,   201, 
        201,   201,   201,   201,   201,   201,   201,   201,   201,   204, 
        204,     0,   198,   198,   198,   205,     0,     0,   213,   215, 
        215,   213,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   213,   213,     0,   213,   144, 
        213,     0,   144,     0,     0,     0,     0,   205,     0,     0, 
        215,   215,     0,     0,   200,     0,   144,   144,     0,   144, 
          0,   144,   150,   156,     0,   150,     0,     0,     0,     0, 
        213,     0,   206,     0,     0,   206,     0,     0,     0,   150, 
        150,     0,   150,     0,   150,     0,     0,     0,     0,   206, 
        206,   144,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   213,   213,     0,     0,     0,     0,     0,     0,     0, 
          0,   202,     0,     0,   150,     0,     0,     0,     0,     0, 
          0,     0,     0,   144,   206,     0,     0,   200,   200,   200, 
        200,   200,     0,     0,   200,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   156,   150,     0,   214,     0, 
          0,     0,     0,     0,     0,     0,   206,   151,     0,     0, 
        151,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   151,   151,     0,     0,     0,     0, 
          0,     0,     0,     0,   202,   202,   202,   202,   202,   203, 
          0,   202,   202,   202,   202,   202,   202,   202,   202,   202, 
        202,   202,     0,     0,     0,     0,     0,     0,     0,   151, 
          0,     0,     0,     0,     0,     0,   204,     0,     0,     0, 
          0,   214,   214,   214,   214,   214,     0,     0,     0,     0, 
        214,   214,   214,   214,   214,   214,   214,   214,   214,     0, 
          0,   151,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   205,     0,     0,     0,   215,     0,     0, 
          0,     0,   203,   203,   203,   203,   203,     0,     0,     0, 
          0,   203,   203,   203,   203,   203,   203,   203,   203,   203, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   204, 
        204,   204,   204,   204,     0,     0,     0,     0,   204,   204, 
        204,   204,   204,   204,   204,   204,   204,     0,   213,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   144, 
        215,   215,   215,   215,   215,   205,   205,   205,     0,   215, 
        215,   215,   215,   215,   215,   215,   215,   215,     0,     0, 
          0,     0,   150,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   206,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   213,   213,   213,   213,   213,     0,     0,     0,     0, 
        213,   213,   213,   213,   213,   213,   213,   213,   213,     0, 
          0,     0,   144,   144,   144,   144,   144,     0,     0,     0, 
          0,   144,   144,   144,   144,   144,   144,   144,   144,   144, 
          0,     0,     0,     0,     0,   150,   150,   150,   150,   150, 
          0,     0,     0,     0,   150,   150,   150,   150,   150,   150, 
        150,   150,   150,   111,   206,   206,   206,   151,     0,     0, 
        111,     0,     0,   111,     0,   111,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   111, 
          0,     0,     0,     0,   111,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   107,     0,     0, 
          0,     0,     0,     0,   107,     0,     0,   107,     0,   107, 
          0,   111,   111,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   107,     0,     0,     0,     0,   107,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   151, 
        151,    94,     0,   111,     0,   111,   111,     0,    89,     0, 
          0,    92,     0,    93,     0,   107,   107,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   359,     0,     0, 
          0,     0,   100,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    94,     0,     0,   107,     0,   107, 
        107,    89,     0,     0,    92,     0,    93,     0,     0,    54, 
         39,     0,     0,     0,     0,     0,     0,     0,     0,    91, 
          0,     0,     0,     0,     0,   100,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    94,     0, 
          0,   360,     0,     0,    95,    89,     0,     0,    92,     0, 
         93,     0,    54,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   236,     0,     0,   100, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    95,     0,     0, 
        111,   111,   111,   111,   111,   111,    54,    39,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    95,     0,     0,   107,   107,   107,   107,   107,   107, 
          0,     0,     0,   111,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   111,   111,     0,     0,     0,     0,     0, 
        111,   111,   111,   111,     0,     0,   111,     0,   101,    57, 
         58,    59,    60,    61,     0,     0,     0,   107,     0,     0, 
        111,   111,   111,   111,     0,   111,   111,   111,     0,     0, 
        111,   111,   111,   111,   111,     0,     0,   107,   107,     0, 
          0,     0,     0,     0,   107,   107,   107,   107,     0,     0, 
        107,   101,    57,    58,    59,    60,    61,     0,     0,     0, 
          0,    99,   111,   111,   107,   107,   107,   107,     0,   107, 
        107,   107,     0,     0,   107,     0,   107,   107,   107,     0, 
          0,    63,   102,     0,     0,     0,     0,     0,   103,   348, 
        349,   350,     0,     0,    98,   101,    57,    58,    59,    60, 
         61,     0,     0,     0,    99,     0,   107,   107,   351,   352, 
        353,   354,     0,   355,   356,    90,     0,     0,   357,     0, 
        358,     0,     0,     0,    63,   102,    94,     0,     0,     0, 
          0,   103,     0,    89,     0,     0,    92,    98,    93,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    99,    94, 
         96,    97,     0,     0,   238,     0,    89,   100,    90,    92, 
          0,    93,     0,     0,    94,     0,     0,     0,    63,   102, 
          0,    89,     0,     0,    92,   103,    93,   249,     0,     0, 
        100,    98,     0,     0,    54,    39,     0,     0,     0,     0, 
          0,     0,   251,    96,    97,   100,     0,     0,     0,     0, 
          0,     0,    90,     0,     0,     0,     0,    54,    39,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    95, 
          0,     0,    54,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    96,    97,     0, 
          0,     0,    95,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    95,    94,     0, 
          0,     0,     0,     0,     0,    89,     0,     0,    92,     0, 
         93,     0,    94,     0,     0,     0,     0,     0,     0,    89, 
          0,     0,    92,     0,    93,     0,     0,     0,     0,   100, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   100,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    54,    39,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         54,    39,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    95,     0,   101,    57,    58,    59,    60,    61,     0, 
          0,     0,     0,     0,     0,    95,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   101,    57,    58,    59, 
         60,    61,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   101,    57,    58,    59,    60,    61,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    99,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    63,   102,     0,    99, 
          0,     0,     0,   103,     0,     0,     0,     0,     0,    98, 
          0,     0,     0,     0,    99,     0,     0,     0,     0,    63, 
        102,     0,     0,     0,     0,     0,   103,     0,     0,     0, 
         90,     0,    98,     0,    63,   102,     0,     0,     0,     0, 
          0,   103,     0,     0,     0,     0,     0,    98,     0,     0, 
          0,     0,     0,    90,     0,   135,    57,    58,    59,    60, 
         61,     0,     0,     0,     0,    96,    97,     0,    90,   101, 
         57,    58,    59,    60,    61,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    96,    97, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    96,    97,     0,     0,     0,    99,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    99,     0,     0,     0,     0,     0,   136,   102, 
          0,     0,     0,     0,     0,   103,     0,     0,     0,     0, 
          0,    98,    63,   102,     0,     0,     0,     0,     0,   103, 
          0,     0,     0,     0,     0,    98,     0,     0,     0,     0, 
          0,     0,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    90,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    96,    97,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    96,    97, 
    );
    protected static $yyCheck = array(33,
         92,   194,    36,    37,   340,   150,    36,    37,   145,   125, 
         41,    92,    41,    47,   123,    44,    50,    33,    52,   125, 
         50,    55,    52,    92,    40,    55,     6,    43,   260,    45, 
        260,    41,    41,    37,    59,   312,    59,    71,    42,   123, 
        426,    71,    44,    47,    78,    79,    37,    38,    64,   320, 
         59,    42,    43,    87,    45,    46,    47,    87,   312,   321, 
        446,    40,   260,    41,    92,    92,    44,   212,   300,    60, 
        300,    62,    37,    44,   267,    91,    92,    42,    43,    41, 
         45,    46,    47,    93,    37,    38,   260,   423,    59,    42, 
         43,    93,    45,    46,    47,    60,   380,    62,   123,   334, 
        123,    41,   300,    94,    44,   340,    92,    60,   340,    62, 
        126,   145,    91,    37,    41,    93,    76,    44,    42,    43, 
         76,    45,    46,    47,   360,   402,   403,    47,    59,    89, 
         90,    93,    92,    93,    94,    95,    96,    97,    59,    99, 
        100,    94,   340,   427,   123,   422,   430,     5,   402,   403, 
        184,   260,    91,    93,   184,    35,   116,   302,    78,    79, 
        120,   397,    44,    64,   120,   449,    93,    25,   260,    71, 
         41,   124,    41,    44,   410,    44,   321,    59,   462,   260, 
        334,    39,   375,    93,   468,    87,   340,    44,    59,    58, 
         59,   260,   152,   153,   154,   155,   156,   157,   158,   159, 
        160,   161,   162,   163,   164,   165,   166,   167,   168,   169, 
        170,   171,   172,   173,   174,   175,   176,   177,   178,   179, 
        180,   181,   182,   183,    93,    35,    41,   311,   208,    44, 
        310,   340,   260,   260,   194,   471,   196,   197,   474,   310, 
         41,   333,   478,    44,   260,   261,   262,   263,   264,   265, 
        210,   211,    41,   213,   391,    44,   125,   373,   374,   340, 
        220,   311,    41,    41,   333,    44,    44,   373,   374,    58, 
         59,   340,    44,   123,    41,    40,   236,    44,   238,    58, 
         59,    59,   410,    41,    61,    41,    44,    59,    44,   249, 
         41,   251,    59,    44,    41,    41,    40,   313,    44,   333, 
         58,    59,    58,    59,    93,   333,   266,   267,   312,    35, 
        270,   271,   340,    61,    93,   125,    41,   333,   334,   279, 
         44,   312,    40,    41,   340,   285,    93,   300,   301,   123, 
        346,    40,    41,   293,   294,    93,   125,    93,    35,   373, 
        402,   403,   300,   301,    35,   305,   125,   312,    44,   373, 
        374,   367,    40,   332,   423,    35,    40,   391,   410,   312, 
         93,    78,    79,    40,   260,   325,    44,   125,    37,    38, 
        330,    40,    41,    42,    43,    44,    45,    46,    47,   410, 
        221,   410,   300,   301,    44,   340,   402,   403,   312,    58, 
         59,    60,    61,    62,    63,    41,    44,    41,   402,   403, 
        280,   281,   282,   283,   284,   285,    61,   423,   260,   400, 
        401,   402,   403,    40,    61,   375,   334,   377,   422,    40, 
        411,   412,   340,   457,    93,    94,    41,   457,   125,    58, 
         44,   422,    40,    40,   340,   400,   401,   402,   403,   399, 
        400,    41,   402,   321,    40,   405,   406,   400,   401,   402, 
        403,    41,    93,    41,   123,   124,   125,   422,   411,   412, 
         41,    40,   331,    41,   123,    41,   426,   340,   428,   422, 
        280,   281,   282,   283,   284,   285,    41,    41,   402,   403, 
         44,    44,   125,    37,    38,   123,   446,    41,    42,    43, 
         44,    45,    46,    47,    58,    59,    58,   340,   422,    40, 
        341,    40,    40,   463,    58,    59,    60,    61,    62,    63, 
         37,    38,    59,    59,    41,    42,    43,    44,    45,    46, 
         47,    40,    40,   125,    59,   335,   361,   125,   369,    93, 
        371,    58,    59,    60,    61,    62,    63,    91,    59,    93, 
         94,    40,   331,   125,   413,   414,   415,   344,    91,    92, 
        340,   123,   331,   394,   280,   281,   282,   283,   284,   285, 
        413,   125,    41,    59,    91,   371,    93,    94,    40,   123, 
        124,   125,    59,   331,   300,   301,   280,   281,   282,   283, 
        284,   285,    41,   280,   281,   282,   283,   284,   285,   280, 
        281,   282,   283,   284,   285,   321,   123,   124,   125,   340, 
        280,   281,   282,   283,   284,   285,    58,    37,    38,   300, 
        301,    41,    42,    43,    44,    45,    46,    47,   300,   301, 
        300,   301,   125,    41,   413,   414,   415,   340,    58,    59, 
         60,    61,    62,    63,   413,   414,   415,   123,   335,    93, 
        125,   310,   311,   312,   260,   261,   262,   263,   264,   265, 
        123,    41,   334,   123,   123,   413,   414,   415,   340,    93, 
         41,    91,   331,    93,    94,    41,    91,    92,    41,    58, 
         41,   340,   340,    41,    93,   123,    41,    41,   125,    59, 
         59,    41,   125,    41,   125,     7,    86,   282,   208,   281, 
         42,    41,    84,   123,   124,   125,   456,   373,   364,   436, 
        337,   298,   196,   120,    37,    38,    23,    -1,    41,    42, 
         43,    44,    45,    46,    47,   193,    -1,   260,   261,   262, 
        263,   264,   265,   220,    -1,    58,    59,    60,    61,    62, 
         63,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,   423,    -1,    -1,   300,   312,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   331,    -1,   266, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,   332,    -1, 
         -1,    -1,   279,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
        333,   124,   125,    -1,    -1,    -1,   293,   294,    -1,    -1, 
         -1,    37,    38,   346,   331,   332,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    -1,    62,    -1,   325,    -1, 
         -1,    -1,    -1,   330,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   410,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
         -1,   331,   332,    -1,    -1,    -1,    37,    38,   333,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    58,    59,    60,    61,    62,    63, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,   124,   125,    -1,    -1,    -1,   331,    93, 
         94,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
        124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    58,    59, 
         60,    61,    62,    63,   400,   401,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,   411,   412,    -1,    -1,    42, 
         43,   312,    45,    46,    47,    -1,   422,   124,   125,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    60,    -1,    62, 
        331,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    58,    59,    60,    61,    62,    63,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,   124,   125,    -1,    -1,    -1,   331,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,   124, 
        125,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    -1,    44,    -1,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,    -1,   331,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   124,   125,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,   331, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,   124,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,   400,   401,   402, 
        403,    -1,    -1,    -1,    41,    -1,    -1,    44,   411,   412, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   422, 
         -1,    58,    59,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,   125,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,    94,    60,    61,    62, 
         63,    -1,   400,   401,    -1,    93,   404,   405,   406,   407, 
        408,   312,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,   123,   124,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   124,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    94,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    93,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    -1,    37,    38,    -1,    -1,   124,    42,    43, 
         93,    45,    46,    47,   331,    -1,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    37,    38, 
         94,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         59,    60,    61,    62,    63,    -1,    41,    -1,    94,    44, 
        124,   125,    58,    59,   312,    -1,   413,   414,   415,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   332,    94,    -1,    -1,   124,   125, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    93,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,   125, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    59,    60,    61, 
         62,    63,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   410,   411,   412,   312,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,   413,   414,   415,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   331,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
         -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    60, 
         61,    62,    63,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   312,    -1,   413,   414, 
        415,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   331,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   422,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,   413,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,    60,    61,    62,    63,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   312,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,   124,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    60,    61,    62,    63,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,   124,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    94,    60,    61,    62,    63,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    41,    -1,   312,    44,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        312,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   312,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    41,   411, 
        412,    44,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,   312,    -1,    -1,    -1,    58,    59,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   312,   124,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,   331,    45, 
         46,    47,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,   331,    -1,    -1,    -1,    41,    -1,    94,    44, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    58,    59,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,   422,    -1,   124,    -1, 
        413,   414,   415,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1, 
        125,    58,    59,    60,    61,    62,    63,    37,    38,    93, 
         94,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    93,    94,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    43,    44,    45, 
         46,    -1,    -1,    93,    94,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    41,   411,   412,    44,    -1,   415,   416, 
        417,   418,   419,   420,   421,   422,   312,    -1,   124,   125, 
         58,    59,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    43,    44,    45,    46,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    93,    94,    -1,    -1,   331,   125,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   124,   125,   411,   412,    -1,    -1,    -1, 
        416,   417,   418,   419,   420,   421,   422,   331,    93,    94, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,   331,    61,    -1,    63,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   124,   125, 
         -1,    -1,    -1,   400,   401,   331,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    93,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   125,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         58,    59,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    93,    94,    38,    -1, 
         -1,    41,    -1,    -1,    44,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,   125,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    58,    59,   331,    61, 
         -1,    63,    -1,    38,    -1,    -1,    41,    -1,    -1,    44, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    41,    -1,    -1,    44,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         58,    59,   124,   125,    58,    59,    -1,    61,    -1,    63, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   124, 
        125,    -1,   413,   414,   415,    93,    -1,    -1,    41,    93, 
         94,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    41, 
         63,    -1,    44,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
        124,   125,    -1,    -1,   331,    -1,    58,    59,    -1,    61, 
         -1,    63,    41,   331,    -1,    44,    -1,    -1,    -1,    -1, 
         93,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    58, 
         59,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   125,    93,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   413,   125,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,   331, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
        404,   405,   406,   407,   408,   413,   414,   415,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    33,   413,   414,   415,   331,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    59, 
         -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    59,    -1,    -1,    -1,    -1,    64,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,    33,    -1,   123,    -1,   125,   126,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    91,    92,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    -1,    -1, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    -1,   123,    -1,   125, 
        126,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    91, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         -1,   123,    -1,    -1,   126,    40,    -1,    -1,    43,    -1, 
         45,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    91,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,   341,   342,   343,    -1,    -1,   346,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,   313,    -1,    -1, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,    -1, 
        370,   371,   372,   373,   374,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,   341,   342,   343,    -1,    -1, 
        346,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,   313,   402,   403,   360,   361,   362,   363,    -1,   365, 
        366,   367,    -1,    -1,   370,    -1,   372,   373,   374,    -1, 
         -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341, 
        342,   343,    -1,    -1,   346,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,   313,    -1,   402,   403,   360,   361, 
        362,   363,    -1,   365,   366,   367,    -1,    -1,   370,    -1, 
        372,    -1,    -1,    -1,   333,   334,    33,    -1,    -1,    -1, 
         -1,   340,    -1,    40,    -1,    -1,    43,   346,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    33, 
        402,   403,    -1,    -1,    61,    -1,    40,    64,   367,    43, 
         -1,    45,    -1,    -1,    33,    -1,    -1,    -1,   333,   334, 
         -1,    40,    -1,    -1,    43,   340,    45,    61,    -1,    -1, 
         64,   346,    -1,    -1,    91,    92,    -1,    -1,    -1,    -1, 
         -1,    -1,    61,   402,   403,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,    -1,    -1,    -1,    -1,    91,    92,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    33,    -1, 
         -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         91,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,   313, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
        367,    -1,   346,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,   367,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,   402,   403,    -1,   367,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,   333,   334,    -1,    -1,    -1,    -1,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 'T_EXP', 'T_ELLIPSIS', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 186 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 201 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 201 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 212 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 213 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 217 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 224 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 229 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 235 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 235 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 244 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 244 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 255 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 260 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 265 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 270 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 275 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 276 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 281 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 286 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 287 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 293 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 303 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 309 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 310 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 316 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 316 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 330 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 331 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 336 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 341 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 342 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 350 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 355 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 363 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 368 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 369 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 374 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 380 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 383 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 393 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 394 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 398 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 399 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 403 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 404 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 408 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 409 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-3+$yyTop], 'vararg' => TRUE, 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 66:  #line 411 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'vararg' => TRUE, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 67:  #line 419 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 69:  #line 424 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 70:  #line 425 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 71:  #line 429 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 72:  #line 429 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 73:  #line 432 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 74:  #line 432 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 437 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 76:  #line 437 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 452 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 80:  #line 452 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 81:  #line 456 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 82:  #line 456 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 83:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 85:  #line 464 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 86:  #line 464 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 87:  #line 469 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 89:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 91:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 92:  #line 471 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 95:  #line 479 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 97:  #line 484 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 99:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 100:  #line 490 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 101:  #line 494 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 102:  #line 494 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 498 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 104:  #line 498 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 105:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 106:  #line 505 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 107:  #line 509 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 109:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 111:  #line 519 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 520 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 113:  #line 524 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 114:  #line 524 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 115:  #line 533 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 116:  #line 534 "src/main/jay/grammars/php.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 117:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge([$yyVals[-2+$yyTop]], $yyVals[0+$yyTop]) : [$yyVals[-2+$yyTop]]; } break;

    case 118:  #line 539 "src/main/jay/grammars/php.jay"
    { $yyVal= new UnpackNode($yyVals[0+$yyTop]); } break;

    case 119:  #line 540 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 120:  #line 545 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 122:  #line 550 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 123:  #line 551 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 124:  #line 555 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 126:  #line 560 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 565 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 128:  #line 573 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 129:  #line 576 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 130:  #line 579 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 131:  #line 582 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 132:  #line 588 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 133:  #line 594 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 134:  #line 594 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 135:  #line 600 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 136:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 137:  #line 604 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 138:  #line 604 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 139:  #line 614 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 140:  #line 614 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 141:  #line 623 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 142:  #line 626 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 143:  #line 629 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 144:  #line 632 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 145:  #line 635 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 146:  #line 638 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 147:  #line 641 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 148:  #line 644 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 149:  #line 647 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 150:  #line 651 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 151:  #line 657 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 152:  #line 663 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 153:  #line 669 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 154:  #line 674 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 155:  #line 679 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 156:  #line 682 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 157:  #line 685 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 158:  #line 688 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 159:  #line 691 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 160:  #line 702 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 162:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 163:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 164:  #line 712 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 165:  #line 716 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 166:  #line 717 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 168:  #line 722 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 169:  #line 722 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 170:  #line 723 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 171:  #line 723 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 172:  #line 727 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 173:  #line 733 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 174:  #line 734 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 175:  #line 735 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 176:  #line 736 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 177:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 178:  #line 741 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 179:  #line 744 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 180:  #line 747 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 181:  #line 750 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 182:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 183:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 184:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 186:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 187:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 194:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 198:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 199:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 206:  #line 792 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 207:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 798 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 799 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 800 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 213:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 214:  #line 803 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 215:  #line 804 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 216:  #line 805 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 217:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 218:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 219:  #line 811 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 220:  #line 812 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 221:  #line 813 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 222:  #line 814 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 223:  #line 815 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 224:  #line 816 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 225:  #line 820 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 226:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 227:  #line 826 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 229:  #line 831 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 230:  #line 832 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 231:  #line 836 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 232:  #line 836 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 233:  #line 839 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 234:  #line 839 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 235:  #line 842 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 236:  #line 845 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 237:  #line 848 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 238:  #line 851 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 239:  #line 851 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 240:  #line 854 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 241:  #line 854 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 244:  #line 867 "src/main/jay/grammars/php.jay"
    { $yyVal= 'callable' === $yyVals[0+$yyTop] ? new TypeName('->var', null) : new TypeName($yyVals[0+$yyTop]); } break;

    case 245:  #line 871 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 246:  #line 875 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 247:  #line 876 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 248:  #line 882 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 249:  #line 883 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 250:  #line 887 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 251:  #line 888 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 252:  #line 892 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 253:  #line 893 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 254:  #line 894 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 255:  #line 895 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 256:  #line 896 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 257:  #line 897 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2574 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
