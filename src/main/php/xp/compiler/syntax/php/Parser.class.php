<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 422;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    40,    40,    43,    43,    47,    45, 
         48,    45,    50,    45,    51,    45,    53,    45,    54,    45, 
         55,    45,    57,    45,    59,    45,    60,    45,    61,    45, 
         45,    45,    52,    52,    56,    56,    62,    62,    64,    63, 
         65,    63,    44,    44,    49,    66,    49,    58,    67,    67, 
         69,    68,    39,    39,    70,    70,    46,    46,    71,    71, 
         72,    72,    72,    72,    26,    74,    26,    75,    26,    76, 
         26,    77,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    83,    83,    85,    85,    86,    84,    84,    38, 
         88,    38,    89,    38,    25,    25,    25,    25,    25,    25, 
         87,    87,    87,    87,    90,    90,    92,    92,    91,    78, 
         78,    78,    78,    78,    78,    78,    78,    78,    78,    78, 
         78,    79,    79,    79,    79,    79,    79,    79,    79,    80, 
         80,    80,    80,    80,    80,    80,    80,    80,    80,    80, 
         80,    81,    81,    81,    81,    81,    81,    82,    82,    73, 
         73,    93,    93,    95,    94,    96,    94,    94,    94,    94, 
         97,    94,    98,    94,    31,    31,    10,    99,    17,    17, 
         33,    33,   100,   100,   101,   101,   101,   101,   101,   101, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     2,     0,     1,     1,     2,     0,     4, 
          0,     7,     0,    10,     0,     8,     0,     6,     0,     8, 
          0,     8,     0,     6,     0,     3,     0,     3,     0,     4, 
          2,     1,     1,     3,     0,     1,     1,     2,     0,     5, 
          0,     4,     1,     3,     0,     0,     3,     1,     1,     2, 
          0,     9,     0,     1,     1,     3,     0,     1,     4,     4, 
          1,     4,     1,     1,     2,     0,     3,     0,     3,     0, 
          5,     0,     6,     2,     1,     2,     4,     1,     1,     1, 
          1,     1,     5,     3,     3,     3,     3,     4,     4,     2, 
          8,     4,     0,     1,     1,     3,     2,     0,     4,     1, 
          0,     4,     0,     5,     1,     1,     1,     1,     1,     1, 
          0,     1,     1,     1,     1,     3,     0,     1,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     0,     4,     2,     2,     4, 
          0,     6,     0,     4,     1,     1,     1,     1,     1,     3, 
          0,     1,     1,     2,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   245,   247,   246,   248,   250,   249,     0,     1,     0, 
         42,   242,     0,     8,     0,     4,     9,     0,    14,    16, 
        244,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   237,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,   161,     0,     0,   170,   166,   169,   167, 
        168,     0,     0,     0,   160,     0,     0,     0,    52,    19, 
          0,     0,     0,    23,    25,     0,     0,     0,     0,   163, 
          0,    46,    47,     0,    21,    25,     0,     0,     0,     0, 
        172,     0,     0,     0,     0,     0,     0,   128,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   138,   139,   140, 
        141,   142,     0,     0,   175,     0,     0,    50,    51,     0, 
         54,    56,    55,     0,    49,     0,   240,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   134,   150,   132,     0,     0, 
        130,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   218,   219,   233,   224,     0,   226, 
        125,   221,     0,     0,   162,     0,     0,     0,     0,     0, 
         15,     0,    27,     0,     0,     0,     0,    29,     0,     0, 
          0,     0,   238,     0,   235,     0,   129,   236,     0,     0, 
          0,     0,   155,   127,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   147,   146,     0,     0,     0,   229,     0,     0, 
        223,   116,     0,   178,   176,    53,   164,     0,     0,    31, 
          0,     0,    33,     0,    30,     0,     0,   152,     0,     0, 
          0,     0,   157,     0,     0,     0,   124,   121,     0,     0, 
          0,     0,     0,     0,     0,     0,   231,     0,     0,   165, 
         34,    32,    37,     0,     0,     0,     0,     0,     0,   156, 
          0,   131,     0,   234,   225,     0,   230,   227,     0,   120, 
        119,   133,     0,     0,     0,     0,     0,     0,     0,    60, 
          0,     0,    69,     0,    89,    73,    77,    79,    75,    85, 
         87,    71,    81,    92,     0,     0,     0,    66,     0,   103, 
        122,   232,    64,     0,     0,     0,   159,     0,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    91, 
        151,    68,     0,     0,    63,    62,     0,     0,     0,     0, 
          0,     0,     0,    86,    88,     0,     0,   104,    40,    57, 
          0,    38,    70,     0,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    58, 
        111,    84,   108,     0,     0,    78,     0,     0,     0,     0, 
          0,     0,   110,     0,     0,     0,     0,   106,    72,    99, 
        101,     0,    96,     0,     0,     0,    80,    94,    76,     0, 
          0,     0,    82,    98,     0,     0,   107,     0,     0,     0, 
         74,     0,   102,     0,   100,     0,     0,   112, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   104,   130,   215, 
         36,    51,    72,    88,    37,    53,    74,   131,   132,   203, 
        133,   134,   204,   283,    65,   356,   338,   329,   384,   402, 
        339,    34,    21,    35,    66,    67,    68,   106,   198,   357, 
        340,   341,   358,   359,   360,   243,   368,   377,   439,   371, 
        374,   429,   372,   373,   378,   442,   388,   422,   375,   376, 
        370,   443,   444,   451,   452,   450,   423,   424,   432,   199, 
        217,   299,   191,   150,   145,   225,   219,   108,   109,   110, 
        111,   112,   221,   319,   222,   223,   113,    76,   120,   114, 
        115,   275,   192,   193,   266,   270,   326,   265,   218,    22, 
         23, 
    );
    protected static $yySindex = array(         -289,
          0,     0,  -273,  -200,  -200,    78,  -273,     0,    28,    86, 
        110,     0,     0,     0,     0,     0,     0,    41,     0,  -203, 
          0,     0,   270,     0,  -200,     0,     0,   107,     0,     0, 
          0,     0,   -64,    57,   141,   -64,   -64,     0,  -200,   152, 
        270,   107,     0,   -68,   -38,     0,  1042,     0,     0,   -64, 
       -112,   -64,   169,     0,   -64,   233,     0,     0,     0,     0, 
          0,   241,   266,  -101,     0,   274,   276,   284,     0,     0, 
        -64,   209,   302,     0,     0,  3913,   314,   -36,   -36,     0, 
       -247,     0,     0,  -221,     0,     0,   -64,     6,  4277,  4317, 
          0,  4317,  4317,  4317,  4317,  4317,  4317,     0,  4317,  4317, 
        326,   329,     0,   -30,  1250,   -34,   328,     0,     0,     0, 
          0,     0,   288,   341,     0,  4317,     0,     0,     0,  3913, 
          0,     0,     0,   233,     0,   222,     0,   131,     0,  -162, 
          0,     0,     0,    -7,   168,   200,  1293,  1320,  -132,  -132, 
       -261,  -132,  -132,  -132,   -17,     0,     0,     0,    53,   -34, 
          0,  4317,  4317,  4317,  4317,  4317,  4317,  4317,  4317,  4317, 
       4064,  4124,  4317,  4317,  4317,  4317,  4317,  4317,  4317,  4317, 
       4222,  4309,  4317,  4317,  4317,  4317,  4317,  4317,  4317,  4317, 
       4317,  4317,  4317,   -65,     0,     0,     0,     0,  -108,     0, 
          0,     0,   -34,  4317,     0,  4317,  2024,   355,   328,   359, 
          0,   340,     0,    15,   142,   347,    78,     0,  4317,  4317, 
        -34,  4317,     0,   370,     0,   373,     0,     0,  4317,   347, 
        374,   375,     0,     0,  -224,  2051,  2078,  2078,  2078,  2078, 
       2078,  2078,  2078,  2078,  4317,  2078,  4317,  2078,  2078,  2078, 
       2078,  2024,   356,  2024,  2121,  2148,  2465,  4317,   258,  4317, 
        258,    91,    91,    91,    91,    91,    93,    93,  -209,  -209, 
       -209,  -261,     0,     0,  4317,  4317,   378,     0,  4317,  4317, 
          0,     0,  1250,     0,     0,     0,     0,   462,   131,     0, 
        380,  4317,     0,    81,     0,  2024,  2024,     0,   -13,  4317, 
       4317,   382,     0,   126,    53,   408,     0,     0,   -34,  2078, 
       2078,  4317,  2078,  2078,   413,   364,     0,  1347,  1390,     0, 
          0,     0,     0,  2024,   418,   419,   -34,   421,   365,     0, 
       4317,     0,   -13,     0,     0,  4317,     0,     0,    -2,     0, 
          0,     0,    53,  3936,   445,   446,   347,   448,   150,     0, 
        453,   194,     0,   376,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  3936,  1417,   383,     0,  3936,     0, 
          0,     0,     0,   440,   347,    -2,     0,  4317,     0,  4317, 
        460,   461,  3936,   469,   451,   452,   472,   474,   391,     0, 
          0,     0,   -83,   -24,     0,     0,   458,  3936,  1444,  4317, 
       4317,   157,  4317,     0,     0,  4317,  4317,     0,     0,     0, 
       3936,     0,     0,   394,     0,   485,  1830,   491,  1857,  1884, 
       1927,   422,   202,  4317,  3936,  4317,   208,  3936,   433,     0, 
          0,     0,     0,   202,   499,     0,  1954,   146,   528,   212, 
        -25,   544,     0,  4317,   529,   247,  3936,     0,     0,     0, 
          0,   473,     0,   -25,   -64,   556,     0,     0,     0,  3936, 
       4317,   541,     0,     0,   260,  3936,     0,  1981,  3936,   560, 
          0,  3936,     0,   482,     0,  3936,   488,     0, 
    );
    protected static $yyRindex= array(          561,
          0,     0,   510,     0,     0,    56,   639,     0,    24,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -27,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   521,     0,     0,     0,     0,    34, 
         52,     0,     0,  -111,   492,     0,     0,     0,     0,     0, 
        493,     0,     0,     0,     0,   -40,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   586,     0,     0, 
          0,     0,   505,     0,     0,   552,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -124,     0,  1196, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         63,     0,     0,     0,    -1,   218,     3,     0,     0,     0, 
          0,     0,     0,    22,     0,   605,   -39,     0,     0,   613, 
          0,     0,     0,     0,     0,  -124,     0,     0,     0,     0, 
          0,     0,     0,     0,  1223,     0,     0,   286,   606,   645, 
        771,   674,   703,   742,     0,     0,     0,     0,   614,   218, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   598,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   548,   363,     0,   280,   132,     0,    32,     0, 
          0,     0,     0,     0,     0,   249,   317,     0,     0,     0, 
        218,     0,     0,     0,     0,     0,     0,     0,   605,   195, 
          0,   621,     0,     0,     0,  3355,    36,   189,   281,   713, 
        781,   849,  1372,  1495,     0,  2006,     0,  2091,  2782,  2805, 
       3308,   324,     0,   285,  2476,  3238,  3169,     0,  3193,     0, 
       3217,  2710,  2737,  2761,  3145,  2669,  2615,  2642,  2520,  2547, 
       2574,   810,     0,     0,   605,   570,   121,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  3402,  3409,     0,  3261,   605, 
        605,     0,     0,   547,     0,   160,     0,     0,   218,  3316, 
       3329,     0,  3339,  3393,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   193,     0,     0,   218,     0,     0,     0, 
        605,     0,  3285,     0,     0,   605,     0,     0,   630,     0, 
          0,     0,     0,   550,     0,     0,   195,     0,     0,     0, 
        635,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   550,     0,     0,     0,  -107,     0, 
          0,     0,     0,    -9,   195,     0,     0,   618,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   550,     0,   619, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        550,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   619,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  3780,     0,     0,     0,   638,     0,  3871, 
        559,     0,     0,   605,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   568,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,  -105,     0, 
          0,  -105,     0,     0,     0,   550,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   114,     0,     0,   678,   -33,     4,   -29, 
          0,     0,     0,   595,     0,     0,    73,     0,   490,   423, 
          0,     0,     0,  -148,   420,  3618,     0,     0,     0,     0, 
       -134,   659,   668,     0,   298,   626,     0,    96,  1108,    -4, 
        348,     0,   354,   476,     0,  -178,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   299,     0,     0,     0,     0,   304,     0,     0,    26, 
          0,     0,    20,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   396,   447,   631,     0,     0,     0, 
        557,     0,   562,     0,     0,     0,     0,     0,     0,   729, 
          0, 
    );
    protected static $yyTable = array(40,
        165,   165,    43,    43,   165,   187,    44,    45,    39,    20, 
        216,    18,   121,    64,   269,   272,    43,    67,    43,    65, 
         70,    43,    73,   182,   170,    77,    39,    39,   180,   178, 
          1,   179,   177,   181,   400,   296,   207,    43,   124,   115, 
         18,    73,   115,   173,    64,    64,   173,     5,   175,    39, 
        184,   208,   122,    43,    54,    39,   188,    73,   279,     9, 
         10,    10,   174,    10,    10,    10,    10,    10,    10,    10, 
         10,   293,   114,   280,    39,   297,   145,    45,    62,   145, 
        169,    10,    10,    10,    10,    10,    10,   306,   190,    39, 
        114,   115,   123,   145,   145,   173,    29,    30,   401,   165, 
        165,   107,   184,   165,   165,   165,   165,   165,   165,   165, 
        168,    43,    18,    39,   174,   298,    10,    10,    11,    25, 
        165,   165,   165,   165,   165,   165,    45,   182,   145,   182, 
        129,    28,   180,   178,   180,   179,   177,   181,    32,   181, 
        185,   186,    69,    85,    26,   107,    10,    10,    10,    41, 
         43,   267,    46,   165,   264,   165,   165,   228,   228,   127, 
        145,   228,   228,   228,   228,   228,   228,   228,    27,   224, 
         33,   205,   115,    69,    69,   115,    38,   206,   228,   228, 
        228,   228,   228,   228,    42,   165,   165,   165,   363,   387, 
        115,    47,   185,   186,    38,    38,   123,   123,    71,    18, 
        123,   123,   123,   123,   123,   123,   123,   148,   209,   241, 
        284,   228,   183,   228,   228,   241,   385,   123,   123,   123, 
        123,   123,   123,   117,    57,    58,    59,    60,    61,   180, 
        288,   268,   180,    36,   367,    35,    36,   295,    35,    80, 
        210,    50,    38,   228,   228,   228,   180,   180,   399,   213, 
        123,    36,   123,   123,   220,   220,    18,    38,   220,   220, 
        220,   220,   220,   220,   220,    67,    67,    65,    65,   185, 
        186,    52,   243,   243,   263,   220,   220,   220,   220,   220, 
        220,   180,   123,   123,   123,    12,    13,    14,    15,    16, 
         17,    75,    35,    78,   182,    43,    63,   189,   184,   180, 
        178,    79,   179,   177,   181,    80,   243,    35,    81,    55, 
        220,   220,   243,   180,    82,   213,    83,   173,   322,   175, 
        177,   181,   214,   177,   181,   179,   136,    84,   179,   136, 
        213,    86,    43,    10,    10,    10,   332,   337,   181,   181, 
        128,   220,   220,   136,   136,    87,   201,   440,   441,    43, 
        379,   241,   241,   116,    10,   241,   241,    12,    13,    14, 
         15,    16,    17,    10,   118,   148,   145,   118,   149,    12, 
         12,   194,   177,   181,   165,   118,   119,   179,   136,   151, 
        195,   118,   118,   404,   196,   241,   176,   174,   185,   186, 
        202,   241,   220,   165,   165,   276,   412,   171,   172,   277, 
        278,   281,   184,   117,   184,   181,   117,   282,   183,   290, 
        136,    43,   291,   302,   294,   455,   118,   307,   295,   313, 
        206,   117,   317,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,   228,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,   318,   321,   145,   145, 
        145,   228,   228,   324,   463,   117,   325,   465,   330,   331, 
        333,   467,   165,   165,   165,   165,   165,   165,   165,   165, 
        165,   123,    12,   165,   165,   165,   165,   165,   165,   165, 
        165,   165,   165,   165,   165,   361,   362,   334,   364,   365, 
        123,   123,   185,   186,   185,   186,   366,   383,   369,   390, 
        391,    12,    13,    14,    15,    16,    17,   381,   393,   394, 
        395,   396,   183,   397,   183,   398,   403,   408,   413,   180, 
        228,   228,   228,   228,   228,   228,   228,   228,   228,   220, 
        416,   228,   228,   228,   228,   228,   228,   228,   228,   228, 
        228,   228,   228,   414,     5,   421,   420,   428,   220,    12, 
         13,    14,    15,    16,    17,   431,   128,   434,   436,   123, 
        123,   123,   123,   123,   123,   123,   123,   123,   437,   184, 
        123,   123,   123,   123,   123,   123,   123,   123,   123,   123, 
        123,   123,   438,   445,   222,   222,   448,   447,   222,   222, 
        222,   222,   222,   222,   222,     2,   456,   453,   459,   460, 
        464,   180,   180,   180,   466,   222,   222,   222,   222,   222, 
        222,   181,   468,    43,    22,    20,   136,   220,   220,   220, 
        220,   220,   220,   220,   220,   220,    48,   239,   220,   220, 
        220,   220,   220,   220,   220,   220,   220,   220,   220,   220, 
        222,   222,   214,   214,   171,   113,   214,   214,   214,   214, 
        214,   214,   214,   171,   153,   117,   241,   176,   174,   185, 
        186,   154,   117,   214,   214,   214,   214,   214,   214,   158, 
         59,   222,   222,     6,    65,    61,   117,   113,    93,   183, 
        126,   215,   215,    95,    24,   215,   215,   215,   215,   215, 
        215,   215,    97,   181,   181,   181,   285,   311,   214,   214, 
         49,   312,   215,   215,   215,   215,   215,   215,    48,   125, 
        213,   213,   382,   386,   213,   213,   213,   213,   213,   213, 
        213,   310,    57,    58,    59,    60,    61,   433,   342,   214, 
        214,   213,   213,   213,   213,   213,   213,   215,   215,   216, 
        216,   320,   454,   216,   216,   216,   216,   216,   216,   216, 
        200,    31,   274,   182,   271,     0,   182,     0,     0,     0, 
        216,   216,   216,   216,   216,   216,   213,   213,   215,   215, 
        182,   182,     0,     0,     0,     0,     0,     0,   217,   217, 
          0,     0,   217,   217,   217,   217,   217,   217,   217,     5, 
          5,     5,     5,     5,     5,   216,   216,   213,   213,   217, 
        217,   217,   217,   217,   217,   182,     0,   212,   212,     5, 
          5,   212,   212,   212,   212,   212,   212,   212,     0,     0, 
          0,   183,     0,     0,   183,     0,   216,   216,   212,   212, 
        212,   212,   212,   212,   217,   217,     0,   182,   183,   183, 
          2,     2,     2,     2,     2,     2,   211,   211,   392,     0, 
        211,   211,   211,   211,   211,   211,   211,     0,     0,   222, 
          2,     2,     0,   212,   212,   217,   217,   211,   211,   211, 
        211,   211,   211,   183,     0,     0,     0,     0,   222,     0, 
          0,     2,     0,     0,     0,     0,     0,     0,     0,   184, 
        426,     0,   184,   430,   212,   212,     0,     0,     0,     0, 
          0,     0,   211,   211,     0,   183,   184,   184,     0,     0, 
          0,     0,   449,     0,     0,     0,     0,   214,     6,     6, 
          6,     6,     6,     6,     0,   457,     0,     0,     0,     0, 
          0,   461,     0,   211,   211,     0,   214,     0,     6,     6, 
          0,   184,     0,     0,     0,     0,     0,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,   215,     0,   222,   222, 
        222,   222,   222,   222,   222,   222,   222,   222,   222,   222, 
          0,     0,     0,   184,     0,   215,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   213,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   213,   214,   214,     0,     0,   214, 
        214,   214,   214,   214,   216,     0,   214,   214,   214,   214, 
        214,   214,   214,   214,   214,   214,   214,   214,     0,     0, 
          0,     0,     0,   216,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   182,   215,   215,     0,     0,   215,   215, 
        215,   215,   215,   217,     0,   215,   215,   215,   215,   215, 
        215,   215,   215,   215,   215,   215,   215,     0,     0,     0, 
          0,     0,   217,   213,   213,     0,     0,   213,   213,   213, 
        213,   213,     0,     0,   213,   213,   213,   213,   213,   213, 
        213,   213,   213,   213,   213,   213,     0,     0,     0,     0, 
          0,   212,   216,   216,     0,     0,   216,   216,   216,   216, 
        216,   183,     0,   216,   216,   216,   216,   216,   216,   216, 
        216,   216,   216,   216,   216,   182,   182,   182,     0,     0, 
          0,     0,    54,    39,     0,     0,     0,     0,     0,     0, 
        211,   217,   217,     0,     0,   217,   217,   217,   217,   217, 
          0,     0,   217,   217,   217,   217,   217,   217,   217,   217, 
        217,   217,   217,   217,     0,     0,     0,     0,     0,     0, 
        212,   212,     0,     0,   212,   212,   212,   212,   212,   184, 
          0,   212,   212,   212,   212,   212,   212,   212,   212,   212, 
        212,   212,   212,   183,   183,   183,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   211, 
        211,     0,     0,   211,   211,   211,   211,   211,     0,     0, 
        211,   211,   211,   211,   211,   211,   211,   211,   211,   211, 
        211,   211,   135,   135,     0,     0,   135,   135,     0,   135, 
          0,   135,   135,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   135,   135,   135,   135,   135,   135,   165, 
        165,   184,   184,   184,   165,   165,     0,   165,   165,   165, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   165,   165,   165,   165,   182,   170,   135,   135, 
          0,   180,   178,     0,   179,   177,   181,     0,     0,     0, 
          0,    56,    57,    58,    59,    60,    61,     0,     0,   173, 
        154,   175,   166,   165,     0,     0,   165,     0,     0,   135, 
        135,     0,     0,     0,     0,     0,   292,     0,     0,   182, 
        170,     0,     0,   211,   180,   178,     0,   179,   177,   181, 
          0,    62,     0,   169,     0,   165,   165,     0,     0,     0, 
          0,     0,   173,   154,   175,   166,   182,   170,     0,     0, 
          0,   180,   178,     0,   179,   177,   181,     0,     0,     0, 
          0,     0,   305,   168,    63,     0,     0,     0,     0,   173, 
        154,   175,   166,   182,   170,     0,   169,    55,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,   315,   316,     0, 
          0,     0,     0,     0,     0,     0,   173,   154,   175,   166, 
          0,     0,   186,   169,     0,   186,   168,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   182,   170,   335,   186, 
        186,   180,   178,   336,   179,   177,   181,     0,     0,     0, 
        169,     0,     0,   168,     0,     0,     0,     0,     0,   173, 
        154,   175,   166,   182,   170,     0,     0,     0,   180,   178, 
          0,   179,   177,   181,   186,     0,     0,     0,     0,     0, 
        168,   327,     0,     0,     0,   380,   173,   154,   175,   166, 
        182,   170,     0,   169,     0,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,   186,   406,     0,     0, 
          0,     0,   405,   173,   154,   175,   166,   135,     0,     0, 
        169,     0,     0,   168,   328,     0,     0,     0,     0,     0, 
          0,   425,     0,     0,     0,     0,   135,     0,     0,     0, 
          0,     0,     0,     0,   165,   185,     0,   169,   185,     0, 
        168,   446,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   185,   185,   165,     0,     0,     0,     0,     0, 
          0,   184,     0,     0,     0,     0,     0,   168,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   185,     0,     0, 
          0,     0,     0,     0,     0,   135,   135,     0,     0,   135, 
        135,   135,   135,   135,   184,     0,   135,   135,   135,   135, 
        135,   135,   135,   135,   135,   135,   135,   135,     0,   185, 
          0,     0,   165,   165,   165,   165,   165,   165,   165,   165, 
        165,   184,    12,   165,   165,     0,   165,   165,   165,   165, 
        165,   165,   165,   165,   165,     0,     0,     0,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,   184,     0, 
        171,   172,   167,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   176,   174,   185,   186,   155,   156,   157,   158, 
        160,   184,   186,   171,   172,     0,   152,   153,   159,   164, 
        163,   165,   161,   162,   183,     0,     0,     0,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,   184,     0, 
        171,   172,   212,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,     0,     0,     0,     0,   176,   174,   185,   186, 
        155,   156,   157,   158,   160,   184,     0,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,   183,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   186,   186,   186,     0,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,     0,     0, 
        171,   172,     0,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,     0,     0,     0,     0,   176,   174,   185,   186, 
        155,   156,   157,   158,   160,   185,     0,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,   183,     0, 
          0,     0,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,     0,     0,   171,   172,     0,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,   182,   170,     0,     0, 
        415,   180,   178,     0,   179,   177,   181,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   173, 
        154,   175,   166,   182,   170,     0,     0,     0,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,   185,   185,   185, 
          0,     0,     0,     0,     0,     0,   173,   154,   175,   166, 
        182,   170,     0,   169,   418,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   173,   154,   175,   166,     0,     0,     0, 
        169,     0,     0,   168,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   182,   170,     0,     0,   419,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,   169,     0,     0, 
        168,     0,     0,     0,     0,     0,   173,   154,   175,   166, 
        182,   170,     0,     0,   435,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,     0,   168,     0,     0, 
          0,     0,     0,   173,   154,   175,   166,   182,   170,     0, 
        169,     0,   180,   178,     0,   179,   177,   181,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   462,     0, 
        173,   154,   175,   166,     0,     0,   209,   169,     0,   209, 
        168,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        182,   170,     0,   209,   209,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,   169,     0,     0,   168,     0,     0, 
          0,     0,     0,   173,   154,   175,   166,   182,   170,     0, 
          0,     0,   180,   178,     0,   179,   177,   181,   209,     0, 
          0,     0,     0,     0,   168,     0,     0,     0,     0,     0, 
        173,   154,   175,   166,   182,   170,     0,   169,     0,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,     0,     0, 
        209,   210,     0,     0,   210,     0,     0,   173,   154,   175, 
        166,   184,     0,     0,   169,     0,     0,   168,   210,   210, 
          0,     0,     0,     0,     0,     0,     0,   182,   170,     0, 
          0,     0,   180,   178,     0,   179,   177,   181,   184,     0, 
          0,   169,     0,     0,   168,     0,     0,     0,     0,     0, 
        173,     0,   175,   210,   182,   170,     0,   417,     0,   180, 
        178,     0,   179,   177,   181,   184,     0,     0,     0,     0, 
          0,   168,     0,     0,     0,     0,     0,   173,     0,   175, 
          0,     0,     0,     0,   169,   210,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   176, 
        174,   185,   186,   155,   156,   157,   158,   160,   184,     0, 
        171,   172,     0,   152,   153,   159,   164,   163,   165,   161, 
        162,   183,     0,     0,     0,     0,   176,   174,   185,   186, 
        155,   156,   157,   158,   160,   184,     0,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,   183,     0, 
          0,     0,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,   184,     0,   171,   172,     0,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   176,   174,   185,   186, 
        155,   156,   157,   158,   160,   184,   209,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,   183,     0, 
          0,     0,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,   184,     0,   171,   172,     0,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,     0,     0,     0,     0, 
        176,   174,   185,   186,   155,   156,   157,   158,   160,   184, 
          0,   171,   172,     0,   152,   153,   159,   164,   163,   165, 
        161,   162,   183,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   209,   209, 
        209,   210,     0,   176,   174,   185,   186,   155,   156,   157, 
        158,   160,   184,     0,   171,   172,     0,   152,   153,   159, 
        164,   163,   165,   161,   162,   183,     0,     0,     0,     0, 
        176,   174,   185,   186,   155,   156,   157,   158,   160,   184, 
          0,   171,   172,     0,     0,   153,   159,   164,   163,   165, 
        161,   162,   183,     0,     0,     0,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,     0,     0,   171,   172, 
          0,     0,     0,   159,   164,   163,   165,   161,   162,   183, 
          0,   182,     0,   210,   210,   210,   180,   178,     0,   179, 
        177,   181,     0,     0,     0,     0,   206,     0,     0,   206, 
        176,   174,   185,   186,   173,     0,   175,     0,     0,     0, 
          0,   171,   172,   206,   206,     0,   206,     0,   206,     0, 
          0,     0,   183,     0,     0,     0,     0,   176,   174,   185, 
        186,     0,     0,     0,     0,     0,   202,   202,   171,   172, 
        202,   202,   202,   202,   202,   202,   202,     0,   206,   183, 
          0,     0,     0,     0,     0,     0,     0,   202,   202,   202, 
        202,   202,   202,   203,   203,     0,     0,   203,   203,   203, 
        203,   203,   203,   203,     0,     0,     0,     0,     0,   206, 
        206,     0,     0,     0,   203,   203,   203,   203,   203,   203, 
        204,   204,   202,   202,   204,   204,   204,   204,   204,   204, 
        204,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   204,   204,   204,   204,   204,   204,     0,     0,   203, 
        203,     0,     0,   202,   202,     0,     0,     0,     0,     0, 
          0,     0,   200,     0,     0,   200,     0,   200,   200,   200, 
        200,     0,     0,     0,     0,     0,   204,   204,     0,     0, 
        203,   203,   200,   200,   200,   200,   200,   200,     0,   201, 
          0,     0,   201,     0,   201,   201,   201,   201,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   204,   204,   201, 
        201,   201,   201,   201,   201,     0,   205,   200,   200,   205, 
          0,     0,   205,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   205,   205,   205,   205, 
        205,   205,     0,     0,   201,   201,     0,     0,   200,   200, 
          0,     0,     0,     0,     0,     0,     0,   192,     0,     0, 
        192,     0,     0,   192,     0,     0,     0,     0,     0,     0, 
          0,   205,   205,     0,     0,   201,   201,   192,   192,     0, 
        192,     0,   192,     0,   194,     0,   184,   194,     0,     0, 
        194,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   205,   205,   194,   194,     0,   194,   193,   194, 
          0,   193,   192,   192,   193,     0,   206,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   193,   193, 
          0,   193,   187,   193,     0,   187,     0,     0,     0,   194, 
        194,     0,     0,   192,   192,     0,     0,     0,     0,   187, 
        187,     0,     0,     0,     0,   188,     0,     0,   188,     0, 
        202,     0,     0,   193,   193,     0,     0,     0,     0,     0, 
        194,   194,   188,   188,   176,   174,   185,   186,     0,     0, 
          0,     0,     0,     0,   187,   171,   172,   203,     0,   206, 
        206,   206,   206,   206,   193,   193,   183,     0,   206,   206, 
        206,   206,   206,   206,   206,   206,   206,   188,     0,     0, 
          0,     0,     0,     0,   204,     0,   187,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   202, 
        202,     0,     0,   202,   202,   202,   202,   202,     0,   188, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,   202, 
        202,     0,     0,     0,     0,   200,   203,   203,     0,     0, 
        203,   203,   203,   203,   203,     0,     0,   203,   203,   203, 
        203,   203,   203,   203,   203,   203,   203,   203,     0,     0, 
          0,     0,   201,   204,   204,     0,     0,   204,   204,   204, 
        204,   204,     0,     0,   204,   204,   204,   204,   204,   204, 
        204,   204,   204,   204,   204,     0,     0,     0,     0,   205, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   200,   200,     0,     0,   200,   200, 
        200,   200,   200,     0,     0,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   200,     0,     0,     0,     0, 
        192,   201,   201,     0,     0,   201,   201,   201,   201,   201, 
          0,     0,   201,   201,   201,   201,   201,   201,   201,   201, 
        201,   201,   201,     0,     0,     0,     0,   194,   205,   205, 
          0,     0,   205,   205,   205,   205,   205,     0,     0,   205, 
        205,   205,   205,   205,   205,   205,   205,   205,   205,   205, 
          0,   193,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   187,   192,   192,   192,   192,   192,     0,     0, 
        192,   192,   192,   192,   192,   192,   192,   192,   192,   192, 
        192,     0,     0,     0,     0,   188,     0,     0,     0,     0, 
        194,   194,   194,   194,   194,     0,     0,   194,   194,   194, 
        194,   194,   194,   194,   194,   194,   194,   194,     0,     0, 
          0,     0,     0,     0,   193,   193,   193,   193,   193,     0, 
          0,   193,   193,   193,   193,   193,   193,   193,   193,   193, 
        193,   193,   195,     0,     0,   195,     0,     0,   195,     0, 
          0,     0,     0,     0,   187,   187,   187,     0,     0,     0, 
          0,     0,   195,   195,     0,   195,   207,   195,     0,   207, 
          0,     0,   207,     0,     0,     0,     0,   188,   188,   188, 
          0,     0,     0,     0,     0,     0,   207,   207,     0,   207, 
        196,   207,     0,   196,     0,     0,   196,   195,   195,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        196,   196,     0,   196,   197,   196,     0,   197,     0,     0, 
        197,   207,   207,     0,     0,     0,     0,     0,   195,   195, 
          0,     0,     0,     0,   197,   197,     0,   197,   208,   197, 
          0,   208,     0,     0,     0,   196,   196,     0,     0,     0, 
          0,     0,   207,   207,     0,   208,   208,     0,   208,     0, 
        208,   137,     0,     0,   137,     0,     0,     0,     0,   197, 
        197,     0,     0,     0,     0,     0,   196,   196,   137,   137, 
          0,   137,     0,   137,     0,   143,     0,     0,   143,     0, 
        208,   208,     0,     0,     0,     0,     0,     0,     0,     0, 
        197,   197,   143,   143,     0,   143,     0,   143,   189,     0, 
          0,   189,     0,   137,     0,     0,   190,     0,     0,   190, 
          0,   208,   208,     0,     0,   189,   189,     0,     0,   191, 
          0,     0,   191,   190,   190,     0,     0,   143,     0,   198, 
          0,     0,   198,     0,     0,   137,   191,   191,     0,     0, 
          0,     0,     0,     0,     0,   144,   198,   198,   144,     0, 
        189,     0,     0,     0,     0,     0,     0,     0,   190,   143, 
          0,     0,   144,   144,     0,     0,     0,     0,     0,     0, 
          0,   191,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   198,   189,   199,     0,     0,   199,     0,     0,     0, 
        190,     0,   148,     0,     0,   148,     0,   144,     0,   149, 
        199,   199,   149,   191,     0,     0,     0,     0,     0,   148, 
        148,     0,     0,   198,     0,     0,   149,   149,     0,     0, 
          0,     0,     0,     0,     0,   195,     0,     0,     0,   144, 
          0,     0,     0,     0,     0,   199,     0,     0,     0,     0, 
          0,     0,     0,     0,   148,     0,     0,     0,     0,   207, 
          0,   149,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   199,     0,     0, 
          0,     0,     0,   196,     0,     0,   148,     0,     0,     0, 
          0,     0,     0,   149,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   197,   195,   195, 
        195,   195,   195,     0,     0,   195,   195,   195,   195,   195, 
        195,   195,   195,   195,   195,   195,     0,     0,   208,     0, 
          0,     0,   207,   207,   207,   207,   207,     0,     0,     0, 
          0,   207,   207,   207,   207,   207,   207,   207,   207,   207, 
          0,   137,     0,     0,     0,     0,   196,   196,   196,   196, 
        196,     0,     0,     0,     0,   196,   196,   196,   196,   196, 
        196,   196,   196,   196,     0,   143,     0,     0,     0,     0, 
        197,   197,   197,   197,   197,     0,     0,     0,     0,   197, 
        197,   197,   197,   197,   197,   197,   197,   197,   189,     0, 
          0,   208,   208,   208,   208,   208,   190,     0,     0,     0, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,   191, 
          0,     0,     0,     0,   137,   137,   137,   137,   137,   198, 
          0,     0,     0,   137,   137,   137,   137,   137,   137,   137, 
        137,   137,     0,     0,     0,   144,     0,     0,   143,   143, 
        143,   143,   143,   105,     0,     0,     0,   143,   143,   143, 
        143,   143,   143,   143,   143,   143,   137,   138,     0,   139, 
        140,   141,   142,   143,   144,     0,   146,   147,     0,     0, 
        189,   189,   189,   199,     0,     0,     0,     0,   190,   190, 
        190,     0,   148,   197,     0,     0,     0,   105,     0,   149, 
          0,   191,   191,   191,     0,     0,     0,     0,     0,     0, 
          0,   198,   198,   198,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   144,   144,   226, 
        227,   228,   229,   230,   231,   232,   233,   234,   236,   238, 
        239,   240,   241,   242,   244,   245,   246,   247,   249,   251, 
        252,   253,   254,   255,   256,   257,   258,   259,   260,   261, 
        262,     0,     0,     0,     0,   199,   199,   199,     0,     0, 
          0,   242,   109,   273,   148,     0,     0,     0,     0,   109, 
          0,   149,   109,     0,   109,     0,   286,   287,     0,   289, 
          0,     0,     0,     0,     0,     0,   197,     0,   109,     0, 
          0,     0,     0,   109,     0,     0,     0,     0,     0,     0, 
          0,     0,   300,     0,   301,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   303,     0,   304,     0,     0, 
        109,   109,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   197,   242,     0,     0,   308,   309,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   314, 
          0,     0,   109,   105,   109,   109,     0,   197,   197,     0, 
        105,     0,     0,   105,     0,   105,     0,     0,     0,   323, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   105, 
          0,     0,     0,     0,   105,     0,     0,     0,   197,     0, 
          0,     0,     0,   197,     0,    94,     0,     0,     0,     0, 
          0,     0,    89,     0,     0,    92,     0,    93,     0,     0, 
          0,   105,   105,     0,     0,     0,     0,     0,    94,     0, 
         91,     0,     0,     0,     0,    89,   100,     0,    92,     0, 
         93,     0,     0,     0,     0,   242,     0,   389,     0,     0, 
          0,     0,     0,   105,   354,   105,   105,     0,     0,   100, 
          0,     0,     0,    54,    39,     0,     0,   197,   407,     0, 
        409,     0,     0,   410,   411,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    54,    39,     0,     0, 
          0,   197,     0,   427,     0,     0,     0,     0,    95,   109, 
        109,   109,   109,   109,   109,     0,     0,     0,     0,     0, 
          0,   197,     0,     0,     0,     0,     0,     0,   355,     0, 
          0,    95,     0,     0,     0,     0,     0,     0,   458,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   109,     0,     0,     0,    94,     0,     0,     0, 
          0,     0,     0,    89,     0,     0,    92,     0,    93,     0, 
          0,     0,   109,   109,     0,     0,     0,     0,     0,   109, 
        109,   109,   109,     0,   235,   109,     0,   100,     0,     0, 
        105,   105,   105,   105,   105,   105,     0,     0,     0,   109, 
        109,   109,   109,     0,   109,   109,   109,     0,     0,   109, 
        109,   109,   109,   109,    54,    39,    94,     0,     0,     0, 
          0,     0,     0,    89,     0,     0,    92,     0,    93,     0, 
          0,     0,   101,    57,    58,    59,    60,    61,     0,     0, 
          0,   109,   109,   105,   237,     0,     0,   100,     0,    95, 
          0,     0,     0,     0,     0,   101,    57,    58,    59,    60, 
         61,     0,     0,   105,   105,     0,     0,     0,     0,     0, 
        105,   105,   105,   105,    54,    39,   105,     0,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,     0,     0,     0, 
        105,   105,   105,   105,     0,   105,   105,   105,     0,     0, 
        105,     0,   105,   105,   105,    63,   102,     0,    99,    95, 
          0,     0,   103,     0,    94,     0,     0,     0,    98,     0, 
          0,    89,     0,     0,    92,     0,    93,     0,    63,   102, 
          0,     0,   105,   105,     0,   103,   343,   344,   345,    90, 
          0,    98,   248,     0,     0,   100,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   346,   347,   348,   349,     0, 
        350,   351,    90,     0,     0,   352,     0,   353,     0,    94, 
          0,     0,    54,    39,    96,    97,    89,     0,     0,    92, 
          0,    93,     0,   101,    57,    58,    59,    60,    61,     0, 
          0,     0,     0,     0,     0,     0,     0,    96,    97,     0, 
        100,    94,     0,     0,     0,     0,     0,    95,    89,    94, 
          0,    92,     0,    93,     0,     0,    89,     0,     0,    92, 
          0,    93,     0,     0,     0,     0,     0,    54,    39,   250, 
          0,     0,   100,     0,     0,     0,    99,     0,     0,     0, 
        100,     0,     0,   101,    57,    58,    59,    60,    61,     0, 
          0,     0,     0,     0,     0,     0,    63,   102,     0,    54, 
         39,     0,    95,   103,     0,     0,     0,    54,    39,    98, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         90,     0,     0,     0,    95,     0,    99,     0,     0,     0, 
          0,     0,    95,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    63,   102,     0,     0, 
          0,     0,     0,   103,     0,    96,    97,     0,     0,    98, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   101,    57,    58,    59,    60,    61,     0,     0,     0, 
         90,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    96,    97,     0,     0,     0, 
          0,     0,     0,     0,    99,     0,   135,    57,    58,    59, 
         60,    61,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    63,   102,     0,     0,     0,     0, 
          0,   103,     0,     0,     0,     0,     0,    98,   101,    57, 
         58,    59,    60,    61,     0,     0,   101,    57,    58,    59, 
         60,    61,     0,     0,     0,     0,     0,     0,    90,    99, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   136, 
        102,     0,     0,     0,     0,     0,   103,     0,     0,     0, 
          0,    99,    98,    96,    97,     0,     0,     0,     0,    99, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    63,   102,    90,     0,     0,     0,     0,   103,    63, 
        102,     0,     0,     0,    98,     0,   103,     0,     0,     0, 
          0,     0,    98,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    90,     0,     0,    96,    97, 
          0,     0,     0,    90,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         96,    97,     0,     0,     0,     0,     0,     0,    96,    97, 
    );
    protected static $yyCheck = array(33,
         41,    41,    36,    37,    44,    40,    36,    37,    92,     6, 
        145,   123,   260,    47,   123,   194,    50,   125,    52,   125, 
         50,    55,    52,    37,    38,    55,    92,    92,    42,    43, 
        320,    45,    46,    47,    59,   260,    44,    71,   260,    41, 
         35,    71,    44,    41,    78,    79,    60,   321,    62,    59, 
        312,    59,   300,    87,    91,    92,    91,    87,    44,   260, 
         37,    38,    41,    40,    41,    42,    43,    44,    45,    46, 
         47,   220,    41,    59,    92,   300,    41,    44,   300,    44, 
         94,    58,    59,    60,    61,    62,    63,   266,   123,    92, 
         59,    93,   340,    58,    59,    93,   300,   301,   123,    37, 
         38,    76,   312,    41,    42,    43,    44,    45,    46,    47, 
        124,   145,    35,   123,    93,   340,    93,    94,     5,    92, 
         58,    59,    60,    61,    62,    63,    93,    37,    93,    37, 
        125,    91,    42,    43,    42,    45,    46,    47,    25,    47, 
        402,   403,    47,    71,    59,   120,   123,   124,   125,    93, 
        184,   260,    39,    91,   184,    93,    94,    37,    38,    87, 
        125,    41,    42,    43,    44,    45,    46,    47,    59,   150, 
         64,   334,    41,    78,    79,    44,   260,   340,    58,    59, 
         60,    61,    62,    63,    44,   123,   124,   125,   337,   368, 
         59,    40,   402,   403,   260,   260,    37,    38,   311,   311, 
         41,    42,    43,    44,    45,    46,    47,    40,    41,   334, 
        207,    91,   422,    93,    94,   340,   365,    58,    59,    60, 
         61,    62,    63,   260,   261,   262,   263,   264,   265,    41, 
        211,   340,    44,    41,    41,    41,    44,    44,    44,    40, 
         41,   310,   260,   123,   124,   125,    58,    59,   383,   333, 
         91,    59,    93,    94,    37,    38,    35,   260,    41,    42, 
         43,    44,    45,    46,    47,   373,   374,   373,   374,   402, 
        403,   310,   300,   301,   340,    58,    59,    60,    61,    62, 
         63,    93,   123,   124,   125,   280,   281,   282,   283,   284, 
        285,   123,    44,    61,    37,   329,   333,   332,   312,    42, 
         43,    61,    45,    46,    47,    40,   334,    59,   410,   346, 
         93,    94,   340,   125,    41,   333,    41,    60,   299,    62, 
         41,    41,   340,    44,    44,    41,    41,    44,    44,    44, 
        333,   123,   366,   310,   311,   312,   317,   340,    58,    59, 
        335,   124,   125,    58,    59,    44,   125,   373,   374,   383, 
        355,   300,   301,    40,   331,   300,   301,   280,   281,   282, 
        283,   284,   285,   340,    41,    40,   331,    44,    40,   410, 
        410,    44,    93,    93,   312,    78,    79,    93,    93,   410, 
         93,    58,    59,   388,    44,   334,   400,   401,   402,   403, 
        260,   340,   340,   331,   332,    41,   401,   411,   412,    41, 
         61,   260,   312,    41,   312,   125,    44,    61,   422,    40, 
        125,   445,    40,    58,    41,   445,    93,    40,    44,    40, 
        340,    59,    41,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,   410,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   321,    40,   413,   414, 
        415,   331,   332,    41,   459,    93,    93,   462,    41,    41, 
         40,   466,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,   410,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    41,    41,   123,    41,   340, 
        331,   332,   402,   403,   402,   403,    44,    58,   123,    40, 
         40,   280,   281,   282,   283,   284,   285,   125,    40,    59, 
         59,    40,   422,    40,   422,   125,    59,   361,   125,   331, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         40,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,    59,    35,   344,   125,   340,   331,   280, 
        281,   282,   283,   284,   285,   123,   335,    59,   413,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    41,   312, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,   371,    40,    37,    38,   340,    59,    41,    42, 
         43,    44,    45,    46,    47,    35,    41,   125,    58,   340, 
         41,   413,   414,   415,   123,    58,    59,    60,    61,    62, 
         63,   331,   125,    93,   123,   123,   331,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    41,   123,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
         93,    94,    37,    38,    93,    41,    41,    42,    43,    44, 
         45,    46,    47,    41,    41,    58,   340,   400,   401,   402, 
        403,    41,    93,    58,    59,    60,    61,    62,    63,   123, 
         41,   124,   125,    35,   125,    41,    59,    59,    41,   422, 
         86,    37,    38,   125,     7,    41,    42,    43,    44,    45, 
         46,    47,   125,   413,   414,   415,   207,   278,    93,    94, 
         42,   279,    58,    59,    60,    61,    62,    63,    41,    84, 
         37,    38,   359,   366,    41,    42,    43,    44,    45,    46, 
         47,   260,   261,   262,   263,   264,   265,   424,   333,   124, 
        125,    58,    59,    60,    61,    62,    63,    93,    94,    37, 
         38,   295,   444,    41,    42,    43,    44,    45,    46,    47, 
        120,    23,   196,    41,   193,    -1,    44,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    93,    94,   124,   125, 
         58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,   280, 
        281,   282,   283,   284,   285,    93,    94,   124,   125,    58, 
         59,    60,    61,    62,    63,    93,    -1,    37,    38,   300, 
        301,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,   124,   125,    58,    59, 
         60,    61,    62,    63,    93,    94,    -1,   125,    58,    59, 
        280,   281,   282,   283,   284,   285,    37,    38,   373,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,   312, 
        300,   301,    -1,    93,    94,   124,   125,    58,    59,    60, 
         61,    62,    63,    93,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
        415,    -1,    44,   418,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,   125,    58,    59,    -1,    -1, 
         -1,    -1,   437,    -1,    -1,    -1,    -1,   312,   280,   281, 
        282,   283,   284,   285,    -1,   450,    -1,    -1,    -1,    -1, 
         -1,   456,    -1,   124,   125,    -1,   331,    -1,   300,   301, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
         -1,    -1,    -1,   125,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,   422,    -1,    -1,    -1, 
         -1,    -1,   331,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
         -1,   331,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,   331,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,   413,   414,   415,    -1,    -1, 
         -1,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,   331, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    37,    38,    -1,    -1,    41,    42,    -1,    44, 
         -1,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    37, 
         38,   413,   414,   415,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    37,    38,    93,    94, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    60, 
         61,    62,    63,    91,    -1,    -1,    94,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    46,    47, 
         -1,   300,    -1,    94,    -1,   123,   124,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,   265,   124,   333,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    94,   346,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   290,   291,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    41,    94,    -1,    44,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,   321,    58, 
         59,    42,    43,   326,    45,    46,    47,    -1,    -1,    -1, 
         94,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    93,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    59,    60,    61,    62,    63, 
         37,    38,    -1,    94,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,   125,   390,    -1,    -1, 
         -1,    -1,    59,    60,    61,    62,    63,   312,    -1,    -1, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,   414,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    41,    -1,    94,    44,    -1, 
        124,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,   332,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,    -1,   125, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,   410,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,   331,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   331,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    94,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         94,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         94,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1, 
         60,    61,    62,    63,    -1,    -1,    41,    94,    -1,    44, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    58,    59,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    93,    -1, 
         -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    94,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        125,    41,    -1,    -1,    44,    -1,    -1,    60,    61,    62, 
         63,   312,    -1,    -1,    94,    -1,    -1,   124,    58,    59, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,   312,    -1, 
         -1,    94,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1, 
         60,    -1,    62,    93,    37,    38,    -1,   331,    -1,    42, 
         43,    -1,    45,    46,    47,   312,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62, 
         -1,    -1,    -1,    -1,    94,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,   422,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,   331,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,   331,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,    -1,    -1,   415,   416,   417,   418,   419, 
        420,   421,   422,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,    -1,    -1,   416,   417,   418,   419,   420,   421,   422, 
         -1,    37,    -1,   413,   414,   415,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
        400,   401,   402,   403,    60,    -1,    62,    -1,    -1,    -1, 
         -1,   411,   412,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,   422,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    37,    38,   411,   412, 
         41,    42,    43,    44,    45,    46,    47,    -1,    93,   422, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    93,    94,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    43,    44,    45, 
         46,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
        124,   125,    58,    59,    60,    61,    62,    63,    -1,    38, 
         -1,    -1,    41,    -1,    43,    44,    45,    46,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    58, 
         59,    60,    61,    62,    63,    -1,    38,    93,    94,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    93,    94,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,   124,   125,    58,    59,    -1, 
         61,    -1,    63,    -1,    38,    -1,   312,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    58,    59,    -1,    61,    38,    63, 
         -1,    41,    93,    94,    44,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    41,    63,    -1,    44,    -1,    -1,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
        331,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,   400,   401,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,   411,   412,   331,    -1,   404, 
        405,   406,   407,   408,   124,   125,   422,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   125, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,   331,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,   331,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    38,    63,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         38,    63,    -1,    41,    -1,    -1,    44,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    38,    63,    -1,    41,    -1,    -1, 
         44,    93,    94,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    41,    63, 
         -1,    44,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    58,    59,    -1,    61,    -1, 
         63,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,   124,   125,    58,    59, 
         -1,    61,    -1,    63,    -1,    41,    -1,    -1,    44,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    -1,    61,    -1,    63,    41,    -1, 
         -1,    44,    -1,    93,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   124,   125,    -1,    -1,    58,    59,    -1,    -1,    41, 
         -1,    -1,    44,    58,    59,    -1,    -1,    93,    -1,    41, 
         -1,    -1,    44,    -1,    -1,   125,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,    58,    59,    44,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,   125, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,   125,    41,    -1,    -1,    44,    -1,    -1,    -1, 
        125,    -1,    41,    -1,    -1,    44,    -1,    93,    -1,    41, 
         58,    59,    44,   125,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,   125,    -1,    -1,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,   331, 
         -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,   331,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   331,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   331,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   331,    -1, 
         -1,   404,   405,   406,   407,   408,   331,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,   331, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,   331,    -1,    -1,   404,   405, 
        406,   407,   408,    76,    -1,    -1,    -1,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    89,    90,    -1,    92, 
         93,    94,    95,    96,    97,    -1,    99,   100,    -1,    -1, 
        413,   414,   415,   331,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,   331,   116,    -1,    -1,    -1,   120,    -1,   331, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   152, 
        153,   154,   155,   156,   157,   158,   159,   160,   161,   162, 
        163,   164,   165,   166,   167,   168,   169,   170,   171,   172, 
        173,   174,   175,   176,   177,   178,   179,   180,   181,   182, 
        183,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
         -1,   194,    33,   196,   413,    -1,    -1,    -1,    -1,    40, 
         -1,   413,    43,    -1,    45,    -1,   209,   210,    -1,   212, 
         -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    59,    -1, 
         -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   235,    -1,   237,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   248,    -1,   250,    -1,    -1, 
         91,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   265,   266,    -1,    -1,   269,   270,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282, 
         -1,    -1,   123,    33,   125,   126,    -1,   290,   291,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,   302, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    59, 
         -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,   321,    -1, 
         -1,    -1,    -1,   326,    -1,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         58,    -1,    -1,    -1,    -1,    40,    64,    -1,    43,    -1, 
         45,    -1,    -1,    -1,    -1,   368,    -1,   370,    -1,    -1, 
         -1,    -1,    -1,   123,    59,   125,   126,    -1,    -1,    64, 
         -1,    -1,    -1,    91,    92,    -1,    -1,   390,   391,    -1, 
        393,    -1,    -1,   396,   397,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    92,    -1,    -1, 
         -1,   414,    -1,   416,    -1,    -1,    -1,    -1,   126,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    -1,    33,    -1,    -1,    -1, 
         -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340, 
        341,   342,   343,    -1,    61,   346,    -1,    64,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,   360, 
        361,   362,   363,    -1,   365,   366,   367,    -1,    -1,   370, 
        371,   372,   373,   374,    91,    92,    33,    -1,    -1,    -1, 
         -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,   402,   403,   313,    61,    -1,    -1,    64,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,   341,   342,   343,    91,    92,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,    -1, 
        370,    -1,   372,   373,   374,   333,   334,    -1,   313,   126, 
         -1,    -1,   340,    -1,    33,    -1,    -1,    -1,   346,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,   333,   334, 
         -1,    -1,   402,   403,    -1,   340,   341,   342,   343,   367, 
         -1,   346,    61,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   360,   361,   362,   363,    -1, 
        365,   366,   367,    -1,    -1,   370,    -1,   372,    -1,    33, 
         -1,    -1,    91,    92,   402,   403,    40,    -1,    -1,    43, 
         -1,    45,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         64,    33,    -1,    -1,    -1,    -1,    -1,   126,    40,    33, 
         -1,    43,    -1,    45,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,    -1,    -1,    91,    92,    61, 
         -1,    -1,    64,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         64,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    91, 
         92,    -1,   126,   340,    -1,    -1,    -1,    91,    92,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,    -1,    -1,    -1,   126,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,   402,   403,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
        367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,   260,   261, 
        262,   263,   264,   265,    -1,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,    -1,    -1,    -1,   367,   313, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1, 
         -1,   313,   346,   402,   403,    -1,    -1,    -1,    -1,   313, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   333,   334,   367,    -1,    -1,    -1,    -1,   340,   333, 
        334,    -1,    -1,    -1,   346,    -1,   340,    -1,    -1,    -1, 
         -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,   402,   403, 
         -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 'T_EXP', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 199 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 199 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 210 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 211 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 215 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 222 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 227 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 233 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 233 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 242 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 242 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 253 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 254 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 258 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 259 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 263 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 264 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 268 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 269 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 274 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 275 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 279 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 280 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 284 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 285 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 291 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 301 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 307 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 308 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 314 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 314 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 328 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 329 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 334 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 335 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 339 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 340 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 344 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 348 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 353 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 361 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 362 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 366 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 367 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 372 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 378 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 381 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 384 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 406 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 407 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 67:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 68:  #line 421 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 69:  #line 425 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 70:  #line 425 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 71:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 73:  #line 433 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 74:  #line 433 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 448 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 78:  #line 448 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 452 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 80:  #line 452 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 81:  #line 456 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 82:  #line 456 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 83:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 85:  #line 465 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 87:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 89:  #line 467 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 90:  #line 467 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 92:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 93:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 476 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 95:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 97:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 98:  #line 486 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 99:  #line 490 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 100:  #line 490 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 101:  #line 494 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 102:  #line 494 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 104:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 105:  #line 505 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 106:  #line 506 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 107:  #line 506 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 109:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 110:  #line 516 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 111:  #line 520 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 112:  #line 520 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 113:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 115:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 116:  #line 536 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 117:  #line 540 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 550 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 121:  #line 558 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 122:  #line 561 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 123:  #line 564 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 567 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 125:  #line 573 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 126:  #line 579 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 127:  #line 579 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 128:  #line 585 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 585 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 130:  #line 589 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 131:  #line 589 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 132:  #line 599 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 133:  #line 599 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 134:  #line 608 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 135:  #line 611 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 136:  #line 614 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 137:  #line 617 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 138:  #line 620 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 623 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 626 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 141:  #line 629 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 142:  #line 632 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 143:  #line 636 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 144:  #line 642 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 145:  #line 648 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 146:  #line 654 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 147:  #line 659 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 148:  #line 664 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 149:  #line 667 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 150:  #line 670 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 151:  #line 673 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 152:  #line 676 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 153:  #line 687 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 155:  #line 692 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 693 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 157:  #line 697 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 158:  #line 701 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 159:  #line 702 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 161:  #line 707 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 162:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 163:  #line 708 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 164:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 165:  #line 712 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 166:  #line 718 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 167:  #line 719 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 168:  #line 720 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 169:  #line 721 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 170:  #line 722 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 171:  #line 726 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 172:  #line 729 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 173:  #line 732 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 174:  #line 735 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 175:  #line 741 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 176:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 177:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 179:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 180:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 187:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 191:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 192:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 199:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 200:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 206:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 792 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 214:  #line 798 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 215:  #line 799 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 216:  #line 800 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 217:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 218:  #line 805 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 219:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 220:  #line 811 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 222:  #line 816 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 223:  #line 817 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 224:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 225:  #line 821 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 226:  #line 824 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 227:  #line 824 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 228:  #line 827 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 229:  #line 830 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 230:  #line 833 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 231:  #line 836 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 232:  #line 836 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 233:  #line 839 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 234:  #line 839 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 237:  #line 852 "src/main/jay/grammars/php.jay"
    { $yyVal= 'callable' === $yyVals[0+$yyTop] ? new TypeName('->var', null) : new TypeName($yyVals[0+$yyTop]); } break;

    case 238:  #line 856 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 239:  #line 860 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 240:  #line 861 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 241:  #line 867 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 242:  #line 868 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 243:  #line 872 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 244:  #line 873 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 245:  #line 877 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 246:  #line 878 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 247:  #line 879 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 248:  #line 880 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 249:  #line 881 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 250:  #line 882 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2454 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
