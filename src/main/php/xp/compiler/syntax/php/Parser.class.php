<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
#line 80 "-"

  /**
   * Generated parser class
   *
   * @purpose  Parser implementation
   */
  class Parser extends \text\parser\generic\AbstractParser {
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    83,    83,    84, 
         84,    85,    38,    87,    38,    25,    25,    25,    25,    25, 
         25,    86,    86,    86,    86,    88,    88,    90,    90,    89, 
         78,    78,    78,    78,    78,    78,    78,    78,    78,    78, 
         78,    78,    79,    79,    79,    79,    79,    79,    79,    79, 
         80,    80,    80,    80,    80,    80,    80,    80,    80,    80, 
         80,    81,    81,    81,    81,    81,    81,    82,    82,    73, 
         73,    91,    91,    93,    92,    94,    92,    92,    92,    92, 
         95,    92,    31,    31,    10,    96,    17,    17,    33,    33, 
         97,    97,    98,    98,    98,    98,    98,    98, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     1,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     1,     1,     1,     1,     5,     3,     3, 
          3,     3,     4,     4,     2,     7,     4,     0,     1,     1, 
          3,     1,     1,     0,     5,     1,     1,     1,     1,     1, 
          1,     0,     1,     1,     1,     1,     3,     0,     1,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          4,     4,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     0,     4,     2,     2,     4, 
          0,     6,     1,     1,     1,     1,     1,     3,     0,     1, 
          1,     2,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   233,   235,   234,   236,   238,   237,     0,     1,     0, 
         42,   230,     0,     8,     0,     4,     9,     0,    14,    16, 
        232,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   225,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   161,   157,   160,   158,   159, 
          0,     0,     0,   153,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   154,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   228,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,   126,     0,     0,     0,     0,   124,     0,     0,   123, 
          0,     0,   133,   134,   135,   136,   137,   163,     0,     0, 
          0,     0,   166,    15,     0,    27,     0,     0,     0,     0, 
         29,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   132,   145,   130,     0,     0,   128,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   208,   209, 
         53,     0,     0,   155,     0,     0,     0,    31,     0,     0, 
         33,     0,    30,     0,     0,     0,   226,     0,   223,     0, 
        127,   224,     0,   152,     0,     0,   150,   214,     0,   216, 
        125,   211,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   142, 
        141,   115,     0,     0,   169,   167,   156,    34,    32,    37, 
          0,     0,     0,   147,     0,     0,     0,     0,     0,     0, 
          0,   219,     0,     0,   213,     0,   120,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   151,     0, 
        221,     0,     0,     0,   129,     0,     0,     0,     0,    59, 
          0,   119,   118,   131,    68,     0,    88,    72,    76,    78, 
         74,    84,    86,    70,    80,    91,     0,     0,     0,    65, 
          0,   102,   215,     0,   220,   217,     0,    63,     0,     0, 
          0,     0,    82,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    90,   146,    67,     0,   121,     0,     0, 
         62,    61,     0,     0,     0,     0,     0,     0,     0,    85, 
         87,     0,     0,   103,   222,    40,    56,     0,    38,    69, 
          0,    89,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    57,   110,    83,   107, 
          0,     0,    77,     0,     0,     0,     0,     0,     0,   109, 
          0,     0,     0,     0,   105,    71,    98,   100,     0,    95, 
          0,     0,     0,    79,    93,    75,     0,     0,     0,    81, 
         97,     0,     0,   106,     0,     0,     0,    73,     0,   101, 
          0,    99,     0,     0,   111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   118,   100,   209, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   136, 
        103,   104,   137,   201,    64,   328,   308,   294,   360,   379, 
        309,    34,    21,    35,    65,    66,    67,   120,   121,   329, 
        310,   311,   330,   331,   332,   242,   342,   351,   416,   345, 
        348,   406,   346,   347,   352,   419,   364,   399,   349,   350, 
        344,   420,   421,   428,   429,   427,   400,   401,   409,   122, 
        211,   288,   221,   156,   151,   224,   213,   123,   124,   125, 
        126,   127,   215,   216,   217,   131,    91,   132,   133,   266, 
        222,   223,   280,   284,   334,   212,    22,    23, 
    );
    protected static $yySindex = array(         -267,
          0,     0,  -263,  -193,  -193,    84,  -263,     0,   -16,    27, 
         38,     0,     0,     0,     0,     0,     0,    32,     0,  -128, 
          0,     0,   215,     0,  -193,     0,     0,    85,     0,     0, 
          0,     0,   -77,    68,   119,   -77,   -77,     0,  -193,   151, 
        215,    85,     0,  -136,   -75,     0,   506,     0,     0,   -77, 
        -46,   -77,   167,   -77,   258,     0,     0,     0,     0,     0, 
        267,   297,   -63,     0,   307,   308,   309,     0,     0,   -77, 
        228,   312,     0,     0,   323,   -22,   -22,     0,  -214,     0, 
          0,  -231,     0,     0,   -77,    -3,  3847,     0,     0,     0, 
       3449,     0,     0,   258,     0,     3,     0,    92,     0,  -240, 
          0,     0,     0,    66,  3856,  3847,  3847,  3847,  3847,  3847, 
       3847,     0,  3847,  3847,   332,   336,     0,   -29,  2030,     0, 
        339,   338,     0,     0,     0,     0,     0,     0,   928,   338, 
        344,   342,     0,     0,   340,     0,    76,   139,   341,    84, 
          0,   159,   181,  1256,  -157,  -157,  -273,  -157,  -157,  -157, 
        -42,     0,     0,     0,    60,   -81,     0,  3847,  3847,  3847, 
       3847,  3847,  3847,  3847,  3847,  3847,  3582,  3695,  3847,  3847, 
       3847,  3847,  3847,  3847,  3847,  3792,  3815,  3847,  3847,  3847, 
       3847,  3847,  3847,  3847,  3847,  3847,  3847,   -51,     0,     0, 
          0,  3847,  3847,     0,  3847,   264,    92,     0,   363,  3847, 
          0,    65,     0,  3847,  3847,   -81,     0,   366,     0,   367, 
          0,     0,  3847,     0,   369,   364,     0,     0,  -115,     0, 
          0,     0,   -81,  -213,  2057,  2085,  2085,  2085,  2085,  2085, 
       2085,  2085,  2085,  3847,  2085,  3847,  2085,  2085,  2085,  2085, 
       2030,   353,  2924,  2257,  1852,  3847,   736,  3847,   736,   -12, 
        -12,   -12,   -12,   -12,   -19,   -19,  -273,  -273,  -273,     0, 
          0,     0,  2030,   928,     0,     0,     0,     0,     0,     0, 
       2030,  2030,  2030,     0,  3847,  3847,   371,   292,    60,  3847, 
        376,     0,  3847,  3847,     0,   377,     0,   -81,  2085,  2085, 
       3847,  2085,  2085,   -41,   387,   401,   -81,  3438,     0,   325, 
          0,  1314,  1341,  3847,     0,  2848,   341,   402,   104,     0, 
        412,     0,     0,     0,     0,   322,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  3438,  1382,   348,     0, 
       3438,     0,     0,  3847,     0,     0,   435,     0,   425,   341, 
        -41,  3847,     0,  3847,   463,   464,  3438,   465,   447,   448, 
        471,   480,   396,     0,     0,     0,   481,     0,   -83,    15, 
          0,     0,   453,  3438,  1411,  3847,  3847,   175,  3847,     0, 
          0,  3847,  3847,     0,     0,     0,     0,  3438,     0,     0, 
        413,     0,   478,  1524,   499,  1560,  1644,  1796,   415,   197, 
       3847,  3438,  3847,   212,  3438,   430,     0,     0,     0,     0, 
        197,   508,     0,  1823,   155,   528,   208,   -72,   552,     0, 
       3847,   535,   255,  3438,     0,     0,     0,     0,   474,     0, 
        -72,   -77,   559,     0,     0,     0,  3438,  3847,   543,     0, 
          0,   263,  3438,     0,  1945,  3438,   561,     0,  3438,     0, 
        482,     0,  3438,   479,     0, 
    );
    protected static $yyRindex= array(           33,
          0,     0,    61,     0,     0,    -4,   113,     0,    19,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    39,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   513,     0,     0,     0,     0,   -18, 
        168,     0,     0,   -87,   484,     0,     0,     0,     0,     0, 
        485,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   568,     0,     0,     0, 
          0,   487,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -188,   579,   -39,     0,     0, 
        580,     0,     0,     0,     0,  -188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   170,     0,     0,     0,   203,     0, 
          0,    13,     0,     0,     0,     0,     0,     0,    80,   594, 
          0,   595,     0,     0,     0,     0,     0,     0,    97,   304, 
          0,  1972,     0,     0,   596,   623,   858,   650,   694,   804, 
          0,     0,     0,     0,   604,   211,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   588,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   266,     0,     0,   110,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   211,     0,     0,     0,     0, 
          0,     0,   579,     0,     0,   607,     0,     0,     0,     0, 
          0,     0,   472,     0,   316,    57,   262,   718,  1265,  1864, 
       2097,  2932,  2956,     0,  2992,     0,  3142,  3180,  3184,  3188, 
        134,     0,  2774,  2751,  2682,     0,  2706,     0,  2730,    73, 
       2515,  2539,  2658,  2274,  2125,  2230,  1082,  1109,  1136,     0, 
          0,     0,   124,     0,     0,     0,     0,     0,     0,     0, 
        268,   901,  1187,     0,   579,   579,     0,     0,     0,   556, 
         46,     0,     0,     0,     0,   143,     0,   211,  3196,  3217, 
          0,  3227,  3238,   609,     0,     0,   211,   526,     0,     0, 
          0,     0,     0,   579,     0,  2799,   182,     0,     0,     0, 
        611,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   526,     0,     0,     0, 
       -114,     0,     0,   579,     0,     0,     0,     0,    36,   182, 
          0,   603,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   526,     0,   612,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   526,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        612,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       3316,     0,     0,     0,   622,     0,  3403,   547,     0,     0, 
        579,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        548,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   -98,     0,     0,   -98,     0, 
          0,     0,   526,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   171,     0,     0,   646,   -33,     7,   -30, 
          0,     0,     0,   590,     0,     0,   109,     0,   539,   483, 
          0,     0,     0,  -291,   502,  4114,     0,     0,     0,     0, 
       -139,   657,   659,     0,   246,   619,     0,    26,  3053,  -279, 
        361,     0,   372,   331,     0,  -147,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   283,     0,     0,     0,     0,   305,     0,     0,   614, 
          0,     0,  -135,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   428,     0,     0,     0,   519,     0, 
        492,     0,     0,     0,     0,     0,   695,     0, 
    );
    protected static $yyTable = array(40,
        156,   156,    43,    43,   156,    44,    45,   283,    39,   218, 
         66,   210,    20,    63,    39,   338,    43,   187,    43,    69, 
         43,    72,   185,    75,   187,    45,    64,   186,    94,   185, 
        183,    18,   184,   182,   186,    18,    43,    18,   188,    72, 
         39,   220,    63,    63,   262,    92,   286,   353,   361,    39, 
         39,    43,     1,   113,    72,    10,    10,     5,    10,    10, 
         10,    10,    10,    10,    10,    10,     9,     2,    61,    39, 
        274,   113,    68,   377,    45,    25,    10,    10,    10,    10, 
         10,    10,   218,   218,   381,    26,   218,   218,   218,   218, 
        218,   218,   218,   138,    39,     5,    27,   140,   389,   139, 
        140,    68,    68,   218,   218,   218,   218,   218,   218,   140, 
        183,    10,    10,   183,   140,   140,   183,    43,    18,   197, 
        114,    99,    28,   114,   141,    93,   287,   134,   189,   190, 
        183,   183,   300,   183,   198,   183,   218,   378,   218,   218, 
         35,    10,    10,    10,   281,   229,   202,     6,    33,   140, 
        168,   229,   305,   168,    43,    35,   440,   261,    39,   442, 
         41,   314,    42,   444,   170,   183,   183,   170,   218,   218, 
        218,    29,    30,    50,   117,    11,    38,   117,    83,   122, 
        122,   140,    38,   122,   122,   122,   122,   122,   122,   122, 
         47,   117,   117,    97,   363,    32,   183,   183,   154,   204, 
        122,   122,   122,   122,   122,   122,   156,   156,    38,    46, 
        156,   156,   156,   156,   156,   156,   156,    38,    38,   376, 
         78,   205,    35,    18,   282,    35,   117,   156,   156,   156, 
        156,   156,   156,   122,    52,   122,   122,    88,    56,    57, 
         58,    59,    60,   114,   189,   190,   114,   210,   210,   207, 
        219,   210,   210,   210,   210,   210,   210,   210,    66,    66, 
         43,   114,   156,   156,    70,   122,   122,   122,   210,   210, 
        210,   210,   210,   210,    64,    64,    12,    13,    14,    15, 
         16,    17,    12,    13,    14,    15,    16,    17,   260,    74, 
        207,   207,   188,   156,   156,   229,   229,   208,   307,   188, 
        417,   418,   171,   210,   210,   171,   116,    43,    36,   116, 
         62,    36,     2,     2,     2,     2,     2,     2,    76,   171, 
        171,    89,    90,    54,   116,    43,    36,    77,    10,    10, 
         10,    98,     2,     2,   210,   210,    78,    98,   231,   231, 
          5,     5,     5,     5,     5,     5,    79,    80,    81,    10, 
         84,   135,    82,     2,   171,    85,   139,   218,    10,   139, 
          5,     5,    87,    12,    13,    14,    15,    16,    17,    12, 
         12,   154,   231,   139,   139,   155,   218,   218,   231,   191, 
        157,   192,   189,   190,   194,   195,   171,   140,    43,   189, 
        190,   432,     6,     6,     6,     6,     6,     6,   199,   214, 
        196,   200,   270,   183,   139,   275,   276,   279,   139,   278, 
        291,   297,     6,     6,   298,   301,   304,   333,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   312,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
        139,   313,   339,   340,   343,   218,   218,   218,   218,   218, 
        218,   218,   218,   218,   122,   341,   218,   218,   218,   218, 
        218,   218,   218,   218,   218,   218,   218,   229,   229,   140, 
        140,   140,   355,   122,   122,   358,   183,   183,   183,   183, 
        183,   156,   359,   183,   183,   183,   183,   183,   183,   183, 
        183,   183,   183,   183,    12,    13,    14,    15,    16,    17, 
        156,   229,   366,   367,   369,   370,   371,   229,   212,   212, 
        372,   380,   212,   212,   212,   212,   212,   212,   212,   373, 
        374,   375,   210,   267,    56,    57,    58,    59,    60,   212, 
        212,   212,   212,   212,   212,   385,   391,   390,   393,   397, 
        398,   210,   122,   122,   122,   122,   122,   122,   122,   122, 
        122,   405,   408,   122,   122,   122,   122,   122,   122,   122, 
        122,   122,   122,   122,   212,   212,   411,   413,   414,   156, 
        156,   156,   156,   156,   156,   156,   156,   156,   415,    12, 
        156,   156,   156,   156,   156,   156,   156,   156,   156,   156, 
        156,   422,   171,   424,   425,   212,   212,    39,   430,   433, 
        436,   441,   437,   445,   443,    43,    22,    20,    48,   227, 
        210,   210,   210,   210,   210,   210,   210,   210,   210,   112, 
        162,   210,   210,   210,   210,   210,   210,   210,   210,   210, 
        210,   210,   204,   204,   164,   165,   204,   204,   204,   204, 
        204,   204,   204,   229,   148,   116,   139,   149,   116,    58, 
         64,    60,    24,   204,   204,   204,   204,   204,   204,   205, 
        205,   116,    92,   205,   205,   205,   205,   205,   205,   205, 
        112,    94,    96,    96,   171,   171,   171,   368,   203,   269, 
        205,   205,   205,   205,   205,   205,   203,   203,   204,   204, 
        203,   203,   203,   203,   203,   203,   203,   268,    49,    48, 
         95,   362,   356,   431,   130,   410,   299,   203,   203,   203, 
        203,   203,   203,   265,   285,   205,   205,    31,     0,   204, 
        204,     0,   403,     0,     0,   407,     0,     0,   139,   139, 
        206,   206,     0,     0,   206,   206,   206,   206,   206,   206, 
        206,     0,   203,   203,   426,     0,   205,   205,     0,     0, 
          0,   206,   206,   206,   206,   206,   206,   434,   172,     0, 
          0,   172,     0,   438,     0,    55,    56,    57,    58,    59, 
         60,     0,   187,   203,   203,   172,   172,   185,   183,     0, 
        184,   182,   186,   212,     0,     0,   206,   206,     0,     0, 
          0,     0,     0,     0,     0,   178,     0,   180,     0,     0, 
          0,     0,   212,     0,     0,    61,     0,     0,     0,     0, 
        172,     0,     0,     0,     0,     0,     0,   206,   206,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    62,     0, 
        207,   207,   172,     0,   207,   207,   207,   207,   207,   207, 
        207,    54,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   207,   207,   207,   207,   207,   207,     0,     0,     0, 
          0,   212,   212,   212,   212,   212,   212,   212,   212,   212, 
          0,     0,   212,   212,   212,   212,   212,   212,   212,   212, 
        212,   212,   212,     0,   202,   202,   207,   207,   202,   202, 
        202,   202,   202,   202,   202,     0,     0,   204,     0,     0, 
          0,     0,     0,     0,     0,   202,   202,   202,   202,   202, 
        202,     0,     0,     0,     0,     0,   204,   207,   207,     0, 
          0,     0,     0,     0,   205,     0,     0,     0,     0,     0, 
          0,   143,     0,     0,   143,     0,     0,     0,     0,     0, 
        202,   202,     0,   205,     0,     0,     0,     0,   143,   143, 
          0,   203,     0,     0,   187,   175,     0,     0,     0,   185, 
        183,     0,   184,   182,   186,     0,     0,     0,     0,     0, 
        203,   202,   202,     0,     0,     0,     0,   178,   160,   180, 
        172,     0,     0,   143,     0,   204,   204,     0,     0,   204, 
        204,   204,   204,   204,     0,   206,   204,   204,   204,   204, 
        204,   204,   204,   204,   204,   204,   204,     0,     0,     0, 
          0,   174,   205,   205,   206,   143,   205,   205,   205,   205, 
        205,     0,     0,   205,   205,   205,   205,   205,   205,   205, 
        205,   205,   205,   205,     0,     0,     0,   188,   172,   203, 
        203,   173,     0,   203,   203,   203,   203,   203,     0,     0, 
        203,   203,   203,   203,   203,   203,   203,   203,   203,   203, 
        203,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   206,   206,     0,     0,   206,   206,   206, 
        206,   206,     0,     0,   206,   206,   206,   206,   206,   206, 
        206,   206,   206,   206,   206,   207,     0,     0,   193,   193, 
          0,     0,   193,   193,   193,   193,   193,   193,   193,     0, 
        172,   172,   172,     0,   207,   181,   179,   189,   190,   193, 
        193,   193,   193,   193,   193,   194,   194,     0,     0,   194, 
        194,   194,   194,   194,   194,   194,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   194,   194,   194,   194, 
        194,   194,   195,   195,   193,   193,   195,   195,   195,   195, 
        195,   195,   195,     0,     0,     0,     0,     0,   202,     0, 
          0,     0,     0,   195,   195,   195,   195,   195,   195,     0, 
          0,   194,   194,   207,   207,   193,   193,   207,   207,   207, 
        207,   207,     0,     0,   207,   207,   207,   207,   207,   207, 
        207,   207,   207,   207,   207,     0,     0,   144,   195,   195, 
        144,   143,   194,   194,     0,     0,     0,     0,     0,   188, 
          0,     0,     0,     0,   144,   144,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   202,   202,   195, 
        195,   202,   202,   202,   202,   202,     0,     0,   202,   202, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,   144, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   187,   175,     0,     0,   206,   185,   183,     0, 
        184,   182,   186,     0,     0,   173,     0,     0,   173,     0, 
          0,   144,     0,   143,     0,   178,   160,   180,   172,     0, 
          0,     0,   173,   173,     0,     0,     0,   181,   179,   189, 
        190,   161,   162,   163,   164,   166,     0,     0,   176,   177, 
        193,   158,   159,   165,   170,   169,   171,   167,   168,   174, 
        187,   175,     0,     0,     0,   185,   183,   173,   184,   182, 
        186,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   178,   160,   180,   172,   187,   175,   173, 
          0,     0,   185,   183,     0,   184,   182,   186,     0,   173, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        178,   160,   180,   172,     0,     0,     0,   174,     0,     0, 
          0,     0,   193,     0,     0,     0,     0,     0,   187,   175, 
          0,     0,     0,   185,   183,     0,   184,   182,   186,     0, 
          0,     0,     0,     0,   174,     0,     0,   173,   335,   194, 
        354,   178,   160,   180,   172,     0,     0,   187,   175,     0, 
          0,     0,   185,   183,     0,   184,   182,   186,     0,     0, 
          0,     0,     0,     0,   173,   336,   195,     0,     0,   382, 
        178,   160,   180,   172,     0,   174,     0,     0,     0,     0, 
          0,   193,   193,     0,     0,   193,   193,   193,   193,   193, 
          0,     0,   193,   193,   193,   193,   193,   193,   193,   193, 
        193,   193,   193,     0,   174,   173,     0,     0,   194,   194, 
          0,     0,   194,   194,   194,   194,   194,   144,     0,   194, 
        194,   194,   194,   194,   194,   194,   194,   194,   194,   194, 
          0,     0,     0,     0,   173,   195,   195,     0,     0,   195, 
        195,   195,   195,   195,     0,     0,   195,   195,   195,   195, 
        195,   195,   195,   195,   195,   195,   195,     0,     0,     0, 
        187,   175,     0,     0,   392,   185,   183,   188,   184,   182, 
        186,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   178,   160,   180,   172,     0,     0,     0, 
          0,     0,     0,     0,     0,   173,   187,   175,     0,   144, 
          0,   185,   183,     0,   184,   182,   186,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   174,     0,   178, 
        160,   180,   172,     0,     0,   188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   173,     0,     0, 
          0,     0,   188,   174,     0,   181,   179,   189,   190,   161, 
        162,   163,   164,   166,     0,     0,   176,   177,     0,   158, 
        159,   165,   170,   169,   171,   167,   168,   173,   173,   173, 
        187,   175,     0,   173,   395,   185,   183,     0,   184,   182, 
        186,     0,     0,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   178,   160,   180,   172,     0,     0,     0, 
          0,     0,     0,   181,   179,   189,   190,   161,   162,   163, 
        164,   166,   188,     0,   176,   177,     0,   158,   159,   165, 
        170,   169,   171,   167,   168,     0,     0,   174,     0,     0, 
        181,   179,   189,   190,   161,   162,   163,   164,   166,     0, 
          0,   176,   177,     0,   158,   159,   165,   170,   169,   171, 
        167,   168,     0,     0,     0,     0,     0,   173,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   181,   179,   189,   190,   161,   162,   163,   164,   166, 
          0,     0,   176,   177,     0,   158,   159,   165,   170,   169, 
        171,   167,   168,     0,     0,     0,     0,     0,     0,     0, 
        181,   179,   189,   190,   161,   162,   163,   164,   166,     0, 
          0,   176,   177,     0,   158,   159,   165,   170,   169,   171, 
        167,   168,   187,   175,     0,   188,   396,   185,   183,     0, 
        184,   182,   186,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   178,   160,   180,   172,   187, 
        175,     0,     0,   412,   185,   183,     0,   184,   182,   186, 
          0,   188,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   178,   160,   180,   172,     0,     0,   187,   174, 
        394,     0,     0,   185,   183,     0,   184,   182,   186,     0, 
          0,     0,     0,     0,   174,     0,     0,   174,     0,     0, 
          0,   178,     0,   180,     0,     0,   174,     0,     0,   173, 
          0,   174,   174,   181,   179,   189,   190,   161,   162,   163, 
        164,   166,     0,     0,   176,   177,     0,   158,   159,   165, 
        170,   169,   171,   167,   168,     0,   173,     0,     0,     0, 
          0,     0,     0,     0,     0,   188,   174,     0,     0,   181, 
        179,   189,   190,   161,   162,   163,   164,   166,     0,     0, 
        176,   177,     0,   158,   159,   165,   170,   169,   171,   167, 
        168,   187,   175,     0,     0,     0,   185,   183,   174,   184, 
        182,   186,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   439,     0,   178,   160,   180,   172,   156,   156, 
          0,     0,     0,   156,   156,     0,   156,   156,   156,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   156,   156,   156,   156,     0,     0,     0,   174,     0, 
          0,     0,     0,   181,   179,   189,   190,   161,   162,   163, 
        164,   166,     0,     0,   176,   177,     0,   158,   159,   165, 
        170,   169,   171,   167,   168,   156,   187,   175,   173,     0, 
          0,   185,   183,     0,   184,   182,   186,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   178, 
        160,   180,   172,   187,   175,   156,     0,     0,   185,   183, 
          0,   184,   182,   186,     0,     0,     0,   188,     0,     0, 
          0,     0,     0,     0,     0,     0,   178,   160,   180,   172, 
          0,   187,   175,   174,     0,     0,   185,   183,     0,   184, 
        182,   186,     0,     0,   188,     0,     0,   175,     0,     0, 
        175,     0,     0,     0,   178,   160,   180,   172,     0,     0, 
        174,     0,     0,   173,   175,   175,     0,     0,     0,     0, 
          0,     0,   191,   188,     0,   191,     0,   191,   191,   191, 
        191,     0,     0,     0,     0,     0,     0,     0,   174,     0, 
        173,     0,   191,   191,   191,   191,   191,   191,     0,   175, 
          0,     0,     0,     0,   174,   181,   179,   189,   190,   161, 
        162,   163,   164,   166,     0,     0,   176,   177,   173,   158, 
        159,   165,   170,   169,   171,   167,   168,   191,   191,     0, 
          0,   175,   181,   179,   189,   190,   161,   162,   163,   164, 
        166,     0,     0,   176,   177,     0,   158,   159,   165,   170, 
        169,   171,   167,   168,     0,     0,     0,     0,   191,   191, 
          0,   181,   179,   189,   190,     0,   188,     0,     0,     0, 
          0,     0,   176,   177,     0,     0,     0,   192,     0,     0, 
        192,     0,   192,   192,   192,   192,   174,   174,   174,     0, 
          0,     0,     0,   156,     0,     0,     0,   192,   192,   192, 
        192,   192,   192,   187,   175,     0,     0,     0,   185,   183, 
          0,   184,   182,   186,     0,     0,     0,     0,     0,     0, 
          0,   196,     0,     0,   196,     0,   178,   196,   180,     0, 
          0,     0,   192,   192,     0,     0,     0,     0,     0,     0, 
          0,   196,   196,   196,   196,   196,   196,     0,     0,     0, 
          0,   188,     0,     0,   181,   179,   189,   190,   161,   162, 
        163,   164,   166,   192,   192,   176,   177,     0,   158,   159, 
        165,   170,   169,   171,   167,   168,   196,   196,   188,     0, 
          0,   156,   156,   156,   156,   156,   156,   156,   156,   156, 
          0,    12,   156,   156,     0,   156,   156,   156,   156,   156, 
        156,   156,   156,     0,     0,     0,   188,   196,   196,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   175,     0,   181, 
        179,   189,   190,   161,   162,   163,   164,   166,     0,     0, 
        176,   177,     0,   158,   159,   165,   170,   169,   171,   167, 
        168,     0,     0,     0,     0,   191,   181,   179,   189,   190, 
        161,   162,   163,   164,   166,     0,     0,   176,   177,     0, 
          0,   159,   165,   170,   169,   171,   167,   168,     0,     0, 
          0,     0,     0,     0,   181,   179,   189,   190,   161,   162, 
        163,   164,   166,     0,     0,   176,   177,     0,     0,     0, 
        165,   170,   169,   171,   167,   168,     0,     0,     0,   175, 
        175,   175,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   191,   191,     0,     0,   191,   191, 
        191,   191,   191,     0,     0,   191,   191,   191,   191,   191, 
        191,   191,   191,   191,   191,   191,     0,     0,     0,     0, 
          0,     0,   185,     0,     0,   185,     0,     0,   185,     0, 
        192,     0,     0,     0,     0,     0,     0,     0,   188,     0, 
          0,     0,   185,   185,     0,   185,   184,   185,     0,   184, 
          0,     0,   184,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   184,   184,     0,   184, 
          0,   184,     0,     0,   196,     0,     0,   185,   185,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   192, 
        192,   184,   184,   192,   192,   192,   192,   192,   185,   185, 
        192,   192,   192,   192,   192,   192,   192,   192,   192,   192, 
        192,     0,     0,     0,     0,     0,   181,   179,   189,   190, 
          0,     0,   184,   184,     0,     0,     0,   176,   177,     0, 
          0,     0,     0,   196,   196,     0,     0,   196,   196,   196, 
        196,   196,     0,     0,   196,   196,   196,   196,   196,   196, 
        196,   196,   196,   196,   196,   186,     0,     0,   186,     0, 
          0,   186,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   186,   186,     0,   186,   198, 
        186,     0,   198,     0,     0,   198,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   198, 
        198,     0,   198,   187,   198,     0,   187,     0,     0,   187, 
        186,   186,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   187,   187,     0,   187,   188,   187,     0, 
        188,     0,     0,   188,   198,   198,     0,     0,     0,     0, 
          0,   186,   186,     0,     0,     0,     0,   188,   188,     0, 
        188,   199,   188,     0,   199,     0,     0,     0,   187,   187, 
          0,     0,     0,     0,     0,   198,   198,     0,   199,   199, 
          0,   199,     0,   199,   197,     0,     0,   197,     0,     0, 
          0,     0,   188,   188,     0,     0,     0,     0,     0,   187, 
        187,   197,   197,     0,   197,     0,   197,     0,     0,   138, 
          0,     0,   138,   199,   199,   185,     0,     0,     0,     0, 
          0,     0,     0,   188,   188,     0,   138,   138,     0,   138, 
          0,   138,     0,     0,     0,     0,   197,     0,     0,   184, 
          0,     0,     0,     0,   199,   199,     0,     0,     0,     0, 
          0,     0,     0,     0,   187,   175,     0,     0,     0,   185, 
        183,   138,   184,   182,   186,     0,     0,   197,   197,     0, 
          0,     0,     0,     0,     0,     0,     0,   178,     0,   180, 
          0,     0,     0,     0,     0,     0,     0,     0,   185,   185, 
        185,   185,   185,   138,     0,   185,   185,   185,   185,   185, 
        185,   185,   185,   185,   185,   185,     0,     0,     0,     0, 
          0,   174,   184,   184,   184,   184,   184,     0,     0,   184, 
        184,   184,   184,   184,   184,   184,   184,   184,   184,   184, 
        187,   175,     0,     0,     0,   185,   183,     0,   184,   182, 
        186,   173,   177,     0,     0,   177,     0,     0,     0,     0, 
          0,     0,     0,   178,     0,   180,     0,     0,   186,   177, 
        177,     0,     0,     0,     0,     0,   176,     0,     0,   176, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   198,   176,   176,     0,     0,   174,     0,     0, 
          0,     0,     0,     0,   177,     0,     0,     0,     0,     0, 
          0,     0,   200,     0,     0,   200,   187,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   200, 
        200,     0,     0,     0,     0,     0,   177,     0,     0,     0, 
        188,   186,   186,   186,   186,   186,     0,     0,   186,   186, 
        186,   186,   186,   186,   186,   186,   186,   186,   186,     0, 
        176,   199,     0,     0,   200,   198,   198,   198,   198,   198, 
          0,     0,     0,     0,   198,   198,   198,   198,   198,   198, 
        198,   198,   198,     0,   197,     0,     0,     0,     0,   187, 
        187,   187,   187,   187,     0,     0,   200,     0,   187,   187, 
        187,   187,   187,   187,   187,   187,   187,     0,     0,   138, 
          0,     0,     0,   188,   188,   188,   188,   188,     0,     0, 
          0,     0,   188,   188,   188,   188,   188,   188,   188,   188, 
        188,     0,     0,     0,   199,   199,   199,   199,   199,   188, 
          0,     0,     0,   199,   199,   199,   199,   199,   199,   199, 
        199,   199,     0,     0,     0,     0,     0,   197,   197,   197, 
        197,   197,   201,     0,     0,   201,   197,   197,   197,   197, 
        197,   197,   197,   197,   197,     0,     0,     0,     0,   201, 
        201,     0,   138,   138,   138,   138,   138,     0,     0,     0, 
          0,   138,   138,   138,   138,   138,   138,   138,   138,   138, 
        178,     0,     0,   178,   179,     0,     0,   179,   180,     0, 
          0,   180,     0,     0,   201,   188,   181,   178,   178,   181, 
          0,   179,   179,     0,     0,   180,   180,   181,   179,   189, 
        190,     0,     0,   181,   181,     0,     0,   182,   176,   177, 
        182,     0,   177,     0,     0,   277,   201,   189,     0,     0, 
        189,     0,   178,     0,   182,   182,   179,     0,   190,     0, 
        180,   190,     0,     0,   189,   189,   176,     0,   181,     0, 
          0,     0,     0,     0,     0,   190,   190,     0,     0,     0, 
          0,     0,     0,     0,   178,     0,     0,     0,   179,   182, 
          0,     0,   180,     0,     0,     0,     0,     0,     0,   189, 
        181,     0,   200,   181,   179,   189,   190,   295,   296,     0, 
        190,     0,     0,     0,   176,   177,     0,     0,     0,     0, 
          0,   182,     0,     0,   177,   177,   177,     0,   108,     0, 
          0,   189,     0,     0,     0,   108,   337,     0,   108,     0, 
        108,     0,   190,     0,     0,     0,     0,     0,   176,   176, 
        176,     0,     0,     0,   108,     0,     0,     0,     0,   108, 
          0,     0,     0,     0,     0,     0,   357,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   200,   200,   200,   108,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   383,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   104,     0,     0,   108,     0, 
        108,   108,   104,   402,     0,   104,     0,   104,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   104,     0,   423,     0,     0,   104,     0,     0,     0, 
        108,     0,   201,     0,     0,     0,     0,   105,     0,     0, 
        106,   108,   107,     0,     0,     0,     0,     0,   105,     0, 
          0,   106,     0,   107,   104,     0,   326,     0,     0,     0, 
          0,   114,     0,     0,     0,     0,   128,     0,     0,     0, 
        178,     0,   114,     0,   179,     0,     0,     0,   180,     0, 
          0,     0,     0,     0,     0,   104,   181,   104,   104,    39, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         39,     0,     0,     0,     0,     0,     0,   182,     0,     0, 
          0,     0,     0,     0,   201,   201,   201,   189,     0,     0, 
        327,     0,     0,   109,     0,     0,     0,     0,   190,     0, 
          0,     0,     0,     0,   109,   108,   108,   108,   108,   108, 
        108,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   178,   178,   178,     0,   179,   179,   179,     0, 
        180,   180,   180,     0,     0,     0,     0,     0,   181,   181, 
        181,     0,     0,     0,   108,     0,     0,     0,     0,     0, 
          0,   105,     0,     0,   106,     0,   107,     0,   108,   182, 
        182,   182,     0,     0,     0,     0,     0,     0,     0,   189, 
        189,   189,   234,     0,     0,   114,     0,     0,   108,   108, 
        190,   190,   190,     0,     0,   108,   108,   108,   108,     0, 
          0,   108,   104,   104,   104,   104,   104,   104,     0,     0, 
          0,     0,     0,    39,     0,   108,   108,   108,   108,     0, 
        108,   108,     0,     0,     0,   108,   108,   108,   108,   108, 
          0,     0,     0,     0,     0,     0,     0,   115,    56,    57, 
         58,    59,    60,     0,     0,     0,     0,   109,   115,    56, 
         57,    58,    59,    60,     0,   104,     0,   108,   108,     0, 
          0,     0,     0,     0,     0,     0,     0,   108,     0,     0, 
          0,     0,     0,     0,   105,   104,   104,   106,     0,   107, 
          0,     0,   104,   104,   104,   104,     0,     0,   104,     0, 
        113,     0,     0,     0,     0,   236,     0,     0,   114,     0, 
          0,   113,   104,   104,   104,   104,     0,   104,   104,     0, 
         62,   116,   104,     0,   104,   104,   104,   117,   315,   316, 
        317,    62,   116,   112,     0,     0,    39,     0,   117,     0, 
          0,     0,     0,     0,   112,     0,     0,   318,   319,   320, 
        321,     0,   322,   323,   104,   104,     0,   324,     0,   325, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        109,     0,     0,     0,   108,     0,     0,     0,     0,     0, 
          0,   105,     0,     0,   106,     0,   107,     0,     0,   110, 
        111,   115,    56,    57,    58,    59,    60,   108,     0,     0, 
        110,   111,   246,     0,   105,   114,     0,   106,     0,   107, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   248,     0,     0,   114,   108, 
          0,     0,     0,    39,     0,     0,   105,     0,   108,   106, 
          0,   107,     0,     0,   113,   105,     0,     0,   106,     0, 
        107,     0,     0,     0,     0,     0,    39,     0,     0,     0, 
        114,     0,     0,     0,    62,   116,     0,   109,     0,   114, 
          0,   117,     0,     0,     0,     0,     0,   112,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    39,     0, 
        109,     0,     0,     0,     0,     0,     0,    39,     0,     0, 
          0,     0,     0,     0,   115,    56,    57,    58,    59,    60, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   109,     0,     0,     0,     0,     0,     0,     0, 
          0,   109,     0,   110,   111,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   113,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    62,   116,     0, 
          0,     0,     0,     0,   117,     0,     0,     0,     0,     0, 
        112,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   115,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   115,    56,    57,    58,    59,    60, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   110,   111,     0,     0, 
          0,     0,     0,     0,   113,     0,   115,    56,    57,    58, 
         59,    60,     0,     0,     0,   142,    56,    57,    58,    59, 
         60,     0,     0,     0,    62,   116,     0,   113,     0,     0, 
          0,   117,     0,     0,     0,     0,     0,   112,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    62,   116,     0, 
          0,     0,     0,     0,   117,     0,     0,     0,     0,   113, 
        112,     0,     0,     0,     0,     0,     0,     0,   113,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    62, 
        116,     0,     0,     0,     0,     0,   117,     0,   143,   116, 
          0,     0,   112,   110,   111,   117,     0,     0,     0,     0, 
        119,   112,     0,     0,   129,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   110,   111,   144,   145, 
        146,   147,   148,   149,   150,     0,   152,   153,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   110,   111, 
          0,     0,     0,     0,     0,     0,     0,   110,   111,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   225,   226,   227,   228,   229,   230,   231,   232,   233, 
        235,   237,   238,   239,   240,   241,   243,   244,   245,   247, 
        249,   250,   251,   252,   253,   254,   255,   256,   257,   258, 
        259,     0,     0,     0,     0,   241,   263,     0,   264,     0, 
          0,     0,     0,   271,     0,     0,     0,   272,   273,     0, 
          0,     0,     0,     0,     0,     0,   119,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   289,     0,   290, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   292, 
          0,   293,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   119,   119, 
          0,     0,     0,   241,     0,     0,   302,   303,     0,     0, 
          0,     0,     0,     0,   306,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   119,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   119,     0,     0, 
          0,     0,     0,     0,     0,   241,     0,   365,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   119, 
        384,     0,   386,     0,     0,   387,   388,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   119,     0,   404,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   119,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   435, 
    );
    protected static $yyCheck = array(33,
         41,    41,    36,    37,    44,    36,    37,   123,    92,    91, 
        125,   151,     6,    47,    92,   307,    50,    37,    52,    50, 
         54,    52,    42,    54,    37,    44,   125,    47,   260,    42, 
         43,    35,    45,    46,    47,   123,    70,    35,   312,    70, 
         92,   123,    76,    77,   192,   260,   260,   327,   340,    92, 
         92,    85,   320,    41,    85,    37,    38,   321,    40,    41, 
         42,    43,    44,    45,    46,    47,   260,    35,   300,    92, 
        206,    59,    47,    59,    93,    92,    58,    59,    60,    61, 
         62,    63,    37,    38,   364,    59,    41,    42,    43,    44, 
         45,    46,    47,   334,    59,    35,    59,    41,   378,   340, 
         44,    76,    77,    58,    59,    60,    61,    62,    63,    44, 
         38,    93,    94,    41,    58,    59,    44,   151,    35,    44, 
         41,   125,    91,    44,    59,   340,   340,   125,   402,   403, 
         58,    59,   280,    61,    59,    63,    91,   123,    93,    94, 
         44,   123,   124,   125,   260,   334,   140,    35,    64,    93, 
         41,   340,   288,    44,   188,    59,   436,   188,   123,   439, 
         93,   297,    44,   443,    41,    93,    94,    44,   123,   124, 
        125,   300,   301,   310,    41,     5,   260,    44,    70,    37, 
         38,   125,   260,    41,    42,    43,    44,    45,    46,    47, 
         40,    58,    59,    85,   342,    25,   124,   125,    40,    41, 
         58,    59,    60,    61,    62,    63,    37,    38,   260,    39, 
         41,    42,    43,    44,    45,    46,    47,   260,   260,   359, 
         40,    41,    41,   311,   340,    44,    93,    58,    59,    60, 
         61,    62,    63,    91,   310,    93,    94,   260,   261,   262, 
        263,   264,   265,    41,   402,   403,    44,    37,    38,   333, 
        332,    41,    42,    43,    44,    45,    46,    47,   373,   374, 
        294,    59,    93,    94,   311,   123,   124,   125,    58,    59, 
         60,    61,    62,    63,   373,   374,   280,   281,   282,   283, 
        284,   285,   280,   281,   282,   283,   284,   285,   340,   123, 
        333,   333,   312,   124,   125,   300,   301,   340,   340,   312, 
        373,   374,    41,    93,    94,    44,    41,   341,    41,    44, 
        333,    44,   280,   281,   282,   283,   284,   285,    61,    58, 
         59,    76,    77,   346,    59,   359,    59,    61,   310,   311, 
        312,   335,   300,   301,   124,   125,    40,   335,   300,   301, 
        280,   281,   282,   283,   284,   285,   410,    41,    41,   331, 
        123,   260,    44,   321,    93,    44,    41,   312,   340,    44, 
        300,   301,    40,   280,   281,   282,   283,   284,   285,   410, 
        410,    40,   334,    58,    59,    40,   331,   332,   340,    41, 
        410,    44,   402,   403,    41,    44,   125,   331,   422,   402, 
        403,   422,   280,   281,   282,   283,   284,   285,   260,   340, 
         61,    61,    40,   331,   340,    40,    40,    44,    93,    41, 
         58,    41,   300,   301,   123,    40,    40,    93,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    41,   410,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        125,    41,    41,   340,   123,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    44,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   300,   301,   413, 
        414,   415,   125,   331,   332,    41,   404,   405,   406,   407, 
        408,   312,    58,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   280,   281,   282,   283,   284,   285, 
        331,   334,    40,    40,    40,    59,    59,   340,    37,    38, 
         40,    59,    41,    42,    43,    44,    45,    46,    47,    40, 
        125,    41,   312,   260,   261,   262,   263,   264,   265,    58, 
         59,    60,    61,    62,    63,   361,    59,   125,    40,   125, 
        344,   331,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   340,   123,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    93,    94,    59,   413,    41,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   371,   410, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    40,   331,    59,   340,   124,   125,    92,   125,    41, 
         58,    41,   340,   125,   123,    93,   123,   123,    41,   123, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    41, 
         41,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    37,    38,    41,    41,    41,    42,    43,    44, 
         45,    46,    47,   340,    41,    58,   331,    41,    93,    41, 
        125,    41,     7,    58,    59,    60,    61,    62,    63,    37, 
         38,    59,    41,    41,    42,    43,    44,    45,    46,    47, 
         59,   125,   125,    84,   413,   414,   415,   347,   140,   197, 
         58,    59,    60,    61,    62,    63,    37,    38,    93,    94, 
         41,    42,    43,    44,    45,    46,    47,   196,    42,    41, 
         82,   341,   331,   421,    91,   401,   279,    58,    59,    60, 
         61,    62,    63,   195,   223,    93,    94,    23,    -1,   124, 
        125,    -1,   392,    -1,    -1,   395,    -1,    -1,   413,   414, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    93,    94,   414,    -1,   124,   125,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,   427,    41,    -1, 
         -1,    44,    -1,   433,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    37,   124,   125,    58,    59,    42,    43,    -1, 
         45,    46,    47,   312,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,   300,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,    -1, 
         37,    38,   125,    -1,    41,    42,    43,    44,    45,    46, 
         47,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    37,    38,    93,    94,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,   331,   124,   125,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,   331,    -1,    -1,    -1,    -1,    58,    59, 
         -1,   312,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        331,   124,   125,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    93,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,   312,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    94,   400,   401,   331,   125,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,   312,   331,   400, 
        401,   124,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   312,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
        413,   414,   415,    -1,   331,   400,   401,   402,   403,    58, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    37,    38,    93,    94,    41,    42,    43,    44, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    93,    94,   400,   401,   124,   125,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    41,    93,    94, 
         44,   331,   124,   125,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   124, 
        125,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    93, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,   125,    -1,   413,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    94, 
         37,    38,    -1,    -1,    -1,    42,    43,    93,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,   124, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,    -1,   124,   125,   331, 
         59,    60,    61,    62,    63,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,   331,    -1,    -1,    59, 
         60,    61,    62,    63,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    94,   124,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,   124,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,   312,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    37,    38,    -1,   413, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    60, 
         61,    62,    63,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,   312,    94,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,   413,   414,   415, 
         37,    38,    -1,   124,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    94,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    37,    38,    -1,   312,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    46,    47, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    37,    94, 
        331,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    60,    -1,    62,    -1,    -1,    94,    -1,    -1,   124, 
         -1,    58,    59,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   312,    93,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    37,    38,    -1,    -1,    -1,    42,    43,   125,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    -1,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    94,    37,    38,   124,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,   124,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    37,    38,    94,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,   312,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         94,    -1,    -1,   124,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,   312,    -1,    41,    -1,    43,    44,    45, 
         46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1, 
        124,    -1,    58,    59,    60,    61,    62,    63,    -1,    93, 
         -1,    -1,    -1,    -1,   331,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   124,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    94,    -1, 
         -1,   125,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,   124,   125, 
         -1,   400,   401,   402,   403,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,   411,   412,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    43,    44,    45,    46,   413,   414,   415,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    60,    44,    62,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   124,   125,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    93,    94,   312,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,   312,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
         -1,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,    -1,    -1, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    58,    59,    -1,    61,    38,    63,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,   331,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    93,    94,   404,   405,   406,   407,   408,   124,   125, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,    -1,   124,   125,    -1,    -1,    -1,   411,   412,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    38, 
         63,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    38,    63,    -1,    41,    -1,    -1,    44, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    38,    63,    -1, 
         41,    -1,    -1,    44,    93,    94,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    41,    63,    -1,    44,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    58,    59, 
         -1,    61,    -1,    63,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    41, 
         -1,    -1,    44,    93,    94,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    93,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    93,    45,    46,    47,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,   125,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    94,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    46, 
         47,   124,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    -1,    62,    -1,    -1,   331,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    58,    59,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    41,    -1,    -1,    44,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    58, 
         59,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
        331,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
        125,   331,    -1,    -1,    93,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,   331,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   125,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,   331, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,   404,   405,   406,   407,   408,   312, 
         -1,    -1,    -1,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    41,    -1,    -1,    44,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    58, 
         59,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         41,    -1,    -1,    44,    41,    -1,    -1,    44,    41,    -1, 
         -1,    44,    -1,    -1,    93,   312,    41,    58,    59,    44, 
         -1,    58,    59,    -1,    -1,    58,    59,   400,   401,   402, 
        403,    -1,    -1,    58,    59,    -1,    -1,    41,   411,   412, 
         44,    -1,   331,    -1,    -1,   213,   125,    41,    -1,    -1, 
         44,    -1,    93,    -1,    58,    59,    93,    -1,    41,    -1, 
         93,    44,    -1,    -1,    58,    59,   331,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   125,    93, 
         -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
        125,    -1,   331,   400,   401,   402,   403,   275,   276,    -1, 
         93,    -1,    -1,    -1,   411,   412,    -1,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,   413,   414,   415,    -1,    33,    -1, 
         -1,   125,    -1,    -1,    -1,    40,   304,    -1,    43,    -1, 
         45,    -1,   125,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    -1,    59,    -1,    -1,    -1,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   413,   414,   415,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   366,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,   123,    -1, 
        125,   126,    40,   391,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    59,    -1,   411,    -1,    -1,    64,    -1,    -1,    -1, 
         33,    -1,   331,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    33,    45,    -1,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    92,    -1,    59,    -1,    -1,    -1, 
         -1,    64,    -1,    -1,    -1,    -1,    58,    -1,    -1,    -1, 
        331,    -1,    64,    -1,   331,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,   123,   331,   125,   126,    92, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,   413,   414,   415,   331,    -1,    -1, 
        123,    -1,    -1,   126,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,   126,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,   413,   414,   415,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,   313,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,   415,    61,    -1,    -1,    64,    -1,    -1,   333,   334, 
        413,   414,   415,    -1,    -1,   340,   341,   342,   343,    -1, 
         -1,   346,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    92,    -1,   360,   361,   362,   363,    -1, 
        365,   366,    -1,    -1,    -1,   370,   371,   372,   373,   374, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,   126,   260,   261, 
        262,   263,   264,   265,    -1,   313,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,   333,   334,    43,    -1,    45, 
         -1,    -1,   340,   341,   342,   343,    -1,    -1,   346,    -1, 
        313,    -1,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1, 
         -1,   313,   360,   361,   362,   363,    -1,   365,   366,    -1, 
        333,   334,   370,    -1,   372,   373,   374,   340,   341,   342, 
        343,   333,   334,   346,    -1,    -1,    92,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,   360,   361,   362, 
        363,    -1,   365,   366,   402,   403,    -1,   370,    -1,   372, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,   402, 
        403,   260,   261,   262,   263,   264,   265,    33,    -1,    -1, 
        402,   403,    61,    -1,    40,    64,    -1,    43,    -1,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    61,    -1,    -1,    64,    33, 
         -1,    -1,    -1,    92,    -1,    -1,    40,    -1,    33,    43, 
         -1,    45,    -1,    -1,   313,    40,    -1,    -1,    43,    -1, 
         45,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1, 
         64,    -1,    -1,    -1,   333,   334,    -1,   126,    -1,    64, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,   260,   261,   262,   263, 
        264,   265,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,   333,   334,    -1,   313,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,   313, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,    -1,   333,   334, 
         -1,    -1,   346,   402,   403,   340,    -1,    -1,    -1,    -1, 
         87,   346,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,   105,   106, 
        107,   108,   109,   110,   111,    -1,   113,   114,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   158,   159,   160,   161,   162,   163,   164,   165,   166, 
        167,   168,   169,   170,   171,   172,   173,   174,   175,   176, 
        177,   178,   179,   180,   181,   182,   183,   184,   185,   186, 
        187,    -1,    -1,    -1,    -1,   192,   193,    -1,   195,    -1, 
         -1,    -1,    -1,   200,    -1,    -1,    -1,   204,   205,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   213,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,   236, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   246, 
         -1,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,   276, 
         -1,    -1,    -1,   280,    -1,    -1,   283,   284,    -1,    -1, 
         -1,    -1,    -1,    -1,   291,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   304,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   334,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   342,    -1,   344,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   366, 
        367,    -1,   369,    -1,    -1,   372,   373,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   391,    -1,   393,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   411,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   428, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', NULL, NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

    protected static $yyTableCount= 0, $yyNameCount= 0;

    static function __static() {
      self::$yyTableCount= sizeof(self::$yyTable);
      self::$yyNameCount= sizeof(self::$yyName);
    }

    /**
     * Retrieves name of a given token
     *
     * @param   int token
     * @return  string name
     */
    protected function yyname($token) {
      return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
    }

    /**
     * Helper method for yyexpecting
     *
     * @param   int n
     * @return  string[] list of token names.
     */
    protected function yysearchtab($n) {
      if (0 == $n) return array();

      for (
        $result= array(), $token= $n < 0 ? -$n : 0; 
        $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
        $token++
      ) {
        if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
          $result[$token]= self::$yyName[$token];
        }
      }
      return array_filter(array_values($result));
    }

    /**
     * Computes list of expected tokens on error by tracing the tables.
     *
     * @param   int state for which to compute the list.
     * @return  string[] list of token names.
     */
    protected function yyexpecting($state) {
      return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
    }

    /**
     * Parser main method. Maintains a state and a value stack, 
     * currently with fixed maximum size.
     *
     * @param   text.parser.generic.AbstractLexer lexer
.    * @return  mixed result of the last reduction, if any.
     */
    public function yyparse($yyLex) {
      $yyVal= NULL;
      $yyStates= $yyVals= array();
      $yyToken= -1;
      $yyState= $yyErrorFlag= 0;

      while (1) {
        for ($yyTop= 0; ; $yyTop++) {
          $yyStates[$yyTop]= $yyState;
          $yyVals[$yyTop]= $yyVal;

          for (;;) {
            if (($yyN= self::$yyDefRed[$yyState]) == 0) {

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              if (
                ($yyN= self::$yySindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyState= self::$yyTable[$yyN];       // shift to yyN
                $yyVal= $yyLex->value;
                $yyToken= -1;
                $yyErrorFlag > 0 && $yyErrorFlag--;
                continue 2;
              }
        
              if (
                ($yyN= self::$yyRindex[$yyState]) != 0 && 
                ($yyN+= $yyToken) >= 0 && 
                $yyN < self::$yyTableCount && 
                self::$yyCheck[$yyN] == $yyToken
              ) {
                $yyN= self::$yyTable[$yyN];           // reduce (yyN)
              } else {
                switch ($yyErrorFlag) {
                  case 0: return $this->error(
                    E_PARSE, 
                    sprintf(
                      'Syntax error at %s, line %d (offset %d): Unexpected %s',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1],
                      $this->yyName($yyToken)
                    ), 
                    $this->yyExpecting($yyState)
                  );
                  
                  case 1: case 2: {
                    $yyErrorFlag= 3;
                    do { 
                      if (
                        ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                        ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                        $yyN < self::$yyTableCount && 
                        self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                      ) {
                        $yyState= self::$yyTable[$yyN];
                        $yyVal= $yyLex->value;
                        break 3;
                      }
                    } while ($yyTop-- >= 0);

                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  case 3: {
                    if (0 == $yyToken) {
                      throw new \text\parser\generic\ParseException(sprintf(
                        'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                        $yyLex->fileName,
                        $yyLex->position[0],
                        $yyLex->position[1]
                      ));
                    }

                    $yyToken = -1;
                    break 1;
                  }
                }
              }
            }

            $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
            $yyVal= $yyV > $yyTop ? NULL : $yyVals[$yyV];

            // Actions
            switch ($yyN) {

    case 1:  #line 178 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 193 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 193 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 204 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 205 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 209 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 216 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 221 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 227 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 227 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 236 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 236 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 247 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 248 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 253 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 258 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 263 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 268 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 269 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 274 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 279 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 285 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 295 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 301 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 302 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 308 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 308 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 322 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 323 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 328 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 329 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 334 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 338 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 347 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 355 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 356 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 361 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 366 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 372 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 375 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 382 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 383 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 387 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 388 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 393 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 398 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 406 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 411 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 412 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 416 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 416 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 419 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 419 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 424 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 424 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 434 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 434 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 439 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 439 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 451 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 451 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 456 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 457 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 458 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 458 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 467 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 476 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 477 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 481 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 481 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 485 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 491 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 492 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 496 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 497 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 497 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 506 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 507 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 511 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 511 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 521 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 526 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 527 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 531 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 536 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 541 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 549 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 552 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 555 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 562 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 562 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 568 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 568 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 572 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 572 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 582 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 582 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 591 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 594 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 134:  #line 597 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 135:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 136:  #line 603 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 137:  #line 606 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 138:  #line 610 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 139:  #line 616 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 140:  #line 622 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 141:  #line 628 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 142:  #line 633 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 143:  #line 638 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 144:  #line 641 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 644 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 146:  #line 647 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 147:  #line 650 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 148:  #line 661 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 150:  #line 666 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 151:  #line 667 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 152:  #line 671 "src/main/jay/grammars/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 154:  #line 676 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 155:  #line 676 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 156:  #line 680 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 157:  #line 686 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 158:  #line 687 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 159:  #line 688 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 160:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 161:  #line 690 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 162:  #line 694 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 163:  #line 697 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 164:  #line 700 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 165:  #line 703 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 166:  #line 709 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 710 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 168:  #line 714 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 719 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 171:  #line 723 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 172:  #line 724 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 173:  #line 725 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 174:  #line 726 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 175:  #line 727 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 176:  #line 728 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 729 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 178:  #line 730 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 731 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 733 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 182:  #line 734 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 183:  #line 738 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 739 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 740 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 741 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 187:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 743 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 190:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 191:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 197:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 204:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 209:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 210:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 212:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 213:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 214:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 215:  #line 788 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 216:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 217:  #line 791 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 218:  #line 794 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 219:  #line 797 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 220:  #line 800 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 221:  #line 803 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 222:  #line 803 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 225:  #line 816 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 226:  #line 820 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 227:  #line 824 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 228:  #line 825 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 229:  #line 831 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 230:  #line 832 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 231:  #line 836 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 232:  #line 837 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 233:  #line 841 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 234:  #line 842 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 235:  #line 843 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 236:  #line 844 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 237:  #line 845 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 238:  #line 846 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2353 "-"
            }
                   
            $yyTop-= self::$yyLen[$yyN];
            $yyState= $yyStates[$yyTop];
            $yyM= self::$yyLhs[$yyN];

            if (0 == $yyState && 0 == $yyM) {
              $yyState= self::$yyFinal;

              // Check whether it's necessary to fetch the next token
              $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

              // We've reached the final token!
              if (0 == $yyToken) return $yyVal;
              continue 2;
            }

            $yyState= (
              ($yyN= self::$yyGindex[$yyM]) != 0 && 
              ($yyN+= $yyState) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyState
            ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
            continue 2;
          }
        }
      }
    }

  }
?>
