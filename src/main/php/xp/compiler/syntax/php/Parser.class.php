<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         83,    83,    85,    85,    86,    84,    84,    38,    88,    38, 
         25,    25,    25,    25,    25,    25,    87,    87,    87,    87, 
         89,    89,    91,    91,    90,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    78,    78,    79,    79,    79, 
         79,    79,    79,    79,    79,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    80,    81,    81,    81,    81, 
         81,    81,    82,    82,    73,    73,    92,    92,    94,    93, 
         95,    93,    93,    93,    93,    96,    93,    97,    93,    31, 
         31,    10,    98,    17,    17,    33,    33,    99,    99,   100, 
        100,   100,   100,   100,   100, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     2,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     2,     4,     1,     1,     1,     1,     1, 
          5,     3,     3,     3,     3,     4,     4,     2,     8,     4, 
          0,     1,     1,     3,     2,     0,     4,     1,     0,     5, 
          1,     1,     1,     1,     1,     1,     0,     1,     1,     1, 
          1,     3,     0,     1,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     2,     2,     2,     2, 
          2,     2,     2,     2,     0,     1,     1,     2,     0,     4, 
          0,     4,     2,     2,     4,     0,     6,     0,     4,     1, 
          1,     1,     1,     1,     3,     0,     1,     1,     2,     1, 
          1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   240,   242,   241,   243,   245,   244,     0,     1,     0, 
         42,   237,     0,     8,     0,     4,     9,     0,    14,    16, 
        239,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   232,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   166,   162,   165,   163,   164, 
          0,     0,     0,   158,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   159,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   235,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   124,     0,     0, 
          0,     0,     0,   136,   137,   138,   139,   140,   168,     0, 
          0,     0,     0,   171,    15,     0,    27,     0,     0,     0, 
          0,    29,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   132,   148,   130,     0,     0,   128,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        213,   214,   228,   219,     0,   221,   123,   216,     0,    53, 
          0,     0,   160,     0,     0,     0,    31,     0,     0,    33, 
          0,    30,     0,     0,     0,     0,   233,     0,   230,     0, 
        127,   231,     0,     0,     0,     0,   153,   125,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   145,   144,     0,     0,     0,   224, 
          0,     0,   218,   115,     0,     0,   174,   172,   161,    34, 
         32,    37,     0,     0,     0,   150,     0,     0,     0,     0, 
        155,     0,     0,     0,   120,     0,     0,     0,     0,     0, 
          0,     0,     0,   226,     0,     0,     0,     0,     0,     0, 
          0,     0,   154,     0,   129,     0,   229,   220,     0,   225, 
        222,     0,     0,     0,    59,     0,   119,   118,   131,     0, 
          0,     0,     0,    63,     0,     0,     0,     0,    68,     0, 
         88,    72,    76,    78,    74,    84,    86,    70,    80,    91, 
          0,     0,     0,    65,     0,   102,   121,   227,     0,     0, 
         62,    61,   157,     0,    82,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    90,   149,    67,    40,    56, 
          0,    38,     0,     0,     0,     0,     0,     0,     0,    85, 
         87,     0,     0,   103,     0,    69,     0,    89,     0,     0, 
          0,     0,     0,     0,    57,     0,     0,     0,     0,     0, 
          0,     0,   110,    83,   107,     0,     0,    77,     0,     0, 
          0,     0,     0,     0,   109,     0,     0,     0,     0,   105, 
         71,    98,   100,     0,    95,     0,     0,     0,    79,    93, 
         75,     0,     0,     0,    81,    97,     0,     0,   106,     0, 
          0,     0,    73,     0,   101,     0,    99,     0,     0,   111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   119,   100,   219, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   137, 
        103,   104,   138,   210,    64,   352,   323,   307,   360,   382, 
        324,    34,    21,    35,    65,    66,    67,   121,   122,   353, 
        325,   326,   354,   355,   356,   247,   364,   373,   431,   367, 
        370,   421,   368,   369,   374,   434,   384,   414,   371,   372, 
        366,   435,   436,   443,   444,   442,   415,   416,   424,   123, 
        221,   296,   197,   158,   153,   229,   223,   124,   125,   126, 
        127,   128,   225,   312,   226,   227,   132,    91,   133,   134, 
        278,   198,   199,   268,   272,   319,   267,   222,    22,    23, 
    );
    protected static $yySindex = array(         -273,
          0,     0,  -246,  -165,  -165,   212,  -246,     0,    31,    73, 
         86,     0,     0,     0,     0,     0,     0,    61,     0,  -227, 
          0,     0,    72,     0,  -165,     0,     0,    90,     0,     0, 
          0,     0,   -81,    63,   117,   -81,   -81,     0,  -165,   125, 
         72,    90,     0,  -143,  -128,     0,   603,     0,     0,   -81, 
       -117,   -81,    97,   -81,   166,     0,     0,     0,     0,     0, 
        183,   206,  -162,     0,   214,   219,   209,     0,     0,   -81, 
        142,   239,     0,     0,   245,   964,   964,     0,  -222,     0, 
          0,  -247,     0,     0,   -81,    -3,  4156,     0,     0,     0, 
       3781,     0,     0,   166,     0,    33,     0,    38,     0,  -240, 
          0,     0,     0,    10,  4214,  4156,  4156,  4156,  4156,  4156, 
       4156,  4156,     0,  4156,  4156,   263,   285,     0,   -82,  2443, 
        -24,   293,   291,     0,     0,     0,     0,     0,     0,  1313, 
        291,   299,   300,     0,     0,   286,     0,    26,    88,   288, 
        212,     0,   158,   256,  1355,  1383,  -101,  -101,  -276,  -101, 
       -101,  -101,   -64,     0,     0,     0,    27,   -24,     0,  4156, 
       4156,  4156,  4156,  4156,  4156,  4156,  4156,  4156,  3975,  4062, 
       4156,  4156,  4156,  4156,  4156,  4156,  4156,  4101,  4126,  4156, 
       4156,  4156,  4156,  4156,  4156,  4156,  4156,  4156,  4156,   -69, 
          0,     0,     0,     0,  -105,     0,     0,     0,   -24,     0, 
       4156,  4156,     0,  4156,   216,    38,     0,   306,  4156,     0, 
         32,     0,  4156,  4156,   -24,  4156,     0,   333,     0,   335, 
          0,     0,  4156,   288,   338,   332,     0,     0,  -215,  2470, 
       2497,  2497,  2497,  2497,  2497,  2497,  2497,  2497,  4156,  2497, 
       4156,  2497,  2497,  2497,  2497,  2443,   324,  3247,   -12,  3271, 
       4156,   104,  4156,   104,   296,   296,   296,   296,   296,   215, 
        215,  -276,  -276,  -276,     0,     0,  4156,  4156,   345,     0, 
       4156,  4156,     0,     0,  2443,  1313,     0,     0,     0,     0, 
          0,     0,  2443,  2443,  2443,     0,  3226,  4156,  4156,   346, 
          0,    65,    27,   352,     0,   -24,  2497,  2497,  4156,  2497, 
       2497,   361,   312,     0,  1425,  1810,   -41,   367,   368,   -24, 
        370,   289,     0,  4156,     0,  3226,     0,     0,  4156,     0, 
          0,   288,   374,    71,     0,   373,     0,     0,     0,    27, 
       3770,   387,   400,     0,   384,   288,   -41,   132,     0,   320, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       3770,  1837,   319,     0,  3770,     0,     0,     0,   -77,   -20, 
          0,     0,     0,  4156,     0,  4156,   405,   430,  3770,   431, 
        409,   414,   450,   458,   375,     0,     0,     0,     0,     0, 
       3770,     0,   440,  3770,  1864,  4156,  4156,   147,  4156,     0, 
          0,  4156,  4156,     0,   378,     0,   395,     0,   453,  1907, 
        483,  1961,  1934,  2004,     0,   184,  4156,  3770,  4156,   185, 
       3770,   401,     0,     0,     0,   184,   467,     0,  2031,   116, 
        495,   167,   -53,   497,     0,  4156,   480,   200,  3770,     0, 
          0,     0,     0,   416,     0,   -53,   -81,   501,     0,     0, 
          0,  3770,  4156,   509,     0,     0,   228,  3770,     0,  2058, 
       3770,   528,     0,  3770,     0,   456,     0,  3770,   473,     0, 
    );
    protected static $yyRindex= array(            6,
          0,     0,    80,     0,     0,     9,   113,     0,    19,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -91,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   499,     0,     0,     0,     0,     5, 
         11,     0,     0,  -114,   476,     0,     0,     0,     0,     0, 
        477,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   560,     0,     0,     0, 
          0,   479,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -210,   562,   -36,     0,     0, 
        563,     0,     0,     0,     0,  -210,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1286,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    46,     0,     0,     0,    94, 
        472,     0,    17,     0,     0,     0,     0,     0,     0,   133, 
        564,     0,   578,     0,     0,     0,     0,     0,     0,    42, 
        280,     0,  1244,     0,     0,   727,   596,   623,  1120,   667, 
        694,   735,     0,     0,     0,     0,   580,   472,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   565,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   569,     0, 
        134,     0,     0,   181,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   472,     0,     0,     0,     0,     0, 
          0,     0,   562,   201,     0,   581,     0,     0,     0,   278, 
         70,   180,   870,  1365,  2082,  2109,  3093,  3137,     0,  3285, 
          0,  3293,  3301,  3305,  3312,   325,     0,  3150,   428,  2742, 
          0,  3082,     0,  3126,  2620,  2647,  2671,  2698,  2579,  2525, 
       2552,  1147,  1174,  1215,     0,     0,   562,   532,   143,     0, 
          0,     0,     0,     0,   231,     0,     0,     0,     0,     0, 
          0,     0,   182,    75,   866,     0,  3173,   562,   562,     0, 
          0,   503,     0,   170,     0,   472,  3321,  3348,     0,  3358, 
       3391,     0,     0,     0,     0,     0,   594,     0,     0,   472, 
          0,     0,     0,   562,     0,  3194,     0,     0,   562,     0, 
          0,   201,     0,     0,     0,   595,     0,     0,     0,     0, 
        519,     0,     0,     0,   -13,   201,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        519,     0,     0,     0,  -123,     0,     0,     0,     0,     0, 
          0,     0,     0,   588,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        519,     0,     0,   519,     0,   589,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   589,     0,     0,     0, 
          0,     0,     0,     0,     0,  3621,     0,     0,     0,   608, 
          0,  3715,   525,     0,     0,   562,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   526,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
       -115,     0,     0,  -115,     0,     0,     0,   519,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    92,     0,     0,   645,   -33,    21,   -30, 
          0,     0,     0,   590,     0,     0,    51,     0,   512,   466, 
          0,     0,     0,   -52,   468,  4425,     0,     0,     0,     0, 
       -141,   633,   636,     0,   247,   597,     0,    -5,   357,   668, 
        341,     0,   342,   923,     0,  -172,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   244,     0,     0,     0,     0,   271,     0,     0,   605, 
          0,     0,   -56,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   358,   407,     0,     0,     0,   498, 
          0,   502,     0,     0,     0,     0,     0,     0,   680,     0, 
    );
    protected static $yyTable = array(40,
        161,    66,    43,    43,   161,    44,    45,   161,    18,    64, 
         39,   220,    94,    63,    39,   193,    43,   271,    43,    69, 
         43,    72,    39,    75,   189,   177,    20,    39,   274,   187, 
        185,    18,   186,   184,   188,   190,    43,    92,   380,    72, 
          2,    68,    63,    63,   294,    39,     1,   180,    45,   182, 
         39,    43,    61,   141,    72,    10,    10,   113,    10,    10, 
         10,    10,    10,    10,    10,    10,   194,    18,   142,   206, 
         68,    68,    29,    30,     5,   113,    10,    10,    10,    10, 
         10,    10,   161,   161,   207,    35,   161,   161,   161,   161, 
        161,   161,   161,   139,     9,   303,    11,    45,   196,   140, 
         35,   228,   381,   161,   161,   161,   161,   161,   161,    39, 
        143,    10,    10,   143,     5,   146,    32,    93,   146,    43, 
         83,    99,    25,   236,   295,   191,   192,   143,   143,   236, 
         46,    26,   146,   146,   114,    97,   161,   114,   161,   161, 
        189,    10,    10,    10,    27,   187,   185,     6,   186,   184, 
        188,    28,   114,    33,   269,    41,    43,   135,   286,   266, 
         42,   211,   143,   180,    47,   182,    50,   146,   161,   161, 
        161,   291,   363,   114,   116,   293,   114,   116,    38,   223, 
        223,    52,    38,   223,   223,   223,   223,   223,   223,   223, 
         38,   383,   116,    70,   143,    38,    18,   156,   213,   146, 
        223,   223,   223,   223,   223,   223,   122,   122,   238,   238, 
        122,   122,   122,   122,   122,   122,   122,   379,    38,    74, 
        176,   173,    36,   176,   173,    36,    76,   122,   122,   122, 
        122,   122,   122,   223,   270,   223,   223,   176,   176,   315, 
         36,    35,   238,    77,    35,    78,    18,    79,   238,    66, 
         66,   189,    82,   329,    80,   217,   187,    64,    64,    81, 
        122,   188,   122,   122,    84,   223,   223,   223,   217,   334, 
        265,   175,   176,    43,   175,   218,    12,    13,    14,    15, 
         16,    17,    85,   361,    87,     2,     2,     2,     2,     2, 
          2,   217,   122,   122,   122,    78,   214,   136,   322,   190, 
        191,   192,   156,    43,   176,     2,     2,   195,   236,   236, 
        236,   236,    12,    13,    14,    15,    16,    17,   142,   432, 
        433,   142,    89,    90,   157,    43,     2,   159,    10,    10, 
         10,    98,   189,   200,   201,   142,   142,   187,   185,   203, 
        186,   184,   188,   204,   236,   282,   205,   208,   209,    10, 
        236,    12,    13,    14,    15,    16,    17,   161,    10,     5, 
          5,     5,     5,     5,     5,   117,   224,    98,   117,    12, 
        142,   140,   288,    12,   289,   293,   161,   161,   292,     5, 
          5,   299,   117,   117,   304,   311,   310,   183,   181,   191, 
        192,   314,     6,     6,     6,     6,     6,     6,   178,   179, 
        143,   317,   142,    43,   318,   146,   447,   327,   328,   330, 
        336,   331,     6,     6,   335,   190,   337,   117,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   357,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
        358,   359,   365,   377,   386,   161,   161,   161,   161,   161, 
        161,   161,   161,   161,   223,    12,   161,   161,   161,   161, 
        161,   161,   161,   161,   161,   161,   161,   390,   204,   387, 
        389,   204,   391,   223,   223,   279,    56,    57,    58,    59, 
         60,   122,   143,   143,   143,   204,   204,   146,   204,   392, 
        204,    12,    13,    14,    15,    16,    17,   393,   396,   394, 
        122,   122,   405,   183,   181,   191,   192,   401,   215,   215, 
        176,   407,   215,   215,   215,   215,   215,   215,   215,   406, 
        204,   204,   409,   423,   420,   426,   190,   413,   428,   215, 
        215,   215,   215,   215,   215,   429,   437,   430,   439,   440, 
        445,   448,   223,   223,   223,   223,   223,   223,   223,   223, 
        223,   204,   204,   223,   223,   223,   223,   223,   223,   223, 
        223,   223,   223,   223,   215,   215,   451,   452,   456,   122, 
        122,   122,   122,   122,   122,   122,   122,   122,   458,   290, 
        122,   122,   122,   122,   122,   122,   122,   122,   122,   122, 
        122,    43,   176,   176,   176,   215,   215,   460,    22,    20, 
         48,   234,   112,   167,   169,   217,   217,   190,   142,   217, 
        217,   217,   217,   217,   217,   217,   191,   192,   170,   236, 
        151,   152,   116,   302,   116,   156,   217,   217,   217,   217, 
        217,   217,   209,   209,    58,    60,   209,   209,   209,   209, 
        209,   209,   209,    64,   308,   309,   116,   112,    92,    94, 
         96,    24,   212,   209,   209,   209,   209,   209,   209,   210, 
        210,   217,   217,   210,   210,   210,   210,   210,   210,   210, 
        332,   281,   280,    96,    49,   333,    48,   362,    95,   446, 
        210,   210,   210,   210,   210,   210,   425,   338,   209,   209, 
        142,   142,   217,   217,    39,   131,   378,   191,   192,   313, 
        273,   277,    31,   208,   208,     0,     0,   208,   208,   208, 
        208,   208,   208,   208,     0,   210,   210,     0,     0,   209, 
        209,     0,     0,     0,   208,   208,   208,   208,   208,   208, 
        211,   211,     0,     0,   211,   211,   211,   211,   211,   211, 
        211,     0,   399,     0,     0,     0,   210,   210,     0,     0, 
          0,   211,   211,   211,   211,   211,   211,     0,   204,   208, 
        208,     0,     0,   417,     0,     0,     0,   134,     0,     0, 
        134,   212,   212,     0,     0,   212,   212,   212,   212,   212, 
        212,   212,   438,   215,   134,   134,   211,   211,     0,     0, 
        208,   208,   212,   212,   212,   212,   212,   212,     0,     0, 
          0,     0,   215,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   211,   211,   134, 
          0,     0,     0,     0,     0,     0,     0,   212,   212,     0, 
          0,   204,   204,   204,   204,   204,     0,     0,     0,     0, 
        204,   204,   204,   204,   204,   204,   204,   204,   204,     0, 
          0,   134,     0,     0,     0,     0,     0,     0,   212,   212, 
          0,     0,    55,    56,    57,    58,    59,    60,     0,     0, 
          0,   215,   215,   215,   215,   215,   215,   215,   215,   215, 
        217,     0,   215,   215,   215,   215,   215,   215,   215,   215, 
        215,   215,   215,     0,     0,     0,     0,     0,     0,   217, 
          0,     0,    61,     0,     0,     0,   147,   209,     0,   147, 
        177,     0,     0,   177,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   147,   147,     0,   209,   177,   177,     0, 
          0,     0,     0,     0,   210,    62,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    54,     0, 
          0,     0,     0,   210,     0,     0,     0,     0,   147,     0, 
          0,     0,   177,     0,     0,     0,     0,     0,   217,   217, 
        217,   217,   217,   217,   217,   217,   217,     0,   208,   217, 
        217,   217,   217,   217,   217,   217,   217,   217,   217,   217, 
        147,     0,     0,     0,   177,   209,   209,   208,     0,   209, 
        209,   209,   209,   209,     0,   211,   209,   209,   209,   209, 
        209,   209,   209,   209,   209,   209,   209,     0,   375,     0, 
          0,     0,   210,   210,   211,     0,   210,   210,   210,   210, 
        210,     0,     0,   210,   210,   210,   210,   210,   210,   210, 
        210,   210,   210,   210,     0,     0,   212,     0,   395,     0, 
          0,   397,     0,     0,     0,    39,     0,   134,     0,     0, 
          0,     0,     0,     0,     0,   212,   208,   208,     0,     0, 
        208,   208,   208,   208,   208,     0,     0,   208,   208,   208, 
        208,   208,   208,   208,   208,   208,   208,   208,     0,     0, 
          0,     0,     0,   211,   211,     0,     0,   211,   211,   211, 
        211,   211,     0,     0,   211,   211,   211,   211,   211,   211, 
        211,   211,   211,   211,   211,     0,     0,     0,   455,     0, 
          0,   457,     0,     0,     0,   459,     0,     0,     0,     0, 
          0,     0,     0,     0,   212,   212,     0,     0,   212,   212, 
        212,   212,   212,     0,     0,   212,   212,   212,   212,   212, 
        212,   212,   212,   212,   212,   212,   207,   207,     0,     0, 
        207,   207,   207,   207,   207,   207,   207,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   207,   207,   207, 
        207,   207,   207,   198,   198,     0,     0,   198,   198,   198, 
        198,   198,   198,   198,     0,     0,   147,     0,     0,     0, 
        177,     0,     0,     0,   198,   198,   198,   198,   198,   198, 
        199,   199,   207,   207,   199,   199,   199,   199,   199,   199, 
        199,     0,     0,    88,    56,    57,    58,    59,    60,     0, 
          0,   199,   199,   199,   199,   199,   199,     0,     0,   198, 
        198,     0,     0,   207,   207,     0,     0,     0,     0,     0, 
          0,   200,   200,     0,     0,   200,   200,   200,   200,   200, 
        200,   200,     0,     0,     0,     0,   199,   199,     0,     0, 
        198,   198,   200,   200,   200,   200,   200,   200,   147,     0, 
        161,   161,   177,   177,   177,   161,   161,     0,   161,   161, 
        161,   388,     0,     0,     0,     0,    62,   199,   199,     0, 
          0,     0,     0,   161,   161,   161,   161,   200,   200,    54, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   133,   133,     0,     0,   133,   133,     0,   133, 
        418,   133,   133,   422,   161,     0,     0,   161,   200,   200, 
          0,     0,     0,   133,   133,   133,   133,   133,   133,   189, 
        177,   441,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,   449,     0,   161,   161,     0,     0, 
        453,     0,   180,   162,   182,   174,     0,     0,   133,   133, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,     0,     0,   215,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,   178,   176,     0,   178,   133, 
        133,     0,     0,     0,   180,   162,   182,   174,     0,   189, 
        177,     0,   178,   178,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,     0,   175,     0,     0,     0, 
          0,     0,   180,   162,   182,   174,     0,     0,   176,     0, 
        207,     0,     0,     0,     0,     0,     0,   178,     0,     0, 
          0,   189,   177,     0,     0,     0,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,     0,   176,   198,   175,     0, 
          0,     0,     0,     0,   180,   162,   182,   174,     0,   178, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,     0,   175,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   207, 
        207,     0,     0,   207,   207,   207,   207,   207,     0,     0, 
        207,   207,   207,   207,   207,   207,   207,   207,   207,   207, 
        207,     0,     0,     0,     0,   200,   198,   198,   175,   320, 
        198,   198,   198,   198,   198,   161,     0,   198,   198,   198, 
        198,   198,   198,   198,   198,   198,   198,   198,     0,     0, 
          0,     0,     0,   199,   199,   161,     0,   199,   199,   199, 
        199,   199,     0,     0,   199,   199,   199,   199,   199,   199, 
        199,   199,   199,   199,   199,     0,     0,   133,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   200,   200,   133,     0,   200,   200, 
        200,   200,   200,     0,   190,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   200,     0,     0,     0,     0, 
          0,     0,     0,   161,   161,   161,   161,   161,   161,   161, 
        161,   161,     0,    12,   161,   161,     0,   161,   161,   161, 
        161,   161,   161,   161,   161,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   133,   133,     0,     0,   133, 
        133,   133,   133,   133,   190,   178,   133,   133,   133,   133, 
        133,   133,   133,   133,   133,   133,   133,     0,     0,     0, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   202,   160,   161,   167,   172, 
        171,   173,   169,   170,     0,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,     0,   178,   178,   178, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   216,   160,   161,   167,   172, 
        171,   173,   169,   170,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,   189,   177,     0,     0, 
          0,   187,   185,     0,   186,   184,   188,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   180, 
        162,   182,   174,   189,   177,     0,     0,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   376,   180,   162,   182,   174, 
        189,   177,     0,   176,     0,   187,   185,     0,   186,   184, 
        188,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   398,   180,   162,   182,   174,     0,     0,     0, 
        176,     0,     0,   175,   321,     0,     0,     0,     0,     0, 
          0,     0,     0,   189,   177,     0,     0,   408,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,   176,     0,     0, 
        175,     0,     0,     0,     0,     0,   180,   162,   182,   174, 
        189,   177,     0,     0,   411,   187,   185,     0,   186,   184, 
        188,     0,     0,     0,     0,     0,     0,   175,     0,     0, 
          0,     0,     0,   180,   162,   182,   174,   189,   177,     0, 
        176,     0,   187,   185,     0,   186,   184,   188,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        180,   162,   182,   174,     0,     0,     0,   176,     0,     0, 
        175,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        189,   177,     0,     0,   412,   187,   185,     0,   186,   184, 
        188,     0,     0,     0,   176,     0,     0,   175,     0,     0, 
          0,     0,     0,   180,   162,   182,   174,   189,   177,     0, 
          0,   427,   187,   185,     0,   186,   184,   188,     0,     0, 
          0,     0,     0,     0,   175,     0,     0,     0,     0,     0, 
        180,   162,   182,   174,   189,   177,     0,   176,     0,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   454,     0,   180,   162,   182, 
        174,   190,   179,     0,   176,   179,     0,   175,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   179, 
        179,     0,     0,     0,     0,     0,     0,     0,   190,   180, 
          0,   176,   180,     0,   175,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   180,   180,     0,     0, 
          0,     0,     0,     0,   179,   190,     0,     0,     0,     0, 
          0,   175,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   180,     0,     0,     0,     0,   179,     0,     0,   183, 
        181,   191,   192,   163,   164,   165,   166,   168,   190,     0, 
        178,   179,     0,   160,   161,   167,   172,   171,   173,   169, 
        170,     0,     0,   180,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   190,     0,   178,   179,     0, 
        160,   161,   167,   172,   171,   173,   169,   170,     0,     0, 
          0,     0,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,   190,     0,   178,   179,     0,   160,   161,   167, 
        172,   171,   173,   169,   170,     0,     0,     0,     0,     0, 
          0,   410,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   190,     0,   178,   179,     0, 
        160,   161,   167,   172,   171,   173,   169,   170,     0,     0, 
          0,     0,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,   190,     0,   178,   179,     0,   160,   161,   167, 
        172,   171,   173,   169,   170,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,   190, 
          0,   178,   179,     0,   160,   161,   167,   172,   171,   173, 
        169,   170,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,   179,     0,   178,   179,     0,   160,   161,   167, 
        172,   171,   173,   169,   170,     0,     0,     0,     0,     0, 
        183,   181,   191,   192,   163,   164,   165,   166,   168,   180, 
          0,   178,   179,     0,   160,   161,   167,   172,   171,   173, 
        169,   170,     0,     0,     0,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,     0,     0,   178,   179, 
          0,   160,   161,   167,   172,   171,   173,   169,   170,   189, 
        177,     0,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,   179,   179,   179,     0,     0,     0, 
          0,     0,   180,   162,   182,   174,   189,   177,     0,     0, 
          0,   187,   185,     0,   186,   184,   188,     0,     0,     0, 
          0,   180,   180,   180,     0,     0,     0,     0,     0,   180, 
        162,   182,   174,   189,   177,     0,   176,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   180,   162,   182,   174, 
          0,     0,   196,   176,     0,   196,   175,   196,   196,   196, 
        196,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   196,   196,   196,   196,   196,   196,     0,   197, 
        176,     0,   197,   175,   197,   197,   197,   197,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   197, 
        197,   197,   197,   197,   197,     0,   201,   196,   196,   201, 
        175,     0,   201,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   201,   201,   201,   201, 
        201,   201,     0,     0,   197,   197,     0,     0,   196,   196, 
          0,     0,     0,     0,     0,     0,     0,   188,     0,     0, 
        188,     0,     0,   188,     0,     0,     0,     0,     0,     0, 
          0,   201,   201,     0,     0,   197,   197,   188,   188,     0, 
        188,     0,   188,     0,   190,     0,     0,   190,     0,     0, 
        190,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   201,   201,   190,   190,     0,   190,   189,   190, 
          0,   189,   188,   188,   189,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   189,   189, 
          0,   189,     0,   189,     0,   191,     0,     0,   191,   190, 
        190,   191,     0,   188,   188,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   190,   191,   191,     0,   191,     0, 
        191,     0,     0,   189,   189,     0,     0,     0,     0,     0, 
        190,   190,     0,     0,     0,     0,     0,     0,     0,   203, 
          0,   190,   203,     0,     0,   203,     0,     0,     0,     0, 
        191,   191,     0,     0,   189,   189,     0,     0,     0,   203, 
        203,     0,   203,     0,   203,     0,     0,     0,   190,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   191,   191,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   203,   203,     0,     0,     0,     0, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,   196,   160,   161,   167,   172, 
        171,   173,   169,   170,     0,   203,   203,     0,     0,   183, 
        181,   191,   192,   163,   164,   165,   166,   168,     0,     0, 
        178,   179,   197,     0,   161,   167,   172,   171,   173,   169, 
        170,     0,     0,     0,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,     0,     0,   178,   179,   201, 
          0,     0,   167,   172,   171,   173,   169,   170,     0,     0, 
          0,     0,     0,     0,   196,   196,     0,     0,   196,   196, 
        196,   196,   196,     0,     0,   196,   196,   196,   196,   196, 
        196,   196,   196,   196,   196,   196,     0,     0,     0,     0, 
        188,   197,   197,     0,     0,   197,   197,   197,   197,   197, 
          0,     0,   197,   197,   197,   197,   197,   197,   197,   197, 
        197,   197,   197,     0,     0,     0,     0,   190,   201,   201, 
          0,     0,   201,   201,   201,   201,   201,     0,     0,   201, 
        201,   201,   201,   201,   201,   201,   201,   201,   201,   201, 
          0,   189,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   188,   188,   188,   188,   188,   191,     0, 
        188,   188,   188,   188,   188,   188,   188,   188,   188,   188, 
        188,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        190,   190,   190,   190,   190,     0,     0,   190,   190,   190, 
        190,   190,   190,   190,   190,   190,   190,   190,     0,     0, 
          0,     0,   203,     0,   189,   189,   189,   189,   189,     0, 
          0,   189,   189,   189,   189,   189,   189,   189,   189,   189, 
        189,   189,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   191,   191,   191,   191,   191,     0,     0,   191,   191, 
        191,   191,   191,   191,   191,   191,   191,   191,   191,   192, 
          0,     0,   192,     0,     0,   192,     0,     0,     0,     0, 
          0,     0,     0,   182,     0,     0,   182,     0,     0,   192, 
        192,     0,   192,     0,   192,   203,   203,   203,   203,   203, 
        182,   182,     0,     0,   203,   203,   203,   203,   203,   203, 
        203,   203,   203,   193,     0,     0,   193,     0,     0,   193, 
          0,     0,     0,     0,   192,   192,     0,   181,     0,     0, 
        181,     0,     0,   193,   193,   182,   193,     0,   193,     0, 
        202,     0,     0,   202,   181,   181,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   192,   192,   202,   202,     0, 
        202,     0,   202,   135,     0,     0,   135,   182,   193,   193, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   181, 
        135,   135,     0,   135,   141,   135,     0,   141,     0,     0, 
          0,     0,   202,     0,     0,     0,     0,     0,     0,   193, 
        193,   141,   141,     0,   141,     0,   141,     0,     0,     0, 
          0,   181,   189,   177,     0,   135,     0,   187,   185,     0, 
        186,   184,   188,   202,   202,     0,     0,     0,     0,     0, 
          0,     0,     0,   189,   177,   180,   141,   182,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,   135,     0,     0, 
          0,     0,     0,     0,     0,     0,   180,   189,   182,     0, 
          0,     0,   187,   185,     0,   186,   184,   188,   141,   176, 
          0,     0,     0,     0,     0,   205,     0,     0,   205,     0, 
        180,     0,   182,   206,     0,     0,   206,     0,     0,     0, 
        176,   183,   205,   205,   183,   184,     0,     0,   184,   175, 
        206,   206,   185,     0,     0,   185,     0,     0,   183,   183, 
          0,   186,   184,   184,   186,     0,     0,     0,     0,   185, 
        185,     0,     0,     0,     0,     0,     0,   205,   186,   186, 
          0,     0,     0,     0,     0,   206,     0,     0,   187,     0, 
          0,   187,     0,   183,     0,     0,     0,   184,   194,     0, 
          0,   194,     0,     0,   185,   187,   187,     0,     0,   205, 
          0,     0,   192,   186,     0,   194,   194,   206,     0,     0, 
          0,     0,     0,   182,     0,   183,     0,     0,     0,   184, 
          0,   195,     0,     0,   195,     0,   185,     0,     0,     0, 
        187,     0,     0,     0,     0,   186,     0,     0,   195,   195, 
        194,     0,     0,     0,     0,     0,   193,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   181,     0,     0, 
          0,     0,   187,     0,     0,     0,     0,     0,     0,     0, 
        202,     0,   194,   195,     0,   192,   192,   192,   192,   192, 
          0,     0,     0,     0,   192,   192,   192,   192,   192,   192, 
        192,   192,   192,   135,     0,   182,   182,   182,     0,     0, 
          0,     0,     0,     0,     0,   195,     0,     0,     0,     0, 
          0,     0,     0,     0,   141,     0,     0,     0,     0,   193, 
        193,   193,   193,   193,     0,     0,     0,   190,   193,   193, 
        193,   193,   193,   193,   193,   193,   193,     0,     0,   181, 
        181,   181,     0,   202,   202,   202,   202,   202,   190,     0, 
          0,     0,   202,   202,   202,   202,   202,   202,   202,   202, 
        202,     0,     0,     0,     0,     0,   135,   135,   135,   135, 
        135,     0,   190,     0,     0,   135,   135,   135,   135,   135, 
        135,   135,   135,   135,     0,     0,     0,   141,   141,   141, 
        141,   141,     0,     0,     0,     0,   141,   141,   141,   141, 
        141,   141,   141,   141,   141,   205,     0,     0,     0,     0, 
          0,     0,     0,   206,     0,   183,   181,   191,   192,     0, 
          0,   183,     0,     0,     0,   184,   178,   179,     0,     0, 
          0,     0,   185,     0,     0,     0,   183,   181,   191,   192, 
          0,   186,     0,   108,     0,     0,     0,   178,   179,     0, 
        108,     0,     0,   108,     0,   108,     0,     0,     0,     0, 
        183,   181,   191,   192,     0,     0,     0,     0,   187,   108, 
          0,   178,   179,     0,   108,     0,     0,     0,   194,     0, 
          0,     0,     0,     0,     0,     0,     0,   205,   205,   205, 
          0,     0,     0,     0,     0,   206,   206,   206,     0,     0, 
          0,     0,   108,   183,   183,   183,     0,   184,   184,   184, 
          0,   195,     0,     0,   185,   185,   185,     0,     0,     0, 
          0,     0,     0,   186,   186,   186,     0,     0,     0,     0, 
          0,     0,     0,   108,     0,   108,   108,   104,     0,     0, 
          0,     0,     0,     0,   104,     0,     0,   104,     0,   104, 
        187,   187,   187,     0,     0,     0,     0,     0,     0,     0, 
        194,   194,   194,   104,     0,     0,     0,     0,   104,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   109,   195,   195,   195,   104,     0,     0,   105, 
          0,     0,   107,   109,   108,     0,     0,     0,     0,     0, 
        105,     0,     0,   107,     0,   108,     0,     0,   350,     0, 
          0,     0,     0,   115,     0,     0,     0,   104,   129,   104, 
        104,     0,     0,     0,   115,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    39,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    39,     0,     0,     0,     0,     0,     0,     0, 
        108,   108,   108,   108,   108,   108,     0,     0,     0,     0, 
          0,     0,   351,     0,     0,   110,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   110,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   108,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   108,   108,     0,     0,     0,     0,     0, 
        108,   108,   108,   108,     0,     0,   108,     0,     0,     0, 
          0,     0,     0,     0,   104,   104,   104,   104,   104,   104, 
        108,   108,   108,   108,     0,   108,   108,   108,     0,     0, 
        108,   108,   108,   108,   108,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   109,     0,     0, 
          0,     0,     0,     0,   105,     0,     0,   107,     0,   108, 
          0,     0,   108,   108,     0,     0,     0,   104,     0,   116, 
         56,    57,    58,    59,    60,   239,     0,     0,   115,     0, 
        116,    56,    57,    58,    59,    60,     0,   104,   104,     0, 
          0,     0,     0,     0,   104,   104,   104,   104,     0,     0, 
        104,     0,     0,     0,     0,     0,    39,     0,     0,     0, 
          0,     0,     0,     0,   104,   104,   104,   104,     0,   104, 
        104,   104,   114,     0,   104,     0,   104,   104,   104,     0, 
          0,     0,     0,   114,   109,     0,     0,     0,     0,     0, 
        110,   105,    62,   117,   107,     0,   108,     0,     0,   118, 
        339,   340,   341,    62,   117,   113,   104,   104,     0,     0, 
        118,     0,   241,     0,     0,   115,   113,     0,     0,   342, 
        343,   344,   345,   109,   346,   347,   106,     0,     0,   348, 
        105,   349,     0,   107,     0,   108,     0,   106,     0,     0, 
          0,     0,     0,    39,     0,     0,     0,     0,   109,     0, 
          0,   251,     0,     0,   115,   105,     0,     0,   107,     0, 
        108,   111,   112,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   111,   112,     0,     0,   253,   110,   109,   115, 
          0,     0,    39,     0,     0,   105,     0,     0,   107,     0, 
        108,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    39,     0,   115, 
          0,     0,     0,     0,     0,     0,   110,     0,     0,     0, 
          0,     0,     0,     0,   116,    56,    57,    58,    59,    60, 
          0,     0,     0,     0,     0,     0,   109,    39,     0,     0, 
          0,   110,     0,   105,     0,     0,   107,     0,   108,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   115,     0,     0, 
          0,   110,     0,     0,     0,     0,     0,   114,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    39,     0,    62,   117,     0, 
          0,     0,     0,     0,   118,     0,     0,     0,     0,     0, 
        113,   116,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   110, 
          0,   106,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        116,    56,    57,    58,    59,    60,     0,     0,     0,     0, 
          0,     0,     0,     0,   114,     0,   111,   112,     0,     0, 
          0,     0,     0,     0,     0,   116,    56,    57,    58,    59, 
         60,     0,     0,     0,    62,   117,     0,     0,     0,     0, 
          0,   118,     0,     0,     0,     0,     0,   113,     0,     0, 
          0,     0,     0,   114,     0,   116,    56,    57,    58,    59, 
         60,     0,     0,     0,     0,     0,     0,     0,   106,     0, 
          0,     0,     0,    62,   117,     0,     0,     0,   114,     0, 
        118,     0,     0,     0,     0,     0,   113,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    62,   117, 
          0,     0,     0,   111,   112,   118,     0,   106,   114,     0, 
          0,   113,     0,   143,    56,    57,    58,    59,    60,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    62,   117, 
          0,     0,   106,     0,     0,   118,     0,     0,     0,     0, 
          0,   113,   111,   112,     0,     0,     0,     0,     0,     0, 
          0,   120,     0,     0,     0,   130,     0,     0,     0,     0, 
          0,     0,   106,     0,     0,     0,   114,   111,   112,   145, 
        146,   147,   148,   149,   150,   151,   152,     0,   154,   155, 
          0,     0,     0,     0,     0,     0,   144,   117,     0,     0, 
          0,     0,     0,   118,     0,     0,     0,   111,   112,   113, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        106,     0,     0,     0,   230,   231,   232,   233,   234,   235, 
        236,   237,   238,   240,   242,   243,   244,   245,   246,   248, 
        249,   250,   252,   254,   255,   256,   257,   258,   259,   260, 
        261,   262,   263,   264,     0,   111,   112,     0,     0,     0, 
          0,     0,     0,     0,     0,   246,   275,     0,   276,     0, 
          0,     0,     0,   283,     0,     0,     0,   284,   285,     0, 
        287,     0,     0,     0,     0,     0,     0,   120,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   297,     0,   298,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   300,     0,   301,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   120,   246,     0,     0,   305,   306,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   120,   120,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   316,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   120,     0, 
          0,     0,     0,   120,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   246,     0, 
        385,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,   400,     0,   402,     0,     0,   403,   404,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   120,     0,   419,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   450, 
    );
    protected static $yyCheck = array(33,
         41,   125,    36,    37,    41,    36,    37,    44,   123,   125, 
         92,   153,   260,    47,    92,    40,    50,   123,    52,    50, 
         54,    52,    92,    54,    37,    38,     6,    92,   201,    42, 
         43,    35,    45,    46,    47,   312,    70,   260,    59,    70, 
         35,    47,    76,    77,   260,    59,   320,    60,    44,    62, 
         92,    85,   300,    44,    85,    37,    38,    41,    40,    41, 
         42,    43,    44,    45,    46,    47,    91,    35,    59,    44, 
         76,    77,   300,   301,   321,    59,    58,    59,    60,    61, 
         62,    63,    37,    38,    59,    44,    41,    42,    43,    44, 
         45,    46,    47,   334,   260,   268,     5,    93,   123,   340, 
         59,   158,   123,    58,    59,    60,    61,    62,    63,   123, 
         41,    93,    94,    44,    35,    41,    25,   340,    44,   153, 
         70,   125,    92,   334,   340,   402,   403,    58,    59,   340, 
         39,    59,    58,    59,    41,    85,    91,    44,    93,    94, 
         37,   123,   124,   125,    59,    42,    43,    35,    45,    46, 
         47,    91,    59,    64,   260,    93,   190,   125,   215,   190, 
         44,   141,    93,    60,    40,    62,   310,    93,   123,   124, 
        125,   224,    41,    41,    41,    44,    44,    44,   260,    37, 
         38,   310,   260,    41,    42,    43,    44,    45,    46,    47, 
        260,   364,    59,   311,   125,   260,   311,    40,    41,   125, 
         58,    59,    60,    61,    62,    63,    37,    38,   300,   301, 
         41,    42,    43,    44,    45,    46,    47,   359,   260,   123, 
         41,    41,    41,    44,    44,    44,    61,    58,    59,    60, 
         61,    62,    63,    91,   340,    93,    94,    58,    59,   296, 
         59,    41,   334,    61,    44,    40,    35,   410,   340,   373, 
        374,    37,    44,   310,    41,   333,    42,   373,   374,    41, 
         91,    47,    93,    94,   123,   123,   124,   125,   333,   322, 
        340,    41,    93,   307,    44,   340,   280,   281,   282,   283, 
        284,   285,    44,   336,    40,   280,   281,   282,   283,   284, 
        285,   333,   123,   124,   125,    40,    41,   260,   340,   312, 
        402,   403,    40,   337,   125,   300,   301,   332,   300,   301, 
        300,   301,   280,   281,   282,   283,   284,   285,    41,   373, 
        374,    44,    76,    77,    40,   359,   321,   410,   310,   311, 
        312,   335,    37,    41,    44,    58,    59,    42,    43,    41, 
         45,    46,    47,    44,   334,    40,    61,   260,    61,   331, 
        340,   280,   281,   282,   283,   284,   285,   312,   340,   280, 
        281,   282,   283,   284,   285,    41,   340,   335,    44,   410, 
         93,   340,    40,   410,    40,    44,   331,   332,    41,   300, 
        301,    58,    58,    59,    40,   321,    41,   400,   401,   402, 
        403,    40,   280,   281,   282,   283,   284,   285,   411,   412, 
        331,    41,   125,   437,    93,   331,   437,    41,    41,    40, 
        340,   123,   300,   301,    41,   312,    44,    93,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    41,   410,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         41,    58,   123,   125,    40,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    59,    41,    40, 
         40,    44,    59,   331,   332,   260,   261,   262,   263,   264, 
        265,   312,   413,   414,   415,    58,    59,   413,    61,    40, 
         63,   280,   281,   282,   283,   284,   285,    40,    59,   125, 
        331,   332,   125,   400,   401,   402,   403,   361,    37,    38, 
        331,    59,    41,    42,    43,    44,    45,    46,    47,   125, 
         93,    94,    40,   123,   340,    59,   312,   344,   413,    58, 
         59,    60,    61,    62,    63,    41,    40,   371,    59,   340, 
        125,    41,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   124,   125,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    93,    94,    58,   340,    41,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   123,   223, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,   413,   414,   415,   124,   125,   125,   123,   123, 
         41,   123,    41,    41,    41,    37,    38,   312,   331,    41, 
         42,    43,    44,    45,    46,    47,   402,   403,    41,   340, 
         41,    41,    58,   267,    93,   123,    58,    59,    60,    61, 
         62,    63,    37,    38,    41,    41,    41,    42,    43,    44, 
         45,    46,    47,   125,   288,   289,    59,    59,    41,   125, 
        125,     7,   141,    58,    59,    60,    61,    62,    63,    37, 
         38,    93,    94,    41,    42,    43,    44,    45,    46,    47, 
        314,   206,   205,    84,    42,   319,    41,   337,    82,   436, 
         58,    59,    60,    61,    62,    63,   416,   330,    93,    94, 
        413,   414,   124,   125,    92,    91,   355,   402,   403,   293, 
        199,   204,    23,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    93,    94,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,   386,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,   331,    93, 
         94,    -1,    -1,   407,    -1,    -1,    -1,    41,    -1,    -1, 
         44,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,   426,   312,    58,    59,    93,    94,    -1,    -1, 
        124,   125,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    93, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,   300,    -1,    -1,    -1,    41,   312,    -1,    44, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,   331,    58,    59,    -1, 
         -1,    -1,    -1,    -1,   312,   333,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,   312,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        125,    -1,    -1,    -1,   125,   400,   401,   331,    -1,   404, 
        405,   406,   407,   408,    -1,   312,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,   351,    -1, 
         -1,    -1,   400,   401,   331,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,   312,    -1,   381,    -1, 
         -1,   384,    -1,    -1,    -1,    92,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,   451,    -1, 
         -1,   454,    -1,    -1,    -1,   458,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,   331,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    93,    94,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    93, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
        124,   125,    58,    59,    60,    61,    62,    63,   413,    -1, 
         37,    38,   413,   414,   415,    42,    43,    -1,    45,    46, 
         47,   369,    -1,    -1,    -1,    -1,   333,   124,   125,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    93,    94,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    -1,    44, 
        408,    46,    47,   411,    91,    -1,    -1,    94,   124,   125, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    37, 
         38,   429,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,   442,    -1,   123,   124,    -1,    -1, 
        448,    -1,    60,    61,    62,    63,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    41,    94,    -1,    44,   124, 
        125,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    37, 
         38,    -1,    58,    59,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    94,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    94,   331,   124,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,   331,   400,   401,   124,   125, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   332,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   331,    -1,   404,   405, 
        406,   407,   408,    -1,   312,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,   410,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,   312,   331,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,   413,   414,   415, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    59,    60,    61,    62,    63, 
         37,    38,    -1,    94,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         94,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    94,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    -1,    60,    61,    62, 
         63,   312,    41,    -1,    94,    44,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    41, 
         -1,    94,    44,    -1,   124,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,   312,    -1,    -1,    -1,    -1, 
         -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,    -1,   125,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,   125,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   331,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   331, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    37,    38,    -1,    94,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    38,    94,    -1,    41,   124,    43,    44,    45, 
         46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    38, 
         94,    -1,    41,   124,    43,    44,    45,    46,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    38,    93,    94,    41, 
        124,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    93,    94,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,   124,   125,    58,    59,    -1, 
         61,    -1,    63,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    58,    59,    -1,    61,    38,    63, 
         -1,    41,    93,    94,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    38,    -1,    -1,    41,    93, 
         94,    44,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38, 
         -1,   312,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   331,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   124,   125,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   331,    -1,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   331, 
         -1,    -1,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
        331,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,   331,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,   331,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,   331,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,   404,   405,   406,   407,   408, 
         58,    59,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    38,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    93,    94,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    58,    59,    93,    61,    -1,    63,    -1, 
         41,    -1,    -1,    44,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    58,    59,    -1, 
         61,    -1,    63,    41,    -1,    -1,    44,   125,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         58,    59,    -1,    61,    41,    63,    -1,    44,    -1,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,   125,    37,    38,    -1,    93,    -1,    42,    43,    -1, 
         45,    46,    47,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    60,    93,    62,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    37,    62,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,   125,    94, 
         -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         60,    -1,    62,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         94,    41,    58,    59,    44,    41,    -1,    -1,    44,   124, 
         58,    59,    41,    -1,    -1,    44,    -1,    -1,    58,    59, 
         -1,    41,    58,    59,    44,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    -1,    93,    58,    59, 
         -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    93,    -1,    -1,    -1,    93,    41,    -1, 
         -1,    44,    -1,    -1,    93,    58,    59,    -1,    -1,   125, 
         -1,    -1,   331,    93,    -1,    58,    59,   125,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,   125,    -1,    -1,    -1,   125, 
         -1,    41,    -1,    -1,    44,    -1,   125,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,   125,    -1,    -1,    58,    59, 
         93,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,   125,    93,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   331,    -1,   413,   414,   415,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,   312,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,   413, 
        414,   415,    -1,   404,   405,   406,   407,   408,   312,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,   312,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,   400,   401,   402,   403,    -1, 
         -1,   331,    -1,    -1,    -1,   331,   411,   412,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,   331,    -1,    33,    -1,    -1,    -1,   411,   412,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,    -1,    -1,    -1,    -1,   331,    59, 
         -1,   411,   412,    -1,    64,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
         -1,    -1,    92,   413,   414,   415,    -1,   413,   414,   415, 
         -1,   331,    -1,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   123,    -1,   125,   126,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    59,    -1,    -1,    -1,    -1,    64,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    33,   413,   414,   415,    92,    -1,    -1,    40, 
         -1,    -1,    43,    33,    45,    -1,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    59,    -1, 
         -1,    -1,    -1,    64,    -1,    -1,    -1,   123,    58,   125, 
        126,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,   123,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,   341,   342,   343,    -1,    -1,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,    -1, 
        370,   371,   372,   373,   374,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1, 
         -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,   402,   403,    -1,    -1,    -1,   313,    -1,   260, 
        261,   262,   263,   264,   265,    61,    -1,    -1,    64,    -1, 
        260,   261,   262,   263,   264,   265,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,   341,   342,   343,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   360,   361,   362,   363,    -1,   365, 
        366,   367,   313,    -1,   370,    -1,   372,   373,   374,    -1, 
         -1,    -1,    -1,   313,    33,    -1,    -1,    -1,    -1,    -1, 
        126,    40,   333,   334,    43,    -1,    45,    -1,    -1,   340, 
        341,   342,   343,   333,   334,   346,   402,   403,    -1,    -1, 
        340,    -1,    61,    -1,    -1,    64,   346,    -1,    -1,   360, 
        361,   362,   363,    33,   365,   366,   367,    -1,    -1,   370, 
         40,   372,    -1,    43,    -1,    45,    -1,   367,    -1,    -1, 
         -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    33,    -1, 
         -1,    61,    -1,    -1,    64,    40,    -1,    -1,    43,    -1, 
         45,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   402,   403,    -1,    -1,    61,   126,    33,    64, 
         -1,    -1,    92,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    33,    92,    -1,    -1, 
         -1,   126,    -1,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    64,    -1,    -1, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    92,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,   313,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,    -1, 
         -1,    -1,    -1,   333,   334,    -1,    -1,    -1,   313,    -1, 
        340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,    -1,    -1,   402,   403,   340,    -1,   367,   313,    -1, 
         -1,   346,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,    -1,   367,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    87,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,    -1,    -1,    -1,   313,   402,   403,   105, 
        106,   107,   108,   109,   110,   111,   112,    -1,   114,   115, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,   402,   403,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,    -1,    -1,    -1,   160,   161,   162,   163,   164,   165, 
        166,   167,   168,   169,   170,   171,   172,   173,   174,   175, 
        176,   177,   178,   179,   180,   181,   182,   183,   184,   185, 
        186,   187,   188,   189,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   201,   202,    -1,   204,    -1, 
         -1,    -1,    -1,   209,    -1,    -1,    -1,   213,   214,    -1, 
        216,    -1,    -1,    -1,    -1,    -1,    -1,   223,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   239,    -1,   241,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   251,    -1,   253,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   267,   268,    -1,    -1,   271,   272,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   288,   289,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   299,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   314,    -1, 
         -1,    -1,    -1,   319,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,    -1, 
        366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        386,   387,    -1,   389,    -1,    -1,   392,   393,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   407,    -1,   409,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   443, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 387 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 416 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 420 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 423 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 428 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 438 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 438 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 451 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 451 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 455 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 455 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 461 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 462 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 481 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 485 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 489 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 495 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 496 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 511 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 515 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 525 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 531 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 540 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 553 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 123:  #line 565 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 124:  #line 571 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 571 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 577 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 577 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 581 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 581 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 591 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 591 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 603 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 134:  #line 606 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 135:  #line 609 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 136:  #line 612 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 137:  #line 615 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 138:  #line 618 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 621 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 624 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 141:  #line 628 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 142:  #line 634 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 143:  #line 640 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 144:  #line 646 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 145:  #line 651 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 146:  #line 656 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 147:  #line 659 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 148:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 149:  #line 665 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 150:  #line 668 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 151:  #line 679 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 153:  #line 684 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 154:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 155:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 156:  #line 693 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 157:  #line 694 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 159:  #line 699 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 160:  #line 699 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 161:  #line 703 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 162:  #line 709 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 710 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 711 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 712 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 166:  #line 713 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 167:  #line 717 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 168:  #line 720 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 169:  #line 723 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 170:  #line 726 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 171:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 172:  #line 733 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 173:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 175:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 176:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 748 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 183:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 187:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 188:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 195:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 196:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 202:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 209:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 795 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 214:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 215:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 217:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 218:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 219:  #line 811 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 220:  #line 811 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 814 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 222:  #line 814 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 223:  #line 817 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 224:  #line 820 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 225:  #line 823 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 226:  #line 826 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 227:  #line 826 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 228:  #line 829 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 229:  #line 829 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 232:  #line 842 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 233:  #line 846 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 234:  #line 850 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 235:  #line 851 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 236:  #line 857 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 237:  #line 858 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 238:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 239:  #line 863 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 240:  #line 867 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 241:  #line 868 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 242:  #line 869 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 243:  #line 870 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 244:  #line 871 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 245:  #line 872 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2459 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
