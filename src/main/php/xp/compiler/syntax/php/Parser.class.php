<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    30,    30,    27,    27,    41, 
         41,    42,    42,    40,    40,    43,    43,    47,    45,    48, 
         45,    50,    45,    51,    45,    53,    45,    54,    45,    55, 
         45,    57,    45,    59,    45,    60,    45,    61,    45,    45, 
         45,    52,    52,    56,    56,    62,    62,    64,    63,    65, 
         63,    44,    44,    49,    66,    49,    58,    67,    67,    69, 
         68,    39,    39,    70,    70,    46,    46,    71,    71,    72, 
         72,    72,    26,    74,    26,    75,    26,    76,    26,    77, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         83,    83,    85,    85,    86,    84,    84,    38,    88,    38, 
         25,    25,    25,    25,    25,    25,    87,    87,    87,    87, 
         89,    89,    91,    91,    90,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    78,    78,    79,    79,    79, 
         79,    79,    79,    79,    79,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    80,    81,    81,    81,    81, 
         81,    81,    82,    82,    73,    73,    92,    92,    94,    93, 
         95,    93,    93,    93,    93,    96,    93,    31,    31,    10, 
         97,    17,    17,    33,    33,    98,    98,    99,    99,    99, 
         99,    99,    99, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     1,     3,     0,     1,     1, 
          3,     3,     2,     0,     1,     1,     2,     0,     4,     0, 
          7,     0,    10,     0,     8,     0,     6,     0,     8,     0, 
          8,     0,     6,     0,     3,     0,     3,     0,     4,     2, 
          1,     1,     3,     0,     1,     1,     2,     0,     5,     0, 
          4,     1,     3,     0,     0,     3,     1,     1,     2,     0, 
          9,     0,     1,     1,     3,     0,     1,     4,     4,     1, 
          4,     1,     2,     0,     3,     0,     3,     0,     5,     0, 
          6,     2,     1,     2,     4,     1,     1,     1,     1,     1, 
          5,     3,     3,     3,     3,     4,     4,     2,     8,     4, 
          0,     1,     1,     3,     1,     0,     4,     1,     0,     5, 
          1,     1,     1,     1,     1,     1,     0,     1,     1,     1, 
          1,     3,     0,     1,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     2,     2,     2,     2, 
          2,     2,     2,     2,     0,     1,     1,     2,     0,     4, 
          0,     4,     2,     2,     4,     0,     6,     1,     1,     1, 
          1,     1,     3,     0,     1,     1,     2,     1,     1,     1, 
          1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   238,   240,   239,   241,   243,   242,     0,     1,     0, 
         42,   235,     0,     8,     0,     4,     9,     0,    14,    16, 
        237,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   230,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   166,   162,   165,   163,   164, 
          0,     0,     0,   158,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   159,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    55,     0,    49,     0,   233,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   124,     0,     0, 
          0,     0,     0,   136,   137,   138,   139,   140,   168,     0, 
          0,     0,     0,   171,    15,     0,    27,     0,     0,     0, 
          0,    29,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   132,   148,   130,     0,     0,   128,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        213,   214,   219,     0,   221,   123,   216,     0,    53,     0, 
          0,   160,     0,     0,     0,    31,     0,     0,    33,     0, 
         30,     0,     0,     0,     0,   231,     0,   228,     0,   127, 
        229,     0,   155,     0,     0,   153,   125,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   145,   144,     0,     0,   224,     0,     0, 
        218,   115,     0,     0,   174,   172,   161,    34,    32,    37, 
          0,     0,     0,   150,     0,     0,     0,     0,     0,     0, 
          0,   120,     0,     0,     0,     0,     0,     0,     0,   226, 
          0,     0,     0,     0,     0,     0,     0,     0,   154,     0, 
        129,     0,   220,     0,   225,   222,     0,     0,     0,    59, 
          0,   119,   118,   131,     0,     0,     0,     0,    63,     0, 
          0,     0,     0,    68,     0,    88,    72,    76,    78,    74, 
         84,    86,    70,    80,    91,     0,     0,     0,    65,     0, 
        102,   121,   227,     0,     0,    62,    61,   157,     0,    82, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         90,   149,    67,    40,    56,     0,    38,     0,     0,     0, 
          0,     0,     0,     0,    85,    87,     0,     0,   103,     0, 
         69,     0,    89,     0,     0,     0,     0,     0,     0,    57, 
          0,     0,     0,     0,     0,     0,     0,   110,    83,   107, 
          0,     0,    77,     0,     0,     0,     0,     0,     0,   109, 
          0,     0,     0,     0,   105,    71,    98,   100,     0,    95, 
          0,     0,     0,    79,    93,    75,     0,     0,     0,    81, 
         97,     0,     0,   106,     0,     0,     0,    73,     0,   101, 
          0,    99,     0,     0,   111, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   119,   100,   218, 
         36,    51,    71,    86,    37,    53,    73,   101,   102,   137, 
        103,   104,   138,   209,    64,   347,   318,   303,   355,   377, 
        319,    34,    21,    35,    65,    66,    67,   121,   122,   348, 
        320,   321,   349,   350,   351,   246,   359,   368,   426,   362, 
        365,   416,   363,   364,   369,   429,   379,   409,   366,   367, 
        361,   430,   431,   438,   439,   437,   410,   411,   419,   123, 
        220,   293,   196,   158,   153,   228,   222,   124,   125,   126, 
        127,   128,   224,   308,   225,   226,   132,    91,   133,   134, 
        276,   197,   198,   266,   270,   314,   221,    22,    23, 
    );
    protected static $yySindex = array(         -238,
          0,     0,  -226,  -136,  -136,     3,  -226,     0,    41,    92, 
         96,     0,     0,     0,     0,     0,     0,    72,     0,  -251, 
          0,     0,    61,     0,  -136,     0,     0,   126,     0,     0, 
          0,     0,   -84,    76,   176,   -84,   -84,     0,  -136,   182, 
         61,   126,     0,   -69,   -66,     0,  1682,     0,     0,   -84, 
        -61,   -84,   134,   -84,   198,     0,     0,     0,     0,     0, 
        201,   234,  -128,     0,   248,   291,   262,     0,     0,   -84, 
        212,   292,     0,     0,   309,   -90,   -90,     0,  -215,     0, 
          0,  -209,     0,     0,   -84,    -4,  4283,     0,     0,     0, 
       4005,     0,     0,   198,     0,    13,     0,    94,     0,  -268, 
          0,     0,     0,    91,  4326,  4283,  4283,  4283,  4283,  4283, 
       4283,  4283,     0,  4283,  4283,   311,   325,     0,   -44,  2473, 
        -81,   326,   324,     0,     0,     0,     0,     0,     0,  1450, 
        324,   328,   329,     0,     0,   316,     0,   100,   116,   320, 
          3,     0,   102,   175,  1584,  1619,  -164,  -164,  -286,  -164, 
       -164,  -164,   -65,     0,     0,     0,    32,   -81,     0,  4283, 
       4283,  4283,  4283,  4283,  4283,  4283,  4283,  4283,  3996,  4116, 
       4283,  4283,  4283,  4283,  4283,  4283,  4283,  4239,  4261,  4283, 
       4283,  4283,  4283,  4283,  4283,  4283,  4283,  4283,  4283,   -67, 
          0,     0,     0,   -15,     0,     0,     0,   -81,     0,  4283, 
       4283,     0,  4283,   149,    94,     0,   353,  4283,     0,    45, 
          0,  4283,  4283,   -81,  4283,     0,   356,     0,   358,     0, 
          0,  4283,     0,   374,   381,     0,     0,  -214,   277,  2558, 
       2558,  2558,  2558,  2558,  2558,  2558,  2558,  4283,  2558,  4283, 
       2558,  2558,  2558,  2558,  2473,   382,    85,  1704,   431,  4283, 
        802,  4283,   802,   265,   265,   265,   265,   265,    -8,    -8, 
       -286,  -286,  -286,     0,     0,  4283,   425,     0,  4283,  4283, 
          0,     0,  2473,  1450,     0,     0,     0,     0,     0,     0, 
       2473,  2473,  2473,     0,  3058,  4283,  4283,   426,   145,    32, 
        440,     0,   -81,  2558,  2558,  4283,  2558,  2558,   389,     0, 
       1748,  1845,   -24,   442,   443,   -81,   449,   367,     0,  4283, 
          0,  3058,     0,  4283,     0,     0,   320,   451,   154,     0, 
        464,     0,     0,     0,    32,  3873,   454,   468,     0,   459, 
        320,   -24,   112,     0,   395,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  3873,  1873,   394,     0,  3873, 
          0,     0,     0,   -64,   -23,     0,     0,     0,  4283,     0, 
       4283,   482,   483,  3873,   484,   466,   467,   493,   494,   410, 
          0,     0,     0,     0,     0,  3873,     0,   477,  3873,  1917, 
       4283,  4283,   177,  4283,     0,     0,  4283,  4283,     0,   412, 
          0,   424,     0,   491,  2034,   524,  2076,  2145,  2173,     0, 
        221,  4283,  3873,  4283,   226,  3873,   453,     0,     0,     0, 
        221,   532,     0,  2302,   179,   560,   231,  -126,   565,     0, 
       4283,   547,   274,  3873,     0,     0,     0,     0,   492,     0, 
       -126,   -84,   577,     0,     0,     0,  3873,  4283,   561,     0, 
          0,   280,  3873,     0,  2337,  3873,   592,     0,  3873,     0, 
        518,     0,  3873,   517,     0, 
    );
    protected static $yyRindex= array(           79,
          0,     0,   220,     0,     0,    29,   315,     0,    16,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -182,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   550,     0,     0,     0,     0,    20, 
        141,     0,     0,   -88,   521,     0,     0,     0,     0,     0, 
        522,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   605,     0,     0,     0, 
          0,   525,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -242,   606,   -32,     0,     0, 
        608,     0,     0,     0,     0,  -242,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1286,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    43,     0,     0,     0,    53, 
        345,     0,    24,     0,     0,     0,     0,     0,     0,   153, 
        609,     0,   617,     0,     0,     0,     0,     0,     0,   105, 
        323,     0,  1413,     0,     0,   -26,   566,   593,   987,   730, 
        767,   895,     0,     0,     0,     0,   623,   345,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   611,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   469,     0,   121, 
          0,     0,   180,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   345,     0,     0,     0,     0,     0,     0, 
          0,   606,     0,     0,   625,     0,     0,     0,  1246,   208, 
        259,   809,   870,  1000,  1297,  1422,  1426,     0,  1595,     0, 
       1675,  1719,  2010,  2415,   661,     0,  3322,  3284,  3166,     0, 
       3193,     0,  3244,  2857,  2984,  3021,  3142,  2758,  2600,  2721, 
       1028,  1152,  1195,     0,     0,   578,   140,     0,     0,     0, 
          0,     0,   191,     0,     0,     0,     0,     0,     0,     0, 
        147,  2268,  2730,     0,  3413,   606,   606,     0,   552,     0, 
        167,     0,   345,  2445,  2571,     0,  3005,  3154,     0,     0, 
          0,     0,   629,     0,     0,   345,     0,     0,     0,   606, 
          0,  3440,     0,   606,     0,     0,   196,     0,     0,     0, 
        658,     0,     0,     0,     0,   576,     0,     0,     0,   -12, 
        196,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   576,     0,     0,     0,  -120, 
          0,     0,     0,     0,     0,     0,     0,     0,   645,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   576,     0,     0,   576,     0, 
        647,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   647,     0,     0,     0,     0,     0,     0,     0,     0, 
       3713,     0,     0,     0,   666,     0,  3829,   583,     0,     0, 
        606,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        584,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -102,     0,     0,  -102,     0, 
          0,     0,   576,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    68,     0,     0,   703,   -33,     5,   -30, 
          0,     0,     0,   627,     0,     0,   122,     0,   571,   508, 
          0,     0,     0,  -202,   510,  4589,     0,     0,     0,     0, 
       -137,   673,   675,     0,   281,   640,     0,    -6,   -68,   286, 
        391,     0,   375,   297,     0,  -170,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   293,     0,     0,     0,     0,   317,     0,     0,   635, 
          0,     0,  -145,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   402,   439,     0,     0,     0,   527, 
          0,   533,     0,     0,     0,     0,     0,   710,     0, 
    );
    protected static $yyTable = array(40,
        161,    39,    43,    43,    66,    44,    45,    39,   161,   193, 
         20,   161,   227,    63,   134,   219,    43,   134,    43,    69, 
         43,    72,    64,    75,    39,   190,    39,    39,   189,   272, 
         18,   134,   134,   187,    18,   375,    43,    18,   188,    72, 
         68,   195,    63,    63,    92,   291,    39,    18,    29,    30, 
         94,    43,    10,    10,    72,    10,    10,    10,    10,    10, 
         10,    10,    10,    45,   113,   139,   134,    39,   284,    68, 
         68,   140,    11,    10,    10,    10,    10,    10,    10,   161, 
        161,     1,   113,   161,   161,   161,   161,   161,   161,   161, 
         61,   234,    32,   114,     5,   299,   114,   234,   134,   376, 
        161,   161,   161,   161,   161,   161,    46,   269,    10,    10, 
         39,   114,    45,     2,   329,   191,   192,   236,   236,    43, 
         99,   189,   177,     9,    93,   292,   187,   185,   356,   186, 
        184,   188,    25,   161,   141,   161,   161,   135,    10,    10, 
         10,   156,   212,   205,   180,   210,   182,   311,    35,   142, 
         26,   236,   358,   288,    27,   290,    43,   236,   206,   265, 
        324,   116,    28,    35,   116,   161,   161,   161,    41,    88, 
         56,    57,    58,    59,    60,    38,   223,   223,   176,   116, 
        223,   223,   223,   223,   223,   223,   223,    36,   378,    33, 
         36,    83,    38,   114,    38,    38,   114,   223,   223,   223, 
        223,   223,   223,   122,   122,    36,    97,   122,   122,   122, 
        122,   122,   122,   122,    78,   213,   374,   304,   305,    42, 
        173,    47,    18,   173,   122,   122,   122,   122,   122,   122, 
        223,   175,   223,   223,   175,    38,    35,   191,   192,    35, 
         50,   327,    62,    52,   267,   328,   427,   428,   143,    70, 
        194,   143,    66,    66,     5,    54,    74,   122,    76,   122, 
        122,    77,   223,   223,   223,   143,   143,   216,   216,    43, 
         64,    64,   264,    78,   217,    12,    13,    14,    15,    16, 
         17,    79,    12,    13,    14,    15,    16,    17,    80,   122, 
        122,   122,    12,    13,    14,    15,    16,    17,    43,   176, 
        143,   189,   176,   190,   134,    82,   187,   185,   216,   186, 
        184,   188,   394,   189,   177,   317,   176,   176,   187,   185, 
         43,   186,   184,   188,   268,    10,    10,    10,   234,   234, 
         98,    81,   143,   412,    84,    85,   180,   162,   182,   174, 
         12,    13,    14,    15,    16,    17,    10,    98,    87,     6, 
        156,   176,   433,   136,   161,    10,    89,    90,     2,     2, 
          2,     2,     2,     2,   157,   159,   199,   200,   202,    12, 
        176,   223,   203,   161,   161,   207,   204,    12,     2,     2, 
        208,   215,   215,   176,   140,   215,   215,   215,   215,   215, 
        215,   215,   280,   191,   192,   286,   190,   287,    43,     2, 
        175,   442,   215,   215,   215,   215,   215,   215,   277,    56, 
         57,    58,    59,    60,   289,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   290,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   215,   215,   296, 
        234,   234,   161,   161,   161,   161,   161,   161,   161,   161, 
        161,   223,    12,   161,   161,   161,   161,   161,   161,   161, 
        161,   161,   161,   161,   300,   307,   306,   189,   215,   215, 
        223,   223,   187,   185,   234,   186,   184,   188,   122,   310, 
        234,   313,   322,   323,   183,   181,   191,   192,   325,   326, 
        180,   330,   182,   331,   352,   178,   179,   122,   122,     5, 
          5,     5,     5,     5,     5,   217,   217,   332,   353,   217, 
        217,   217,   217,   217,   217,   217,   354,   360,   372,     5, 
          5,   381,   382,   384,   385,   386,   217,   217,   217,   217, 
        217,   217,   387,   388,   389,   391,   400,   396,   143,   223, 
        223,   223,   223,   223,   223,   223,   223,   223,   401,   402, 
        223,   223,   223,   223,   223,   223,   223,   223,   223,   223, 
        223,   217,   217,   404,   408,   415,   122,   122,   122,   122, 
        122,   122,   122,   122,   122,   418,   190,   122,   122,   122, 
        122,   122,   122,   122,   122,   122,   122,   122,   190,   176, 
        421,   423,   217,   217,     6,     6,     6,     6,     6,     6, 
        424,   425,   209,   209,   432,   434,   209,   209,   209,   209, 
        209,   209,   209,   435,     6,     6,   440,   443,   446,   447, 
        143,   143,   143,   209,   209,   209,   209,   209,   209,   210, 
        210,   370,   451,   210,   210,   210,   210,   210,   210,   210, 
        453,   455,    43,    22,    20,    48,   112,   232,   167,   169, 
        210,   210,   210,   210,   210,   210,   215,   170,   209,   209, 
        383,   390,   234,   151,   392,   152,   191,   192,   116,    58, 
        116,   176,   176,   176,   156,   215,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   210,   210,   178,   179,   209, 
        209,   161,   167,   172,   171,   173,   169,   170,    60,   413, 
         64,   117,   417,   116,   117,   112,    92,    94,    96,    24, 
         96,   211,   279,   278,    49,    48,   210,   210,   117,   117, 
        436,    95,   357,   441,   373,   131,   333,   420,   309,   275, 
        271,   450,    31,   444,   452,     0,     0,     0,   454,   448, 
          0,     0,   190,     0,   215,   215,   215,   215,   215,   215, 
        215,   215,   215,   117,     0,   215,   215,   215,   215,   215, 
        215,   215,   215,   215,   215,   215,   208,   208,     0,     0, 
        208,   208,   208,   208,   208,   208,   208,     0,     0,     0, 
        217,     0,     0,     0,     0,     0,     0,   208,   208,   208, 
        208,   208,   208,     0,     0,     0,     0,     0,     0,   217, 
          0,     0,     0,   211,   211,     0,     0,   211,   211,   211, 
        211,   211,   211,   211,     0,     0,     0,     0,     0,     0, 
          0,     0,   208,   208,   211,   211,   211,   211,   211,   211, 
        183,   181,   191,   192,     0,     0,     0,     0,   189,     0, 
          0,   178,   179,   187,   185,     0,   186,   184,   188,   177, 
          0,     0,   177,   208,   208,     0,     0,     0,     0,   211, 
        211,   180,     0,   182,     0,     0,   177,   177,   217,   217, 
        217,   217,   217,   217,   217,   217,   217,   209,     0,   217, 
        217,   217,   217,   217,   217,   217,   217,   217,   217,   217, 
        211,   211,     0,     0,     0,     0,   209,     0,     0,     0, 
          0,   177,     0,     0,   210,     0,     0,     0,     0,     0, 
        178,     0,     0,   178,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   210,     0,     0,     0,   178,   178,     0, 
          0,   212,   212,   177,     0,   212,   212,   212,   212,   212, 
        212,   212,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   212,   212,   212,   212,   212,   212,     0,     0, 
          0,     0,   178,     0,     0,   209,   209,     0,     0,   209, 
        209,   209,   209,   209,     0,     0,   209,   209,   209,   209, 
        209,   209,   209,   209,   209,   209,   209,   212,   212,     0, 
          0,     0,   210,   210,   178,     0,   210,   210,   210,   210, 
        210,     0,     0,   210,   210,   210,   210,   210,   210,   210, 
        210,   210,   210,   210,     0,     0,     0,     0,   212,   212, 
          0,     0,     0,   207,   207,     0,     0,   207,   207,   207, 
        207,   207,   207,   207,     0,     0,     0,     0,     0,     0, 
        179,   208,     0,   179,   207,   207,   207,   207,   207,   207, 
          0,     0,     0,     0,     0,     0,     0,   179,   179,     0, 
        208,     0,     0,     0,   198,   198,     0,     0,   198,   198, 
        198,   198,   198,   198,   198,     0,     0,     0,   211,   207, 
        207,     0,     0,     0,     0,   198,   198,   198,   198,   198, 
        198,     0,   179,     0,     0,     0,     0,   211,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        207,   207,     0,   190,     0,     0,     0,     0,     0,     0, 
        198,   198,     0,     0,   179,     0,     0,     0,     0,   208, 
        208,     0,     0,   208,   208,   208,   208,   208,     0,   177, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,   208, 
        208,   198,   198,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   211,   211,     0,     0, 
        211,   211,   211,   211,   211,     0,     0,   211,   211,   211, 
        211,   211,   211,   211,   211,   211,   211,   211,   199,   199, 
          0,     0,   199,   199,   199,   199,   199,   199,   199,     0, 
        178,   183,   181,   191,   192,     0,   212,     0,     0,   199, 
        199,   199,   199,   199,   199,     0,     0,     0,     0,     0, 
          0,   177,   177,   177,     0,   212,     0,     0,     0,     0, 
          0,   200,   200,     0,     0,   200,   200,   200,   200,   200, 
        200,   200,     0,     0,   199,   199,     0,     0,     0,     0, 
          0,     0,   200,   200,   200,   200,   200,   200,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   199,   199,     0,     0,     0, 
          0,     0,   178,   178,   178,     0,   142,   200,   200,   142, 
          0,     0,     0,     0,   212,   212,     0,     0,   212,   212, 
        212,   212,   212,   142,   142,   212,   212,   212,   212,   212, 
        212,   212,   212,   212,   212,   212,     0,   207,   200,   200, 
          0,     0,   133,   133,     0,     0,   133,   133,     0,   133, 
        179,   133,   133,     0,     0,     0,     0,   180,   142,     0, 
        180,     0,     0,   133,   133,   133,   133,   133,   133,     0, 
          0,     0,     0,     0,   180,   180,     0,     0,   198,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        142,     0,     0,     0,     0,     0,     0,     0,   133,   133, 
          0,     0,     0,     0,     0,     0,   207,   207,     0,   180, 
        207,   207,   207,   207,   207,     0,     0,   207,   207,   207, 
        207,   207,   207,   207,   207,   207,   207,   207,     0,   133, 
        133,     0,   179,   179,   179,     0,     0,     0,     0,     0, 
          0,   180,     0,     0,     0,     0,     0,   198,   198,     0, 
          0,   198,   198,   198,   198,   198,     0,     0,   198,   198, 
        198,   198,   198,   198,   198,   198,   198,   198,   198,   161, 
        161,     0,     0,     0,   161,   161,     0,   161,   161,   161, 
          0,     0,   182,     0,     0,   182,   181,     0,     0,   181, 
          0,     0,   161,   161,   161,   161,     0,     0,     0,   182, 
        182,     0,   199,   181,   181,     0,   189,   177,     0,     0, 
          0,   187,   185,     0,   186,   184,   188,     0,     0,     0, 
          0,     0,     0,   161,     0,     0,   161,     0,     0,   180, 
        162,   182,   174,     0,   182,     0,     0,     0,   181,     0, 
          0,     0,     0,     0,     0,   200,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   161,   161,     0,     0,     0, 
          0,     0,     0,   176,     0,     0,   182,     0,     0,     0, 
        181,   199,   199,     0,     0,   199,   199,   199,   199,   199, 
          0,     0,   199,   199,   199,   199,   199,   199,   199,   199, 
        199,   199,   199,   175,     0,     0,   142,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   200,   200,     0,   133,   200,   200, 
        200,   200,   200,     0,     0,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   200,   133,     0,     0,     0, 
        189,   177,     0,     0,   214,   187,   185,   180,   186,   184, 
        188,     0,     0,     0,     0,   205,     0,     0,   205,     0, 
          0,     0,     0,   180,   162,   182,   174,     0,     0,     0, 
          0,     0,   205,   205,     0,   189,   177,     0,   142,   142, 
        187,   185,     0,   186,   184,   188,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   176,   180,   162, 
        182,   174,     0,     0,     0,   133,   133,   205,     0,   133, 
        133,   133,   133,   133,     0,     0,   133,   133,   133,   133, 
        133,   133,   133,   133,   133,   133,   133,   175,     0,   180, 
        180,   180,   176,     0,     0,   206,     0,     0,   206,   205, 
          0,     0,     0,     0,   161,     0,     0,     0,     0,     0, 
          0,     0,   206,   206,     0,     0,     0,     0,     0,     0, 
        189,   177,   175,     0,   161,   187,   185,     0,   186,   184, 
        188,     0,   182,     0,     0,     0,   181,     0,     0,   183, 
          0,   190,   183,   180,     0,   182,     0,   206,     0,     0, 
          0,     0,     0,    39,     0,     0,   183,   183,     0,     0, 
          0,     0,     0,     0,   189,   177,     0,     0,     0,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,   206, 
          0,     0,     0,     0,     0,     0,     0,   180,   162,   182, 
        174,   183,   161,   161,   161,   161,   161,   161,   161,   161, 
        161,     0,    12,   161,   161,     0,   161,   161,   161,   161, 
        161,   161,   161,   161,   182,   182,   182,     0,   181,   181, 
        181,   176,     0,   183,     0,     0,     0,     0,     0,   183, 
        181,   191,   192,   163,   164,   165,   166,   168,     0,     0, 
        178,   179,   201,   160,   161,   167,   172,   171,   173,   169, 
        170,   175,   315,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,     0,     0,     0,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,   190,     0,     0,     0,     0, 
          0,     0,     0,     0,   180,   162,   182,   174,     0,   189, 
        177,     0,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,   205,     0,     0,     0,     0, 
        190,   371,   180,   162,   182,   174,     0,     0,   176,     0, 
          0,    55,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,     0,     0,   189,   177,     0,     0,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,   176,     0,   175,   316, 
          0,     0,     0,     0,     0,   393,   180,   162,   182,   174, 
          0,    61,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,     0,     0,   178,   179,   175,   160,   161,   167, 
        172,   171,   173,   169,   170,   206,     0,   205,   205,   205, 
        176,     0,     0,     0,    62,   190,     0,     0,   183,   181, 
        191,   192,   163,   164,   165,   166,   168,    54,     0,   178, 
        179,   215,   160,   161,   167,   172,   171,   173,   169,   170, 
        175,     0,     0,     0,     0,     0,     0,     0,     0,   183, 
        184,     0,     0,   184,     0,     0,     0,     0,     0,   190, 
          0,     0,     0,     0,     0,     0,     0,   184,   184,     0, 
        189,   177,     0,     0,   403,   187,   185,     0,   186,   184, 
        188,     0,     0,     0,     0,     0,     0,   206,   206,   206, 
          0,     0,     0,   180,   162,   182,   174,     0,     0,     0, 
          0,     0,   184,   183,   181,   191,   192,     0,     0,     0, 
          0,     0,   189,   177,   178,   179,     0,   187,   185,     0, 
        186,   184,   188,     0,     0,     0,     0,   176,     0,     0, 
          0,   183,   183,   183,   184,   180,   162,   182,   174,     0, 
          0,     0,     0,     0,     0,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,   190,   175,   178,   179, 
          0,   160,   161,   167,   172,   171,   173,   169,   170,   176, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,   177,     0,   190,   406,   187,   185,     0,   186, 
        184,   188,     0,     0,     0,     0,     0,     0,     0,   175, 
          0,     0,     0,     0,   180,   162,   182,   174,     0,   189, 
        177,     0,     0,   407,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,     0,     0,     0,   190,     0, 
          0,     0,   180,   162,   182,   174,     0,     0,   176,     0, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,   176,     0,   175,     0, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,     0,   160,   161,   167,   172, 
        171,   173,   169,   170,     0,     0,   175,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   146,     0, 
          0,   146,     0,     0,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   146,   146,   178,   179,     0, 
        160,   161,   167,   172,   171,   173,   169,   170,   189,   177, 
        184,     0,   422,   187,   185,   190,   186,   184,   188,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        146,   180,   162,   182,   174,     0,     0,     0,     0,     0, 
          0,     0,     0,   189,   177,     0,     0,     0,   187,   185, 
          0,   186,   184,   188,     0,     0,     0,   190,     0,     0, 
          0,     0,   146,     0,   449,   176,   180,   162,   182,   174, 
          0,     0,     0,     0,     0,     0,   405,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   184,   184,   184,   175,     0,     0,     0,     0, 
        176,     0,     0,   183,   181,   191,   192,   163,   164,   165, 
        166,   168,     0,     0,   178,   179,     0,   160,   161,   167, 
        172,   171,   173,   169,   170,   185,   190,     0,   185,     0, 
        175,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   185,   185,     0,   183,   181,   191,   192,   163, 
        164,   165,   166,   168,   190,   186,   178,   179,   186,   160, 
        161,   167,   172,   171,   173,   169,   170,     0,     0,     0, 
          0,     0,   186,   186,     0,     0,     0,   185,     0,   189, 
        177,     0,     0,     0,   187,   185,     0,   186,   184,   188, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   180,   162,   182,   174,     0,   186,     0,   185, 
          0,     0,     0,     0,   183,   181,   191,   192,   163,   164, 
        165,   166,   168,     0,     0,   178,   179,     0,   160,   161, 
        167,   172,   171,   173,   169,   170,   176,     0,     0,   186, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,     0,     0,   178,   179,     0,   160,   161,   167,   172, 
        171,   173,   169,   170,   189,   177,   175,     0,   146,   187, 
        185,     0,   186,   184,   188,     0,     0,     0,     0,     0, 
          0,   187,     0,   190,   187,     0,     0,   180,   162,   182, 
        174,     0,     0,     0,     0,     0,     0,     0,   187,   187, 
          0,     0,     0,     0,     0,     0,     0,   196,     0,     0, 
        196,     0,   196,   196,   196,   196,     0,     0,   190,     0, 
          0,   176,     0,     0,     0,     0,     0,   196,   196,   196, 
        196,   196,   196,   187,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        146,   175,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   196,   196,     0,   187,     0,     0,     0,     0, 
          0,   183,   181,   191,   192,   163,   164,   165,   166,   168, 
          0,     0,   178,   179,     0,   160,   161,   167,   172,   171, 
        173,   169,   170,   196,   196,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   183,   181,   191,   192, 
        163,   164,   165,   166,   168,   185,     0,   178,   179,     0, 
        160,   161,   167,   172,   171,   173,   169,   170,   197,     0, 
          0,   197,     0,   197,   197,   197,   197,     0,     0,     0, 
        147,     0,     0,   147,     0,   186,     0,     0,   197,   197, 
        197,   197,   197,   197,   190,     0,     0,   147,   147,     0, 
          0,     0,     0,     0,     0,   201,     0,     0,   201,     0, 
          0,   201,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   197,   197,   201,   201,   201,   201,   201, 
        201,     0,   147,     0,     0,     0,     0,   185,   185,   185, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   197,   197,     0,     0,     0,     0, 
        201,   201,     0,     0,   147,     0,     0,   186,   186,   186, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   190, 
          0,     0,   183,   181,   191,   192,   163,   164,   165,   166, 
        168,   201,   201,   178,   179,     0,   160,   161,   167,   172, 
        171,   173,   169,   170,   188,     0,     0,   188,     0,     0, 
        188,   187,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   188,   188,     0,   188,     0,   188, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        196,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   188, 
        188,     0,     0,     0,     0,     0,     0,   183,   181,   191, 
        192,   163,   164,   165,   166,   168,     0,     0,   178,   179, 
          0,     0,     0,   167,   172,   171,   173,   169,   170,     0, 
        188,   188,     0,   187,   187,   187,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   196, 
        196,     0,     0,   196,   196,   196,   196,   196,     0,     0, 
        196,   196,   196,   196,   196,   196,   196,   196,   196,   196, 
        196,   190,     0,     0,   190,     0,     0,   190,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   190,   190,     0,   190,   194,   190,     0,   194,     0, 
          0,   197,     0,     0,     0,     0,     0,     0,   189,     0, 
        147,   189,   194,   194,   189,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   190,   190,   189,   189, 
          0,   189,     0,   189,     0,     0,     0,     0,   201,     0, 
          0,     0,     0,     0,   189,   177,     0,   194,     0,   187, 
        185,     0,   186,   184,   188,     0,     0,   190,   190,     0, 
          0,     0,     0,   189,   189,     0,     0,   180,     0,   182, 
        197,   197,     0,     0,   197,   197,   197,   197,   197,   194, 
          0,   197,   197,   197,   197,   197,   197,   197,   197,   197, 
        197,   197,   147,     0,   189,   189,     0,     0,     0,     0, 
          0,   176,     0,     0,     0,     0,     0,   201,   201,     0, 
          0,   201,   201,   201,   201,   201,     0,     0,   201,   201, 
        201,   201,   201,   201,   201,   201,   201,   201,   201,   191, 
          0,   175,   191,     0,     0,   191,     0,   188,     0,     0, 
          0,     0,     0,     0,   195,     0,     0,   195,     0,   191, 
        191,     0,   191,   203,   191,     0,   203,     0,     0,   203, 
          0,   195,   195,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   203,   203,     0,   203,     0,   203,     0, 
        192,     0,     0,   192,   191,   191,   192,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   195,     0,     0,     0, 
        192,   192,     0,   192,     0,   192,     0,     0,   203,   203, 
        188,   188,   188,   188,   188,   191,   191,   188,   188,   188, 
        188,   188,   188,   188,   188,   188,   188,   188,   195,     0, 
          0,   193,     0,     0,   193,   192,   192,   193,     0,   203, 
        203,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   193,   193,     0,   193,     0,   193,     0,     0,     0, 
          0,     0,     0,     0,   190,     0,   192,   192,     0,     0, 
          0,     0,     0,     0,   204,     0,     0,   204,     0,     0, 
          0,     0,     0,     0,     0,   194,   193,   193,     0,     0, 
          0,   204,   204,     0,   204,     0,   204,     0,     0,     0, 
          0,   189,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   202,     0,     0,   202,     0,   193,   193,   190, 
          0,     0,     0,     0,     0,     0,   204,   204,     0,   202, 
        202,     0,   202,     0,   202,     0,     0,   190,   190,   190, 
        190,   190,     0,     0,   190,   190,   190,   190,   190,   190, 
        190,   190,   190,   190,   190,     0,     0,   204,   204,     0, 
          0,     0,     0,     0,   202,     0,     0,   194,   194,   194, 
          0,     0,     0,     0,   189,   189,   189,   189,   189,     0, 
          0,   189,   189,   189,   189,   189,   189,   189,   189,   189, 
        189,   189,     0,     0,     0,   202,   202,     0,     0,     0, 
          0,     0,     0,   135,     0,     0,   135,   183,   181,   191, 
        192,     0,     0,     0,     0,     0,     0,     0,   178,   179, 
        135,   135,   191,   135,     0,   135,     0,     0,     0,     0, 
        141,     0,     0,   141,   195,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   203,   141,   141,     0, 
        141,     0,   141,     0,     0,   135,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   192,     0,     0,     0,     0,     0,     0, 
          0,     0,   141,     0,     0,     0,     0,   135,     0,     0, 
          0,     0,     0,     0,     0,   191,   191,   191,   191,   191, 
          0,     0,   191,   191,   191,   191,   191,   191,   191,   191, 
        191,   191,   191,     0,   141,     0,   195,   195,   195,   203, 
        203,   203,   203,   203,   193,     0,     0,     0,   203,   203, 
        203,   203,   203,   203,   203,   203,   203,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   192,   192,   192,   192, 
        192,     0,     0,     0,     0,   192,   192,   192,   192,   192, 
        192,   192,   192,   192,   204,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   193,   193,   193, 
        193,   193,   202,     0,     0,     0,   193,   193,   193,   193, 
        193,   193,   193,   193,   193,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   204,   204,   204, 
        204,   204,     0,     0,     0,     0,   204,   204,   204,   204, 
        204,   204,   204,   204,   204,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   202,   202,   202,   202,   202, 
          0,     0,     0,     0,   202,   202,   202,   202,   202,   202, 
        202,   202,   202,   135,     0,   108,     0,     0,     0,     0, 
          0,     0,   108,     0,     0,   108,     0,   108,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        141,   108,     0,     0,     0,     0,   108,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   108,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   135,   135,   135,   135, 
        135,     0,     0,     0,     0,   135,   135,   135,   135,   135, 
        135,   135,   135,   135,     0,   108,     0,   108,   108,     0, 
          0,     0,     0,   141,   141,   141,   141,   141,     0,     0, 
          0,     0,   141,   141,   141,   141,   141,   141,   141,   141, 
        141,   104,     0,     0,     0,     0,     0,     0,   104,     0, 
          0,   104,     0,   104,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   104,     0,     0, 
          0,     0,   104,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   109,     0,     0,     0,     0, 
          0,     0,   105,     0,     0,   107,     0,   108,     0,     0, 
        104,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   345,     0,     0,     0,     0,   115,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   104,     0,   104,   104,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    39,     0,     0,     0,     0,     0, 
          0,     0,   108,   108,   108,   108,   108,   108,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   346,     0,     0,   110,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   108,     0,     0,   109,     0, 
          0,     0,     0,     0,     0,   105,     0,   109,   107,     0, 
        108,     0,     0,     0,   105,   108,   108,   107,     0,   108, 
          0,     0,   108,   108,   108,   108,   238,     0,   108,   115, 
          0,     0,   129,     0,     0,     0,     0,     0,   115,     0, 
          0,     0,   108,   108,   108,   108,     0,   108,   108,   108, 
          0,     0,   108,   108,   108,   108,   108,    39,   104,   104, 
        104,   104,   104,   104,     0,     0,    39,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   108,   108,     0,     0,     0,     0, 
          0,   110,     0,     0,     0,     0,     0,     0,     0,     0, 
        110,     0,   116,    56,    57,    58,    59,    60,     0,     0, 
          0,   104,     0,     0,     0,     0,     0,     0,   109,     0, 
          0,     0,     0,     0,     0,   105,     0,     0,   107,     0, 
        108,   104,   104,     0,     0,     0,     0,     0,   104,   104, 
        104,   104,     0,     0,   104,     0,   240,     0,     0,   115, 
          0,     0,     0,     0,     0,   114,     0,     0,   104,   104, 
        104,   104,     0,   104,   104,   104,     0,     0,   104,     0, 
        104,   104,   104,     0,     0,    62,   117,    39,     0,     0, 
          0,     0,   118,   334,   335,   336,     0,     0,   113,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        104,   104,   337,   338,   339,   340,     0,   341,   342,   106, 
          0,   110,   343,     0,   344,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   116,    56,    57,    58,    59, 
         60,     0,     0,     0,   116,    56,    57,    58,    59,    60, 
          0,   109,     0,     0,   111,   112,     0,     0,   105,     0, 
          0,   107,     0,   108,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   109,     0,     0,     0,     0,     0,   250, 
        105,     0,   115,   107,     0,   108,     0,     0,   114,     0, 
          0,     0,     0,     0,     0,   109,     0,   114,     0,     0, 
          0,   252,   105,     0,   115,   107,     0,   108,    62,   117, 
         39,     0,     0,     0,     0,   118,     0,    62,   117,     0, 
          0,   113,     0,     0,   118,     0,   115,     0,     0,     0, 
        113,     0,    39,     0,     0,     0,     0,     0,   109,     0, 
          0,     0,   106,     0,   110,   105,     0,     0,   107,     0, 
        108,   106,     0,     0,    39,   116,    56,    57,    58,    59, 
         60,     0,     0,     0,     0,     0,   110,     0,     0,   115, 
          0,     0,     0,     0,     0,     0,     0,   111,   112,     0, 
          0,     0,     0,     0,     0,     0,   111,   112,   110,     0, 
          0,     0,     0,     0,     0,     0,     0,    39,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   114,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    62,   117, 
          0,   110,     0,     0,     0,   118,     0,     0,     0,     0, 
          0,   113,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   106,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   116,    56, 
         57,    58,    59,    60,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   111,   112,     0, 
        116,    56,    57,    58,    59,    60,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   116,    56,    57,    58,    59,    60,     0,     0, 
          0,   114,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    62,   117,   114,     0,     0,     0,     0,   118,     0, 
          0,     0,     0,     0,   113,   143,    56,    57,    58,    59, 
         60,     0,     0,    62,   117,   114,     0,     0,     0,     0, 
        118,     0,     0,     0,     0,   106,   113,     0,     0,     0, 
          0,     0,     0,     0,     0,    62,   117,     0,     0,     0, 
          0,     0,   118,     0,     0,     0,     0,   106,   113,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   114,     0, 
        111,   112,     0,     0,     0,     0,     0,     0,     0,   106, 
          0,     0,     0,     0,     0,     0,     0,     0,   144,   117, 
          0,     0,   111,   112,     0,   118,     0,     0,     0,     0, 
          0,   113,     0,     0,     0,   120,     0,     0,     0,   130, 
          0,     0,     0,     0,   111,   112,     0,     0,     0,     0, 
          0,     0,   106,   145,   146,   147,   148,   149,   150,   151, 
        152,     0,   154,   155,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   111,   112,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   229,   230, 
        231,   232,   233,   234,   235,   236,   237,   239,   241,   242, 
        243,   244,   245,   247,   248,   249,   251,   253,   254,   255, 
        256,   257,   258,   259,   260,   261,   262,   263,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   245,   273, 
          0,   274,     0,     0,     0,     0,   281,     0,     0,     0, 
        282,   283,     0,   285,     0,     0,     0,     0,     0,     0, 
        120,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   294,     0,   295,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   297,     0, 
        298,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   245,     0,     0,   301,   302,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   120,   120,     0,     0,     0,     0, 
          0,     0,     0,     0,   312,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   120,     0, 
          0,     0,   120,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   245,     0,   380, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   120, 
        395,     0,   397,     0,     0,   398,   399,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        120,     0,   414,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   120, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   445, 
    );
    protected static $yyCheck = array(33,
         41,    92,    36,    37,   125,    36,    37,    92,    41,    91, 
          6,    44,   158,    47,    41,   153,    50,    44,    52,    50, 
         54,    52,   125,    54,    92,   312,    92,    92,    37,   200, 
         35,    58,    59,    42,   123,    59,    70,    35,    47,    70, 
         47,   123,    76,    77,   260,   260,    59,    35,   300,   301, 
        260,    85,    37,    38,    85,    40,    41,    42,    43,    44, 
         45,    46,    47,    44,    41,   334,    93,    92,   214,    76, 
         77,   340,     5,    58,    59,    60,    61,    62,    63,    37, 
         38,   320,    59,    41,    42,    43,    44,    45,    46,    47, 
        300,   334,    25,    41,   321,   266,    44,   340,   125,   123, 
         58,    59,    60,    61,    62,    63,    39,   123,    93,    94, 
        123,    59,    93,    35,   317,   402,   403,   300,   301,   153, 
        125,    37,    38,   260,   340,   340,    42,    43,   331,    45, 
         46,    47,    92,    91,    44,    93,    94,   125,   123,   124, 
        125,    40,    41,    44,    60,   141,    62,   293,    44,    59, 
         59,   334,    41,   222,    59,    44,   190,   340,    59,   190, 
        306,    41,    91,    59,    44,   123,   124,   125,    93,   260, 
        261,   262,   263,   264,   265,   260,    37,    38,    94,    59, 
         41,    42,    43,    44,    45,    46,    47,    41,   359,    64, 
         44,    70,   260,    41,   260,   260,    44,    58,    59,    60, 
         61,    62,    63,    37,    38,    59,    85,    41,    42,    43, 
         44,    45,    46,    47,    40,    41,   354,   286,   287,    44, 
         41,    40,   311,    44,    58,    59,    60,    61,    62,    63, 
         91,    41,    93,    94,    44,   260,    41,   402,   403,    44, 
        310,   310,   333,   310,   260,   314,   373,   374,    41,   311, 
        332,    44,   373,   374,    35,   346,   123,    91,    61,    93, 
         94,    61,   123,   124,   125,    58,    59,   333,   333,   303, 
        373,   374,   340,    40,   340,   280,   281,   282,   283,   284, 
        285,   410,   280,   281,   282,   283,   284,   285,    41,   123, 
        124,   125,   280,   281,   282,   283,   284,   285,   332,    41, 
         93,    37,    44,   312,   331,    44,    42,    43,   333,    45, 
         46,    47,   381,    37,    38,   340,    58,    59,    42,    43, 
        354,    45,    46,    47,   340,   310,   311,   312,   300,   301, 
        335,    41,   125,   402,   123,    44,    60,    61,    62,    63, 
        280,   281,   282,   283,   284,   285,   331,   335,    40,    35, 
         40,    93,   421,   260,   312,   340,    76,    77,   280,   281, 
        282,   283,   284,   285,    40,   410,    41,    44,    41,   410, 
         94,   340,    44,   331,   332,   260,    61,   410,   300,   301, 
         61,    37,    38,   125,   340,    41,    42,    43,    44,    45, 
         46,    47,    40,   402,   403,    40,   312,    40,   432,   321, 
        124,   432,    58,    59,    60,    61,    62,    63,   260,   261, 
        262,   263,   264,   265,    41,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    44,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    94,    58, 
        300,   301,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,   410,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    40,   321,    41,    37,   124,   125, 
        331,   332,    42,    43,   334,    45,    46,    47,   312,    40, 
        340,    93,    41,    41,   400,   401,   402,   403,    40,   123, 
         60,    41,    62,   340,    41,   411,   412,   331,   332,   280, 
        281,   282,   283,   284,   285,    37,    38,    44,    41,    41, 
         42,    43,    44,    45,    46,    47,    58,   123,   125,   300, 
        301,    40,    40,    40,    59,    59,    58,    59,    60,    61, 
         62,    63,    40,    40,   125,    59,   125,   361,   331,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   125,    59, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,    94,    40,   344,   340,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   123,   312,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   312,   331, 
         59,   413,   124,   125,   280,   281,   282,   283,   284,   285, 
         41,   371,    37,    38,    40,    59,    41,    42,    43,    44, 
         45,    46,    47,   340,   300,   301,   125,    41,    58,   340, 
        413,   414,   415,    58,    59,    60,    61,    62,    63,    37, 
         38,   346,    41,    41,    42,    43,    44,    45,    46,    47, 
        123,   125,    93,   123,   123,    41,    41,   123,    41,    41, 
         58,    59,    60,    61,    62,    63,   312,    41,    93,    94, 
        364,   376,   340,    41,   379,    41,   402,   403,    58,    41, 
         93,   413,   414,   415,   123,   331,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    93,    94,   411,   412,   124, 
        125,   415,   416,   417,   418,   419,   420,   421,    41,   403, 
        125,    41,   406,    59,    44,    59,    41,   125,   125,     7, 
         84,   141,   205,   204,    42,    41,   124,   125,    58,    59, 
        424,    82,   332,   431,   350,    91,   325,   411,   290,   203, 
        198,   446,    23,   437,   449,    -1,    -1,    -1,   453,   443, 
         -1,    -1,   312,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    93,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    58,    59,    60,    61,    62,    63, 
        400,   401,   402,   403,    -1,    -1,    -1,    -1,    37,    -1, 
         -1,   411,   412,    42,    43,    -1,    45,    46,    47,    41, 
         -1,    -1,    44,   124,   125,    -1,    -1,    -1,    -1,    93, 
         94,    60,    -1,    62,    -1,    -1,    58,    59,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,   125,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    58,    59,    -1, 
         -1,    37,    38,   125,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    93,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    94,    -1, 
         -1,    -1,   400,   401,   125,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         41,   312,    -1,    44,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
        331,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,   312,    93, 
         94,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    93,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   125,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   331, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
        331,   400,   401,   402,   403,    -1,   312,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,    41,    93,    94,    44, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    58,    59,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,   331,   124,   125, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    -1,    44, 
        331,    46,    47,    -1,    -1,    -1,    -1,    41,    93,    -1, 
         44,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    93, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   124, 
        125,    -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    41,    -1,    -1,    44,    41,    -1,    -1,    44, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    58, 
         59,    -1,   331,    58,    59,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,    94,    -1,    -1,    60, 
         61,    62,    63,    -1,    93,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   123,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    94,    -1,    -1,   125,    -1,    -1,    -1, 
        125,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   124,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,   312,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,   331,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,   331,    45,    46, 
         47,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    37,    38,    -1,   413,   414, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    60,    61, 
         62,    63,    -1,    -1,    -1,   400,   401,    93,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   124,    -1,   413, 
        414,   415,    94,    -1,    -1,    41,    -1,    -1,    44,   125, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,   124,    -1,   332,    42,    43,    -1,    45,    46, 
         47,    -1,   331,    -1,    -1,    -1,   331,    -1,    -1,    41, 
         -1,   312,    44,    60,    -1,    62,    -1,    93,    -1,    -1, 
         -1,    -1,    -1,    92,    -1,    -1,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    93,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   410,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   413,   414,   415,    -1,   413,   414, 
        415,    94,    -1,   125,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
        312,    59,    60,    61,    62,    63,    -1,    -1,    94,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    94,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    59,    60,    61,    62,    63, 
         -1,   300,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   124,   414,   415,   416, 
        417,   418,   419,   420,   421,   331,    -1,   413,   414,   415, 
         94,    -1,    -1,    -1,   333,   312,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   346,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    93,   400,   401,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    37,    38,   411,   412,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
         -1,   413,   414,   415,   125,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,   124,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    37,    38,    -1,   312,    41,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    94,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    94,    -1,   124,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    58,    59,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    37,    38, 
        331,    -1,    41,    42,    43,   312,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,   125,    -1,    58,    94,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   413,   414,   415,   124,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    41,   312,    -1,    44,    -1, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    41,   411,   412,    44,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    93,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    93,    -1,   125, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    94,    -1,    -1,   125, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    37,    38,   124,    -1,   331,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,   312,    44,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    43,    44,    45,    46,    -1,    -1,   312,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   331,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    38,    -1, 
         -1,    41,    -1,    43,    44,    45,    46,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,   331,    -1,    -1,    58,    59, 
         60,    61,    62,    63,   312,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    60,    61,    62, 
         63,    -1,    93,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   125,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   124,   125,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    38,    -1,    -1,    41,    -1,    -1, 
         44,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,    -1,    -1,   416,   417,   418,   419,   420,   421,    -1, 
        124,   125,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    41,    63,    -1,    44,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
        331,    41,    58,    59,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    93,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    60,    -1,    62, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,   125, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   413,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    38, 
         -1,   124,    41,    -1,    -1,    44,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    58, 
         59,    -1,    61,    38,    63,    -1,    41,    -1,    -1,    44, 
         -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         38,    -1,    -1,    41,    93,    94,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    93,    94, 
        404,   405,   406,   407,   408,   124,   125,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   125,    -1, 
         -1,    38,    -1,    -1,    41,    93,    94,    44,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    93,    94,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    41,    -1,    -1,    44,    -1,   124,   125,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,   413,   414,   415, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    41,    -1,    -1,    44,   400,   401,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   411,   412, 
         58,    59,   331,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         41,    -1,    -1,    44,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    93,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,   125,    -1,   413,   414,   415,   404, 
        405,   406,   407,   408,   331,    -1,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,   331,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   331,    -1,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    59,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   123,    -1,   125,   126,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    -1,    -1, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    59,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   123,    -1,   125,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    33,    -1, 
         -1,    -1,    -1,    -1,    -1,    40,    -1,    33,    43,    -1, 
         45,    -1,    -1,    -1,    40,   333,   334,    43,    -1,    45, 
         -1,    -1,   340,   341,   342,   343,    61,    -1,   346,    64, 
         -1,    -1,    58,    -1,    -1,    -1,    -1,    -1,    64,    -1, 
         -1,    -1,   360,   361,   362,   363,    -1,   365,   366,   367, 
         -1,    -1,   370,   371,   372,   373,   374,    92,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    92,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341, 
        342,   343,    -1,    -1,   346,    -1,    61,    -1,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,   360,   361, 
        362,   363,    -1,   365,   366,   367,    -1,    -1,   370,    -1, 
        372,   373,   374,    -1,    -1,   333,   334,    92,    -1,    -1, 
         -1,    -1,   340,   341,   342,   343,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,   360,   361,   362,   363,    -1,   365,   366,   367, 
         -1,   126,   370,    -1,   372,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    33,    -1,    -1,   402,   403,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    61, 
         40,    -1,    64,    43,    -1,    45,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,   313,    -1,    -1, 
         -1,    61,    40,    -1,    64,    43,    -1,    45,   333,   334, 
         92,    -1,    -1,    -1,    -1,   340,    -1,   333,   334,    -1, 
         -1,   346,    -1,    -1,   340,    -1,    64,    -1,    -1,    -1, 
        346,    -1,    92,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         -1,    -1,   367,    -1,   126,    40,    -1,    -1,    43,    -1, 
         45,   367,    -1,    -1,    92,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,   126,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   333,   334,   313,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,   260,   261,   262,   263,   264, 
        265,    -1,    -1,   333,   334,   313,    -1,    -1,    -1,    -1, 
        340,    -1,    -1,    -1,    -1,   367,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,   367,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,    -1,   402,   403,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    87,    -1,    -1,    -1,    91, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,   105,   106,   107,   108,   109,   110,   111, 
        112,    -1,   114,   115,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   160,   161, 
        162,   163,   164,   165,   166,   167,   168,   169,   170,   171, 
        172,   173,   174,   175,   176,   177,   178,   179,   180,   181, 
        182,   183,   184,   185,   186,   187,   188,   189,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   200,   201, 
         -1,   203,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1, 
        212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1, 
        222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   238,    -1,   240,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   250,    -1, 
        252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,   287,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   296,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   310,    -1, 
         -1,    -1,   314,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,   361, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   381, 
        382,    -1,   384,    -1,    -1,   387,   388,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,    -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   438, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 57:  #line 387 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 58:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 59:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 60:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 61:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 62:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 63:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 66:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 67:  #line 416 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 68:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 69:  #line 420 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 71:  #line 423 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 73:  #line 428 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 74:  #line 438 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 75:  #line 438 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 77:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 79:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 80:  #line 451 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 81:  #line 451 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 82:  #line 455 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 83:  #line 455 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 86:  #line 461 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 88:  #line 462 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 89:  #line 462 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 91:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 92:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 93:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 97:  #line 481 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 98:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 99:  #line 485 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 100:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 101:  #line 489 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 102:  #line 495 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 103:  #line 496 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 104:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 105:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 106:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 109:  #line 511 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 110:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 111:  #line 515 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 112:  #line 525 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 114:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 115:  #line 531 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 116:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 118:  #line 540 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 553 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 123:  #line 565 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 124:  #line 571 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 125:  #line 571 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 126:  #line 577 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 127:  #line 577 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 128:  #line 581 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 581 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 130:  #line 591 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 131:  #line 591 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 132:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 133:  #line 603 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 134:  #line 606 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 135:  #line 609 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 136:  #line 612 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 137:  #line 615 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 138:  #line 618 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 621 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 624 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 141:  #line 628 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 142:  #line 634 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 143:  #line 640 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 144:  #line 646 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 145:  #line 651 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 146:  #line 656 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 147:  #line 659 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 148:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 149:  #line 665 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 150:  #line 668 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 151:  #line 679 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 153:  #line 684 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 154:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 155:  #line 689 "src/main/jay/grammars/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 156:  #line 693 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 157:  #line 694 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 159:  #line 699 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 160:  #line 699 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 161:  #line 703 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 162:  #line 709 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 710 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 711 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 712 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 166:  #line 713 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 167:  #line 717 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 168:  #line 720 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 169:  #line 723 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 170:  #line 726 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 171:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 172:  #line 733 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 173:  #line 737 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 175:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 176:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 748 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 183:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 187:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 188:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 195:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 196:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 202:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 209:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 795 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 214:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 215:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 217:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 218:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 219:  #line 811 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 220:  #line 811 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 814 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 222:  #line 814 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 223:  #line 817 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 224:  #line 820 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 225:  #line 823 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 226:  #line 826 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 227:  #line 826 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 230:  #line 839 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 231:  #line 843 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 232:  #line 847 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 233:  #line 848 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 234:  #line 854 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 235:  #line 855 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 236:  #line 859 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 237:  #line 860 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 238:  #line 864 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 239:  #line 865 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 240:  #line 866 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 241:  #line 867 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 242:  #line 868 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 243:  #line 869 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2483 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
