<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    40,    40,    43,    43,    47,    45, 
         48,    45,    50,    45,    51,    45,    53,    45,    54,    45, 
         55,    45,    57,    45,    59,    45,    60,    45,    61,    45, 
         45,    45,    52,    52,    56,    56,    62,    62,    64,    63, 
         65,    63,    44,    44,    49,    66,    49,    58,    67,    67, 
         69,    68,    39,    39,    70,    70,    46,    46,    71,    71, 
         72,    72,    72,    72,    26,    74,    26,    75,    26,    76, 
         26,    77,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    83,    83,    85,    85,    86,    84,    84,    38, 
         88,    38,    89,    38,    25,    25,    25,    25,    25,    25, 
         87,    87,    87,    87,    90,    90,    92,    92,    91,    78, 
         78,    78,    78,    78,    78,    78,    78,    78,    78,    78, 
         78,    79,    79,    79,    79,    79,    79,    79,    79,    80, 
         80,    80,    80,    80,    80,    80,    80,    80,    80,    80, 
         81,    81,    81,    81,    81,    81,    82,    82,    73,    73, 
         93,    93,    95,    94,    96,    94,    94,    94,    94,    97, 
         94,    98,    94,    31,    31,    10,    99,    17,    17,    33, 
         33,   100,   100,   101,   101,   101,   101,   101,   101, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     2,     0,     1,     1,     2,     0,     4, 
          0,     7,     0,    10,     0,     8,     0,     6,     0,     8, 
          0,     8,     0,     6,     0,     3,     0,     3,     0,     4, 
          2,     1,     1,     3,     0,     1,     1,     2,     0,     5, 
          0,     4,     1,     3,     0,     0,     3,     1,     1,     2, 
          0,     9,     0,     1,     1,     3,     0,     1,     4,     4, 
          1,     4,     1,     1,     2,     0,     3,     0,     3,     0, 
          5,     0,     6,     2,     1,     2,     4,     1,     1,     1, 
          1,     1,     5,     3,     3,     3,     3,     4,     4,     2, 
          8,     4,     0,     1,     1,     3,     2,     0,     4,     1, 
          0,     4,     0,     5,     1,     1,     1,     1,     1,     1, 
          0,     1,     1,     1,     1,     3,     0,     1,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     3,     3,     3,     3,     3,     4,     4,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          2,     2,     2,     2,     2,     2,     2,     2,     0,     1, 
          1,     2,     0,     4,     0,     4,     2,     2,     4,     0, 
          6,     0,     4,     1,     1,     1,     1,     1,     3,     0, 
          1,     1,     2,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   244,   246,   245,   247,   249,   248,     0,     1,     0, 
         42,   241,     0,     8,     0,     4,     9,     0,    14,    16, 
        243,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   236,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,   161,     0,     0,   170,   166,   169,   167, 
        168,     0,     0,     0,   160,     0,     0,     0,    52,    19, 
          0,     0,     0,    23,    25,     0,     0,     0,     0,   163, 
          0,    46,    47,     0,    21,    25,     0,     0,     0,     0, 
        172,     0,     0,     0,     0,     0,     0,   128,     0,     0, 
          0,     0,   126,     0,     0,     0,     0,   138,   139,   140, 
        141,   142,     0,     0,   175,     0,     0,    50,    51,     0, 
         54,    56,    55,     0,    49,     0,   239,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   134,   150,   132,     0,     0, 
        130,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   217,   218,   232,   223,     0,   225,   125, 
        220,     0,     0,   162,     0,     0,     0,     0,     0,    15, 
          0,    27,     0,     0,     0,     0,    29,     0,     0,     0, 
          0,   237,     0,   234,     0,   129,   235,     0,     0,     0, 
          0,   155,   127,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        147,   146,     0,     0,     0,   228,     0,     0,   222,   116, 
          0,   178,   176,    53,   164,     0,     0,    31,     0,     0, 
         33,     0,    30,     0,     0,   152,     0,     0,     0,     0, 
        157,     0,     0,     0,   124,   121,     0,     0,     0,     0, 
          0,     0,     0,     0,   230,     0,     0,   165,    34,    32, 
         37,     0,     0,     0,     0,     0,     0,   156,     0,   131, 
          0,   233,   224,     0,   229,   226,     0,   120,   119,   133, 
          0,     0,     0,     0,     0,     0,     0,    60,     0,     0, 
         69,     0,    89,    73,    77,    79,    75,    85,    87,    71, 
         81,    92,     0,     0,     0,    66,     0,   103,   122,   231, 
         64,     0,     0,     0,   159,     0,    83,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    91,   151,    68, 
          0,     0,    63,    62,     0,     0,     0,     0,     0,     0, 
          0,    86,    88,     0,     0,   104,    40,    57,     0,    38, 
         70,     0,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    58,   111,    84, 
        108,     0,     0,    78,     0,     0,     0,     0,     0,     0, 
        110,     0,     0,     0,     0,   106,    72,    99,   101,     0, 
         96,     0,     0,     0,    80,    94,    76,     0,     0,     0, 
         82,    98,     0,     0,   107,     0,     0,     0,    74,     0, 
        102,     0,   100,     0,     0,   112, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   104,   130,   214, 
         36,    51,    72,    88,    37,    53,    74,   131,   132,   202, 
        133,   134,   203,   281,    65,   354,   336,   327,   382,   400, 
        337,    34,    21,    35,    66,    67,    68,   106,   197,   355, 
        338,   339,   356,   357,   358,   242,   366,   375,   437,   369, 
        372,   427,   370,   371,   376,   440,   386,   420,   373,   374, 
        368,   441,   442,   449,   450,   448,   421,   422,   430,   198, 
        216,   297,   190,   150,   145,   224,   218,   108,   109,   110, 
        111,   112,   220,   317,   221,   222,   113,    76,   120,   114, 
        115,   273,   191,   192,   264,   268,   324,   263,   217,    22, 
         23, 
    );
    protected static $yySindex = array(         -285,
          0,     0,  -277,  -212,  -212,    75,  -277,     0,   -14,    -7, 
         -2,     0,     0,     0,     0,     0,     0,    -1,     0,   -75, 
          0,     0,   239,     0,  -212,     0,     0,    80,     0,     0, 
          0,     0,   -80,    44,   105,   -80,   -80,     0,  -212,   148, 
        239,    80,     0,  -120,  -115,     0,  1082,     0,     0,   -80, 
       -119,   -80,    76,     0,   -80,   181,     0,     0,     0,     0, 
          0,   230,   257,  -102,     0,   289,   294,   296,     0,     0, 
        -80,   222,   310,     0,     0,  3890,   321,   729,   729,     0, 
       -171,     0,     0,  -127,     0,     0,   -80,   175,  4280,  4288, 
          0,  4288,  4288,  4288,  4288,  4288,  4288,     0,  4288,  4288, 
        327,   329,     0,   -37,  1316,    36,   333,     0,     0,     0, 
          0,     0,   293,   347,     0,  4288,     0,     0,     0,  3890, 
          0,     0,     0,   181,     0,   219,     0,   132,     0,  -166, 
          0,     0,     0,   192,   194,   262,  1360,  1399,   -98,   -98, 
       -284,   -98,   -98,   -98,   -17,     0,     0,     0,    55,    36, 
          0,  4288,  4288,  4288,  4288,  4288,  4288,  4288,  4288,  4288, 
       3153,  4171,  4288,  4288,  4288,  4288,  4288,  4288,  4288,  4288, 
       4258,  4266,  4288,  4288,  4288,  4288,  4288,  4288,  4288,  4288, 
       4288,  4288,   -77,     0,     0,     0,     0,  -103,     0,     0, 
          0,    36,  4288,     0,  4288,  2447,   364,   333,   366,     0, 
        350,     0,   234,   152,   352,    75,     0,  4288,  4288,    36, 
       4288,     0,   375,     0,   378,     0,     0,  4288,   352,   379, 
        377,     0,     0,  -159,  2474,  2501,  2501,  2501,  2501,  2501, 
       2501,  2501,  2501,  4288,  2501,  4288,  2501,  2501,  2501,  2501, 
       2447,   361,  2447,  3303,   -13,  2584,  4288,    51,  4288,    51, 
         -6,    -6,    -6,    -6,    -6,    14,    14,  -284,  -284,  -284, 
          0,     0,  4288,  4288,   391,     0,  4288,  4288,     0,     0, 
       1316,     0,     0,     0,     0,   280,   132,     0,   404,  4288, 
          0,   109,     0,  2447,  2447,     0,  3266,  4288,  4288,   409, 
          0,   124,    55,   421,     0,     0,    36,  2501,  2501,  4288, 
       2501,  2501,   443,   392,     0,  1426,  1562,     0,     0,     0, 
          0,  2447,   453,   454,    36,   457,   382,     0,  4288,     0, 
       3266,     0,     0,  4288,     0,     0,    69,     0,     0,     0, 
         55,  3913,   465,   467,   352,   468,   172,     0,   469,   107, 
          0,   393,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  3913,  1816,   389,     0,  3913,     0,     0,     0, 
          0,   470,   352,    69,     0,  4288,     0,  4288,   475,   487, 
       3913,   496,   478,   479,   512,   513,   430,     0,     0,     0, 
        -19,    11,     0,     0,   497,  3913,  1860,  4288,  4288,   207, 
       4288,     0,     0,  4288,  4288,     0,     0,     0,  3913,     0, 
          0,   432,     0,   510,  1896,   543,  1961,  1997,  2026,   459, 
        251,  4288,  3913,  4288,   256,  3913,   485,     0,     0,     0, 
          0,   251,   551,     0,  2062,   198,   574,   245,   -56,   578, 
          0,  4288,   560,   281,  3913,     0,     0,     0,     0,   495, 
          0,   -56,   -80,   581,     0,     0,     0,  3913,  4288,   565, 
          0,     0,   285,  3913,     0,  2297,  3913,   583,     0,  3913, 
          0,   503,     0,  3913,   511,     0, 
    );
    protected static $yyRindex= array(          -25,
          0,     0,   100,     0,     0,    49,   461,     0,    22,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    38,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   544,     0,     0,     0,     0,    35, 
        449,     0,     0,  -118,   528,     0,     0,     0,     0,     0, 
        529,     0,     0,     0,     0,   -40,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   619,     0,     0, 
          0,     0,   538,     0,     0,   570,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -125,     0,  1262, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         62,     0,     0,     0,     9,   227,     2,     0,     0,     0, 
          0,     0,     0,    45,     0,   623,   -35,     0,     0,   624, 
          0,     0,     0,     0,     0,  -125,     0,     0,     0,     0, 
          0,     0,     0,     0,  1289,     0,     0,   917,   612,   639, 
        874,   666,   710,   820,     0,     0,     0,     0,   625,   227, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   620,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   488,   123,     0,    98,   284,     0,   111,     0,     0, 
          0,     0,     0,     0,   248,   339,     0,     0,     0,   227, 
          0,     0,     0,     0,     0,     0,     0,   623,   135,     0, 
        648,     0,     0,     0,  1271,    33,    73,   254,   278,   734, 
       1203,  1326,  1536,     0,  2039,     0,  2089,  2117,  2197,  2456, 
        119,     0,   121,  3190,  3167,  3098,     0,  3122,     0,  3146, 
       2690,  2714,  2988,  3030,  2597,  2529,  2556,  1098,  1125,  1152, 
          0,     0,   623,   597,   159,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   283,  3605,     0,  3214,   623,   623,     0, 
          0,   571,     0,   186,     0,     0,   227,  2702,  3258,     0, 
       3294,  3330,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   448,     0,     0,   227,     0,     0,     0,   623,     0, 
       3237,     0,     0,   623,     0,     0,   654,     0,     0,     0, 
          0,   589,     0,     0,   135,     0,     0,     0,   674,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   589,     0,     0,     0,  -112,     0,     0,     0, 
          0,    13,   135,     0,     0,   657,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   589,     0,   658,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   589,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   658,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,  3761,     0,     0,     0,   678,     0,  3826,   595,     0, 
          0,   623,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   596,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  -107,     0,     0,  -107, 
          0,     0,     0,   589,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   276,     0,     0,   715,   -33,     5,   -29, 
          0,     0,     0,   644,     0,     0,   -16,     0,   525,   458, 
          0,     0,     0,  -192,   462,  3600,     0,     0,     0,     0, 
       -143,   697,   699,     0,   287,   681,     0,   161,   399,   381, 
        394,     0,   417,  -241,     0,  -177,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   324,     0,     0,     0,     0,   354,     0,     0,    64, 
          0,     0,   196,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   446,   486,   661,     0,     0,     0, 
        587,     0,   592,     0,     0,     0,     0,     0,     0,   762, 
          0, 
    );
    protected static $yyTable = array(40,
        165,   215,    43,    43,    18,   165,    44,    45,   165,     2, 
         20,    39,    67,    64,    39,   270,    43,    65,    43,   267, 
         70,    43,    73,   182,   170,    77,   291,   183,   180,   178, 
        182,   179,   177,   181,     1,   180,   178,    43,   179,   177, 
        181,    73,   173,     5,    64,    64,   173,     9,   175,   115, 
        182,    26,   115,    43,    85,   180,    27,    73,    10,    10, 
        181,    10,    10,    10,    10,    10,    10,    10,    10,   398, 
        127,    39,    39,   145,    39,   186,   145,    25,    45,    10, 
         10,    10,    10,    10,    10,   174,   304,   182,   121,    28, 
        145,   145,   180,   178,   173,   179,   177,   181,   165,   165, 
        294,   115,   165,   165,   165,   165,   165,   165,   165,    18, 
        173,    43,   175,   180,    10,    10,   180,   184,   185,   165, 
        165,   165,   165,   165,   165,   145,   187,    45,   122,   390, 
        180,   180,   124,   399,     5,    39,    41,   174,   177,   107, 
        295,   177,   361,    33,    10,    10,    10,   365,    42,    43, 
        293,   114,   165,   262,   165,   165,   265,   145,   189,   118, 
         39,   179,   118,   117,   179,   180,   117,   204,   123,   114, 
        383,   424,    62,   205,   428,    35,   118,   118,    35,    38, 
        296,   117,    38,   107,   165,   165,   165,    47,   385,    50, 
        177,    71,    18,   447,    52,   227,   227,   180,    75,   227, 
        227,   227,   227,   227,   227,   227,   455,    69,   240,    18, 
        282,   118,   459,   179,   240,   117,   227,   227,   227,   227, 
        227,   227,   123,   123,    29,    30,   123,   123,   123,   123, 
        123,   123,   123,   148,   208,   206,   266,   397,    69,    69, 
         38,    78,    38,   123,   123,   123,   123,   123,   123,   227, 
        207,   227,   227,    18,     2,     2,     2,     2,     2,     2, 
         67,    67,   261,   219,   219,    65,    65,   219,   219,   219, 
        219,   219,   219,   219,     2,     2,   123,   277,   123,   123, 
         11,   227,   227,   227,   219,   219,   219,   219,   219,   219, 
         79,    35,   278,    43,   181,     2,    80,   181,   183,   129, 
         32,    80,   209,   184,   185,   183,    35,    81,   123,   123, 
        123,   181,   181,   212,    46,   212,   438,   439,   182,   219, 
        219,   182,   213,   148,   115,   183,   148,   115,    38,    82, 
         43,    10,    10,    10,    83,   182,   182,   242,   242,    84, 
        148,   148,   115,   200,    86,   223,   181,    43,   240,   240, 
        219,   219,    10,    87,    12,    13,    14,    15,    16,    17, 
        116,    10,   183,   145,   118,   119,   148,   188,   149,    12, 
        182,   242,   151,   165,    12,   148,   193,   242,   181,     5, 
          5,     5,     5,     5,     5,   194,   176,   174,   184,   185, 
        195,   201,   165,   165,   219,   184,   185,   171,   172,     5, 
          5,   212,   182,   180,   274,   286,   275,   148,   335,    43, 
        276,   279,   280,   453,   288,   184,   185,   289,   300,   292, 
        293,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
        305,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,    10,   311,   316,   145,   145,   145,   205,   315, 
        176,   174,   184,   185,    12,    13,    14,    15,    16,    17, 
        319,   165,   165,   165,   165,   165,   165,   165,   165,   165, 
        227,    12,   165,   165,   165,   165,   165,   165,   165,   165, 
        165,   165,   165,   322,   323,   180,   180,   180,    36,   227, 
        227,    36,   320,   328,   329,     6,   331,   123,    12,    13, 
         14,    15,    16,    17,   332,   359,    36,   360,   362,   128, 
        330,   363,   364,   379,   388,   367,   123,   123,    12,    13, 
         14,    15,    16,    17,   221,   221,   389,   381,   221,   221, 
        221,   221,   221,   221,   221,   391,   392,   393,   219,   308, 
         57,    58,    59,    60,    61,   221,   221,   221,   221,   221, 
        221,   394,   395,   128,   396,   401,   411,   219,   227,   227, 
        227,   227,   227,   227,   227,   227,   227,   406,   412,   227, 
        227,   227,   227,   227,   227,   227,   227,   227,   227,   227, 
        221,   221,   414,   418,   181,   123,   123,   123,   123,   123, 
        123,   123,   123,   123,   419,   426,   123,   123,   123,   123, 
        123,   123,   123,   123,   123,   123,   123,   429,   182,   432, 
        434,   221,   221,   148,   435,   436,   290,   443,   445,   451, 
        446,   454,   457,   462,   458,   464,   219,   219,   219,   219, 
        219,   219,   219,   219,   219,   466,    43,   219,   219,   219, 
        219,   219,   219,   219,   219,   219,   219,   219,   213,   213, 
         22,    20,   213,   213,   213,   213,   213,   213,   213,    48, 
        238,   303,   171,   113,   171,   153,   181,   181,   181,   213, 
        213,   213,   213,   213,   213,   214,   214,   117,   240,   214, 
        214,   214,   214,   214,   214,   214,   313,   314,   154,   117, 
        182,   182,   182,   158,    59,   148,   214,   214,   214,   214, 
        214,   214,   212,   212,   213,   213,   212,   212,   212,   212, 
        212,   212,   212,    65,    61,   117,   113,   333,    93,    95, 
         97,    24,   334,   212,   212,   212,   212,   212,   212,   126, 
        283,   214,   214,   377,   310,   213,   213,   309,    49,    48, 
          6,     6,     6,     6,     6,     6,   215,   215,   240,   240, 
        215,   215,   215,   215,   215,   215,   215,   384,   212,   212, 
          6,     6,   214,   214,   125,   452,   402,   215,   215,   215, 
        215,   215,   215,   380,   183,   431,   340,   183,   318,   410, 
        199,   272,   240,   269,    31,     0,   404,     0,   240,   212, 
        212,   183,   183,     0,     0,     0,     0,     0,     0,   221, 
          0,     0,   215,   215,     0,     0,     0,     0,     0,     0, 
        423,     0,     0,     0,     0,     0,     0,     0,   221,    54, 
         39,     0,     0,     0,     0,     0,   183,     0,     0,     0, 
        444,     0,     0,   215,   215,     0,     0,   461,     0,     0, 
        463,     0,     0,     0,   465,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   216,   216,   183,     0, 
        216,   216,   216,   216,   216,   216,   216,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   216,   216,   216, 
        216,   216,   216,     0,     0,     0,     0,   221,   221,   221, 
        221,   221,   221,   221,   221,   221,     0,     0,   221,   221, 
        221,   221,   221,   221,   221,   221,   221,   221,   221,     0, 
        211,   211,   216,   216,   211,   211,   211,   211,   211,   211, 
        211,     0,     0,   213,     0,     0,     0,     0,     0,     0, 
          0,   211,   211,   211,   211,   211,   211,     0,     0,     0, 
          0,     0,   213,   216,   216,     0,     0,     0,     0,     0, 
        214,     0,     0,     0,     0,     0,     0,   136,     0,     0, 
        136,     0,     0,     0,     0,     0,   211,   211,     0,   214, 
          0,     0,     0,     0,   136,   136,     0,   212,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   117,    57, 
         58,    59,    60,    61,     0,     0,   212,   211,   211,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   136, 
          0,   213,   213,     0,     0,   213,   213,   213,   213,   213, 
          0,   215,   213,   213,   213,   213,   213,   213,   213,   213, 
        213,   213,   213,     0,     0,     0,     0,     0,   214,   214, 
        215,   136,   214,   214,   214,   214,   214,     0,     0,   214, 
        214,   214,   214,   214,   214,   214,   214,   214,   214,   214, 
          0,    63,     0,     0,   183,   212,   212,     0,     0,   212, 
        212,   212,   212,   212,    55,     0,   212,   212,   212,   212, 
        212,   212,   212,   212,   212,   212,   212,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   215, 
        215,     0,     0,   215,   215,   215,   215,   215,     0,     0, 
        215,   215,   215,   215,   215,   215,   215,   215,   215,   215, 
        215,   216,     0,     0,   202,   202,     0,     0,   202,   202, 
        202,   202,   202,   202,   202,     0,   183,   183,   183,     0, 
        216,     0,     0,     0,     0,   202,   202,   202,   202,   202, 
        202,   203,   203,     0,     0,   203,   203,   203,   203,   203, 
        203,   203,    54,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,   203,   203,   203,   203,   203,   203,   204,   204, 
        202,   202,   204,   204,   204,   204,   204,   204,   204,     0, 
          0,     0,     0,     0,   211,     0,     0,     0,     0,   204, 
        204,   204,   204,   204,   204,     0,     0,   203,   203,   216, 
        216,   202,   202,   216,   216,   216,   216,   216,     0,     0, 
        216,   216,   216,   216,   216,   216,   216,   216,   216,   216, 
        216,     0,     0,   184,   204,   204,   184,   136,   203,   203, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        184,   184,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   211,   211,   204,   204,   211,   211,   211, 
        211,   211,     0,     0,   211,   211,   211,   211,   211,   211, 
        211,   211,   211,   211,   211,   184,     0,     0,   135,   135, 
          0,     0,   135,   135,     0,   135,     0,   135,   135,     0, 
          0,   144,     0,     0,   144,     0,     0,     0,     0,   135, 
        135,   135,   135,   135,   135,   165,   165,   184,   144,   144, 
        165,   165,     0,   165,   165,   165,     0,     0,     0,     0, 
          0,    56,    57,    58,    59,    60,    61,     0,   165,   165, 
        165,   165,   182,   170,   135,   135,     0,   180,   178,     0, 
        179,   177,   181,   144,     0,     0,   186,     0,     0,   186, 
          0,     0,     0,     0,     0,   173,   154,   175,   166,   165, 
          0,    62,   165,   186,   186,   135,   135,     0,     0,     0, 
          0,     0,     0,     0,     0,   144,   182,   170,     0,     0, 
        210,   180,   178,     0,   179,   177,   181,     0,     0,   169, 
          0,   165,   165,     0,    63,     0,     0,     0,   186,   173, 
        154,   175,   166,     0,     0,     0,     0,    55,   202,     0, 
          0,     0,     0,     0,     0,   182,   170,     0,     0,   168, 
        180,   178,     0,   179,   177,   181,     0,     0,     0,     0, 
        186,     0,     0,   169,     0,   203,     0,     0,   173,   154, 
        175,   166,   182,   170,     0,     0,     0,   180,   178,     0, 
        179,   177,   181,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   204,   168,     0,   173,   154,   175,   166,     0, 
          0,     0,   169,     0,     0,     0,     0,   202,   202,     0, 
          0,   202,   202,   202,   202,   202,     0,     0,   202,   202, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,   169, 
          0,     0,   168,     0,   203,   203,     0,     0,   203,   203, 
        203,   203,   203,   184,     0,   203,   203,   203,   203,   203, 
        203,   203,   203,   203,   203,   203,     0,     0,     0,   168, 
        325,   204,   204,     0,     0,   204,   204,   204,   204,   204, 
          0,     0,   204,   204,   204,   204,   204,   204,   204,   204, 
        204,   204,   204,   135,     0,     0,   185,     0,     0,   185, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   135,   185,   185,     0,     0,     0,   182,   170, 
        165,   144,     0,   180,   178,     0,   179,   177,   181,     0, 
          0,     0,     0,     0,     0,   184,   184,   184,     0,     0, 
        165,   173,   154,   175,   166,     0,     0,   183,   185,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   169,   186,     0,     0,     0, 
        185,   135,   135,     0,     0,   135,   135,   135,   135,   135, 
          0,   183,   135,   135,   135,   135,   135,   135,   135,   135, 
        135,   135,   135,   144,   144,   168,   326,     0,   165,   165, 
        165,   165,   165,   165,   165,   165,   165,     0,    12,   165, 
        165,     0,   165,   165,   165,   165,   165,   165,   165,   165, 
        183,     0,     0,     0,     0,   176,   174,   184,   185,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,   167,   152, 
        153,   159,   164,   163,   165,   161,   162,   183,   186,   186, 
        186,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   176, 
        174,   184,   185,   155,   156,   157,   158,   160,     0,     0, 
        171,   172,     0,   152,   153,   159,   164,   163,   165,   161, 
        162,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   174, 
        184,   185,   155,   156,   157,   158,   160,     0,     0,   171, 
        172,   211,   152,   153,   159,   164,   163,   165,   161,   162, 
          0,     0,     0,     0,     0,   176,   174,   184,   185,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,     0,   152, 
        153,   159,   164,   163,   165,   161,   162,     0,     0,     0, 
          0,     0,   182,   170,     0,     0,     0,   180,   178,     0, 
        179,   177,   181,     0,     0,     0,   185,     0,     0,     0, 
          0,     0,     0,   183,   378,   173,   154,   175,   166,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   182,   170,     0,     0, 
          0,   180,   178,     0,   179,   177,   181,     0,     0,   169, 
          0,     0,     0,     0,     0,     0,     0,     0,   403,   173, 
        154,   175,   166,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   182,   170,     0,     0,   413,   180,   178,   168, 
        179,   177,   181,     0,     0,     0,     0,     0,   185,   185, 
        185,     0,     0,   169,     0,   173,   154,   175,   166,     0, 
          0,   176,   174,   184,   185,   155,   156,   157,   158,   160, 
          0,     0,   171,   172,     0,   152,   153,   159,   164,   163, 
        165,   161,   162,   168,     0,     0,     0,     0,     0,   169, 
          0,     0,     0,     0,     0,     0,     0,   182,   170,     0, 
          0,     0,   180,   178,     0,   179,   177,   181,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   168, 
        173,   154,   175,   166,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   182,   170,     0,     0,   416,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   169,     0,   173,   154,   175,   166, 
          0,     0,   182,   170,     0,     0,   417,   180,   178,     0, 
        179,   177,   181,     0,     0,     0,     0,     0,     0,   209, 
          0,     0,   209,     0,   168,   173,   154,   175,   166,     0, 
        169,     0,     0,     0,     0,     0,   209,   209,   182,   170, 
          0,     0,   433,   180,   178,     0,   179,   177,   181,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   169, 
        168,   173,   154,   175,   166,     0,     0,   183,     0,   210, 
          0,   209,   210,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   210,   210,     0,   168, 
          0,     0,     0,     0,     0,   169,     0,   187,     0,     0, 
        187,     0,     0,   209,     0,     0,     0,     0,     0,     0, 
          0,   183,     0,     0,   187,   187,     0,     0,     0,     0, 
          0,   210,     0,     0,     0,   168,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   183,     0,   187, 
          0,     0,     0,   210,     0,   176,   174,   184,   185,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,     0,   152, 
        153,   159,   164,   163,   165,   161,   162,   188,     0,     0, 
        188,   187,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   188,   188,     0,     0,     0,   176, 
        174,   184,   185,   155,   156,   157,   158,   160,     0,     0, 
        171,   172,   183,   152,   153,   159,   164,   163,   165,   161, 
        162,     0,     0,     0,     0,     0,     0,     0,     0,   188, 
          0,   415,     0,     0,     0,   176,   174,   184,   185,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,   183,   152, 
        153,   159,   164,   163,   165,   161,   162,     0,     0,     0, 
          0,   188,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   182,   170,     0,     0,   183,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   460,     0,   173,   154,   175,   166, 
        176,   174,   184,   185,   155,   156,   157,   158,   160,   209, 
          0,   171,   172,   183,   152,   153,   159,   164,   163,   165, 
        161,   162,     0,     0,     0,     0,     0,     0,     0,     0, 
        169,     0,     0,     0,     0,     0,   176,   174,   184,   185, 
        155,   156,   157,   158,   160,     0,     0,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,     0,   210, 
        168,     0,     0,     0,     0,   176,   174,   184,   185,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,     0,   152, 
        153,   159,   164,   163,   165,   161,   162,   187,     0,     0, 
          0,   209,   209,   209,     0,     0,     0,     0,     0,     0, 
          0,   176,   174,   184,   185,   155,   156,   157,   158,   160, 
          0,     0,   171,   172,     0,   152,   153,   159,   164,   163, 
        165,   161,   162,   182,   170,     0,     0,     0,   180,   178, 
          0,   179,   177,   181,     0,     0,   189,     0,     0,   189, 
          0,   210,   210,   210,     0,     0,   173,   154,   175,   166, 
        182,   170,     0,   189,   189,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,     0,     0,     0,   188,     0,   187, 
        187,   187,     0,   173,   154,   175,   166,   182,   170,     0, 
        169,     0,   180,   178,     0,   179,   177,   181,   189,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        173,   154,   175,   166,     0,     0,   200,   169,     0,   200, 
        168,   200,   200,   200,   200,     0,     0,     0,     0,     0, 
        189,     0,     0,     0,     0,     0,   200,   200,   200,   200, 
        200,   200,     0,   201,   169,     0,   201,   168,   201,   201, 
        201,   201,     0,     0,     0,     0,     0,     0,   183,   188, 
        188,   188,     0,   201,   201,   201,   201,   201,   201,     0, 
        182,   200,   200,     0,   168,   180,   178,     0,   179,   177, 
        181,     0,     0,     0,   205,     0,     0,   205,     0,     0, 
        205,     0,     0,   173,     0,   175,     0,     0,   201,   201, 
          0,     0,   200,   200,   205,   205,   205,   205,   205,   205, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   201, 
        201,     0,     0,     0,     0,     0,     0,     0,     0,   205, 
        205,     0,     0,     0,     0,     0,   176,   174,   184,   185, 
        155,   156,   157,   158,   160,     0,     0,   171,   172,     0, 
        152,   153,   159,   164,   163,   165,   161,   162,     0,     0, 
        205,   205,     0,     0,     0,     0,     0,   192,     0,     0, 
        192,     0,     0,   192,     0,     0,     0,     0,     0,     0, 
          0,     0,   190,     0,     0,   190,     0,   192,   192,     0, 
        192,   194,   192,     0,   194,     0,     0,   194,   183,   190, 
        190,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   194,   194,     0,   194,     0,   194,     0,     0,     0, 
          0,     0,   192,   192,     0,   183,   189,     0,     0,     0, 
          0,     0,     0,     0,   190,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   194,   194,     0,     0, 
          0,     0,   183,   192,   192,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   190,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   194,   194,     0, 
          0,     0,     0,     0,     0,     0,   176,   174,   184,   185, 
        155,   156,   157,   158,   160,     0,     0,   171,   172,   200, 
        152,   153,   159,   164,   163,   165,   161,   162,   189,   189, 
        189,     0,     0,   176,   174,   184,   185,   155,   156,   157, 
        158,   160,     0,     0,   171,   172,   201,     0,   153,   159, 
        164,   163,   165,   161,   162,   183,     0,     0,     0,     0, 
        176,   174,   184,   185,   155,   156,   157,   158,   160,     0, 
          0,   171,   172,     0,     0,     0,   159,   164,   163,   165, 
        161,   162,     0,     0,     0,     0,     0,   205,   200,   200, 
          0,     0,   200,   200,   200,   200,   200,     0,     0,   200, 
        200,   200,   200,   200,   200,   200,   200,   200,   200,   200, 
          0,     0,     0,     0,     0,   201,   201,     0,     0,   201, 
        201,   201,   201,   201,     0,     0,   201,   201,   201,   201, 
        201,   201,   201,   201,   201,   201,   201,     0,     0,     0, 
          0,     0,     0,   176,   174,   184,   185,     0,     0,     0, 
          0,     0,     0,     0,   171,   172,   205,   205,     0,     0, 
        205,   205,   205,   205,   205,     0,     0,   205,   205,   205, 
        205,   205,   205,   205,   205,   205,   205,   205,     0,     0, 
        192,     0,     0,     0,     0,   193,     0,     0,   193,     0, 
          0,   193,   190,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   194,   193,   193,     0,   193,     0, 
        193,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   195,     0,     0, 
        195,     0,     0,   195,     0,     0,     0,     0,     0,     0, 
        193,   193,     0,     0,     0,     0,     0,   195,   195,     0, 
        195,     0,   195,   192,   192,   192,   192,   192,     0,     0, 
        192,   192,   192,   192,   192,   192,   192,   192,   192,   192, 
        192,   193,   193,     0,   190,   190,   190,   194,   194,   194, 
        194,   194,   195,   195,   194,   194,   194,   194,   194,   194, 
        194,   194,   194,   194,   194,   207,     0,     0,   207,     0, 
          0,   207,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   195,   195,   207,   207,     0,   207,   196, 
        207,     0,   196,     0,     0,   196,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   196, 
        196,     0,   196,   197,   196,    94,   197,     0,     0,   197, 
        207,   207,    89,     0,     0,    92,     0,    93,     0,     0, 
          0,     0,     0,   197,   197,     0,   197,   208,   197,     0, 
        208,     0,     0,   234,   196,   196,   100,     0,     0,     0, 
          0,   207,   207,     0,   208,   208,     0,   208,     0,   208, 
        206,     0,     0,   206,     0,     0,     0,     0,   197,   197, 
          0,     0,     0,    54,    39,   196,   196,   206,   206,     0, 
        206,     0,   206,     0,   137,     0,     0,   137,     0,   208, 
        208,     0,     0,     0,     0,     0,     0,     0,     0,   197, 
        197,   137,   137,     0,   137,     0,   137,   143,    95,     0, 
        143,     0,   206,     0,     0,     0,     0,     0,     0,     0, 
        208,   208,     0,     0,   143,   143,     0,   143,   191,   143, 
          0,   191,   182,   170,     0,     0,   137,   180,   178,     0, 
        179,   177,   181,   206,   206,   191,   191,     0,   193,     0, 
          0,     0,     0,     0,     0,   173,     0,   175,     0,   143, 
          0,     0,     0,     0,   198,     0,     0,   198,   137,   182, 
        170,     0,     0,     0,   180,   178,     0,   179,   177,   181, 
        191,   198,   198,     0,     0,     0,     0,     0,     0,   169, 
        195,   143,   173,     0,   175,     0,     0,     0,     0,     0, 
        199,     0,     0,   199,     0,     0,     0,     0,     0,     0, 
          0,     0,   191,     0,     0,     0,   198,   199,   199,   168, 
          0,   193,   193,   193,   193,   193,   169,     0,   193,   193, 
        193,   193,   193,   193,   193,   193,   193,   193,   193,     0, 
          0,     0,   101,    57,    58,    59,    60,    61,   198,     0, 
          0,     0,   199,     0,     0,     0,     0,     0,   207,     0, 
          0,     0,     0,   195,   195,   195,   195,   195,     0,     0, 
        195,   195,   195,   195,   195,   195,   195,   195,   195,   195, 
        195,     0,   196,     0,   199,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   197,     0,     0,     0, 
          0,     0,     0,     0,     0,    63,   102,     0,     0,     0, 
          0,     0,   103,     0,     0,     0,     0,   208,    98,     0, 
          0,   207,   207,   207,   207,   207,     0,     0,     0,     0, 
        207,   207,   207,   207,   207,   207,   207,   207,   207,    90, 
        206,     0,     0,     0,     0,   196,   196,   196,   196,   196, 
          0,     0,     0,     0,   196,   196,   196,   196,   196,   196, 
        196,   196,   196,     0,   137,     0,     0,     0,     0,   197, 
        197,   197,   197,   197,    96,    97,     0,     0,   197,   197, 
        197,   197,   197,   197,   197,   197,   197,   143,     0,     0, 
        208,   208,   208,   208,   208,     0,     0,   183,     0,   208, 
        208,   208,   208,   208,   208,   208,   208,   208,   191,     0, 
          0,     0,     0,   206,   206,   206,   206,   206,     0,     0, 
          0,     0,   206,   206,   206,   206,   206,   206,   206,   206, 
        206,     0,     0,     0,   183,     0,     0,   137,   137,   137, 
        137,   137,     0,     0,   198,     0,   137,   137,   137,   137, 
        137,   137,   137,   137,   137,     0,     0,     0,     0,     0, 
        143,   143,   143,   143,   143,   149,     0,     0,   149,   143, 
        143,   143,   143,   143,   143,   143,   143,   143,     0,     0, 
        199,     0,   149,   149,     0,   176,   174,   184,   185,     0, 
        191,   191,   191,     0,     0,   105,   171,   172,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   137,   138, 
          0,   139,   140,   141,   142,   143,   144,   149,   146,   147, 
          0,     0,   176,   174,   184,   185,   198,   198,   198,     0, 
          0,     0,     0,   171,   172,   196,     0,     0,     0,   105, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   149, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   199,   199,   199,     0,     0,     0,     0,     0, 
          0,   225,   226,   227,   228,   229,   230,   231,   232,   233, 
        235,   237,   238,   239,   240,   241,   243,   244,   245,   246, 
        248,   250,   251,   252,   253,   254,   255,   256,   257,   258, 
        259,   260,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   241,   109,   271,     0,     0,     0,     0,     0, 
        109,     0,     0,   109,     0,   109,     0,   284,   285,     0, 
        287,     0,     0,     0,     0,     0,     0,   196,     0,   109, 
          0,     0,     0,     0,   109,     0,     0,     0,     0,     0, 
          0,     0,     0,   298,     0,   299,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   301,     0,   302,     0, 
          0,   109,   109,     0,     0,     0,     0,     0,   105,     0, 
          0,     0,   196,   241,     0,   105,   306,   307,   105,     0, 
        105,     0,     0,     0,     0,     0,     0,     0,     0,   312, 
          0,     0,     0,   109,   105,   109,   109,   196,   196,   105, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   321, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   105,   105,   196,     0, 
          0,     0,    94,   196,     0,     0,     0,     0,     0,    89, 
          0,     0,    92,     0,    93,   149,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    94,     0,    91,   105,     0, 
        105,   105,    89,   100,     0,    92,     0,    93,     0,     0, 
          0,     0,     0,     0,     0,   241,     0,   387,     0,     0, 
          0,   352,     0,     0,     0,     0,   100,     0,     0,     0, 
         54,    39,     0,     0,     0,     0,     0,   196,   405,     0, 
        407,     0,     0,   408,   409,     0,     0,     0,     0,     0, 
          0,     0,     0,    54,    39,     0,     0,     0,     0,     0, 
          0,   196,     0,   425,     0,    95,     0,   149,     0,     0, 
        109,   109,   109,   109,   109,   109,     0,     0,     0,     0, 
          0,   196,     0,     0,     0,   353,     0,     0,    95,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   456,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   109,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   105,   105,   105,   105,   105, 
        105,     0,     0,   109,   109,     0,     0,     0,     0,     0, 
        109,   109,   109,   109,     0,     0,   109,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        109,   109,   109,   109,     0,   109,   109,   109,     0,     0, 
        109,   109,   109,   109,   109,     0,     0,     0,   105,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   101, 
         57,    58,    59,    60,    61,     0,     0,     0,   105,   105, 
          0,     0,   109,   109,     0,   105,   105,   105,   105,     0, 
          0,   105,   101,    57,    58,    59,    60,    61,     0,     0, 
          0,     0,     0,     0,     0,   105,   105,   105,   105,     0, 
        105,   105,   105,     0,     0,   105,     0,   105,   105,   105, 
          0,     0,    99,    94,     0,     0,     0,     0,     0,     0, 
         89,     0,     0,    92,     0,    93,     0,     0,     0,     0, 
          0,     0,    63,   102,     0,    99,     0,   105,   105,   103, 
          0,   236,     0,     0,   100,    98,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    63,   102,     0,     0,     0, 
          0,     0,   103,   341,   342,   343,    90,     0,    98,     0, 
          0,    54,    39,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   344,   345,   346,   347,     0,   348,   349,    90, 
          0,     0,   350,     0,   351,     0,     0,     0,     0,     0, 
         94,    96,    97,     0,     0,     0,    95,    89,    94,     0, 
         92,     0,    93,     0,     0,    89,     0,     0,    92,     0, 
         93,     0,    94,     0,    96,    97,     0,     0,   247,    89, 
         94,   100,    92,     0,    93,     0,   249,    89,     0,   100, 
         92,     0,    93,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   100,     0,     0,     0,     0,    54,    39, 
          0,   100,     0,     0,     0,     0,    54,    39,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         54,    39,     0,     0,     0,     0,     0,     0,    54,    39, 
          0,     0,     0,    95,     0,     0,     0,     0,     0,     0, 
          0,    95,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    95,     0,     0,     0,     0, 
          0,     0,     0,    95,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        101,    57,    58,    59,    60,    61,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    99,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    63,   102,     0,     0,     0,     0,     0, 
        103,     0,     0,     0,     0,     0,    98,   101,    57,    58, 
         59,    60,    61,     0,     0,   101,    57,    58,    59,    60, 
         61,     0,     0,     0,     0,     0,     0,    90,     0,   135, 
         57,    58,    59,    60,    61,     0,     0,   101,    57,    58, 
         59,    60,    61,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         99,     0,    96,    97,     0,     0,     0,     0,    99,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         63,   102,    99,     0,     0,     0,     0,   103,    63,   102, 
         99,     0,     0,    98,     0,   103,     0,     0,     0,     0, 
          0,    98,   136,   102,     0,     0,     0,     0,     0,   103, 
         63,   102,     0,     0,    90,    98,     0,   103,     0,     0, 
          0,     0,    90,    98,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    90,     0,     0,     0, 
          0,     0,     0,     0,    90,     0,     0,     0,     0,    96, 
         97,     0,     0,     0,     0,     0,     0,    96,    97,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    96,    97,     0,     0,     0,     0,     0,     0,    96, 
         97, 
    );
    protected static $yyCheck = array(33,
         41,   145,    36,    37,   123,    41,    36,    37,    44,    35, 
          6,    92,   125,    47,    92,   193,    50,   125,    52,   123, 
         50,    55,    52,    37,    38,    55,   219,   312,    42,    43, 
         37,    45,    46,    47,   320,    42,    43,    71,    45,    46, 
         47,    71,    41,   321,    78,    79,    60,   260,    62,    41, 
         37,    59,    44,    87,    71,    42,    59,    87,    37,    38, 
         47,    40,    41,    42,    43,    44,    45,    46,    47,    59, 
         87,    59,    92,    41,    92,    40,    44,    92,    44,    58, 
         59,    60,    61,    62,    63,    41,   264,    37,   260,    91, 
         58,    59,    42,    43,    93,    45,    46,    47,    37,    38, 
        260,    93,    41,    42,    43,    44,    45,    46,    47,    35, 
         60,   145,    62,    41,    93,    94,    44,   402,   403,    58, 
         59,    60,    61,    62,    63,    93,    91,    93,   300,   371, 
         58,    59,   260,   123,    35,   123,    93,    93,    41,    76, 
        300,    44,   335,    64,   123,   124,   125,    41,    44,   183, 
         44,    41,    91,   183,    93,    94,   260,   125,   123,    41, 
         92,    41,    44,    41,    44,    93,    44,   334,   340,    59, 
        363,   413,   300,   340,   416,    41,    58,    59,    44,   260, 
        340,    59,   260,   120,   123,   124,   125,    40,   366,   310, 
         93,   311,   311,   435,   310,    37,    38,   125,   123,    41, 
         42,    43,    44,    45,    46,    47,   448,    47,   334,    35, 
        206,    93,   454,    93,   340,    93,    58,    59,    60,    61, 
         62,    63,    37,    38,   300,   301,    41,    42,    43,    44, 
         45,    46,    47,    40,    41,    44,   340,   381,    78,    79, 
        260,    61,   260,    58,    59,    60,    61,    62,    63,    91, 
         59,    93,    94,    35,   280,   281,   282,   283,   284,   285, 
        373,   374,   340,    37,    38,   373,   374,    41,    42,    43, 
         44,    45,    46,    47,   300,   301,    91,    44,    93,    94, 
          5,   123,   124,   125,    58,    59,    60,    61,    62,    63, 
         61,    44,    59,   327,    41,   321,    40,    44,   312,   125, 
         25,    40,    41,   402,   403,   312,    59,   410,   123,   124, 
        125,    58,    59,   333,    39,   333,   373,   374,    41,    93, 
         94,    44,   340,    41,    41,   312,    44,    44,   260,    41, 
        364,   310,   311,   312,    41,    58,    59,   300,   301,    44, 
         58,    59,    59,   125,   123,   150,    93,   381,   300,   301, 
        124,   125,   331,    44,   280,   281,   282,   283,   284,   285, 
         40,   340,   312,   331,    78,    79,    40,   332,    40,   410, 
         93,   334,   410,   312,   410,    93,    44,   340,   125,   280, 
        281,   282,   283,   284,   285,    93,   400,   401,   402,   403, 
         44,   260,   331,   332,   340,   402,   403,   411,   412,   300, 
        301,   333,   125,   331,    41,   210,    41,   125,   340,   443, 
         61,   260,    61,   443,    40,   402,   403,    40,    58,    41, 
         44,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         40,   410,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    40,   321,   413,   414,   415,   340,    41, 
        400,   401,   402,   403,   280,   281,   282,   283,   284,   285, 
         40,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,   410,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    41,    93,   413,   414,   415,    41,   331, 
        332,    44,   297,    41,    41,    35,    40,   312,   280,   281, 
        282,   283,   284,   285,   123,    41,    59,    41,    41,   335, 
        315,   340,    44,   125,    40,   123,   331,   332,   280,   281, 
        282,   283,   284,   285,    37,    38,    40,    58,    41,    42, 
         43,    44,    45,    46,    47,    40,    59,    59,   312,   260, 
        261,   262,   263,   264,   265,    58,    59,    60,    61,    62, 
         63,    40,    40,   335,   125,    59,   125,   331,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   361,    59,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         93,    94,    40,   125,   331,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   344,   340,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   123,   331,    59, 
        413,   124,   125,   331,    41,   371,   218,    40,    59,   125, 
        340,    41,    58,    41,   340,   123,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   125,    93,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    37,    38, 
        123,   123,    41,    42,    43,    44,    45,    46,    47,    41, 
        123,   263,    93,    41,    41,    41,   413,   414,   415,    58, 
         59,    60,    61,    62,    63,    37,    38,    58,   340,    41, 
         42,    43,    44,    45,    46,    47,   288,   289,    41,    93, 
        413,   414,   415,   123,    41,   413,    58,    59,    60,    61, 
         62,    63,    37,    38,    93,    94,    41,    42,    43,    44, 
         45,    46,    47,   125,    41,    59,    59,   319,    41,   125, 
        125,     7,   324,    58,    59,    60,    61,    62,    63,    86, 
        206,    93,    94,   353,   277,   124,   125,   276,    42,    41, 
        280,   281,   282,   283,   284,   285,    37,    38,   300,   301, 
         41,    42,    43,    44,    45,    46,    47,   364,    93,    94, 
        300,   301,   124,   125,    84,   442,   386,    58,    59,    60, 
         61,    62,    63,   357,    41,   422,   331,    44,   293,   399, 
        120,   195,   334,   192,    23,    -1,   388,    -1,   340,   124, 
        125,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
        412,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    91, 
         92,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
        432,    -1,    -1,   124,   125,    -1,    -1,   457,    -1,    -1, 
        460,    -1,    -1,    -1,   464,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,   125,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         37,    38,    93,    94,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,   331,   124,   125,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,   331, 
         -1,    -1,    -1,    -1,    58,    59,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,   331,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,   312,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        331,   125,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   333,    -1,    -1,   331,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,   346,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   312,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,   413,   414,   415,    -1, 
        331,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    37,    38, 
         93,    94,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    93,    94,   400, 
        401,   124,   125,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    41,    93,    94,    44,   331,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   124,   125,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    93,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    -1,    44,    -1,    46,    47,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    37,    38,   125,    58,    59, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    60,    61, 
         62,    63,    37,    38,    93,    94,    -1,    42,    43,    -1, 
         45,    46,    47,    93,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    91, 
         -1,   300,    94,    58,    59,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    37,    38,    -1,    -1, 
         41,    42,    43,    -1,    45,    46,    47,    -1,    -1,    94, 
         -1,   123,   124,    -1,   333,    -1,    -1,    -1,    93,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,   346,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,   124, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    94,    -1,   331,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,   124,    -1,    60,    61,    62,    63,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    94, 
         -1,    -1,   124,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,   331,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,   124, 
        125,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   312,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    58,    59,    -1,    -1,    -1,    37,    38, 
        312,   331,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,   413,   414,   415,    -1,    -1, 
        332,    60,    61,    62,    63,    -1,    -1,   312,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    94,   331,    -1,    -1,    -1, 
        125,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,   312,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   413,   414,   124,   125,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,   410,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
        312,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   312,   413,   414, 
        415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,   124, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    94,    -1,    60,    61,    62,    63,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   124,    -1,    -1,    -1,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,    60,    61,    62,    63, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,   124,    60,    61,    62,    63,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,    58,    59,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    94, 
        124,    60,    61,    62,    63,    -1,    -1,   312,    -1,    41, 
         -1,    93,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    41,    -1,    -1, 
         44,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    93, 
         -1,    -1,    -1,   125,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    41,    -1,    -1, 
         44,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   312,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,   331,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   312,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,   312,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    -1,    60,    61,    62,    63, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   331, 
         -1,   411,   412,   312,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   331, 
        124,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,   331,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   413,   414,   415,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    58,    59,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,   413, 
        414,   415,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         94,    -1,    42,    43,    -1,    45,    46,    47,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    38,    94,    -1,    41, 
        124,    43,    44,    45,    46,    -1,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    38,    94,    -1,    41,   124,    43,    44, 
         45,    46,    -1,    -1,    -1,    -1,    -1,    -1,   312,   413, 
        414,   415,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         37,    93,    94,    -1,   124,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    60,    -1,    62,    -1,    -1,    93,    94, 
         -1,    -1,   124,   125,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    58,    59,    -1, 
         61,    38,    63,    -1,    41,    -1,    -1,    44,   312,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,   312,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,   312,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   331, 
        414,   415,   416,   417,   418,   419,   420,   421,   413,   414, 
        415,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   331,    -1,   415,   416, 
        417,   418,   419,   420,   421,   312,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,    -1,    -1,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   331,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   411,   412,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   124,   125,    -1,   413,   414,   415,   404,   405,   406, 
        407,   408,    93,    94,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    58,    59,    -1,    61,    38, 
         63,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    38,    63,    33,    41,    -1,    -1,    44, 
         93,    94,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    41,    63,    -1, 
         44,    -1,    -1,    61,    93,    94,    64,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    58,    59,    -1,    61,    -1,    63, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    91,    92,   124,   125,    58,    59,    -1, 
         61,    -1,    63,    -1,    41,    -1,    -1,    44,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    58,    59,    -1,    61,    -1,    63,    41,   126,    -1, 
         44,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    58,    59,    -1,    61,    41,    63, 
         -1,    44,    37,    38,    -1,    -1,    93,    42,    43,    -1, 
         45,    46,    47,   124,   125,    58,    59,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    -1,    93, 
         -1,    -1,    -1,    -1,    41,    -1,    -1,    44,   125,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         93,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    94, 
        331,   125,    60,    -1,    62,    -1,    -1,    -1,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   125,    -1,    -1,    -1,    93,    58,    59,   124, 
         -1,   404,   405,   406,   407,   408,    94,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,   125,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,   331,    -1,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,   331,   346,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   367, 
        331,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,   331,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,   402,   403,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   331,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   312,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   331,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,   312,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   331,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    41,    -1,    -1,    44,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
        331,    -1,    58,    59,    -1,   400,   401,   402,   403,    -1, 
        413,   414,   415,    -1,    -1,    76,   411,   412,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    90, 
         -1,    92,    93,    94,    95,    96,    97,    93,    99,   100, 
         -1,    -1,   400,   401,   402,   403,   413,   414,   415,    -1, 
         -1,    -1,    -1,   411,   412,   116,    -1,    -1,    -1,   120, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         -1,   152,   153,   154,   155,   156,   157,   158,   159,   160, 
        161,   162,   163,   164,   165,   166,   167,   168,   169,   170, 
        171,   172,   173,   174,   175,   176,   177,   178,   179,   180, 
        181,   182,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   193,    33,   195,    -1,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,   208,   209,    -1, 
        211,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    59, 
         -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   234,    -1,   236,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,   249,    -1, 
         -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    33,    -1, 
         -1,    -1,   263,   264,    -1,    40,   267,   268,    43,    -1, 
         45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280, 
         -1,    -1,    -1,   123,    59,   125,   126,   288,   289,    64, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   300, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    91,    92,   319,    -1, 
         -1,    -1,    33,   324,    -1,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    58,   123,    -1, 
        125,   126,    40,    64,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   366,    -1,   368,    -1,    -1, 
         -1,    59,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1, 
         91,    92,    -1,    -1,    -1,    -1,    -1,   388,   389,    -1, 
        391,    -1,    -1,   394,   395,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,   412,    -1,   414,    -1,   126,    -1,   413,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,   432,    -1,    -1,    -1,   123,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   449,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,   341,   342,   343,    -1,    -1,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        360,   361,   362,   363,    -1,   365,   366,   367,    -1,    -1, 
        370,   371,   372,   373,   374,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,   333,   334, 
         -1,    -1,   402,   403,    -1,   340,   341,   342,   343,    -1, 
         -1,   346,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   360,   361,   362,   363,    -1, 
        365,   366,   367,    -1,    -1,   370,    -1,   372,   373,   374, 
         -1,    -1,   313,    33,    -1,    -1,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,   333,   334,    -1,   313,    -1,   402,   403,   340, 
         -1,    61,    -1,    -1,    64,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,   341,   342,   343,   367,    -1,   346,    -1, 
         -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   360,   361,   362,   363,    -1,   365,   366,   367, 
         -1,    -1,   370,    -1,   372,    -1,    -1,    -1,    -1,    -1, 
         33,   402,   403,    -1,    -1,    -1,   126,    40,    33,    -1, 
         43,    -1,    45,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,    -1,    33,    -1,   402,   403,    -1,    -1,    61,    40, 
         33,    64,    43,    -1,    45,    -1,    61,    40,    -1,    64, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    64,    -1,    -1,    -1,    -1,    91,    92, 
         -1,    64,    -1,    -1,    -1,    -1,    91,    92,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         91,    92,    -1,    -1,    -1,    -1,    -1,    -1,    91,    92, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1, 
        340,    -1,    -1,    -1,    -1,    -1,   346,   260,   261,   262, 
        263,   264,   265,    -1,    -1,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,   402,   403,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        333,   334,   313,    -1,    -1,    -1,    -1,   340,   333,   334, 
        313,    -1,    -1,   346,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,   333,   334,    -1,    -1,    -1,    -1,    -1,   340, 
        333,   334,    -1,    -1,   367,   346,    -1,   340,    -1,    -1, 
         -1,    -1,   367,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,    -1,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 382 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 389 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 390 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 394 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 395 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 399 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 400 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 404 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 405 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 413 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 67:  #line 418 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 68:  #line 419 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 69:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 71:  #line 426 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 72:  #line 426 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 73:  #line 431 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 74:  #line 431 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 441 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 76:  #line 441 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 446 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 78:  #line 446 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 450 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 80:  #line 450 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 81:  #line 454 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 82:  #line 454 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 83:  #line 458 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 84:  #line 458 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 85:  #line 463 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 87:  #line 464 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 89:  #line 465 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 90:  #line 465 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 92:  #line 469 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 93:  #line 473 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 474 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 95:  #line 478 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 97:  #line 483 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 98:  #line 484 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 99:  #line 488 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 100:  #line 488 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 101:  #line 492 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 102:  #line 492 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 498 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 104:  #line 499 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 105:  #line 503 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 106:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 107:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 109:  #line 513 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 110:  #line 514 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 111:  #line 518 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 112:  #line 518 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 113:  #line 528 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 115:  #line 533 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 116:  #line 534 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 117:  #line 538 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 119:  #line 543 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 548 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 123:  #line 562 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 565 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 125:  #line 571 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 126:  #line 577 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 127:  #line 577 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 128:  #line 583 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 583 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 130:  #line 587 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 131:  #line 587 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 132:  #line 597 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 133:  #line 597 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 134:  #line 606 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 135:  #line 609 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 136:  #line 612 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 137:  #line 615 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 138:  #line 618 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 621 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 624 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 141:  #line 627 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 142:  #line 630 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 143:  #line 634 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 144:  #line 640 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 145:  #line 646 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 146:  #line 652 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 147:  #line 657 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 148:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 149:  #line 665 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 150:  #line 668 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 151:  #line 671 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 152:  #line 674 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 153:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 155:  #line 690 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 691 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 157:  #line 695 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 158:  #line 699 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 159:  #line 700 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 161:  #line 705 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 162:  #line 705 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 163:  #line 706 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 164:  #line 706 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 165:  #line 710 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 166:  #line 716 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 167:  #line 717 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 168:  #line 718 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 169:  #line 719 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 170:  #line 720 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 171:  #line 724 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 172:  #line 727 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 173:  #line 730 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 174:  #line 733 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 175:  #line 739 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 176:  #line 740 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 177:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 179:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 180:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 755 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 187:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 191:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 192:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 199:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 200:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 206:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 793 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 794 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 213:  #line 795 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 214:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 215:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 216:  #line 798 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 217:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 218:  #line 803 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 219:  #line 808 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 221:  #line 813 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 222:  #line 814 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 223:  #line 818 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 224:  #line 818 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 225:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 226:  #line 821 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 227:  #line 824 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 228:  #line 827 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 229:  #line 830 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 230:  #line 833 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 231:  #line 833 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 232:  #line 836 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 233:  #line 836 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 236:  #line 849 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 237:  #line 853 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 238:  #line 857 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 239:  #line 858 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 864 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 241:  #line 865 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 242:  #line 869 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 243:  #line 870 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 244:  #line 874 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 245:  #line 875 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 246:  #line 876 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 247:  #line 877 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 248:  #line 878 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 249:  #line 879 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2446 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
