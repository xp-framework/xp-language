<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
#line 81 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    40,    40,    43,    43,    47,    45, 
         48,    45,    50,    45,    51,    45,    53,    45,    54,    45, 
         55,    45,    57,    45,    59,    45,    60,    45,    61,    45, 
         45,    45,    52,    52,    56,    56,    62,    62,    64,    63, 
         65,    63,    44,    44,    49,    66,    49,    58,    67,    67, 
         69,    68,    39,    39,    70,    70,    46,    46,    71,    71, 
         72,    72,    72,    72,    26,    74,    26,    75,    26,    76, 
         26,    77,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    83,    83,    84,    84,    85,    38,    87,    38, 
         25,    25,    25,    25,    25,    25,    86,    86,    86,    86, 
         88,    88,    90,    90,    89,    78,    78,    78,    78,    78, 
         78,    78,    78,    78,    78,    78,    78,    79,    79,    79, 
         79,    79,    79,    79,    79,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    80,    81,    81,    81,    81, 
         81,    81,    82,    82,    73,    73,    91,    91,    93,    92, 
         94,    92,    92,    92,    92,    95,    92,    31,    31,    10, 
         96,    17,    17,    33,    33,    97,    97,    98,    98,    98, 
         98,    98,    98, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     2,     0,     1,     1,     2,     0,     4, 
          0,     7,     0,    10,     0,     8,     0,     6,     0,     8, 
          0,     8,     0,     6,     0,     3,     0,     3,     0,     4, 
          2,     1,     1,     3,     0,     1,     1,     2,     0,     5, 
          0,     4,     1,     3,     0,     0,     3,     1,     1,     2, 
          0,     9,     0,     1,     1,     3,     0,     1,     4,     4, 
          1,     4,     1,     1,     1,     0,     3,     0,     3,     0, 
          5,     0,     6,     2,     1,     2,     4,     1,     1,     1, 
          1,     1,     5,     3,     3,     3,     3,     4,     4,     2, 
          7,     4,     0,     1,     1,     3,     1,     1,     0,     5, 
          1,     1,     1,     1,     1,     1,     0,     1,     1,     1, 
          1,     3,     0,     1,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     4,     4,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     2,     2,     2,     2, 
          2,     2,     2,     2,     0,     1,     1,     2,     0,     4, 
          0,     4,     2,     2,     4,     0,     6,     1,     1,     1, 
          1,     1,     3,     0,     1,     1,     2,     1,     1,     1, 
          1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   238,   240,   239,   241,   243,   242,     0,     1,     0, 
         42,   235,     0,     8,     0,     4,     9,     0,    14,    16, 
        237,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   230,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,     0,     0,   166,   162,   165,   163,   164, 
          0,     0,     0,   158,     0,     0,     0,    52,    19,     0, 
          0,     0,    23,    25,     0,     0,     0,   159,     0,    46, 
         47,     0,    21,    25,     0,     0,     0,     0,    50,    51, 
          0,    54,    56,    55,     0,    49,     0,   233,     0,    17, 
          0,    24,    26,    28,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   128,     0,     0,     0,     0,   126,     0, 
          0,   125,     0,     0,   138,   139,   140,   141,   142,   168, 
          0,     0,     0,     0,   171,    15,     0,    27,     0,     0, 
          0,     0,    29,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   134,   150,   132,     0,     0,   130, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   213,   214,    53,     0,     0,   160,     0,     0,     0, 
         31,     0,     0,    33,     0,    30,     0,     0,     0,     0, 
        231,     0,   228,     0,   129,   229,     0,   157,     0,     0, 
        155,   219,     0,   221,   127,   216,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   147,   146,   116,     0,     0,   174,   172, 
        161,    34,    32,    37,     0,     0,     0,   152,     0,     0, 
          0,     0,     0,     0,     0,     0,   224,     0,     0,   218, 
          0,   124,   121,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   156,     0,   226,     0,     0,     0, 
        131,     0,     0,     0,     0,    60,     0,   120,   119,   133, 
         69,     0,    89,    73,    77,    79,    75,    85,    87,    71, 
         81,    92,     0,     0,     0,    66,     0,   103,   220,     0, 
        225,   222,     0,    64,     0,     0,     0,     0,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    91, 
        151,    68,     0,   122,     0,     0,    63,    62,     0,     0, 
          0,     0,     0,     0,     0,    86,    88,     0,     0,   104, 
        227,    40,    57,     0,    38,    70,     0,    90,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    58,   111,    84,   108,     0,     0,    78,     0, 
          0,     0,     0,     0,     0,   110,     0,     0,     0,     0, 
        106,    72,    99,   101,     0,    96,     0,     0,     0,    80, 
         94,    76,     0,     0,     0,    82,    98,     0,     0,   107, 
          0,     0,     0,    74,     0,   102,     0,   100,     0,     0, 
        112, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   120,   101,   213, 
         36,    51,    71,    86,    37,    53,    73,   102,   103,   138, 
        104,   105,   139,   204,    64,   334,   314,   300,   366,   385, 
        315,    34,    21,    35,    65,    66,    67,   122,   123,   335, 
        316,   317,   336,   337,   338,   246,   348,   357,   422,   351, 
        354,   412,   352,   353,   358,   425,   370,   405,   355,   356, 
        350,   426,   427,   434,   435,   433,   406,   407,   415,   124, 
        215,   294,   225,   159,   154,   228,   217,   125,   126,   127, 
        128,   129,   219,   220,   221,   133,    91,   134,   135,   270, 
        226,   227,   285,   289,   340,   216,    22,    23, 
    );
    protected static $yySindex = array(         -226,
          0,     0,  -276,  -142,  -142,    77,  -276,     0,    34,    71, 
         76,     0,     0,     0,     0,     0,     0,    52,     0,  -251, 
          0,     0,   317,     0,  -142,     0,     0,    28,     0,     0, 
          0,     0,   -81,    67,   105,   -81,   -81,     0,  -142,   124, 
        317,    28,     0,  -136,  -134,     0,  1126,     0,     0,   -81, 
       -115,   -81,    84,   -81,   156,     0,     0,     0,     0,     0, 
        163,   197,  -152,     0,   221,   239,   245,     0,     0,   -81, 
        174,   260,     0,     0,   265,   148,   148,     0,  -209,     0, 
          0,  -228,     0,     0,   -81,    -6,  4043,     0,     0,     0, 
       3800,     0,     0,     0,   156,     0,   185,     0,    46,     0, 
       -293,     0,     0,     0,    39,  4142,  4043,  4043,  4043,  4043, 
       4043,  4043,  4043,     0,  4043,  4043,   267,   269,     0,   -98, 
       2087,     0,   272,   273,     0,     0,     0,     0,     0,     0, 
        440,   273,   289,   287,     0,     0,   274,     0,    56,    82, 
        284,    77,     0,   129,   149,  1223,  1303,  -187,  -187,  -278, 
       -187,  -187,  -187,   -67,     0,     0,     0,     6,   -24,     0, 
       4043,  4043,  4043,  4043,  4043,  4043,  4043,  4043,  4043,  3771, 
       3892,  4043,  4043,  4043,  4043,  4043,  4043,  4043,  3952,  4104, 
       4043,  4043,  4043,  4043,  4043,  4043,  4043,  4043,  4043,  4043, 
        -69,     0,     0,     0,  4043,  4043,     0,  4043,   343,    46, 
          0,   310,  4043,     0,    14,     0,  4043,  4043,   -24,  4043, 
          0,   323,     0,   324,     0,     0,  4043,     0,   328,   321, 
          0,     0,  -105,     0,     0,     0,   -24,  -108,  2167,  2350, 
       2350,  2350,  2350,  2350,  2350,  2350,  2350,  4043,  2350,  4043, 
       2350,  2350,  2350,  2350,  2087,   336,   306,  2061,  2409,  4043, 
        210,  4043,   210,   253,   253,   253,   253,   253,   212,   212, 
       -278,  -278,  -278,     0,     0,     0,  2087,   440,     0,     0, 
          0,     0,     0,     0,  2087,  2087,  2087,     0,  3192,  4043, 
       4043,   341,   276,     6,  4043,   356,     0,  4043,  4043,     0, 
        357,     0,     0,   -24,  2350,  2350,  4043,  2350,  2350,   -22, 
        363,   364,   -24,  3760,     0,   313,     0,  1338,  1454,  4043, 
          0,  3192,   284,   366,    75,     0,   370,     0,     0,     0, 
          0,   302,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  3760,  1482,   314,     0,  3760,     0,     0,  4043, 
          0,     0,   397,     0,   382,   284,   -22,  4043,     0,  4043, 
        401,   402,  3760,   413,   414,   415,   435,   436,   355,     0, 
          0,     0,   443,     0,   -87,     9,     0,     0,   437,  3760, 
       1636,  4043,  4043,   134,  4043,     0,     0,  4043,  4043,     0, 
          0,     0,     0,  3760,     0,     0,   372,     0,   445,  1754, 
        459,  1782,  1867,  1894,   380,   173,  4043,  3760,  4043,   178, 
       3760,   396,     0,     0,     0,     0,   173,   462,     0,  1921, 
        110,   484,   155,  -151,   493,     0,  4043,   476,   196,  3760, 
          0,     0,     0,     0,   412,     0,  -151,   -81,   497,     0, 
          0,     0,  3760,  4043,   481,     0,     0,   209,  3760,     0, 
       1964,  3760,   509,     0,  3760,     0,   453,     0,  3760,   441, 
          0, 
    );
    protected static $yyRindex= array(          622,
          0,     0,     1,     0,     0,   -32,   208,     0,    16,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    33,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   496,     0,     0,     0,     0,     2, 
        295,     0,     0,  -114,   468,     0,     0,     0,     0,     0, 
        504,     0,     0,     0,   -40,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   551,     0,     0,     0, 
          0,   505,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -292,   578,   -29,     0,     0, 
        589,     0,     0,     0,     0,     0,  -292,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  1182,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   167,     0,     0,     0, 
         79,     0,     0,    23,     0,     0,     0,     0,     0,     0, 
        107,   590,     0,   591,     0,     0,     0,     0,     0,     0, 
         83,   293,     0,  2022,     0,     0,    70,   579,   607,   908, 
        698,   725,   769,     0,     0,     0,     0,   593,   278,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   585,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   106,     0,     0,   198,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   278,     0, 
          0,     0,     0,     0,     0,     0,   578,     0,     0,   595, 
          0,     0,     0,     0,     0,     0,   469,     0,  1109,  1246, 
       2360,  2748,  3009,  3169,  3199,  3212,  3224,     0,  3277,     0, 
       3285,  3301,  3310,  3332,   113,     0,  3078,  3000,  2738,     0, 
       2775,     0,  2894,   -28,  2591,  2619,  2670,  2565,  2471,  2497, 
       1003,  1030,  1154,     0,     0,     0,   200,     0,     0,     0, 
          0,     0,     0,     0,   177,  1607,  3508,     0,  3106,   578, 
        578,     0,     0,     0,   553,    43,     0,     0,     0,     0, 
        140,     0,     0,   278,  3338,  3408,     0,  3412,  3498,   606, 
          0,     0,   278,   533,     0,     0,     0,     0,     0,   578, 
          0,  3156,   204,     0,     0,     0,   618,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   533,     0,     0,     0,  -123,     0,     0,   578, 
          0,     0,     0,     0,    10,   204,     0,   601,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   533, 
          0,   602,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   533,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   602,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  3415,     0,     0,     0, 
        621,     0,  3609,   538,     0,     0,   578,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   539,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   -86,     0,     0,   -86,     0,     0,     0,   533,     0, 
          0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    68,     0,     0,   664,   -33,    20,   -30, 
          0,     0,     0,   592,     0,     0,    74,     0,   532,   475, 
          0,     0,     0,  -275,   478,  4352,     0,     0,     0,     0, 
       -146,   646,   661,     0,   217,   623,     0,    69,   495,   354, 
        367,     0,   373,  -245,     0,  -168,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   286,     0,     0,     0,     0,   304,     0,     0,   624, 
          0,     0,  -181,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   432,     0,     0,     0,   521,     0, 
        494,     0,     0,     0,     0,     0,   697,     0, 
    );
    protected static $yyTable = array(40,
        161,    67,    43,    43,    39,    44,    45,   214,    18,   188, 
         39,   161,   188,    63,   161,   188,    43,   288,    43,    69, 
         43,    72,    39,    75,    39,    20,   266,   278,    18,   188, 
        188,    95,   188,   191,   188,     5,    43,   344,    65,    72, 
        140,   234,    63,    63,     5,    45,   141,   234,    29,    30, 
         92,    43,    10,    10,    72,    10,    10,    10,    10,    10, 
         10,    10,    10,   114,   188,   188,   222,   383,    39,    39, 
        367,    61,    11,    10,    10,    10,    10,    10,    10,   223, 
        223,   114,   142,   223,   223,   223,   223,   223,   223,   223, 
         93,    33,    32,     1,    45,   188,   188,   143,   224,   200, 
        223,   223,   223,   223,   223,   223,    46,   374,    10,    10, 
        136,    18,   311,   136,   201,    68,   306,     9,   100,   115, 
         43,   320,   115,   192,   193,    25,    35,   136,   136,    26, 
         94,   384,    39,   223,    27,   223,   223,   115,    10,    10, 
         10,    35,    28,    83,    68,    68,   117,   115,    42,   117, 
        115,   291,   409,   118,   286,   413,   118,    43,    98,    41, 
        265,   205,   136,    47,   117,   223,   223,   223,   157,   207, 
        118,   118,    38,    50,   432,    52,   123,   123,    38,   369, 
        123,   123,   123,   123,   123,   123,   123,   440,    78,   208, 
         38,   292,    38,   444,   136,    70,    18,   123,   123,   123, 
        123,   123,   123,   161,   161,   118,    74,   161,   161,   161, 
        161,   161,   161,   161,   192,   193,    76,    36,   382,    18, 
         36,   423,   424,    77,   161,   161,   161,   161,   161,   161, 
        123,   293,   123,   123,   287,    36,    78,    38,   173,    39, 
        175,   173,     6,   175,    35,   211,   190,    35,   190,    67, 
         67,   188,   186,   188,   187,   185,   189,    79,   189,   161, 
        161,    80,   123,   123,   123,   211,    43,   234,   234,   181, 
        264,   183,   212,    12,    13,    14,    15,    16,    17,    81, 
          5,     5,     5,     5,     5,     5,    65,    65,    82,   190, 
        161,   161,    89,    90,   188,   186,    84,   187,   185,   189, 
          5,     5,   188,    85,    87,   137,   157,   223,   158,   136, 
        211,   160,   194,    43,   215,   215,   195,   313,   215,   215, 
        215,   215,   215,   215,   215,    10,    10,    10,    99,   197, 
        198,    43,   236,   236,   199,   215,   215,   215,   215,   215, 
        215,   202,   190,   178,   203,   218,    10,   188,   186,   274, 
        187,   185,   189,   141,   223,    10,    12,    13,    14,    15, 
         16,    17,   280,   281,   284,   181,   236,   183,   283,    12, 
        215,   215,   236,   223,   223,   188,   188,   188,   188,   188, 
         12,   303,   188,   188,   188,   188,   188,   188,   188,   188, 
        188,   188,   188,   297,    43,   307,   310,   438,   304,   177, 
        136,   215,   215,   318,   319,   339,   345,    88,    56,    57, 
         58,    59,    60,   347,   346,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,   349,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,   364,   361,   365, 
        372,   373,   223,   223,   223,   223,   223,   223,   223,   223, 
        223,   123,   375,   223,   223,   223,   223,   223,   223,   223, 
        223,   223,   223,   223,    12,    13,    14,    15,    16,    17, 
        123,   123,   376,   377,   378,   379,   190,   178,   161,   380, 
         62,   188,   186,   381,   187,   185,   189,     6,     6,     6, 
          6,     6,     6,    54,   391,   386,   396,   161,   399,   181, 
        163,   183,   175,   397,   403,   217,   217,     6,     6,   217, 
        217,   217,   217,   217,   217,   217,   404,   411,   414,    99, 
        417,   191,   419,   191,   420,   421,   217,   217,   217,   217, 
        217,   217,   428,   177,   430,   431,   436,   439,   442,   123, 
        123,   123,   123,   123,   123,   123,   123,   123,   443,   447, 
        123,   123,   123,   123,   123,   123,   123,   123,   123,   123, 
        123,   217,   217,   176,   191,   451,   161,   161,   161,   161, 
        161,   161,   161,   161,   161,   449,    12,   161,   161,   161, 
        161,   161,   161,   161,   161,   161,   161,   161,    43,   215, 
         22,    48,   217,   217,   234,   234,    12,    13,    14,    15, 
         16,    17,   271,    56,    57,    58,    59,    60,   215,   184, 
        182,   192,   193,   192,   193,   209,   209,   191,   113,   209, 
        209,   209,   209,   209,   209,   209,    20,   232,   234,   167, 
        169,   170,   234,   153,   234,   154,   209,   209,   209,   209, 
        209,   209,   117,   210,   210,   117,    59,   210,   210,   210, 
        210,   210,   210,   210,   192,   193,     2,    65,    61,   117, 
        113,    93,    95,    97,   210,   210,   210,   210,   210,   210, 
         24,   209,   209,   206,   273,    97,   272,   215,   215,   215, 
        215,   215,   215,   215,   215,   215,   359,    49,   215,   215, 
        215,   215,   215,   215,   215,   215,   215,   215,   215,   210, 
        210,    48,   209,   209,    96,   184,   182,   192,   193,   362, 
        416,   282,   437,   368,   132,   305,   179,   180,   269,    31, 
        290,     0,     0,   387,     0,     0,     0,     0,     0,     0, 
        210,   210,     0,     0,   208,   208,     0,   395,   208,   208, 
        208,   208,   208,   208,   208,     0,     0,     0,     0,     0, 
          0,   191,     0,     0,     0,   208,   208,   208,   208,   208, 
        208,   211,   211,     0,     0,   211,   211,   211,   211,   211, 
        211,   211,     0,     0,   301,   302,     0,     0,     0,     0, 
        217,     0,   211,   211,   211,   211,   211,   211,     0,     0, 
        208,   208,     0,     0,     0,   446,     0,     0,   448,   217, 
          0,     0,   450,     0,   343,   212,   212,     0,     0,   212, 
        212,   212,   212,   212,   212,   212,     0,   211,   211,     0, 
          0,   208,   208,     0,     0,     0,   212,   212,   212,   212, 
        212,   212,     0,     0,   363,     0,     0,     0,     0,   184, 
        182,   192,   193,   164,   165,   166,   167,   169,   211,   211, 
        179,   180,   196,   161,   162,   168,   173,   172,   174,   170, 
        171,   212,   212,     0,     0,     0,   389,     0,   217,   217, 
        217,   217,   217,   217,   217,   217,   217,     0,     0,   217, 
        217,   217,   217,   217,   217,   217,   217,   217,   217,   217, 
        209,   408,   212,   212,     0,     0,     0,     0,     0,     0, 
          0,     2,     2,     2,     2,     2,     2,     0,     0,   209, 
          0,   429,     0,     0,     0,     0,     0,     0,   210,     0, 
          0,     2,     2,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   210,     0,     0, 
          0,     0,     2,     0,   207,   207,     0,     0,   207,   207, 
        207,   207,   207,   207,   207,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   207,   207,   207,   207,   207, 
        207,     0,     0,     0,     0,     0,     0,     0,   209,   209, 
          0,     0,   209,   209,   209,   209,   209,     0,     0,   209, 
        209,   209,   209,   209,   209,   209,   209,   209,   209,   209, 
        207,   207,     0,     0,     0,     0,   210,   210,     0,   208, 
        210,   210,   210,   210,   210,     0,     0,   210,   210,   210, 
        210,   210,   210,   210,   210,   210,   210,   210,   208,     0, 
          0,   207,   207,     0,     0,     0,   211,     0,     0,   198, 
        198,     0,     0,   198,   198,   198,   198,   198,   198,   198, 
          0,     0,     0,     0,     0,   211,     0,     0,     0,     0, 
        198,   198,   198,   198,   198,   198,   199,   199,     0,     0, 
        199,   199,   199,   199,   199,   199,   199,     0,     0,     0, 
        212,     0,     0,     0,     0,     0,     0,   199,   199,   199, 
        199,   199,   199,     0,     0,   198,   198,   208,   208,   212, 
          0,   208,   208,   208,   208,   208,     0,     0,   208,   208, 
        208,   208,   208,   208,   208,   208,   208,   208,   208,     0, 
          0,     0,   199,   199,   211,   211,   198,   198,   211,   211, 
        211,   211,   211,     0,     0,   211,   211,   211,   211,   211, 
        211,   211,   211,   211,   211,   211,     0,     0,     0,   144, 
          0,     0,   144,   199,   199,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   144,   144,   212,   212, 
          0,     0,   212,   212,   212,   212,   212,     0,     0,   212, 
        212,   212,   212,   212,   212,   212,   212,   212,   212,   212, 
        200,   200,     0,     0,   200,   200,   200,   200,   200,   200, 
        200,   144,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   200,   200,   200,   200,   200,   200,    39,   135,   135, 
          0,     0,   135,   135,     0,   135,     0,   135,   135,     0, 
          0,     0,     0,   144,     0,     0,     0,     0,   207,   135, 
        135,   135,   135,   135,   135,     0,   200,   200,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   190, 
        178,     0,     0,   209,   188,   186,     0,   187,   185,   189, 
          0,     0,     0,     0,   135,   135,     0,   200,   200,     0, 
          0,     0,   181,   163,   183,   175,   145,     0,     0,   145, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   145,   145,   135,   135,   207,   207,     0, 
          0,   207,   207,   207,   207,   207,   177,     0,   207,   207, 
        207,   207,   207,   207,   207,   207,   207,   207,   207,     0, 
          0,     0,     0,   198,     0,     0,     0,     0,   145,   190, 
        178,     0,     0,     0,   188,   186,   176,   187,   185,   189, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        199,     0,   181,   163,   183,   175,     0,     0,     0,     0, 
        145,     0,     0,     0,   190,   178,     0,     0,     0,   188, 
        186,     0,   187,   185,   189,    55,    56,    57,    58,    59, 
         60,     0,     0,     0,     0,     0,   177,   181,   163,   183, 
        175,     0,   198,   198,     0,     0,   198,   198,   198,   198, 
        198,     0,     0,   198,   198,   198,   198,   198,   198,   198, 
        198,   198,   198,   198,     0,    61,   176,     0,     0,   199, 
        199,   177,     0,   199,   199,   199,   199,   199,     0,   144, 
        199,   199,   199,   199,   199,   199,   199,   199,   199,   199, 
        199,     0,     0,     0,     0,     0,     0,     0,    62,     0, 
          0,   176,   341,     0,     0,     0,     0,     0,     0,     0, 
          0,    54,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   200,     0,     0,     0,     0,     0, 
        190,   178,     0,   135,     0,   188,   186,     0,   187,   185, 
        189,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   135,   181,   163,   183,   175,     0,   190,   178, 
          0,   144,   144,   188,   186,     0,   187,   185,   189,     0, 
          0,     0,     0,     0,   191,     0,     0,     0,     0,     0, 
        360,   181,   163,   183,   175,     0,     0,   177,     0,     0, 
          0,     0,     0,   200,   200,     0,     0,   200,   200,   200, 
        200,   200,     0,     0,   200,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   177,   145,   176,   342,     0, 
          0,   135,   135,     0,     0,   135,   135,   135,   135,   135, 
          0,     0,   135,   135,   135,   135,   135,   135,   135,   135, 
        135,   135,   135,     0,     0,   176,     0,     0,     0,     0, 
          0,     0,     0,     0,   191,     0,     0,     0,     0,     0, 
          0,     0,   184,   182,   192,   193,   164,   165,   166,   167, 
        169,     0,     0,   179,   180,     0,   161,   162,   168,   173, 
        172,   174,   170,   171,     0,     0,     0,   148,     0,   191, 
        148,     0,     0,     0,     0,     0,     0,     0,   145,   145, 
        145,     0,     0,     0,   148,   148,     0,     0,     0,     0, 
          0,     0,   190,   178,     0,     0,     0,   188,   186,     0, 
        187,   185,   189,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   388,   181,   163,   183,   175,   148, 
          0,     0,   184,   182,   192,   193,   164,   165,   166,   167, 
        169,     0,     0,   179,   180,   210,   161,   162,   168,   173, 
        172,   174,   170,   171,     0,     0,     0,     0,     0,   177, 
          0,   148,     0,     0,     0,     0,     0,   184,   182,   192, 
        193,   164,   165,   166,   167,   169,     0,     0,   179,   180, 
          0,   161,   162,   168,   173,   172,   174,   170,   171,   176, 
          0,     0,     0,     0,     0,   191,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        190,   178,     0,   191,   398,   188,   186,     0,   187,   185, 
        189,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   181,   163,   183,   175,     0,   190,   178, 
          0,     0,     0,   188,   186,     0,   187,   185,   189,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   181,   163,   183,   175,     0,     0,   177,     0,     0, 
          0,     0,     0,   184,   182,   192,   193,   164,   165,   166, 
        167,   169,     0,     0,   179,   180,     0,   161,   162,   168, 
        173,   172,   174,   170,   171,   177,     0,   176,     0,     0, 
          0,   184,   182,   192,   193,   164,   165,   166,   167,   169, 
          0,     0,   179,   180,     0,   161,   162,   168,   173,   172, 
        174,   170,   171,   190,   178,   176,     0,   401,   188,   186, 
          0,   187,   185,   189,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   181,   163,   183,   175, 
        190,   178,     0,     0,   402,   188,   186,   148,   187,   185, 
        189,     0,     0,     0,     0,     0,     0,   191,     0,     0, 
          0,     0,     0,   181,   163,   183,   175,   190,   178,     0, 
        177,   418,   188,   186,     0,   187,   185,   189,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        181,   163,   183,   175,     0,     0,     0,   177,     0,     0, 
        176,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        190,   178,     0,     0,     0,   188,   186,     0,   187,   185, 
        189,     0,     0,     0,   177,     0,     0,   176,     0,   148, 
          0,   445,     0,   181,   163,   183,   175,     0,     0,     0, 
          0,     0,     0,     0,     0,   184,   182,   192,   193,   164, 
        165,   166,   167,   169,   176,     0,   179,   180,     0,   161, 
        162,   168,   173,   172,   174,   170,   171,   177,   161,   161, 
          0,     0,     0,   161,   161,   191,   161,   161,   161,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   161,   161,   161,   161,     0,     0,   176,     0,     0, 
          0,     0,     0,   191,     0,     0,     0,   190,   178,     0, 
          0,     0,   188,   186,     0,   187,   185,   189,     0,     0, 
          0,     0,   400,     0,     0,   161,     0,     0,     0,     0, 
        181,     0,   183,   190,   178,     0,     0,     0,   188,   186, 
          0,   187,   185,   189,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   161,   181,   163,   183,   175, 
          0,     0,     0,   184,   182,   192,   193,   164,   165,   166, 
        167,   169,     0,     0,   179,   180,     0,   161,   162,   168, 
        173,   172,   174,   170,   171,     0,     0,     0,   191,     0, 
        177,   184,   182,   192,   193,   164,   165,   166,   167,   169, 
          0,     0,   179,   180,     0,   161,   162,   168,   173,   172, 
        174,   170,   171,   190,   178,   191,     0,     0,   188,   186, 
        176,   187,   185,   189,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   181,   163,   183,   175, 
          0,     0,   191,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        177,     0,     0,     0,     0,     0,   184,   182,   192,   193, 
        164,   165,   166,   167,   169,   191,     0,   179,   180,     0, 
        161,   162,   168,   173,   172,   174,   170,   171,     0,     0, 
        176,     0,     0,   184,   182,   192,   193,   164,   165,   166, 
        167,   169,     0,     0,   179,   180,     0,   161,   162,   168, 
        173,   172,   174,   170,   171,     0,     0,     0,     0,     0, 
        184,   182,   192,   193,   164,   165,   166,   167,   169,     0, 
          0,   179,   180,   161,   161,   162,   168,   173,   172,   174, 
        170,   171,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   184,   182,   192,   193,   164,   165,   166, 
        167,   169,   191,     0,   179,   180,     0,   161,   162,   168, 
        173,   172,   174,   170,   171,     0,   190,   178,     0,     0, 
          0,   188,   186,     0,   187,   185,   189,     0,   191,     0, 
        176,     0,     0,   176,     0,     0,     0,     0,     0,   181, 
        163,   183,   175,     0,     0,     0,     0,   176,   176,     0, 
          0,   161,   161,   161,   161,   161,   161,   161,   161,   161, 
          0,    12,   161,   161,     0,   161,   161,   161,   161,   161, 
        161,   161,   161,   177,     0,   190,     0,     0,     0,     0, 
        188,   186,   176,   187,   185,   189,     0,     0,     0,     0, 
        184,   182,   192,   193,     0,     0,     0,     0,   181,     0, 
        183,   179,   180,   176,     0,     0,     0,     0,   191,     0, 
          0,     0,     0,     0,   176,     0,   184,   182,   192,   193, 
        164,   165,   166,   167,   169,     0,     0,   179,   180,     0, 
        161,   162,   168,   173,   172,   174,   170,   171,   196,     0, 
          0,   196,     0,   196,   196,   196,   196,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   196,   196, 
        196,   196,   196,   196,   197,     0,     0,   197,     0,   197, 
        197,   197,   197,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   197,   197,   197,   197,   197,   197, 
          0,     0,     0,   196,   196,     0,   184,   182,   192,   193, 
        164,   165,   166,   167,   169,     0,     0,   179,   180,     0, 
          0,   162,   168,   173,   172,   174,   170,   171,     0,   197, 
        197,     0,     0,     0,   196,   196,     0,     0,     0,     0, 
          0,     0,   201,     0,     0,   201,     0,     0,   201,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        197,   197,   201,   201,   201,   201,   201,   201,   190,     0, 
          0,   190,     0,     0,   190,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   190,   190, 
          0,   190,     0,   190,     0,     0,   189,   201,   201,   189, 
          0,   191,   189,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   189,   189,     0,   189, 
          0,   189,     0,   190,   190,     0,     0,     0,   201,   201, 
        176,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   191,     0,     0, 
        191,   189,   189,   191,   190,   190,     0,     0,     0,     0, 
        191,     0,     0,     0,     0,     0,     0,   191,   191,     0, 
        191,     0,   191,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   189,   189,     0,     0,     0,     0,     0,   184, 
        182,   192,   193,   164,   165,   166,   167,   169,     0,     0, 
        179,   180,   191,   191,     0,   168,   173,   172,   174,   170, 
        171,     0,   176,   176,   176,   203,     0,     0,   203,     0, 
          0,   203,     0,     0,     0,     0,     0,     0,   177,     0, 
          0,   177,     0,   191,   191,   203,   203,     0,   203,     0, 
        203,   196,     0,     0,     0,   177,   177,     0,   184,   182, 
        192,   193,   192,     0,     0,   192,     0,     0,   192,   179, 
        180,     0,     0,     0,     0,     0,     0,   197,     0,     0, 
        203,   203,   192,   192,     0,   192,     0,   192,     0,     0, 
        177,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   203,   203,     0,     0,     0,     0,   192,   192,     0, 
        196,   196,   177,     0,   196,   196,   196,   196,   196,     0, 
          0,   196,   196,   196,   196,   196,   196,   196,   196,   196, 
        196,   196,     0,     0,     0,   201,   197,   197,   192,   192, 
        197,   197,   197,   197,   197,     0,     0,   197,   197,   197, 
        197,   197,   197,   197,   197,   197,   197,   197,     0,     0, 
          0,   190,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   193,     0,     0,   193,     0,     0,   193,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   189, 
          0,   193,   193,     0,   193,     0,   193,     0,     0,     0, 
          0,     0,     0,     0,   201,   201,     0,     0,   201,   201, 
        201,   201,   201,     0,     0,   201,   201,   201,   201,   201, 
        201,   201,   201,   201,   201,   201,   193,   193,     0,     0, 
          0,     0,     0,     0,   190,   190,   190,   190,   190,     0, 
        191,   190,   190,   190,   190,   190,   190,   190,   190,   190, 
        190,   190,     0,     0,     0,     0,     0,   193,   193,     0, 
          0,     0,   189,   189,   189,   189,   189,     0,     0,   189, 
        189,   189,   189,   189,   189,   189,   189,   189,   189,   189, 
        204,     0,     0,   204,     0,     0,     0,     0,     0,   178, 
          0,     0,   178,     0,     0,     0,     0,   204,   204,     0, 
        204,     0,   204,     0,     0,     0,   178,   178,   203,     0, 
          0,     0,     0,   191,   191,   191,   191,   191,   177,     0, 
        191,   191,   191,   191,   191,   191,   191,   191,   191,   191, 
        191,     0,   204,   204,     0,     0,     0,     0,     0,     0, 
          0,   178,     0,     0,     0,   192,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   202,     0, 
          0,   202,     0,   204,   204,     0,     0,     0,     0,     0, 
          0,     0,     0,   178,     0,   202,   202,     0,   202,     0, 
        202,   203,   203,   203,   203,   203,   137,     0,     0,   137, 
        203,   203,   203,   203,   203,   203,   203,   203,   203,     0, 
        177,   177,   177,   137,   137,     0,   137,     0,   137,     0, 
        202,     0,     0,     0,     0,     0,     0,     0,   192,   192, 
        192,   192,   192,     0,     0,     0,     0,   192,   192,   192, 
        192,   192,   192,   192,   192,   192,   143,     0,   137,   143, 
          0,   202,   202,     0,     0,     0,     0,     0,     0,   179, 
          0,     0,   179,   143,   143,     0,   143,     0,   143,     0, 
          0,     0,     0,     0,   193,     0,   179,   179,   190,   178, 
        137,     0,     0,   188,   186,     0,   187,   185,   189,   180, 
          0,     0,   180,     0,     0,     0,     0,     0,   143,     0, 
          0,   181,   182,   183,     0,   182,   180,   180,     0,     0, 
          0,   179,     0,     0,   181,     0,     0,   181,     0,   182, 
        182,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        143,   181,   181,     0,     0,   177,     0,     0,     0,     0, 
          0,   180,     0,   179,     0,     0,     0,   193,   193,   193, 
        193,   193,     0,     0,   182,     0,   193,   193,   193,   193, 
        193,   193,   193,   193,   193,   176,   181,   205,     0,     0, 
        205,     0,     0,   180,     0,   206,     0,     0,   206,     0, 
        204,     0,     0,     0,   205,   205,   182,     0,     0,   178, 
          0,   183,   206,   206,   183,     0,     0,     0,   181,     0, 
        184,     0,     0,   184,     0,     0,     0,     0,   183,   183, 
          0,     0,     0,     0,     0,     0,     0,   184,   184,   205, 
          0,     0,   185,     0,     0,   185,     0,   206,   186,     0, 
          0,   186,     0,     0,     0,     0,     0,     0,     0,   185, 
        185,     0,     0,   183,     0,   186,   186,     0,     0,     0, 
          0,   205,   184,   204,   204,   204,   204,   204,   202,   206, 
          0,     0,   204,   204,   204,   204,   204,   204,   204,   204, 
        204,   178,   178,   178,   185,   183,     0,     0,     0,     0, 
        186,     0,     0,     0,   184,     0,   137,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   109,   187,     0, 
          0,   187,   194,     0,   109,   194,   185,   109,     0,   109, 
          0,     0,   186,     0,     0,   187,   187,     0,     0,   194, 
        194,     0,     0,   109,     0,     0,     0,     0,   109,     0, 
          0,   202,   202,   202,   202,   202,   143,     0,     0,     0, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,   179, 
        187,     0,     0,   191,   194,     0,   109,     0,     0,   137, 
        137,   137,   137,   137,     0,     0,     0,     0,   137,   137, 
        137,   137,   137,   137,   137,   137,   137,     0,     0,   180, 
          0,     0,   187,     0,     0,     0,   194,   109,   195,   109, 
        109,   195,   182,     0,     0,     0,     0,     0,   149,     0, 
          0,   149,     0,     0,   181,   195,   195,     0,     0,   143, 
        143,   143,   143,   143,     0,   149,   149,     0,   143,   143, 
        143,   143,   143,   143,   143,   143,   143,     0,     0,     0, 
          0,   179,   179,   179,     0,     0,     0,     0,     0,     0, 
        195,   184,   182,   192,   193,     0,     0,     0,     0,     0, 
        149,     0,   179,   180,     0,     0,     0,   205,     0,     0, 
          0,   180,   180,   180,     0,   206,     0,     0,     0,     0, 
          0,     0,   195,     0,   182,   182,   182,     0,     0,     0, 
          0,   183,   149,     0,     0,     0,   181,   181,   181,     0, 
        184,   105,     0,     0,     0,     0,     0,     0,   105,     0, 
          0,   105,     0,   105,     0,     0,     0,     0,     0,     0, 
          0,     0,   185,     0,     0,     0,     0,   105,   186,     0, 
          0,     0,   105,     0,   109,   109,   109,   109,   109,   109, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   205, 
        205,   205,     0,     0,     0,     0,     0,   206,   206,   206, 
        105,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   183,   183,   183,     0,     0,     0,     0, 
          0,     0,   184,   184,   184,     0,     0,   109,     0,     0, 
          0,   105,     0,   105,   105,     0,     0,     0,   187,     0, 
          0,     0,   194,     0,   185,   185,   185,   109,   109,     0, 
        186,   186,   186,     0,   109,   109,   109,   109,     0,     0, 
        109,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   109,   109,   109,   109,     0,   109, 
        109,   109,     0,     0,   109,   109,   109,   109,   109,     0, 
          0,     0,   110,     0,     0,     0,     0,     0,     0,   106, 
          0,     0,   108,   110,   109,     0,     0,     0,     0,     0, 
        106,     0,     0,   108,     0,   109,   109,   109,   332,     0, 
        187,   187,   187,   116,   194,   194,   194,     0,   195,     0, 
          0,   238,   110,     0,   116,     0,     0,     0,   149,   106, 
          0,     0,   108,     0,   109,     0,     0,     0,     0,     0, 
          0,    39,     0,     0,     0,     0,     0,   130,     0,     0, 
          0,     0,    39,   116,     0,     0,     0,     0,   105,   105, 
        105,   105,   105,   105,     0,     0,     0,     0,     0,     0, 
          0,     0,   333,     0,     0,   111,     0,     0,     0,     0, 
          0,    39,     0,     0,     0,     0,   111,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        195,   195,   195,     0,     0,     0,     0,     0,     0,     0, 
        149,   105,     0,     0,   110,   111,     0,     0,     0,     0, 
          0,   106,     0,     0,   108,     0,   109,     0,     0,     0, 
          0,   105,   105,     0,     0,     0,     0,     0,   105,   105, 
        105,   105,   240,     0,   105,   116,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   105,   105, 
        105,   105,     0,   105,   105,   105,     0,     0,   105,     0, 
        105,   105,   105,    39,   110,     0,     0,     0,     0,     0, 
          0,   106,     0,     0,   108,     0,   109,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        105,   105,   250,     0,     0,   116,     0,   111,     0,   117, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
        117,    56,    57,    58,    59,    60,     0,     0,     0,     0, 
          0,     0,     0,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   117, 
         56,    57,    58,    59,    60,     0,     0,     0,     0,     0, 
          0,     0,   115,     0,     0,   110,     0,   111,     0,     0, 
          0,     0,   106,   115,     0,   108,     0,   109,     0,     0, 
          0,     0,    62,   118,     0,     0,     0,     0,     0,   119, 
        321,   322,   323,    62,   118,   114,   116,     0,     0,     0, 
        119,     0,   115,     0,     0,     0,   114,     0,     0,   324, 
        325,   326,   327,     0,   328,   329,   107,     0,     0,   330, 
          0,   331,    62,   118,    39,     0,   110,   107,     0,   119, 
          0,     0,     0,   106,     0,   114,   108,     0,   109,     0, 
          0,   117,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,   112,   113,     0,   252,     0,   107,   116,   111,     0, 
          0,     0,   112,   113,   110,     0,     0,     0,     0,     0, 
          0,   106,     0,     0,   108,     0,   109,     0,     0,     0, 
          0,     0,     0,     0,     0,    39,     0,     0,     0,     0, 
          0,   112,   113,     0,   115,   116,     0,     0,     0,     0, 
          0,   117,    56,    57,    58,    59,    60,     0,     0,     0, 
          0,     0,     0,     0,    62,   118,     0,     0,     0,   111, 
          0,   119,     0,    39,     0,     0,     0,   114,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   107,     0, 
          0,     0,     0,     0,   115,     0,     0,   111,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    62,   118,     0,     0,     0,     0, 
          0,   119,     0,   112,   113,     0,     0,   114,     0,     0, 
          0,     0,   117,    56,    57,    58,    59,    60,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   107,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   112,   113,   115,     0,     0,     0,     0, 
          0,     0,     0,   117,    56,    57,    58,    59,    60,     0, 
          0,     0,     0,     0,     0,    62,   118,     0,     0,     0, 
          0,     0,   119,     0,     0,     0,     0,     0,   114,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   144,    56,    57,    58,    59,    60,     0,     0,   107, 
          0,     0,     0,     0,     0,     0,   115,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    62,   118,   121,     0, 
          0,     0,   131,   119,   112,   113,     0,     0,     0,   114, 
          0,     0,     0,     0,   115,     0,     0,   146,   147,   148, 
        149,   150,   151,   152,   153,     0,   155,   156,     0,     0, 
        107,     0,     0,     0,   145,   118,     0,     0,     0,     0, 
          0,   119,     0,     0,     0,     0,     0,   114,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   112,   113,     0,   107,     0, 
          0,     0,   229,   230,   231,   232,   233,   234,   235,   236, 
        237,   239,   241,   242,   243,   244,   245,   247,   248,   249, 
        251,   253,   254,   255,   256,   257,   258,   259,   260,   261, 
        262,   263,     0,   112,   113,     0,   245,   267,     0,   268, 
          0,     0,     0,     0,   275,     0,     0,     0,   276,   277, 
          0,   279,     0,     0,     0,     0,     0,     0,   121,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   295, 
          0,   296,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   298,     0,   299,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   121,   121,     0,     0,     0,   245,     0,     0,   308, 
        309,     0,     0,     0,     0,     0,     0,     0,   312,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   121,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   121,     0,     0,     0,     0,     0,     0,     0,   245, 
          0,   371,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   121,   390,     0,   392,     0,     0,   393, 
        394,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   121,     0, 
        410,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   121,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   441, 
    );
    protected static $yyCheck = array(33,
         41,   125,    36,    37,    92,    36,    37,   154,   123,    38, 
         92,    41,    41,    47,    44,    44,    50,   123,    52,    50, 
         54,    52,    92,    54,    92,     6,   195,   209,    35,    58, 
         59,   260,    61,   312,    63,    35,    70,   313,   125,    70, 
        334,   334,    76,    77,   321,    44,   340,   340,   300,   301, 
        260,    85,    37,    38,    85,    40,    41,    42,    43,    44, 
         45,    46,    47,    41,    93,    94,    91,    59,    59,    92, 
        346,   300,     5,    58,    59,    60,    61,    62,    63,    37, 
         38,    59,    44,    41,    42,    43,    44,    45,    46,    47, 
        300,    64,    25,   320,    93,   124,   125,    59,   123,    44, 
         58,    59,    60,    61,    62,    63,    39,   353,    93,    94, 
         41,    35,   294,    44,    59,    47,   285,   260,   125,    41, 
        154,   303,    44,   402,   403,    92,    44,    58,    59,    59, 
        340,   123,   123,    91,    59,    93,    94,    59,   123,   124, 
        125,    59,    91,    70,    76,    77,    41,    41,    44,    44, 
         44,   260,   398,    41,   260,   401,    44,   191,    85,    93, 
        191,   142,    93,    40,    59,   123,   124,   125,    40,    41, 
         58,    59,   260,   310,   420,   310,    37,    38,   260,   348, 
         41,    42,    43,    44,    45,    46,    47,   433,    40,    41, 
        260,   300,   260,   439,   125,   311,   311,    58,    59,    60, 
         61,    62,    63,    37,    38,    93,   123,    41,    42,    43, 
         44,    45,    46,    47,   402,   403,    61,    41,   365,    35, 
         44,   373,   374,    61,    58,    59,    60,    61,    62,    63, 
         91,   340,    93,    94,   340,    59,    40,   260,    41,    92, 
         41,    44,    35,    44,    41,   333,    37,    44,    37,   373, 
        374,    42,    43,    42,    45,    46,    47,   410,    47,    93, 
         94,    41,   123,   124,   125,   333,   300,   300,   301,    60, 
        340,    62,   340,   280,   281,   282,   283,   284,   285,    41, 
        280,   281,   282,   283,   284,   285,   373,   374,    44,    37, 
        124,   125,    76,    77,    42,    43,   123,    45,    46,    47, 
        300,   301,   331,    44,    40,   260,    40,   332,    40,   125, 
        333,   410,    41,   347,    37,    38,    44,   340,    41,    42, 
         43,    44,    45,    46,    47,   310,   311,   312,   335,    41, 
         44,   365,   300,   301,    61,    58,    59,    60,    61,    62, 
         63,   260,    37,    38,    61,   340,   331,    42,    43,    40, 
         45,    46,    47,   340,   312,   340,   280,   281,   282,   283, 
        284,   285,    40,    40,    44,    60,   334,    62,    41,   410, 
         93,    94,   340,   331,   332,   404,   405,   406,   407,   408, 
        410,    41,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    58,   428,    40,    40,   428,   123,    94, 
        331,   124,   125,    41,    41,    93,    41,   260,   261,   262, 
        263,   264,   265,    44,   340,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   123,   410,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    41,   125,    58, 
         40,    40,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   312,    40,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   280,   281,   282,   283,   284,   285, 
        331,   332,    59,    59,    40,    40,    37,    38,   312,   125, 
        333,    42,    43,    41,    45,    46,    47,   280,   281,   282, 
        283,   284,   285,   346,   361,    59,   125,   331,    40,    60, 
         61,    62,    63,    59,   125,    37,    38,   300,   301,    41, 
         42,    43,    44,    45,    46,    47,   344,   340,   123,   335, 
         59,   312,   413,   312,    41,   371,    58,    59,    60,    61, 
         62,    63,    40,    94,    59,   340,   125,    41,    58,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   340,    41, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,    94,   124,   312,   125,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   123,   410,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    93,   312, 
        123,    41,   124,   125,   300,   301,   280,   281,   282,   283, 
        284,   285,   260,   261,   262,   263,   264,   265,   331,   400, 
        401,   402,   403,   402,   403,    37,    38,   312,    41,    41, 
         42,    43,    44,    45,    46,    47,   123,   123,   334,    41, 
         41,    41,   340,    41,   340,    41,    58,    59,    60,    61, 
         62,    63,    58,    37,    38,    93,    41,    41,    42,    43, 
         44,    45,    46,    47,   402,   403,    35,   125,    41,    59, 
         59,    41,   125,   125,    58,    59,    60,    61,    62,    63, 
          7,    93,    94,   142,   200,    84,   199,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   333,    42,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    93, 
         94,    41,   124,   125,    82,   400,   401,   402,   403,   337, 
        407,   217,   427,   347,    91,   284,   411,   412,   198,    23, 
        227,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    37,    38,    -1,   384,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,   280,   281,    -1,    -1,    -1,    -1, 
        312,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         93,    94,    -1,    -1,    -1,   442,    -1,    -1,   445,   331, 
         -1,    -1,   449,    -1,   310,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,    93,    94,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,   340,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   124,   125, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    93,    94,    -1,    -1,    -1,   372,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        312,   397,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,    -1,   331, 
         -1,   417,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,   300,   301,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,   321,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         93,    94,    -1,    -1,    -1,    -1,   400,   401,    -1,   312, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   331,    -1, 
         -1,   124,   125,    -1,    -1,    -1,   312,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    93,    94,   400,   401,   331, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    93,    94,   400,   401,   124,   125,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    41, 
         -1,    -1,    44,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    92,    37,    38, 
         -1,    -1,    41,    42,    -1,    44,    -1,    46,    47,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,   331,    58, 
         59,    60,    61,    62,    63,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    93,    94,    -1,   124,   125,    -1, 
         -1,    -1,    60,    61,    62,    63,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,   124,   125,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    94,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    93,    37, 
         38,    -1,    -1,    -1,    42,    43,   124,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    94,    60,    61,    62, 
         63,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,   300,   124,    -1,    -1,   400, 
        401,    94,    -1,   404,   405,   406,   407,   408,    -1,   331, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,   312,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    60,    61,    62,    63,    -1,    37,    38, 
         -1,   413,   414,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         59,    60,    61,    62,    63,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    94,   331,   124,   125,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,   124,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    41,    -1,   312, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414, 
        415,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    59,    60,    61,    62,    63,    93, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,    94, 
         -1,   125,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   124, 
         -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,   312,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    94,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    94,    -1,   124,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    37,    38,   124,    -1,    41,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    41,    42,    43,   331,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         94,    41,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1,   413, 
         -1,    58,    -1,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   124,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    94,    37,    38, 
         -1,    -1,    -1,    42,    43,   312,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    -1,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         60,    -1,    62,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    60,    61,    62,    63, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,   312,    -1, 
         94,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    37,    38,   312,    -1,    -1,    42,    43, 
        124,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
        124,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   312,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    46,    47,    -1,   312,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    94,    -1,    37,    -1,    -1,    -1,    -1, 
         42,    43,    93,    45,    46,    47,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,    -1,    -1,    -1,    -1,    60,    -1, 
         62,   411,   412,   124,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,   125,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    38,    -1, 
         -1,    41,    -1,    43,    44,    45,    46,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    93,    94,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
         -1,   415,   416,   417,   418,   419,   420,   421,    -1,    93, 
         94,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    58,    59,    60,    61,    62,    63,    38,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    38,    93,    94,    41, 
         -1,   312,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    93,    94,    -1,    -1,    -1,   124,   125, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    93,    94,    44,   124,   125,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    93,    94,    -1,   416,   417,   418,   419,   420, 
        421,    -1,   413,   414,   415,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,   124,   125,    58,    59,    -1,    61,    -1, 
         63,   331,    -1,    -1,    -1,    58,    59,    -1,   400,   401, 
        402,   403,    38,    -1,    -1,    41,    -1,    -1,    44,   411, 
        412,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         93,    94,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1, 
        400,   401,   125,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,   331,   400,   401,   124,   125, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
        331,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    58,    59,   331,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,   331,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   125,    -1,    58,    59,    -1,    61,    -1, 
         63,   404,   405,   406,   407,   408,    41,    -1,    -1,    44, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
        413,   414,   415,    58,    59,    -1,    61,    -1,    63,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    41,    -1,    93,    44, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,   331,    -1,    58,    59,    37,    38, 
        125,    -1,    -1,    42,    43,    -1,    45,    46,    47,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    93,    -1, 
         -1,    60,    41,    62,    -1,    44,    58,    59,    -1,    -1, 
         -1,    93,    -1,    -1,    41,    -1,    -1,    44,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        125,    58,    59,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,   125,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    93,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   124,    93,    41,    -1,    -1, 
         44,    -1,    -1,   125,    -1,    41,    -1,    -1,    44,    -1, 
        331,    -1,    -1,    -1,    58,    59,   125,    -1,    -1,   331, 
         -1,    41,    58,    59,    44,    -1,    -1,    -1,   125,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    93, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    93,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    -1,    93,    -1,    58,    59,    -1,    -1,    -1, 
         -1,   125,    93,   404,   405,   406,   407,   408,   331,   125, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   413,   414,   415,    93,   125,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,   125,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    41,    -1, 
         -1,    44,    41,    -1,    40,    44,   125,    43,    -1,    45, 
         -1,    -1,   125,    -1,    -1,    58,    59,    -1,    -1,    58, 
         59,    -1,    -1,    59,    -1,    -1,    -1,    -1,    64,    -1, 
         -1,   404,   405,   406,   407,   408,   331,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
         93,    -1,    -1,   312,    93,    -1,    92,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,   331, 
         -1,    -1,   125,    -1,    -1,    -1,   125,   123,    41,   125, 
        126,    44,   331,    -1,    -1,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,   331,    58,    59,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    58,    59,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,   413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,   400,   401,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         93,    -1,   411,   412,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,   413,   414,   415,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,   125,    -1,   413,   414,   415,    -1,    -1,    -1, 
         -1,   331,   125,    -1,    -1,    -1,   413,   414,   415,    -1, 
        331,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    59,   331,    -1, 
         -1,    -1,    64,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,   413,   414,   415,    -1,    -1,   313,    -1,    -1, 
         -1,   123,    -1,   125,   126,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,   331,    -1,   413,   414,   415,   333,   334,    -1, 
        413,   414,   415,    -1,   340,   341,   342,   343,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   360,   361,   362,   363,    -1,   365, 
        366,   367,    -1,    -1,   370,   371,   372,   373,   374,    -1, 
         -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    33,    45,    -1,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,   402,   403,    59,    -1, 
        413,   414,   415,    64,   413,   414,   415,    -1,   331,    -1, 
         -1,    61,    33,    -1,    64,    -1,    -1,    -1,   331,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    92,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1, 
         -1,    -1,    92,    64,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   123,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    92,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   313,    -1,    -1,    33,   126,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341, 
        342,   343,    61,    -1,   346,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   360,   361, 
        362,   363,    -1,   365,   366,   367,    -1,    -1,   370,    -1, 
        372,   373,   374,    92,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    61,    -1,    -1,    64,    -1,   126,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,    -1,    33,    -1,   126,    -1,    -1, 
         -1,    -1,    40,   313,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340, 
        341,   342,   343,   333,   334,   346,    64,    -1,    -1,    -1, 
        340,    -1,   313,    -1,    -1,    -1,   346,    -1,    -1,   360, 
        361,   362,   363,    -1,   365,   366,   367,    -1,    -1,   370, 
         -1,   372,   333,   334,    92,    -1,    33,   367,    -1,   340, 
         -1,    -1,    -1,    40,    -1,   346,    43,    -1,    45,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    61,    -1,   367,    64,   126,    -1, 
         -1,    -1,   402,   403,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    92,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,   313,    64,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,   126, 
         -1,   340,    -1,    92,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,   402,   403,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   333,   334,    87,    -1, 
         -1,    -1,    91,   340,   402,   403,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,   106,   107,   108, 
        109,   110,   111,   112,   113,    -1,   115,   116,    -1,    -1, 
        367,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,   367,    -1, 
         -1,    -1,   161,   162,   163,   164,   165,   166,   167,   168, 
        169,   170,   171,   172,   173,   174,   175,   176,   177,   178, 
        179,   180,   181,   182,   183,   184,   185,   186,   187,   188, 
        189,   190,    -1,   402,   403,    -1,   195,   196,    -1,   198, 
         -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,   207,   208, 
         -1,   210,    -1,    -1,    -1,    -1,    -1,    -1,   217,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   238, 
         -1,   240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   250,    -1,   252,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   280,   281,    -1,    -1,    -1,   285,    -1,    -1,   288, 
        289,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   297,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   348, 
         -1,   350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   372,   373,    -1,   375,    -1,    -1,   378, 
        379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   397,    -1, 
        399,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   417,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   434, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 182 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 197 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 197 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 208 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 209 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 213 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 220 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 225 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 231 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 231 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 240 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 240 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 251 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 252 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 257 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 262 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 267 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 272 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 278 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 283 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 289 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 299 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 305 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 306 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 312 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 312 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 326 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 327 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 332 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 333 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 338 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 342 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 351 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 359 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 360 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 365 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 370 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 376 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 379 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 382 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 389 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 390 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 394 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 395 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 399 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 400 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 404 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 405 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 413 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 67:  #line 418 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 68:  #line 419 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 69:  #line 423 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 70:  #line 423 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 71:  #line 426 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 72:  #line 426 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 73:  #line 431 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 74:  #line 431 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 441 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 76:  #line 441 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 446 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 78:  #line 446 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 450 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 80:  #line 450 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 81:  #line 454 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 82:  #line 454 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 83:  #line 458 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 84:  #line 458 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 85:  #line 463 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 87:  #line 464 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 89:  #line 465 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 90:  #line 465 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 92:  #line 469 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 93:  #line 473 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 474 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 95:  #line 478 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 97:  #line 483 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 98:  #line 484 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 99:  #line 488 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 100:  #line 488 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 101:  #line 492 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 102:  #line 492 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 498 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 104:  #line 499 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 105:  #line 503 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 106:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 107:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 109:  #line 513 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 110:  #line 514 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 111:  #line 518 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 112:  #line 518 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 113:  #line 528 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 115:  #line 533 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 116:  #line 534 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 117:  #line 538 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 119:  #line 543 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 548 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 121:  #line 556 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 122:  #line 559 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 123:  #line 562 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 565 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 126:  #line 572 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 127:  #line 572 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 128:  #line 578 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 578 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 130:  #line 582 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 131:  #line 582 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 132:  #line 592 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 133:  #line 592 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 134:  #line 601 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 135:  #line 604 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 136:  #line 607 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 137:  #line 610 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 138:  #line 613 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 139:  #line 616 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 619 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 141:  #line 622 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 142:  #line 625 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 143:  #line 629 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 144:  #line 635 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 145:  #line 641 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 146:  #line 647 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 147:  #line 652 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 148:  #line 657 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 149:  #line 660 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 150:  #line 663 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 151:  #line 666 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-4+$yyTop], (array)$yyVals[-1+$yyTop]));
    } break;

    case 152:  #line 669 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 153:  #line 680 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 155:  #line 685 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 686 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 157:  #line 690 "src/main/jay/grammars/php.jay"
    { $yyVal= new VariableNode($yyVals[0+$yyTop]); } break;

    case 159:  #line 695 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 160:  #line 695 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 161:  #line 699 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 162:  #line 705 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 163:  #line 706 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 164:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 165:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 166:  #line 709 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 167:  #line 713 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 168:  #line 716 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 169:  #line 719 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 170:  #line 722 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 171:  #line 728 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 172:  #line 729 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 173:  #line 733 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 175:  #line 738 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 176:  #line 742 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 177:  #line 743 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 178:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 179:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 180:  #line 746 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 181:  #line 747 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 748 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 183:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 750 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 187:  #line 753 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 188:  #line 757 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 192:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 195:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 196:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 202:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 209:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 214:  #line 792 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 215:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 217:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 218:  #line 803 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 219:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 220:  #line 807 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 221:  #line 810 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 222:  #line 810 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 223:  #line 813 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 224:  #line 816 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 225:  #line 819 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 226:  #line 822 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 227:  #line 822 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 230:  #line 835 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 231:  #line 839 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 232:  #line 843 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 233:  #line 844 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 234:  #line 850 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 235:  #line 851 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 236:  #line 855 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 237:  #line 856 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 238:  #line 860 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 239:  #line 861 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 240:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 241:  #line 863 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 242:  #line 864 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 243:  #line 865 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2431 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
